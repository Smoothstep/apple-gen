.intel_syntax noprefix
.section .data
	.align 0x10
	encryption_data:
		.byte 0x44,0x48,0x46,0x57,0x00,0x01,0x00,0x00,0x18,0x60,0x00,0x00,0xE5,0x01,0x00,0x00,0x00,0x00,0x11,0x11,0x01,0x01,0x00,0x00,0xA7,0x19,0x79,0x37,0xFC,0xCF,0x07,0xC2,0xA3,0x9C,0xD4,0x92,0x80,0x82,0xC0,0xB8,0x46,0xE9,0x63,0x35,0xEB,0x70,0xE1,0x7C,0xF1,0x3D,0x5F,0xA5,0x30,0xC9,0x62,0x3F,0xDF,0x2B,0x89,0x59,0x9B,0x2E,0xF4,0xDC,0x96,0xB9,0xC7,0x1D,0x4C,0x38,0xA4,0x64,0x83,0x6C,0xC5,0x81,0x74,0xB2,0x61,0x0D,0x7F,0xE6,0x58,0xA9,0x9F,0xC3,0x17,0x76,0xE3,0x88,0x16,0xC4,0xD3,0x0E,0xBF,0x06,0x0C,0x36,0x1F,0xFA,0xC6,0x3E,0xB3,0xB0,0xF7,0x01,0xDD,0x90,0xDB,0x0A,0x1B,0x8C,0x42,0x9A,0x8F,0x24,0xBE,0x20,0xFB,0x18,0x34,0xF6,0xCB,0xB7,0xDA,0xCD,0x08,0xD6,0x86,0x67,0x94,0x3C,0x52,0x09,0xFE,0x14,0xAE,0xCE,0x25,0x5A,0x26,0x05,0x8D,0x56,0x11,0x5B,0x2F,0x78,0xF9,0xC8,0x50,0x75,0xD0,0xB5,0x57,0x2C,0x4F,0xAD,0x73,0xFD,0xE8,0xD7,0x4D,0x6B,0x3B,0x54,0xA6,0x93,0x41,0xDE,0xE2,0x2A,0x40,0x55,0x5C,0xE4,0xF2,0x95,0x6D,0x33,0xD9,0x6A,0xA1,0x99,0xEF,0x4E,0x12,0xB6,0x77,0x47,0xA0,0xF0,0x68,0x9D,0xEA,0x87,0x66,0x2D,0x1A,0xD1,0xFF,0xD5,0x72,0x04,0xF8,0x8B,0x91,0x02,0x97,0xF5,0xAA,0xE5,0x44,0x8E,0x13,0xA2,0xBD,0x39,0xCC,0xBC,0x65,0xEE,0x0B,0x0F,0x98,0x3A,0x21,0xA8,0xF3,0x53,0xD2,0x4A,0x69,0x4B,0x85,0x32,0x1C,0x49,0x27,0x29,0xC1,0xE0,0x22,0xB4,0x84,0x7B,0x00,0xE7,0xBB,0xB1,0x1E,0xCA,0x7E,0x43,0x5E,0xBA,0x15,0xAF,0x51,0xEC,0x48,0x10,0x03,0x7A,0x28,0x23,0x60,0x7D,0x31,0x6E,0xD8,0x5D,0x71,0x8A,0xAB,0x45,0xED,0x6F,0x9E,0xAC,0xA5,0x1F,0xE1,0x5C,0xF8,0xA0,0xB3,0xCA,0x0B,0x01,0xAE,0x7A,0xCE,0xF3,0xEE,0x0A,0xC1,0x3A,0x1B,0xF5,0x5D,0xDF,0x2E,0x1C,0x98,0x93,0xD0,0xCD,0x81,0xDE,0x68,0xED,0x28,0x8A,0x91,0x18,0x43,0xE3,0x62,0xFA,0x0D,0x89,0x7C,0x0C,0xD5,0x5E,0xBB,0xBF,0x71,0x50,0x92,0x04,0x34,0xCB,0xB0,0x57,0xD9,0xFB,0x35,0x82,0xAC,0xF9,0x97,0x99,0xD8,0x2D,0x5A,0x37,0xD6,0x9D,0xAA,0x61,0x5F,0xFE,0xA2,0x06,0xC7,0xF7,0x10,0x40,0x27,0x45,0x1A,0x55,0xF4,0x3E,0xA3,0x12,0x4F,0x65,0xC2,0xB4,0x48,0x3B,0x21,0xB2,0x58,0x67,0xFD,0xDB,0x8B,0xE4,0x16,0x23,0x60,0x05,0xE7,0x9C,0xFF,0x1D,0xC3,0x4D,0x42,0x25,0xDD,0x83,0x69,0xDA,0x11,0x29,0xF1,0x6E,0x52,0x9A,0xF0,0xE5,0xEC,0x54,0x36,0xD7,0x24,0x8C,0xE2,0xB9,0x4E,0xA4,0x84,0x46,0x7B,0x07,0x6A,0x7D,0xB8,0x66,0xA1,0xEB,0x9F,0xC8,0x49,0x78,0xE0,0xC5,0x1E,0x7E,0x95,0xEA,0x96,0xB5,0x3D,0xE6,0xBC,0x86,0xAF,0x4A,0x76,0x8E,0x03,0x00,0x53,0x38,0xA6,0x74,0x63,0xBE,0x0F,0xB6,0xF2,0x2A,0x3F,0x94,0x0E,0x90,0x4B,0xA8,0x47,0xB1,0x6D,0x20,0x6B,0xBA,0xAB,0x3C,0x26,0x09,0x77,0xAD,0xFC,0x88,0x14,0xD4,0x6F,0x9B,0x39,0xE9,0x2B,0x9E,0x44,0x6C,0xCF,0x56,0xE8,0x19,0x2F,0x73,0xA7,0xC6,0x33,0xDC,0x75,0x31,0xC4,0x02,0xD1,0xBD,0x13,0x2C,0x64,0x22,0x30,0x32,0x70,0x08,0x17,0xA9,0xC9,0x87,0x4C,0x7F,0xB7,0x72,0x41,0x8D,0xEF,0x15,0x80,0x79,0xD2,0x8F,0xF6,0x59,0xD3,0x85,0x5B,0xC0,0x51,0xCC,0xEC,0x19,0x6E,0x03,0xE2,0xA9,0x9E,0x55,0x6B,0xCA,0x96,0x32,0xF3,0xC3,0x24,0x74,0x13,0x71,0x2E,0x61,0xC0,0x0A,0x97,0x26,0x7B,0x51,0xF6,0x80,0x7C,0x0F,0x15,0x86,0x6C,0x53,0xC9,0xEF,0xBF,0xD0,0x22,0x17,0x54,0x31,0xD3,0xA8,0xCB,0x29,0xF7,0x79,0x76,0x11,0xE9,0xB7,0x5D,0xEE,0x25,0x1D,0xC5,0x5A,0x66,0xAE,0xC4,0xD1,0xD8,0x60,0x91,0x2B,0xD5,0x68,0xCC,0x94,0x87,0xFE,0x3F,0x35,0x9A,0x4E,0xFA,0xC7,0xDA,0x3E,0xF5,0x0E,0x2F,0xC1,0x69,0xEB,0x1A,0x28,0xAC,0xA7,0xE4,0xF9,0xB5,0xEA,0x5C,0xD9,0x1C,0xBE,0xA5,0x2C,0x77,0xD7,0x56,0xCE,0x39,0xBD,0x48,0x38,0xE1,0x6A,0x8F,0x8B,0x45,0x64,0xA6,0x30,0x00,0xFF,0x84,0x63,0xED,0xCF,0x01,0xB6,0x98,0xCD,0xA3,0xAD,0x12,0x3D,0x43,0x99,0xC8,0xBC,0x20,0xE0,0x5B,0xAF,0x0D,0xDD,0x1F,0xAA,0x70,0x58,0xFB,0x62,0xDC,0x2D,0x1B,0x47,0x93,0xF2,0x07,0xE8,0x41,0x05,0xF0,0x36,0xE5,0x89,0x27,0x18,0x50,0x16,0x04,0x06,0x44,0x3C,0x23,0x9D,0xFD,0xB3,0x78,0x4B,0x83,0x46,0x75,0xB9,0xDB,0x21,0xB4,0x4D,0xE6,0xBB,0xC2,0x6D,0xE7,0xB1,0x6F,0xF4,0x65,0xF8,0x02,0xE3,0x10,0xB8,0xD6,0x8D,0x7A,0x90,0xB0,0x72,0x4F,0x33,0x5E,0x49,0x8C,0x52,0x95,0xDF,0xAB,0xFC,0x7D,0x4C,0xD4,0xF1,0x2A,0x4A,0xA1,0xDE,0xA2,0x81,0x09,0xD2,0x88,0xB2,0x9B,0x7E,0x42,0xBA,0x37,0x34,0x67,0x0C,0x92,0x40,0x57,0x8A,0x3B,0x82,0xC6,0x1E,0x0B,0xA0,0x3A,0xA4,0x7F,0x9C,0x73,0x85,0x59,0x14,0x5F,0x8E,0x9F,0x08,0x85,0x3C,0x8D,0x50,0x47,0x95,0x0B,0x60,0x33,0x30,0xBD,0x45,0x79,0x9C,0xB5,0x8F,0x0F,0x98,0x89,0x58,0x13,0x5E,0x82,0x74,0x9B,0x78,0xA3,0x3D,0xA7,0x0C,0x19,0xC1,0x55,0x8B,0x4E,0x59,0x34,0x48,0x75,0xB7,0x97,0x7D,0x8A,0xD1,0xBF,0x17,0xE4,0x05,0xD5,0x0E,0x86,0xA5,0xD9,0xA6,0x4D,0x2D,0xF6,0xD3,0x4B,0x7A,0xFB,0xAC,0xD8,0x92,0x41,0x84,0x4C,0x7F,0xB4,0xFA,0x9A,0x24,0x3B,0x43,0x01,0x03,0x11,0x57,0x1F,0x20,0xFF,0x62,0xF3,0x68,0xB6,0xE0,0x6A,0xC5,0xBC,0xE1,0x4A,0xB3,0x26,0xDC,0xBE,0x72,0x5F,0x77,0xAD,0x18,0xDA,0x0A,0xA8,0x5C,0xE7,0x27,0xBB,0xCF,0x9E,0x44,0x3A,0x15,0x8E,0xE2,0x31,0xF7,0x02,0x46,0xEF,0x00,0xF5,0x94,0x40,0x1C,0x2A,0xDB,0x65,0xFC,0x8C,0x88,0x6D,0xE6,0x3F,0x4F,0xBA,0x3E,0xC9,0x51,0xD0,0x70,0x2B,0xA2,0xB9,0x1B,0xAA,0xA4,0xCA,0x9F,0xB1,0x06,0xC8,0xEA,0x64,0x83,0xF8,0x07,0x37,0xA1,0x63,0x42,0x39,0xDD,0xC0,0xFD,0x49,0x9D,0x32,0x38,0xF9,0x80,0x93,0xCB,0x6F,0xD2,0x2C,0x96,0xDE,0x5B,0xED,0xB2,0xFE,0xE3,0xA0,0xAB,0x2F,0x1D,0xEC,0x6E,0xC6,0x28,0x09,0xF2,0x7E,0xF0,0x2E,0xCC,0xAF,0xD4,0x36,0x53,0x10,0x25,0xD7,0xB8,0xE8,0xCE,0x54,0x6B,0x67,0xDF,0xD6,0xC3,0xA9,0x61,0x5D,0xC2,0x1A,0x22,0xE9,0x5A,0xB0,0xEE,0x16,0x71,0x73,0x23,0xC4,0xF4,0x35,0x91,0xCD,0x6C,0x52,0x99,0xAE,0xE5,0x04,0x69,0x1E,0xEB,0x81,0x12,0x08,0x7B,0x87,0xF1,0x56,0x7C,0x21,0x90,0x0D,0xC7,0x66,0x29,0x76,0x14,0x50,0x75,0xF9,0xC8,0x2F,0x78,0x11,0x5B,0x8D,0x56,0x26,0x05,0x25,0x5A,0xAE,0xCE,0xFE,0x14,0x52,0x09,0x94,0x3C,0x86,0x67,0x08,0xD6,0xDA,0xCD,0xCB,0xB7,0x34,0xF6,0xFB,0x18,0xBE,0x20,0x8F,0x24,0x42,0x9A,0x1B,0x8C,0xDB,0x0A,0xDD,0x90,0xF7,0x01,0xB3,0xB0,0xC6,0x3E,0x1F,0xFA,0x0C,0x36,0xBF,0x06,0xD3,0x0E,0x16,0xC4,0xE3,0x88,0x17,0x76,0x9F,0xC3,0x58,0xA9,0x7F,0xE6,0x61,0x0D,0x74,0xB2,0xC5,0x81,0x83,0x6C,0xA4,0x64,0x4C,0x38,0xC7,0x1D,0x96,0xB9,0xF4,0xDC,0x9B,0x2E,0x89,0x59,0xDF,0x2B,0x62,0x3F,0x30,0xC9,0x5F,0xA5,0xF1,0x3D,0xE1,0x7C,0xEB,0x70,0x63,0x35,0x46,0xE9,0xC0,0xB8,0x80,0x82,0xD4,0x92,0xA3,0x9C,0x07,0xC2,0xFC,0xCF,0x79,0x37,0xA7,0x19,0x9E,0xAC,0xED,0x6F,0xAB,0x45,0x71,0x8A,0xD8,0x5D,0x31,0x6E,0x60,0x7D,0x28,0x23,0x03,0x7A,0x48,0x10,0x51,0xEC,0x15,0xAF,0x5E,0xBA,0x7E,0x43,0x1E,0xCA,0xBB,0xB1,0x00,0xE7,0x84,0x7B,0x22,0xB4,0xC1,0xE0,0x27,0x29,0x1C,0x49,0x85,0x32,0x69,0x4B,0xD2,0x4A,0xF3,0x53,0x21,0xA8,0x98,0x3A,0x0B,0x0F,0x65,0xEE,0xCC,0xBC,0xBD,0x39,0x13,0xA2,0x44,0x8E,0xAA,0xE5,0x97,0xF5,0x91,0x02,0xF8,0x8B,0x72,0x04,0xFF,0xD5,0x1A,0xD1,0x66,0x2D,0xEA,0x87,0x68,0x9D,0xA0,0xF0,0x77,0x47,0x12,0xB6,0xEF,0x4E,0xA1,0x99,0xD9,0x6A,0x6D,0x33,0xF2,0x95,0x5C,0xE4,0x40,0x55,0xE2,0x2A,0x41,0xDE,0xA6,0x93,0x3B,0x54,0x4D,0x6B,0xE8,0xD7,0x73,0xFD,0x4F,0xAD,0x57,0x2C,0xD0,0xB5,0x0A,0xEE,0xF3,0xCE,0x7A,0xAE,0x01,0x0B,0xCA,0xB3,0xA0,0xF8,0x5C,0xE1,0x1F,0xA5,0xED,0x68,0xDE,0x81,0xCD,0xD0,0x93,0x98,0x1C,0x2E,0xDF,0x5D,0xF5,0x1B,0x3A,0xC1,0xBF,0xBB,0x5E,0xD5,0x0C,0x7C,0x89,0x0D,0xFA,0x62,0xE3,0x43,0x18,0x91,0x8A,0x28,0x99,0x97,0xF9,0xAC,0x82,0x35,0xFB,0xD9,0x57,0xB0,0xCB,0x34,0x04,0x92,0x50,0x71,0x40,0x10,0xF7,0xC7,0x06,0xA2,0xFE,0x5F,0x61,0xAA,0x9D,0xD6,0x37,0x5A,0x2D,0xD8,0xB2,0x21,0x3B,0x48,0xB4,0xC2,0x65,0x4F,0x12,0xA3,0x3E,0xF4,0x55,0x1A,0x45,0x27,0x4D,0xC3,0x1D,0xFF,0x9C,0xE7,0x05,0x60,0x23,0x16,0xE4,0x8B,0xDB,0xFD,0x67,0x58,0x54,0xEC,0xE5,0xF0,0x9A,0x52,0x6E,0xF1,0x29,0x11,0xDA,0x69,0x83,0xDD,0x25,0x42,0x66,0xB8,0x7D,0x6A,0x07,0x7B,0x46,0x84,0xA4,0x4E,0xB9,0xE2,0x8C,0x24,0xD7,0x36,0xE6,0x3D,0xB5,0x96,0xEA,0x95,0x7E,0x1E,0xC5,0xE0,0x78,0x49,0xC8,0x9F,0xEB,0xA1,0xB6,0x0F,0xBE,0x63,0x74,0xA6,0x38,0x53,0x00,0x03,0x8E,0x76,0x4A,0xAF,0x86,0xBC,0x3C,0xAB,0xBA,0x6B,0x20,0x6D,0xB1,0x47,0xA8,0x4B,0x90,0x0E,0x94,0x3F,0x2A,0xF2,0x6C,0x44,0x9E,0x2B,0xE9,0x39,0x9B,0x6F,0xD4,0x14,0x88,0xFC,0xAD,0x77,0x09,0x26,0xBD,0xD1,0x02,0xC4,0x31,0x75,0xDC,0x33,0xC6,0xA7,0x73,0x2F,0x19,0xE8,0x56,0xCF,0x72,0xB7,0x7F,0x4C,0x87,0xC9,0xA9,0x17,0x08,0x70,0x32,0x30,0x22,0x64,0x2C,0x13,0xCC,0x51,0xC0,0x5B,0x85,0xD3,0x59,0xF6,0x8F,0xD2,0x79,0x80,0x15,0xEF,0x8D,0x41,0x56,0xCE,0x77,0xD7,0xA5,0x2C,0x1C,0xBE,0x8F,0x8B,0xE1,0x6A,0x48,0x38,0x39,0xBD,0x84,0x63,0x00,0xFF,0xA6,0x30,0x45,0x64,0xA3,0xAD,0x98,0xCD,0x01,0xB6,0xED,0xCF,0x87,0xFE,0xCC,0x94,0xD5,0x68,0x91,0x2B,0xDA,0x3E,0xFA,0xC7,0x9A,0x4E,0x3F,0x35,0x1A,0x28,0x69,0xEB,0x2F,0xC1,0xF5,0x0E,0x5C,0xD9,0xB5,0xEA,0xE4,0xF9,0xAC,0xA7,0x22,0x17,0xBF,0xD0,0xC9,0xEF,0x6C,0x53,0xF7,0x79,0xCB,0x29,0xD3,0xA8,0x54,0x31,0x25,0x1D,0x5D,0xEE,0xE9,0xB7,0x76,0x11,0xD8,0x60,0xC4,0xD1,0x66,0xAE,0xC5,0x5A,0x9E,0x55,0xE2,0xA9,0x6E,0x03,0xEC,0x19,0x24,0x74,0xF3,0xC3,0x96,0x32,0x6B,0xCA,0x97,0x26,0xC0,0x0A,0x2E,0x61,0x13,0x71,0x15,0x86,0x7C,0x0F,0xF6,0x80,0x7B,0x51,0x37,0x34,0x42,0xBA,0x9B,0x7E,0x88,0xB2,0x3B,0x82,0x57,0x8A,0x92,0x40,0x67,0x0C,0x7F,0x9C,0x3A,0xA4,0x0B,0xA0,0xC6,0x1E,0x9F,0x08,0x5F,0x8E,0x59,0x14,0x73,0x85,0x7A,0x90,0xD6,0x8D,0x10,0xB8,0x02,0xE3,0x8C,0x52,0x5E,0x49,0x4F,0x33,0xB0,0x72,0xD4,0xF1,0x7D,0x4C,0xAB,0xFC,0x95,0xDF,0x09,0xD2,0xA2,0x81,0xA1,0xDE,0x2A,0x4A,0x44,0x3C,0x04,0x06,0x50,0x16,0x27,0x18,0x83,0x46,0x78,0x4B,0xFD,0xB3,0x23,0x9D,0xE6,0xBB,0xB4,0x4D,0xDB,0x21,0x75,0xB9,0x65,0xF8,0x6F,0xF4,0xE7,0xB1,0xC2,0x6D,0x20,0xE0,0xC8,0xBC,0x43,0x99,0x12,0x3D,0x70,0x58,0x1F,0xAA,0x0D,0xDD,0x5B,0xAF,0x93,0xF2,0x1B,0x47,0xDC,0x2D,0xFB,0x62,0xE5,0x89,0xF0,0x36,0x41,0x05,0x07,0xE8,0x85,0x3C,0x8D,0x50,0x47,0x95,0x0B,0x60,0x33,0x30,0xBD,0x45,0x79,0x9C,0xB5,0x8F,0x0F,0x98,0x89,0x58,0x13,0x5E,0x82,0x74,0x9B,0x78,0xA3,0x3D,0xA7,0x0C,0x19,0xC1,0x55,0x8B,0x4E,0x59,0x34,0x48,0x75,0xB7,0x97,0x7D,0x8A,0xD1,0xBF,0x17,0xE4,0x05,0xD5,0x0E,0x86,0xA5,0xD9,0xA6,0x4D,0x2D,0xF6,0xD3,0x4B,0x7A,0xFB,0xAC,0xD8,0x92,0x41,0x84,0x4C,0x7F,0xB4,0xFA,0x9A,0x24,0x3B,0x43,0x01,0x03,0x11,0x57,0x1F,0x20,0xFF,0x62,0xF3,0x68,0xB6,0xE0,0x6A,0xC5,0xBC,0xE1,0x4A,0xB3,0x26,0xDC,0xBE,0x72,0x5F,0x77,0xAD,0x18,0xDA,0x0A,0xA8,0x5C,0xE7,0x27,0xBB,0xCF,0x9E,0x44,0x3A,0x15,0x8E,0xE2,0x31,0xF7,0x02,0x46,0xEF,0x00,0xF5,0x94,0x40,0x1C,0x2A,0xDB,0x65,0xFC,0x8C,0x88,0x6D,0xE6,0x3F,0x4F,0xBA,0x3E,0xC9,0x51,0xD0,0x70,0x2B,0xA2,0xB9,0x1B,0xAA,0xA4,0xCA,0x9F,0xB1,0x06,0xC8,0xEA,0x64,0x83,0xF8,0x07,0x37,0xA1,0x63,0x42,0x39,0xDD,0xC0,0xFD,0x49,0x9D,0x32,0x38,0xF9,0x80,0x93,0xCB,0x6F,0xD2,0x2C,0x96,0xDE,0x5B,0xED,0xB2,0xFE,0xE3,0xA0,0xAB,0x2F,0x1D,0xEC,0x6E,0xC6,0x28,0x09,0xF2,0x7E,0xF0,0x2E,0xCC,0xAF,0xD4,0x36,0x53,0x10,0x25,0xD7,0xB8,0xE8,0xCE,0x54,0x6B,0x67,0xDF,0xD6,0xC3,0xA9,0x61,0x5D,0xC2,0x1A,0x22,0xE9,0x5A,0xB0,0xEE,0x16,0x71,0x73,0x23,0xC4,0xF4,0x35,0x91,0xCD,0x6C,0x52,0x99,0xAE,0xE5,0x04,0x69,0x1E,0xEB,0x81,0x12,0x08,0x7B,0x87,0xF1,0x56,0x7C,0x21,0x90,0x0D,0xC7,0x66,0x29,0x76,0x14,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0x14,0xD4,0xFC,0x88,0x77,0xAD,0x26,0x09,0x44,0x6C,0x2B,0x9E,0x39,0xE9,0x6F,0x9B,0xA7,0xC6,0x2F,0x73,0xE8,0x19,0xCF,0x56,0xD1,0xBD,0xC4,0x02,0x75,0x31,0x33,0xDC,0x70,0x08,0x30,0x32,0x64,0x22,0x13,0x2C,0xB7,0x72,0x4C,0x7F,0xC9,0x87,0x17,0xA9,0xD2,0x8F,0x80,0x79,0xEF,0x15,0x41,0x8D,0x51,0xCC,0x5B,0xC0,0xD3,0x85,0xF6,0x59,0x4E,0xA4,0xE2,0xB9,0x24,0x8C,0x36,0xD7,0xB8,0x66,0x6A,0x7D,0x7B,0x07,0x84,0x46,0xE0,0xC5,0x49,0x78,0x9F,0xC8,0xA1,0xEB,0x3D,0xE6,0x96,0xB5,0x95,0xEA,0x1E,0x7E,0x03,0x00,0x76,0x8E,0xAF,0x4A,0xBC,0x86,0x0F,0xB6,0x63,0xBE,0xA6,0x74,0x53,0x38,0x4B,0xA8,0x0E,0x90,0x3F,0x94,0xF2,0x2A,0xAB,0x3C,0x6B,0xBA,0x6D,0x20,0x47,0xB1,0xAA,0x61,0xD6,0x9D,0x5A,0x37,0xD8,0x2D,0x10,0x40,0xC7,0xF7,0xA2,0x06,0x5F,0xFE,0xA3,0x12,0xF4,0x3E,0x1A,0x55,0x27,0x45,0x21,0xB2,0x48,0x3B,0xC2,0xB4,0x4F,0x65,0x16,0x23,0x8B,0xE4,0xFD,0xDB,0x58,0x67,0xC3,0x4D,0xFF,0x1D,0xE7,0x9C,0x60,0x05,0x11,0x29,0x69,0xDA,0xDD,0x83,0x42,0x25,0xEC,0x54,0xF0,0xE5,0x52,0x9A,0xF1,0x6E,0xB3,0xCA,0xF8,0xA0,0xE1,0x5C,0xA5,0x1F,0xEE,0x0A,0xCE,0xF3,0xAE,0x7A,0x0B,0x01,0x2E,0x1C,0x5D,0xDF,0x1B,0xF5,0xC1,0x3A,0x68,0xED,0x81,0xDE,0xD0,0xCD,0x98,0x93,0x62,0xFA,0x43,0xE3,0x91,0x18,0x28,0x8A,0xBB,0xBF,0xD5,0x5E,0x7C,0x0C,0x0D,0x89,0xB0,0x57,0x34,0xCB,0x92,0x04,0x71,0x50,0x97,0x99,0xAC,0xF9,0x35,0x82,0xD9,0xFB,0xFF,0x00,0x63,0x84,0x64,0x45,0x30,0xA6,0xCD,0x98,0xAD,0xA3,0xCF,0xED,0xB6,0x01,0xD7,0x77,0xCE,0x56,0xBE,0x1C,0x2C,0xA5,0x6A,0xE1,0x8B,0x8F,0xBD,0x39,0x38,0x48,0xEB,0x69,0x28,0x1A,0x0E,0xF5,0xC1,0x2F,0xEA,0xB5,0xD9,0x5C,0xA7,0xAC,0xF9,0xE4,0x94,0xCC,0xFE,0x87,0x2B,0x91,0x68,0xD5,0xC7,0xFA,0x3E,0xDA,0x35,0x3F,0x4E,0x9A,0xEE,0x5D,0x1D,0x25,0x11,0x76,0xB7,0xE9,0xD1,0xC4,0x60,0xD8,0x5A,0xC5,0xAE,0x66,0xD0,0xBF,0x17,0x22,0x53,0x6C,0xEF,0xC9,0x29,0xCB,0x79,0xF7,0x31,0x54,0xA8,0xD3,0x0A,0xC0,0x26,0x97,0x71,0x13,0x61,0x2E,0x0F,0x7C,0x86,0x15,0x51,0x7B,0x80,0xF6,0xA9,0xE2,0x55,0x9E,0x19,0xEC,0x03,0x6E,0xC3,0xF3,0x74,0x24,0xCA,0x6B,0x32,0x96,0xA4,0x3A,0x9C,0x7F,0x1E,0xC6,0xA0,0x0B,0x8E,0x5F,0x08,0x9F,0x85,0x73,0x14,0x59,0xBA,0x42,0x34,0x37,0xB2,0x88,0x7E,0x9B,0x8A,0x57,0x82,0x3B,0x0C,0x67,0x40,0x92,0x4C,0x7D,0xF1,0xD4,0xDF,0x95,0xFC,0xAB,0x81,0xA2,0xD2,0x09,0x4A,0x2A,0xDE,0xA1,0x8D,0xD6,0x90,0x7A,0xE3,0x02,0xB8,0x10,0x49,0x5E,0x52,0x8C,0x72,0xB0,0x33,0x4F,0x4D,0xB4,0xBB,0xE6,0xB9,0x75,0x21,0xDB,0xF4,0x6F,0xF8,0x65,0x6D,0xC2,0xB1,0xE7,0x06,0x04,0x3C,0x44,0x18,0x27,0x16,0x50,0x4B,0x78,0x46,0x83,0x9D,0x23,0xB3,0xFD,0x47,0x1B,0xF2,0x93,0x62,0xFB,0x2D,0xDC,0x36,0xF0,0x89,0xE5,0xE8,0x07,0x05,0x41,0xBC,0xC8,0xE0,0x20,0x3D,0x12,0x99,0x43,0xAA,0x1F,0x58,0x70,0xAF,0x5B,0xDD,0x0D,0xE7,0x27,0xBB,0xCF,0x9E,0x44,0x3A,0x15,0x5F,0x77,0xAD,0x18,0xDA,0x0A,0xA8,0x5C,0xF5,0x94,0x40,0x1C,0x2A,0xDB,0x65,0xFC,0x8E,0xE2,0x31,0xF7,0x02,0x46,0xEF,0x00,0x3B,0x43,0x01,0x03,0x11,0x57,0x1F,0x20,0x41,0x84,0x4C,0x7F,0xB4,0xFA,0x9A,0x24,0xBC,0xE1,0x4A,0xB3,0x26,0xDC,0xBE,0x72,0xFF,0x62,0xF3,0x68,0xB6,0xE0,0x6A,0xC5,0x97,0x7D,0x8A,0xD1,0xBF,0x17,0xE4,0x05,0x55,0x8B,0x4E,0x59,0x34,0x48,0x75,0xB7,0xF6,0xD3,0x4B,0x7A,0xFB,0xAC,0xD8,0x92,0xD5,0x0E,0x86,0xA5,0xD9,0xA6,0x4D,0x2D,0x33,0x30,0xBD,0x45,0x79,0x9C,0xB5,0x8F,0x85,0x3C,0x8D,0x50,0x47,0x95,0x0B,0x60,0x9B,0x78,0xA3,0x3D,0xA7,0x0C,0x19,0xC1,0x0F,0x98,0x89,0x58,0x13,0x5E,0x82,0x74,0x52,0x99,0xAE,0xE5,0x04,0x69,0x1E,0xEB,0x73,0x23,0xC4,0xF4,0x35,0x91,0xCD,0x6C,0x21,0x90,0x0D,0xC7,0x66,0x29,0x76,0x14,0x81,0x12,0x08,0x7B,0x87,0xF1,0x56,0x7C,0x10,0x25,0xD7,0xB8,0xE8,0xCE,0x54,0x6B,0x7E,0xF0,0x2E,0xCC,0xAF,0xD4,0x36,0x53,0x1A,0x22,0xE9,0x5A,0xB0,0xEE,0x16,0x71,0x67,0xDF,0xD6,0xC3,0xA9,0x61,0x5D,0xC2,0xF9,0x80,0x93,0xCB,0x6F,0xD2,0x2C,0x96,0x39,0xDD,0xC0,0xFD,0x49,0x9D,0x32,0x38,0x2F,0x1D,0xEC,0x6E,0xC6,0x28,0x09,0xF2,0xDE,0x5B,0xED,0xB2,0xFE,0xE3,0xA0,0xAB,0xC9,0x51,0xD0,0x70,0x2B,0xA2,0xB9,0x1B,0x8C,0x88,0x6D,0xE6,0x3F,0x4F,0xBA,0x3E,0x64,0x83,0xF8,0x07,0x37,0xA1,0x63,0x42,0xAA,0xA4,0xCA,0x9F,0xB1,0x06,0xC8,0xEA,0xE7,0x00,0x7B,0x84,0xB4,0x22,0xE0,0xC1,0x29,0x27,0x49,0x1C,0x32,0x85,0x4B,0x69,0x4A,0xD2,0x53,0xF3,0xA8,0x21,0x3A,0x98,0x0F,0x0B,0xEE,0x65,0xBC,0xCC,0x39,0xBD,0xAC,0x9E,0x6F,0xED,0x45,0xAB,0x8A,0x71,0x5D,0xD8,0x6E,0x31,0x7D,0x60,0x23,0x28,0x7A,0x03,0x10,0x48,0xEC,0x51,0xAF,0x15,0xBA,0x5E,0x43,0x7E,0xCA,0x1E,0xB1,0xBB,0x99,0xA1,0x6A,0xD9,0x33,0x6D,0x95,0xF2,0xE4,0x5C,0x55,0x40,0x2A,0xE2,0xDE,0x41,0x93,0xA6,0x54,0x3B,0x6B,0x4D,0xD7,0xE8,0xFD,0x73,0xAD,0x4F,0x2C,0x57,0xB5,0xD0,0xA2,0x13,0x8E,0x44,0xE5,0xAA,0xF5,0x97,0x02,0x91,0x8B,0xF8,0x04,0x72,0xD5,0xFF,0xD1,0x1A,0x2D,0x66,0x87,0xEA,0x9D,0x68,0xF0,0xA0,0x47,0x77,0xB6,0x12,0x4E,0xEF,0x18,0xFB,0x20,0xBE,0x24,0x8F,0x9A,0x42,0x8C,0x1B,0x0A,0xDB,0x90,0xDD,0x01,0xF7,0xB0,0xB3,0x3E,0xC6,0xFA,0x1F,0x36,0x0C,0x06,0xBF,0x0E,0xD3,0xC4,0x16,0x88,0xE3,0x75,0x50,0xC8,0xF9,0x78,0x2F,0x5B,0x11,0x56,0x8D,0x05,0x26,0x5A,0x25,0xCE,0xAE,0x14,0xFE,0x09,0x52,0x3C,0x94,0x67,0x86,0xD6,0x08,0xCD,0xDA,0xB7,0xCB,0xF6,0x34,0x3F,0x62,0xC9,0x30,0xA5,0x5F,0x3D,0xF1,0x7C,0xE1,0x70,0xEB,0x35,0x63,0xE9,0x46,0xB8,0xC0,0x82,0x80,0x92,0xD4,0x9C,0xA3,0xC2,0x07,0xCF,0xFC,0x37,0x79,0x19,0xA7,0x76,0x17,0xC3,0x9F,0xA9,0x58,0xE6,0x7F,0x0D,0x61,0xB2,0x74,0x81,0xC5,0x6C,0x83,0x64,0xA4,0x38,0x4C,0x1D,0xC7,0xB9,0x96,0xDC,0xF4,0x2E,0x9B,0x59,0x89,0x2B,0xDF,0xC7,0xF7,0x10,0x40,0x5F,0xFE,0xA2,0x06,0xD6,0x9D,0xAA,0x61,0xD8,0x2D,0x5A,0x37,0x48,0x3B,0x21,0xB2,0x4F,0x65,0xC2,0xB4,0xF4,0x3E,0xA3,0x12,0x27,0x45,0x1A,0x55,0xFF,0x1D,0xC3,0x4D,0x60,0x05,0xE7,0x9C,0x8B,0xE4,0x16,0x23,0x58,0x67,0xFD,0xDB,0xF0,0xE5,0xEC,0x54,0xF1,0x6E,0x52,0x9A,0x69,0xDA,0x11,0x29,0x42,0x25,0xDD,0x83,0xCE,0xF3,0xEE,0x0A,0x0B,0x01,0xAE,0x7A,0xF8,0xA0,0xB3,0xCA,0xA5,0x1F,0xE1,0x5C,0x81,0xDE,0x68,0xED,0x98,0x93,0xD0,0xCD,0x5D,0xDF,0x2E,0x1C,0xC1,0x3A,0x1B,0xF5,0xD5,0x5E,0xBB,0xBF,0x0D,0x89,0x7C,0x0C,0x43,0xE3,0x62,0xFA,0x28,0x8A,0x91,0x18,0xAC,0xF9,0x97,0x99,0xD9,0xFB,0x35,0x82,0x34,0xCB,0xB0,0x57,0x71,0x50,0x92,0x04,0x2B,0x9E,0x44,0x6C,0x6F,0x9B,0x39,0xE9,0xFC,0x88,0x14,0xD4,0x26,0x09,0x77,0xAD,0xC4,0x02,0xD1,0xBD,0x33,0xDC,0x75,0x31,0x2F,0x73,0xA7,0xC6,0xCF,0x56,0xE8,0x19,0x4C,0x7F,0xB7,0x72,0x17,0xA9,0xC9,0x87,0x30,0x32,0x70,0x08,0x13,0x2C,0x64,0x22,0x5B,0xC0,0x51,0xCC,0xF6,0x59,0xD3,0x85,0x80,0x79,0xD2,0x8F,0x41,0x8D,0xEF,0x15,0x6A,0x7D,0xB8,0x66,0x84,0x46,0x7B,0x07,0xE2,0xB9,0x4E,0xA4,0x36,0xD7,0x24,0x8C,0x96,0xB5,0x3D,0xE6,0x1E,0x7E,0x95,0xEA,0x49,0x78,0xE0,0xC5,0xA1,0xEB,0x9F,0xC8,0x63,0xBE,0x0F,0xB6,0x53,0x38,0xA6,0x74,0x76,0x8E,0x03,0x00,0xBC,0x86,0xAF,0x4A,0x6B,0xBA,0xAB,0x3C,0x47,0xB1,0x6D,0x20,0x0E,0x90,0x4B,0xA8,0xF2,0x2A,0x3F,0x94,0xBF,0xD0,0x22,0x17,0x6C,0x53,0xC9,0xEF,0xCB,0x29,0xF7,0x79,0x54,0x31,0xD3,0xA8,0x5D,0xEE,0x25,0x1D,0x76,0x11,0xE9,0xB7,0xC4,0xD1,0xD8,0x60,0xC5,0x5A,0x66,0xAE,0xE2,0xA9,0x9E,0x55,0xEC,0x19,0x6E,0x03,0xF3,0xC3,0x24,0x74,0x6B,0xCA,0x96,0x32,0xC0,0x0A,0x97,0x26,0x13,0x71,0x2E,0x61,0x7C,0x0F,0x15,0x86,0x7B,0x51,0xF6,0x80,0x77,0xD7,0x56,0xCE,0x1C,0xBE,0xA5,0x2C,0xE1,0x6A,0x8F,0x8B,0x39,0xBD,0x48,0x38,0x00,0xFF,0x84,0x63,0x45,0x64,0xA6,0x30,0x98,0xCD,0xA3,0xAD,0xED,0xCF,0x01,0xB6,0xCC,0x94,0x87,0xFE,0x91,0x2B,0xD5,0x68,0xFA,0xC7,0xDA,0x3E,0x3F,0x35,0x9A,0x4E,0x69,0xEB,0x1A,0x28,0xF5,0x0E,0x2F,0xC1,0xB5,0xEA,0x5C,0xD9,0xAC,0xA7,0xE4,0xF9,0x04,0x06,0x44,0x3C,0x27,0x18,0x50,0x16,0x78,0x4B,0x83,0x46,0x23,0x9D,0xFD,0xB3,0xB4,0x4D,0xE6,0xBB,0x75,0xB9,0xDB,0x21,0x6F,0xF4,0x65,0xF8,0xC2,0x6D,0xE7,0xB1,0xC8,0xBC,0x20,0xE0,0x12,0x3D,0x43,0x99,0x1F,0xAA,0x70,0x58,0x5B,0xAF,0x0D,0xDD,0x1B,0x47,0x93,0xF2,0xFB,0x62,0xDC,0x2D,0xF0,0x36,0xE5,0x89,0x07,0xE8,0x41,0x05,0x42,0xBA,0x37,0x34,0x88,0xB2,0x9B,0x7E,0x57,0x8A,0x3B,0x82,0x67,0x0C,0x92,0x40,0x3A,0xA4,0x7F,0x9C,0xC6,0x1E,0x0B,0xA0,0x5F,0x8E,0x9F,0x08,0x73,0x85,0x59,0x14,0xD6,0x8D,0x7A,0x90,0x02,0xE3,0x10,0xB8,0x5E,0x49,0x8C,0x52,0xB0,0x72,0x4F,0x33,0x7D,0x4C,0xD4,0xF1,0x95,0xDF,0xAB,0xFC,0xA2,0x81,0x09,0xD2,0x2A,0x4A,0xA1,0xDE,0x50,0x8D,0x3C,0x85,0x60,0x0B,0x95,0x47,0x45,0xBD,0x30,0x33,0x8F,0xB5,0x9C,0x79,0x58,0x89,0x98,0x0F,0x74,0x82,0x5E,0x13,0x3D,0xA3,0x78,0x9B,0xC1,0x19,0x0C,0xA7,0x59,0x4E,0x8B,0x55,0xB7,0x75,0x48,0x34,0xD1,0x8A,0x7D,0x97,0x05,0xE4,0x17,0xBF,0xA5,0x86,0x0E,0xD5,0x2D,0x4D,0xA6,0xD9,0x7A,0x4B,0xD3,0xF6,0x92,0xD8,0xAC,0xFB,0x7F,0x4C,0x84,0x41,0x24,0x9A,0xFA,0xB4,0x03,0x01,0x43,0x3B,0x20,0x1F,0x57,0x11,0x68,0xF3,0x62,0xFF,0xC5,0x6A,0xE0,0xB6,0xB3,0x4A,0xE1,0xBC,0x72,0xBE,0xDC,0x26,0x18,0xAD,0x77,0x5F,0x5C,0xA8,0x0A,0xDA,0xCF,0xBB,0x27,0xE7,0x15,0x3A,0x44,0x9E,0xF7,0x31,0xE2,0x8E,0x00,0xEF,0x46,0x02,0x1C,0x40,0x94,0xF5,0xFC,0x65,0xDB,0x2A,0xE6,0x6D,0x88,0x8C,0x3E,0xBA,0x4F,0x3F,0x70,0xD0,0x51,0xC9,0x1B,0xB9,0xA2,0x2B,0x9F,0xCA,0xA4,0xAA,0xEA,0xC8,0x06,0xB1,0x07,0xF8,0x83,0x64,0x42,0x63,0xA1,0x37,0xFD,0xC0,0xDD,0x39,0x38,0x32,0x9D,0x49,0xCB,0x93,0x80,0xF9,0x96,0x2C,0xD2,0x6F,0xB2,0xED,0x5B,0xDE,0xAB,0xA0,0xE3,0xFE,0x6E,0xEC,0x1D,0x2F,0xF2,0x09,0x28,0xC6,0xCC,0x2E,0xF0,0x7E,0x53,0x36,0xD4,0xAF,0xB8,0xD7,0x25,0x10,0x6B,0x54,0xCE,0xE8,0xC3,0xD6,0xDF,0x67,0xC2,0x5D,0x61,0xA9,0x5A,0xE9,0x22,0x1A,0x71,0x16,0xEE,0xB0,0xF4,0xC4,0x23,0x73,0x6C,0xCD,0x91,0x35,0xE5,0xAE,0x99,0x52,0xEB,0x1E,0x69,0x04,0x7B,0x08,0x12,0x81,0x7C,0x56,0xF1,0x87,0xC7,0x0D,0x90,0x21,0x14,0x76,0x29,0x66,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0x5B,0xC0,0x51,0xCC,0xF6,0x59,0xD3,0x85,0x80,0x79,0xD2,0x8F,0x41,0x8D,0xEF,0x15,0x4C,0x7F,0xB7,0x72,0x17,0xA9,0xC9,0x87,0x30,0x32,0x70,0x08,0x13,0x2C,0x64,0x22,0xC4,0x02,0xD1,0xBD,0x33,0xDC,0x75,0x31,0x2F,0x73,0xA7,0xC6,0xCF,0x56,0xE8,0x19,0x2B,0x9E,0x44,0x6C,0x6F,0x9B,0x39,0xE9,0xFC,0x88,0x14,0xD4,0x26,0x09,0x77,0xAD,0x6B,0xBA,0xAB,0x3C,0x47,0xB1,0x6D,0x20,0x0E,0x90,0x4B,0xA8,0xF2,0x2A,0x3F,0x94,0x63,0xBE,0x0F,0xB6,0x53,0x38,0xA6,0x74,0x76,0x8E,0x03,0x00,0xBC,0x86,0xAF,0x4A,0x96,0xB5,0x3D,0xE6,0x1E,0x7E,0x95,0xEA,0x49,0x78,0xE0,0xC5,0xA1,0xEB,0x9F,0xC8,0x6A,0x7D,0xB8,0x66,0x84,0x46,0x7B,0x07,0xE2,0xB9,0x4E,0xA4,0x36,0xD7,0x24,0x8C,0xF0,0xE5,0xEC,0x54,0xF1,0x6E,0x52,0x9A,0x69,0xDA,0x11,0x29,0x42,0x25,0xDD,0x83,0xFF,0x1D,0xC3,0x4D,0x60,0x05,0xE7,0x9C,0x8B,0xE4,0x16,0x23,0x58,0x67,0xFD,0xDB,0x48,0x3B,0x21,0xB2,0x4F,0x65,0xC2,0xB4,0xF4,0x3E,0xA3,0x12,0x27,0x45,0x1A,0x55,0xC7,0xF7,0x10,0x40,0x5F,0xFE,0xA2,0x06,0xD6,0x9D,0xAA,0x61,0xD8,0x2D,0x5A,0x37,0xAC,0xF9,0x97,0x99,0xD9,0xFB,0x35,0x82,0x34,0xCB,0xB0,0x57,0x71,0x50,0x92,0x04,0xD5,0x5E,0xBB,0xBF,0x0D,0x89,0x7C,0x0C,0x43,0xE3,0x62,0xFA,0x28,0x8A,0x91,0x18,0x81,0xDE,0x68,0xED,0x98,0x93,0xD0,0xCD,0x5D,0xDF,0x2E,0x1C,0xC1,0x3A,0x1B,0xF5,0xCE,0xF3,0xEE,0x0A,0x0B,0x01,0xAE,0x7A,0xF8,0xA0,0xB3,0xCA,0xA5,0x1F,0xE1,0x5C,0x60,0xD8,0xD1,0xC4,0xAE,0x66,0x5A,0xC5,0x1D,0x25,0xEE,0x5D,0xB7,0xE9,0x11,0x76,0x79,0xF7,0x29,0xCB,0xA8,0xD3,0x31,0x54,0x17,0x22,0xD0,0xBF,0xEF,0xC9,0x53,0x6C,0x86,0x15,0x0F,0x7C,0x80,0xF6,0x51,0x7B,0x26,0x97,0x0A,0xC0,0x61,0x2E,0x71,0x13,0x74,0x24,0xC3,0xF3,0x32,0x96,0xCA,0x6B,0x55,0x9E,0xA9,0xE2,0x03,0x6E,0x19,0xEC,0xAD,0xA3,0xCD,0x98,0xB6,0x01,0xCF,0xED,0x63,0x84,0xFF,0x00,0x30,0xA6,0x64,0x45,0x8B,0x8F,0x6A,0xE1,0x38,0x48,0xBD,0x39,0xCE,0x56,0xD7,0x77,0x2C,0xA5,0xBE,0x1C,0xD9,0x5C,0xEA,0xB5,0xF9,0xE4,0xA7,0xAC,0x28,0x1A,0xEB,0x69,0xC1,0x2F,0x0E,0xF5,0x3E,0xDA,0xC7,0xFA,0x4E,0x9A,0x35,0x3F,0xFE,0x87,0x94,0xCC,0x68,0xD5,0x2B,0x91,0xF8,0x65,0xF4,0x6F,0xB1,0xE7,0x6D,0xC2,0xBB,0xE6,0x4D,0xB4,0x21,0xDB,0xB9,0x75,0x46,0x83,0x4B,0x78,0xB3,0xFD,0x9D,0x23,0x3C,0x44,0x06,0x04,0x16,0x50,0x18,0x27,0x89,0xE5,0x36,0xF0,0x05,0x41,0xE8,0x07,0xF2,0x93,0x47,0x1B,0x2D,0xDC,0x62,0xFB,0x58,0x70,0xAA,0x1F,0xDD,0x0D,0xAF,0x5B,0xE0,0x20,0xBC,0xC8,0x99,0x43,0x3D,0x12,0x08,0x9F,0x8E,0x5F,0x14,0x59,0x85,0x73,0x9C,0x7F,0xA4,0x3A,0xA0,0x0B,0x1E,0xC6,0x82,0x3B,0x8A,0x57,0x40,0x92,0x0C,0x67,0x34,0x37,0xBA,0x42,0x7E,0x9B,0xB2,0x88,0xD2,0x09,0x81,0xA2,0xDE,0xA1,0x4A,0x2A,0xF1,0xD4,0x4C,0x7D,0xFC,0xAB,0xDF,0x95,0x52,0x8C,0x49,0x5E,0x33,0x4F,0x72,0xB0,0x90,0x7A,0x8D,0xD6,0xB8,0x10,0xE3,0x02,0xC0,0xFD,0x39,0xDD,0x32,0x38,0x49,0x9D,0x93,0xCB,0xF9,0x80,0x2C,0x96,0x6F,0xD2,0xED,0xB2,0xDE,0x5B,0xA0,0xAB,0xFE,0xE3,0xEC,0x6E,0x2F,0x1D,0x09,0xF2,0xC6,0x28,0x6D,0xE6,0x8C,0x88,0xBA,0x3E,0x3F,0x4F,0xD0,0x70,0xC9,0x51,0xB9,0x1B,0x2B,0xA2,0xCA,0x9F,0xAA,0xA4,0xC8,0xEA,0xB1,0x06,0xF8,0x07,0x64,0x83,0x63,0x42,0x37,0xA1,0xC4,0xF4,0x73,0x23,0xCD,0x6C,0x35,0x91,0xAE,0xE5,0x52,0x99,0x1E,0xEB,0x04,0x69,0x08,0x7B,0x81,0x12,0x56,0x7C,0x87,0xF1,0x0D,0xC7,0x21,0x90,0x76,0x14,0x66,0x29,0x2E,0xCC,0x7E,0xF0,0x36,0x53,0xAF,0xD4,0xD7,0xB8,0x10,0x25,0x54,0x6B,0xE8,0xCE,0xD6,0xC3,0x67,0xDF,0x5D,0xC2,0xA9,0x61,0xE9,0x5A,0x1A,0x22,0x16,0x71,0xB0,0xEE,0x4E,0x59,0x55,0x8B,0x75,0xB7,0x34,0x48,0x8A,0xD1,0x97,0x7D,0xE4,0x05,0xBF,0x17,0x86,0xA5,0xD5,0x0E,0x4D,0x2D,0xD9,0xA6,0x4B,0x7A,0xF6,0xD3,0xD8,0x92,0xFB,0xAC,0x8D,0x50,0x85,0x3C,0x0B,0x60,0x47,0x95,0xBD,0x45,0x33,0x30,0xB5,0x8F,0x79,0x9C,0x89,0x58,0x0F,0x98,0x82,0x74,0x13,0x5E,0xA3,0x3D,0x9B,0x78,0x19,0xC1,0xA7,0x0C,0xAD,0x18,0x5F,0x77,0xA8,0x5C,0xDA,0x0A,0xBB,0xCF,0xE7,0x27,0x3A,0x15,0x9E,0x44,0x31,0xF7,0x8E,0xE2,0xEF,0x00,0x02,0x46,0x40,0x1C,0xF5,0x94,0x65,0xFC,0x2A,0xDB,0x4C,0x7F,0x41,0x84,0x9A,0x24,0xB4,0xFA,0x01,0x03,0x3B,0x43,0x1F,0x20,0x11,0x57,0xF3,0x68,0xFF,0x62,0x6A,0xC5,0xB6,0xE0,0x4A,0xB3,0xBC,0xE1,0xBE,0x72,0x26,0xDC,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0x09,0x26,0xAD,0x77,0x88,0xFC,0xD4,0x14,0x9B,0x6F,0xE9,0x39,0x9E,0x2B,0x6C,0x44,0x56,0xCF,0x19,0xE8,0x73,0x2F,0xC6,0xA7,0xDC,0x33,0x31,0x75,0x02,0xC4,0xBD,0xD1,0x2C,0x13,0x22,0x64,0x32,0x30,0x08,0x70,0xA9,0x17,0x87,0xC9,0x7F,0x4C,0x72,0xB7,0x8D,0x41,0x15,0xEF,0x79,0x80,0x8F,0xD2,0x59,0xF6,0x85,0xD3,0xC0,0x5B,0xCC,0x51,0xD7,0x36,0x8C,0x24,0xB9,0xE2,0xA4,0x4E,0x46,0x84,0x07,0x7B,0x7D,0x6A,0x66,0xB8,0xEB,0xA1,0xC8,0x9F,0x78,0x49,0xC5,0xE0,0x7E,0x1E,0xEA,0x95,0xB5,0x96,0xE6,0x3D,0x86,0xBC,0x4A,0xAF,0x8E,0x76,0x00,0x03,0x38,0x53,0x74,0xA6,0xBE,0x63,0xB6,0x0F,0x2A,0xF2,0x94,0x3F,0x90,0x0E,0xA8,0x4B,0xB1,0x47,0x20,0x6D,0xBA,0x6B,0x3C,0xAB,0x2D,0xD8,0x37,0x5A,0x9D,0xD6,0x61,0xAA,0xFE,0x5F,0x06,0xA2,0xF7,0xC7,0x40,0x10,0x45,0x27,0x55,0x1A,0x3E,0xF4,0x12,0xA3,0x65,0x4F,0xB4,0xC2,0x3B,0x48,0xB2,0x21,0x67,0x58,0xDB,0xFD,0xE4,0x8B,0x23,0x16,0x05,0x60,0x9C,0xE7,0x1D,0xFF,0x4D,0xC3,0x25,0x42,0x83,0xDD,0xDA,0x69,0x29,0x11,0x6E,0xF1,0x9A,0x52,0xE5,0xF0,0x54,0xEC,0x1F,0xA5,0x5C,0xE1,0xA0,0xF8,0xCA,0xB3,0x01,0x0B,0x7A,0xAE,0xF3,0xCE,0x0A,0xEE,0x3A,0xC1,0xF5,0x1B,0xDF,0x5D,0x1C,0x2E,0x93,0x98,0xCD,0xD0,0xDE,0x81,0xED,0x68,0x8A,0x28,0x18,0x91,0xE3,0x43,0xFA,0x62,0x89,0x0D,0x0C,0x7C,0x5E,0xD5,0xBF,0xBB,0x50,0x71,0x04,0x92,0xCB,0x34,0x57,0xB0,0xFB,0xD9,0x82,0x35,0xF9,0xAC,0x99,0x97,0x4E,0x9A,0x35,0x3F,0x3E,0xDA,0xC7,0xFA,0x68,0xD5,0x2B,0x91,0xFE,0x87,0x94,0xCC,0xF9,0xE4,0xA7,0xAC,0xD9,0x5C,0xEA,0xB5,0xC1,0x2F,0x0E,0xF5,0x28,0x1A,0xEB,0x69,0x38,0x48,0xBD,0x39,0x8B,0x8F,0x6A,0xE1,0x2C,0xA5,0xBE,0x1C,0xCE,0x56,0xD7,0x77,0xB6,0x01,0xCF,0xED,0xAD,0xA3,0xCD,0x98,0x30,0xA6,0x64,0x45,0x63,0x84,0xFF,0x00,0x32,0x96,0xCA,0x6B,0x74,0x24,0xC3,0xF3,0x03,0x6E,0x19,0xEC,0x55,0x9E,0xA9,0xE2,0x80,0xF6,0x51,0x7B,0x86,0x15,0x0F,0x7C,0x61,0x2E,0x71,0x13,0x26,0x97,0x0A,0xC0,0xA8,0xD3,0x31,0x54,0x79,0xF7,0x29,0xCB,0xEF,0xC9,0x53,0x6C,0x17,0x22,0xD0,0xBF,0xAE,0x66,0x5A,0xC5,0x60,0xD8,0xD1,0xC4,0xB7,0xE9,0x11,0x76,0x1D,0x25,0xEE,0x5D,0x33,0x4F,0x72,0xB0,0x52,0x8C,0x49,0x5E,0xB8,0x10,0xE3,0x02,0x90,0x7A,0x8D,0xD6,0xDE,0xA1,0x4A,0x2A,0xD2,0x09,0x81,0xA2,0xFC,0xAB,0xDF,0x95,0xF1,0xD4,0x4C,0x7D,0x40,0x92,0x0C,0x67,0x82,0x3B,0x8A,0x57,0x7E,0x9B,0xB2,0x88,0x34,0x37,0xBA,0x42,0x14,0x59,0x85,0x73,0x08,0x9F,0x8E,0x5F,0xA0,0x0B,0x1E,0xC6,0x9C,0x7F,0xA4,0x3A,0xDD,0x0D,0xAF,0x5B,0x58,0x70,0xAA,0x1F,0x99,0x43,0x3D,0x12,0xE0,0x20,0xBC,0xC8,0x05,0x41,0xE8,0x07,0x89,0xE5,0x36,0xF0,0x2D,0xDC,0x62,0xFB,0xF2,0x93,0x47,0x1B,0xB3,0xFD,0x9D,0x23,0x46,0x83,0x4B,0x78,0x16,0x50,0x18,0x27,0x3C,0x44,0x06,0x04,0xB1,0xE7,0x6D,0xC2,0xF8,0x65,0xF4,0x6F,0x21,0xDB,0xB9,0x75,0xBB,0xE6,0x4D,0xB4,0xA3,0x3D,0x9B,0x78,0x19,0xC1,0xA7,0x0C,0x89,0x58,0x0F,0x98,0x82,0x74,0x13,0x5E,0xBD,0x45,0x33,0x30,0xB5,0x8F,0x79,0x9C,0x8D,0x50,0x85,0x3C,0x0B,0x60,0x47,0x95,0x4B,0x7A,0xF6,0xD3,0xD8,0x92,0xFB,0xAC,0x86,0xA5,0xD5,0x0E,0x4D,0x2D,0xD9,0xA6,0x8A,0xD1,0x97,0x7D,0xE4,0x05,0xBF,0x17,0x4E,0x59,0x55,0x8B,0x75,0xB7,0x34,0x48,0x4A,0xB3,0xBC,0xE1,0xBE,0x72,0x26,0xDC,0xF3,0x68,0xFF,0x62,0x6A,0xC5,0xB6,0xE0,0x01,0x03,0x3B,0x43,0x1F,0x20,0x11,0x57,0x4C,0x7F,0x41,0x84,0x9A,0x24,0xB4,0xFA,0x40,0x1C,0xF5,0x94,0x65,0xFC,0x2A,0xDB,0x31,0xF7,0x8E,0xE2,0xEF,0x00,0x02,0x46,0xBB,0xCF,0xE7,0x27,0x3A,0x15,0x9E,0x44,0xAD,0x18,0x5F,0x77,0xA8,0x5C,0xDA,0x0A,0xF8,0x07,0x64,0x83,0x63,0x42,0x37,0xA1,0xCA,0x9F,0xAA,0xA4,0xC8,0xEA,0xB1,0x06,0xD0,0x70,0xC9,0x51,0xB9,0x1B,0x2B,0xA2,0x6D,0xE6,0x8C,0x88,0xBA,0x3E,0x3F,0x4F,0xEC,0x6E,0x2F,0x1D,0x09,0xF2,0xC6,0x28,0xED,0xB2,0xDE,0x5B,0xA0,0xAB,0xFE,0xE3,0x93,0xCB,0xF9,0x80,0x2C,0x96,0x6F,0xD2,0xC0,0xFD,0x39,0xDD,0x32,0x38,0x49,0x9D,0xE9,0x5A,0x1A,0x22,0x16,0x71,0xB0,0xEE,0xD6,0xC3,0x67,0xDF,0x5D,0xC2,0xA9,0x61,0xD7,0xB8,0x10,0x25,0x54,0x6B,0xE8,0xCE,0x2E,0xCC,0x7E,0xF0,0x36,0x53,0xAF,0xD4,0x0D,0xC7,0x21,0x90,0x76,0x14,0x66,0x29,0x08,0x7B,0x81,0x12,0x56,0x7C,0x87,0xF1,0xAE,0xE5,0x52,0x99,0x1E,0xEB,0x04,0x69,0xC4,0xF4,0x73,0x23,0xCD,0x6C,0x35,0x91,0xD7,0xE8,0x6B,0x4D,0x54,0x3B,0x93,0xA6,0xB5,0xD0,0x2C,0x57,0xAD,0x4F,0xFD,0x73,0x95,0xF2,0x33,0x6D,0x6A,0xD9,0x99,0xA1,0xDE,0x41,0x2A,0xE2,0x55,0x40,0xE4,0x5C,0x9D,0x68,0x87,0xEA,0x2D,0x66,0xD1,0x1A,0x4E,0xEF,0xB6,0x12,0x47,0x77,0xF0,0xA0,0xF5,0x97,0xE5,0xAA,0x8E,0x44,0xA2,0x13,0xD5,0xFF,0x04,0x72,0x8B,0xF8,0x02,0x91,0x3A,0x98,0xA8,0x21,0x53,0xF3,0x4A,0xD2,0x39,0xBD,0xBC,0xCC,0xEE,0x65,0x0F,0x0B,0xE0,0xC1,0xB4,0x22,0x7B,0x84,0xE7,0x00,0x4B,0x69,0x32,0x85,0x49,0x1C,0x29,0x27,0xAF,0x15,0xEC,0x51,0x10,0x48,0x7A,0x03,0xB1,0xBB,0xCA,0x1E,0x43,0x7E,0xBA,0x5E,0x8A,0x71,0x45,0xAB,0x6F,0xED,0xAC,0x9E,0x23,0x28,0x7D,0x60,0x6E,0x31,0x5D,0xD8,0x9C,0xA3,0x92,0xD4,0x82,0x80,0xB8,0xC0,0x19,0xA7,0x37,0x79,0xCF,0xFC,0xC2,0x07,0x3D,0xF1,0xA5,0x5F,0xC9,0x30,0x3F,0x62,0xE9,0x46,0x35,0x63,0x70,0xEB,0x7C,0xE1,0xB9,0x96,0x1D,0xC7,0x38,0x4C,0x64,0xA4,0x2B,0xDF,0x59,0x89,0x2E,0x9B,0xDC,0xF4,0xE6,0x7F,0xA9,0x58,0xC3,0x9F,0x76,0x17,0x6C,0x83,0x81,0xC5,0xB2,0x74,0x0D,0x61,0x36,0x0C,0xFA,0x1F,0x3E,0xC6,0xB0,0xB3,0x88,0xE3,0xC4,0x16,0x0E,0xD3,0x06,0xBF,0x9A,0x42,0x24,0x8F,0x20,0xBE,0x18,0xFB,0x01,0xF7,0x90,0xDD,0x0A,0xDB,0x8C,0x1B,0x67,0x86,0x3C,0x94,0x09,0x52,0x14,0xFE,0xF6,0x34,0xB7,0xCB,0xCD,0xDA,0xD6,0x08,0x5B,0x11,0x78,0x2F,0xC8,0xF9,0x75,0x50,0xCE,0xAE,0x5A,0x25,0x05,0x26,0x56,0x8D,0xD6,0x9D,0xAA,0x61,0xD8,0x2D,0x5A,0x37,0xC7,0xF7,0x10,0x40,0x5F,0xFE,0xA2,0x06,0xF4,0x3E,0xA3,0x12,0x27,0x45,0x1A,0x55,0x48,0x3B,0x21,0xB2,0x4F,0x65,0xC2,0xB4,0x8B,0xE4,0x16,0x23,0x58,0x67,0xFD,0xDB,0xFF,0x1D,0xC3,0x4D,0x60,0x05,0xE7,0x9C,0x69,0xDA,0x11,0x29,0x42,0x25,0xDD,0x83,0xF0,0xE5,0xEC,0x54,0xF1,0x6E,0x52,0x9A,0xF8,0xA0,0xB3,0xCA,0xA5,0x1F,0xE1,0x5C,0xCE,0xF3,0xEE,0x0A,0x0B,0x01,0xAE,0x7A,0x5D,0xDF,0x2E,0x1C,0xC1,0x3A,0x1B,0xF5,0x81,0xDE,0x68,0xED,0x98,0x93,0xD0,0xCD,0x43,0xE3,0x62,0xFA,0x28,0x8A,0x91,0x18,0xD5,0x5E,0xBB,0xBF,0x0D,0x89,0x7C,0x0C,0x34,0xCB,0xB0,0x57,0x71,0x50,0x92,0x04,0xAC,0xF9,0x97,0x99,0xD9,0xFB,0x35,0x82,0xFC,0x88,0x14,0xD4,0x26,0x09,0x77,0xAD,0x2B,0x9E,0x44,0x6C,0x6F,0x9B,0x39,0xE9,0x2F,0x73,0xA7,0xC6,0xCF,0x56,0xE8,0x19,0xC4,0x02,0xD1,0xBD,0x33,0xDC,0x75,0x31,0x30,0x32,0x70,0x08,0x13,0x2C,0x64,0x22,0x4C,0x7F,0xB7,0x72,0x17,0xA9,0xC9,0x87,0x80,0x79,0xD2,0x8F,0x41,0x8D,0xEF,0x15,0x5B,0xC0,0x51,0xCC,0xF6,0x59,0xD3,0x85,0xE2,0xB9,0x4E,0xA4,0x36,0xD7,0x24,0x8C,0x6A,0x7D,0xB8,0x66,0x84,0x46,0x7B,0x07,0x49,0x78,0xE0,0xC5,0xA1,0xEB,0x9F,0xC8,0x96,0xB5,0x3D,0xE6,0x1E,0x7E,0x95,0xEA,0x76,0x8E,0x03,0x00,0xBC,0x86,0xAF,0x4A,0x63,0xBE,0x0F,0xB6,0x53,0x38,0xA6,0x74,0x0E,0x90,0x4B,0xA8,0xF2,0x2A,0x3F,0x94,0x6B,0xBA,0xAB,0x3C,0x47,0xB1,0x6D,0x20,0x90,0x7A,0x8D,0xD6,0xB8,0x10,0xE3,0x02,0x52,0x8C,0x49,0x5E,0x33,0x4F,0x72,0xB0,0xF1,0xD4,0x4C,0x7D,0xFC,0xAB,0xDF,0x95,0xD2,0x09,0x81,0xA2,0xDE,0xA1,0x4A,0x2A,0x34,0x37,0xBA,0x42,0x7E,0x9B,0xB2,0x88,0x82,0x3B,0x8A,0x57,0x40,0x92,0x0C,0x67,0x9C,0x7F,0xA4,0x3A,0xA0,0x0B,0x1E,0xC6,0x08,0x9F,0x8E,0x5F,0x14,0x59,0x85,0x73,0xE0,0x20,0xBC,0xC8,0x99,0x43,0x3D,0x12,0x58,0x70,0xAA,0x1F,0xDD,0x0D,0xAF,0x5B,0xF2,0x93,0x47,0x1B,0x2D,0xDC,0x62,0xFB,0x89,0xE5,0x36,0xF0,0x05,0x41,0xE8,0x07,0x3C,0x44,0x06,0x04,0x16,0x50,0x18,0x27,0x46,0x83,0x4B,0x78,0xB3,0xFD,0x9D,0x23,0xBB,0xE6,0x4D,0xB4,0x21,0xDB,0xB9,0x75,0xF8,0x65,0xF4,0x6F,0xB1,0xE7,0x6D,0xC2,0xFE,0x87,0x94,0xCC,0x68,0xD5,0x2B,0x91,0x3E,0xDA,0xC7,0xFA,0x4E,0x9A,0x35,0x3F,0x28,0x1A,0xEB,0x69,0xC1,0x2F,0x0E,0xF5,0xD9,0x5C,0xEA,0xB5,0xF9,0xE4,0xA7,0xAC,0xCE,0x56,0xD7,0x77,0x2C,0xA5,0xBE,0x1C,0x8B,0x8F,0x6A,0xE1,0x38,0x48,0xBD,0x39,0x63,0x84,0xFF,0x00,0x30,0xA6,0x64,0x45,0xAD,0xA3,0xCD,0x98,0xB6,0x01,0xCF,0xED,0x55,0x9E,0xA9,0xE2,0x03,0x6E,0x19,0xEC,0x74,0x24,0xC3,0xF3,0x32,0x96,0xCA,0x6B,0x26,0x97,0x0A,0xC0,0x61,0x2E,0x71,0x13,0x86,0x15,0x0F,0x7C,0x80,0xF6,0x51,0x7B,0x17,0x22,0xD0,0xBF,0xEF,0xC9,0x53,0x6C,0x79,0xF7,0x29,0xCB,0xA8,0xD3,0x31,0x54,0x1D,0x25,0xEE,0x5D,0xB7,0xE9,0x11,0x76,0x60,0xD8,0xD1,0xC4,0xAE,0x66,0x5A,0xC5,0x98,0x0F,0x58,0x89,0x5E,0x13,0x74,0x82,0x78,0x9B,0x3D,0xA3,0x0C,0xA7,0xC1,0x19,0x3C,0x85,0x50,0x8D,0x95,0x47,0x60,0x0B,0x30,0x33,0x45,0xBD,0x9C,0x79,0x8F,0xB5,0x0E,0xD5,0xA5,0x86,0xA6,0xD9,0x2D,0x4D,0xD3,0xF6,0x7A,0x4B,0xAC,0xFB,0x92,0xD8,0x8B,0x55,0x59,0x4E,0x48,0x34,0xB7,0x75,0x7D,0x97,0xD1,0x8A,0x17,0xBF,0x05,0xE4,0x62,0xFF,0x68,0xF3,0xE0,0xB6,0xC5,0x6A,0xE1,0xBC,0xB3,0x4A,0xDC,0x26,0x72,0xBE,0x84,0x41,0x7F,0x4C,0xFA,0xB4,0x24,0x9A,0x43,0x3B,0x03,0x01,0x57,0x11,0x20,0x1F,0xE2,0x8E,0xF7,0x31,0x46,0x02,0x00,0xEF,0x94,0xF5,0x1C,0x40,0xDB,0x2A,0xFC,0x65,0x77,0x5F,0x18,0xAD,0x0A,0xDA,0x5C,0xA8,0x27,0xE7,0xCF,0xBB,0x44,0x9E,0x15,0x3A,0xA4,0xAA,0x9F,0xCA,0x06,0xB1,0xEA,0xC8,0x83,0x64,0x07,0xF8,0xA1,0x37,0x42,0x63,0x88,0x8C,0xE6,0x6D,0x4F,0x3F,0x3E,0xBA,0x51,0xC9,0x70,0xD0,0xA2,0x2B,0x1B,0xB9,0x5B,0xDE,0xB2,0xED,0xE3,0xFE,0xAB,0xA0,0x1D,0x2F,0x6E,0xEC,0x28,0xC6,0xF2,0x09,0xDD,0x39,0xFD,0xC0,0x9D,0x49,0x38,0x32,0x80,0xF9,0xCB,0x93,0xD2,0x6F,0x96,0x2C,0xDF,0x67,0xC3,0xD6,0x61,0xA9,0xC2,0x5D,0x22,0x1A,0x5A,0xE9,0xEE,0xB0,0x71,0x16,0xF0,0x7E,0xCC,0x2E,0xD4,0xAF,0x53,0x36,0x25,0x10,0xB8,0xD7,0xCE,0xE8,0x6B,0x54,0x12,0x81,0x7B,0x08,0xF1,0x87,0x7C,0x56,0x90,0x21,0xC7,0x0D,0x29,0x66,0x14,0x76,0x23,0x73,0xF4,0xC4,0x91,0x35,0x6C,0xCD,0x99,0x52,0xE5,0xAE,0x69,0x04,0xEB,0x1E,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0x01,0x0B,0x7A,0xAE,0xF3,0xCE,0x0A,0xEE,0x1F,0xA5,0x5C,0xE1,0xA0,0xF8,0xCA,0xB3,0x93,0x98,0xCD,0xD0,0xDE,0x81,0xED,0x68,0x3A,0xC1,0xF5,0x1B,0xDF,0x5D,0x1C,0x2E,0x89,0x0D,0x0C,0x7C,0x5E,0xD5,0xBF,0xBB,0x8A,0x28,0x18,0x91,0xE3,0x43,0xFA,0x62,0xFB,0xD9,0x82,0x35,0xF9,0xAC,0x99,0x97,0x50,0x71,0x04,0x92,0xCB,0x34,0x57,0xB0,0xFE,0x5F,0x06,0xA2,0xF7,0xC7,0x40,0x10,0x2D,0xD8,0x37,0x5A,0x9D,0xD6,0x61,0xAA,0x65,0x4F,0xB4,0xC2,0x3B,0x48,0xB2,0x21,0x45,0x27,0x55,0x1A,0x3E,0xF4,0x12,0xA3,0x05,0x60,0x9C,0xE7,0x1D,0xFF,0x4D,0xC3,0x67,0x58,0xDB,0xFD,0xE4,0x8B,0x23,0x16,0x6E,0xF1,0x9A,0x52,0xE5,0xF0,0x54,0xEC,0x25,0x42,0x83,0xDD,0xDA,0x69,0x29,0x11,0x46,0x84,0x07,0x7B,0x7D,0x6A,0x66,0xB8,0xD7,0x36,0x8C,0x24,0xB9,0xE2,0xA4,0x4E,0x7E,0x1E,0xEA,0x95,0xB5,0x96,0xE6,0x3D,0xEB,0xA1,0xC8,0x9F,0x78,0x49,0xC5,0xE0,0x38,0x53,0x74,0xA6,0xBE,0x63,0xB6,0x0F,0x86,0xBC,0x4A,0xAF,0x8E,0x76,0x00,0x03,0xB1,0x47,0x20,0x6D,0xBA,0x6B,0x3C,0xAB,0x2A,0xF2,0x94,0x3F,0x90,0x0E,0xA8,0x4B,0x9B,0x6F,0xE9,0x39,0x9E,0x2B,0x6C,0x44,0x09,0x26,0xAD,0x77,0x88,0xFC,0xD4,0x14,0xDC,0x33,0x31,0x75,0x02,0xC4,0xBD,0xD1,0x56,0xCF,0x19,0xE8,0x73,0x2F,0xC6,0xA7,0xA9,0x17,0x87,0xC9,0x7F,0x4C,0x72,0xB7,0x2C,0x13,0x22,0x64,0x32,0x30,0x08,0x70,0x59,0xF6,0x85,0xD3,0xC0,0x5B,0xCC,0x51,0x8D,0x41,0x15,0xEF,0x79,0x80,0x8F,0xD2,0x93,0xF2,0x1B,0x47,0xDC,0x2D,0xFB,0x62,0xE5,0x89,0xF0,0x36,0x41,0x05,0x07,0xE8,0x20,0xE0,0xC8,0xBC,0x43,0x99,0x12,0x3D,0x70,0x58,0x1F,0xAA,0x0D,0xDD,0x5B,0xAF,0xE6,0xBB,0xB4,0x4D,0xDB,0x21,0x75,0xB9,0x65,0xF8,0x6F,0xF4,0xE7,0xB1,0xC2,0x6D,0x44,0x3C,0x04,0x06,0x50,0x16,0x27,0x18,0x83,0x46,0x78,0x4B,0xFD,0xB3,0x23,0x9D,0xD4,0xF1,0x7D,0x4C,0xAB,0xFC,0x95,0xDF,0x09,0xD2,0xA2,0x81,0xA1,0xDE,0x2A,0x4A,0x7A,0x90,0xD6,0x8D,0x10,0xB8,0x02,0xE3,0x8C,0x52,0x5E,0x49,0x4F,0x33,0xB0,0x72,0x7F,0x9C,0x3A,0xA4,0x0B,0xA0,0xC6,0x1E,0x9F,0x08,0x5F,0x8E,0x59,0x14,0x73,0x85,0x37,0x34,0x42,0xBA,0x9B,0x7E,0x88,0xB2,0x3B,0x82,0x57,0x8A,0x92,0x40,0x67,0x0C,0x97,0x26,0xC0,0x0A,0x2E,0x61,0x13,0x71,0x15,0x86,0x7C,0x0F,0xF6,0x80,0x7B,0x51,0x9E,0x55,0xE2,0xA9,0x6E,0x03,0xEC,0x19,0x24,0x74,0xF3,0xC3,0x96,0x32,0x6B,0xCA,0x25,0x1D,0x5D,0xEE,0xE9,0xB7,0x76,0x11,0xD8,0x60,0xC4,0xD1,0x66,0xAE,0xC5,0x5A,0x22,0x17,0xBF,0xD0,0xC9,0xEF,0x6C,0x53,0xF7,0x79,0xCB,0x29,0xD3,0xA8,0x54,0x31,0x1A,0x28,0x69,0xEB,0x2F,0xC1,0xF5,0x0E,0x5C,0xD9,0xB5,0xEA,0xE4,0xF9,0xAC,0xA7,0x87,0xFE,0xCC,0x94,0xD5,0x68,0x91,0x2B,0xDA,0x3E,0xFA,0xC7,0x9A,0x4E,0x3F,0x35,0x84,0x63,0x00,0xFF,0xA6,0x30,0x45,0x64,0xA3,0xAD,0x98,0xCD,0x01,0xB6,0xED,0xCF,0x56,0xCE,0x77,0xD7,0xA5,0x2C,0x1C,0xBE,0x8F,0x8B,0xE1,0x6A,0x48,0x38,0x39,0xBD,0x8F,0xB5,0x9C,0x79,0x45,0xBD,0x30,0x33,0x60,0x0B,0x95,0x47,0x50,0x8D,0x3C,0x85,0xC1,0x19,0x0C,0xA7,0x3D,0xA3,0x78,0x9B,0x74,0x82,0x5E,0x13,0x58,0x89,0x98,0x0F,0x05,0xE4,0x17,0xBF,0xD1,0x8A,0x7D,0x97,0xB7,0x75,0x48,0x34,0x59,0x4E,0x8B,0x55,0x92,0xD8,0xAC,0xFB,0x7A,0x4B,0xD3,0xF6,0x2D,0x4D,0xA6,0xD9,0xA5,0x86,0x0E,0xD5,0x20,0x1F,0x57,0x11,0x03,0x01,0x43,0x3B,0x24,0x9A,0xFA,0xB4,0x7F,0x4C,0x84,0x41,0x72,0xBE,0xDC,0x26,0xB3,0x4A,0xE1,0xBC,0xC5,0x6A,0xE0,0xB6,0x68,0xF3,0x62,0xFF,0x15,0x3A,0x44,0x9E,0xCF,0xBB,0x27,0xE7,0x5C,0xA8,0x0A,0xDA,0x18,0xAD,0x77,0x5F,0xFC,0x65,0xDB,0x2A,0x1C,0x40,0x94,0xF5,0x00,0xEF,0x46,0x02,0xF7,0x31,0xE2,0x8E,0x1B,0xB9,0xA2,0x2B,0x70,0xD0,0x51,0xC9,0x3E,0xBA,0x4F,0x3F,0xE6,0x6D,0x88,0x8C,0x42,0x63,0xA1,0x37,0x07,0xF8,0x83,0x64,0xEA,0xC8,0x06,0xB1,0x9F,0xCA,0xA4,0xAA,0x96,0x2C,0xD2,0x6F,0xCB,0x93,0x80,0xF9,0x38,0x32,0x9D,0x49,0xFD,0xC0,0xDD,0x39,0xF2,0x09,0x28,0xC6,0x6E,0xEC,0x1D,0x2F,0xAB,0xA0,0xE3,0xFE,0xB2,0xED,0x5B,0xDE,0x6B,0x54,0xCE,0xE8,0xB8,0xD7,0x25,0x10,0x53,0x36,0xD4,0xAF,0xCC,0x2E,0xF0,0x7E,0x71,0x16,0xEE,0xB0,0x5A,0xE9,0x22,0x1A,0xC2,0x5D,0x61,0xA9,0xC3,0xD6,0xDF,0x67,0xEB,0x1E,0x69,0x04,0xE5,0xAE,0x99,0x52,0x6C,0xCD,0x91,0x35,0xF4,0xC4,0x23,0x73,0x14,0x76,0x29,0x66,0xC7,0x0D,0x90,0x21,0x7C,0x56,0xF1,0x87,0x7B,0x08,0x12,0x81,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0x68,0xED,0x81,0xDE,0xD0,0xCD,0x98,0x93,0x2E,0x1C,0x5D,0xDF,0x1B,0xF5,0xC1,0x3A,0xEE,0x0A,0xCE,0xF3,0xAE,0x7A,0x0B,0x01,0xB3,0xCA,0xF8,0xA0,0xE1,0x5C,0xA5,0x1F,0x97,0x99,0xAC,0xF9,0x35,0x82,0xD9,0xFB,0xB0,0x57,0x34,0xCB,0x92,0x04,0x71,0x50,0xBB,0xBF,0xD5,0x5E,0x7C,0x0C,0x0D,0x89,0x62,0xFA,0x43,0xE3,0x91,0x18,0x28,0x8A,0x21,0xB2,0x48,0x3B,0xC2,0xB4,0x4F,0x65,0xA3,0x12,0xF4,0x3E,0x1A,0x55,0x27,0x45,0x10,0x40,0xC7,0xF7,0xA2,0x06,0x5F,0xFE,0xAA,0x61,0xD6,0x9D,0x5A,0x37,0xD8,0x2D,0xEC,0x54,0xF0,0xE5,0x52,0x9A,0xF1,0x6E,0x11,0x29,0x69,0xDA,0xDD,0x83,0x42,0x25,0xC3,0x4D,0xFF,0x1D,0xE7,0x9C,0x60,0x05,0x16,0x23,0x8B,0xE4,0xFD,0xDB,0x58,0x67,0x3D,0xE6,0x96,0xB5,0x95,0xEA,0x1E,0x7E,0xE0,0xC5,0x49,0x78,0x9F,0xC8,0xA1,0xEB,0xB8,0x66,0x6A,0x7D,0x7B,0x07,0x84,0x46,0x4E,0xA4,0xE2,0xB9,0x24,0x8C,0x36,0xD7,0xAB,0x3C,0x6B,0xBA,0x6D,0x20,0x47,0xB1,0x4B,0xA8,0x0E,0x90,0x3F,0x94,0xF2,0x2A,0x0F,0xB6,0x63,0xBE,0xA6,0x74,0x53,0x38,0x03,0x00,0x76,0x8E,0xAF,0x4A,0xBC,0x86,0xD1,0xBD,0xC4,0x02,0x75,0x31,0x33,0xDC,0xA7,0xC6,0x2F,0x73,0xE8,0x19,0xCF,0x56,0x44,0x6C,0x2B,0x9E,0x39,0xE9,0x6F,0x9B,0x14,0xD4,0xFC,0x88,0x77,0xAD,0x26,0x09,0x51,0xCC,0x5B,0xC0,0xD3,0x85,0xF6,0x59,0xD2,0x8F,0x80,0x79,0xEF,0x15,0x41,0x8D,0xB7,0x72,0x4C,0x7F,0xC9,0x87,0x17,0xA9,0x70,0x08,0x30,0x32,0x64,0x22,0x13,0x2C,0xC6,0x1E,0x0B,0xA0,0x3A,0xA4,0x7F,0x9C,0x73,0x85,0x59,0x14,0x5F,0x8E,0x9F,0x08,0x88,0xB2,0x9B,0x7E,0x42,0xBA,0x37,0x34,0x67,0x0C,0x92,0x40,0x57,0x8A,0x3B,0x82,0x95,0xDF,0xAB,0xFC,0x7D,0x4C,0xD4,0xF1,0x2A,0x4A,0xA1,0xDE,0xA2,0x81,0x09,0xD2,0x02,0xE3,0x10,0xB8,0xD6,0x8D,0x7A,0x90,0xB0,0x72,0x4F,0x33,0x5E,0x49,0x8C,0x52,0x75,0xB9,0xDB,0x21,0xB4,0x4D,0xE6,0xBB,0xC2,0x6D,0xE7,0xB1,0x6F,0xF4,0x65,0xF8,0x27,0x18,0x50,0x16,0x04,0x06,0x44,0x3C,0x23,0x9D,0xFD,0xB3,0x78,0x4B,0x83,0x46,0xFB,0x62,0xDC,0x2D,0x1B,0x47,0x93,0xF2,0x07,0xE8,0x41,0x05,0xF0,0x36,0xE5,0x89,0x12,0x3D,0x43,0x99,0xC8,0xBC,0x20,0xE0,0x5B,0xAF,0x0D,0xDD,0x1F,0xAA,0x70,0x58,0x45,0x64,0xA6,0x30,0x00,0xFF,0x84,0x63,0xED,0xCF,0x01,0xB6,0x98,0xCD,0xA3,0xAD,0x1C,0xBE,0xA5,0x2C,0x77,0xD7,0x56,0xCE,0x39,0xBD,0x48,0x38,0xE1,0x6A,0x8F,0x8B,0xF5,0x0E,0x2F,0xC1,0x69,0xEB,0x1A,0x28,0xAC,0xA7,0xE4,0xF9,0xB5,0xEA,0x5C,0xD9,0x91,0x2B,0xD5,0x68,0xCC,0x94,0x87,0xFE,0x3F,0x35,0x9A,0x4E,0xFA,0xC7,0xDA,0x3E,0x76,0x11,0xE9,0xB7,0x5D,0xEE,0x25,0x1D,0xC5,0x5A,0x66,0xAE,0xC4,0xD1,0xD8,0x60,0x6C,0x53,0xC9,0xEF,0xBF,0xD0,0x22,0x17,0x54,0x31,0xD3,0xA8,0xCB,0x29,0xF7,0x79,0x13,0x71,0x2E,0x61,0xC0,0x0A,0x97,0x26,0x7B,0x51,0xF6,0x80,0x7C,0x0F,0x15,0x86,0xEC,0x19,0x6E,0x03,0xE2,0xA9,0x9E,0x55,0x6B,0xCA,0x96,0x32,0xF3,0xC3,0x24,0x74,0x15,0x3A,0x44,0x9E,0xCF,0xBB,0x27,0xE7,0x5C,0xA8,0x0A,0xDA,0x18,0xAD,0x77,0x5F,0xFC,0x65,0xDB,0x2A,0x1C,0x40,0x94,0xF5,0x00,0xEF,0x46,0x02,0xF7,0x31,0xE2,0x8E,0x20,0x1F,0x57,0x11,0x03,0x01,0x43,0x3B,0x24,0x9A,0xFA,0xB4,0x7F,0x4C,0x84,0x41,0x72,0xBE,0xDC,0x26,0xB3,0x4A,0xE1,0xBC,0xC5,0x6A,0xE0,0xB6,0x68,0xF3,0x62,0xFF,0x05,0xE4,0x17,0xBF,0xD1,0x8A,0x7D,0x97,0xB7,0x75,0x48,0x34,0x59,0x4E,0x8B,0x55,0x92,0xD8,0xAC,0xFB,0x7A,0x4B,0xD3,0xF6,0x2D,0x4D,0xA6,0xD9,0xA5,0x86,0x0E,0xD5,0x8F,0xB5,0x9C,0x79,0x45,0xBD,0x30,0x33,0x60,0x0B,0x95,0x47,0x50,0x8D,0x3C,0x85,0xC1,0x19,0x0C,0xA7,0x3D,0xA3,0x78,0x9B,0x74,0x82,0x5E,0x13,0x58,0x89,0x98,0x0F,0xEB,0x1E,0x69,0x04,0xE5,0xAE,0x99,0x52,0x6C,0xCD,0x91,0x35,0xF4,0xC4,0x23,0x73,0x14,0x76,0x29,0x66,0xC7,0x0D,0x90,0x21,0x7C,0x56,0xF1,0x87,0x7B,0x08,0x12,0x81,0x6B,0x54,0xCE,0xE8,0xB8,0xD7,0x25,0x10,0x53,0x36,0xD4,0xAF,0xCC,0x2E,0xF0,0x7E,0x71,0x16,0xEE,0xB0,0x5A,0xE9,0x22,0x1A,0xC2,0x5D,0x61,0xA9,0xC3,0xD6,0xDF,0x67,0x96,0x2C,0xD2,0x6F,0xCB,0x93,0x80,0xF9,0x38,0x32,0x9D,0x49,0xFD,0xC0,0xDD,0x39,0xF2,0x09,0x28,0xC6,0x6E,0xEC,0x1D,0x2F,0xAB,0xA0,0xE3,0xFE,0xB2,0xED,0x5B,0xDE,0x1B,0xB9,0xA2,0x2B,0x70,0xD0,0x51,0xC9,0x3E,0xBA,0x4F,0x3F,0xE6,0x6D,0x88,0x8C,0x42,0x63,0xA1,0x37,0x07,0xF8,0x83,0x64,0xEA,0xC8,0x06,0xB1,0x9F,0xCA,0xA4,0xAA,0x8F,0x24,0x42,0x9A,0xFB,0x18,0xBE,0x20,0xDD,0x90,0xF7,0x01,0x1B,0x8C,0xDB,0x0A,0x1F,0xFA,0x0C,0x36,0xB3,0xB0,0xC6,0x3E,0x16,0xC4,0xE3,0x88,0xBF,0x06,0xD3,0x0E,0x2F,0x78,0x11,0x5B,0x50,0x75,0xF9,0xC8,0x25,0x5A,0xAE,0xCE,0x8D,0x56,0x26,0x05,0x94,0x3C,0x86,0x67,0xFE,0x14,0x52,0x09,0xCB,0xB7,0x34,0xF6,0x08,0xD6,0xDA,0xCD,0x5F,0xA5,0xF1,0x3D,0x62,0x3F,0x30,0xC9,0x63,0x35,0x46,0xE9,0xE1,0x7C,0xEB,0x70,0xD4,0x92,0xA3,0x9C,0xC0,0xB8,0x80,0x82,0x79,0x37,0xA7,0x19,0x07,0xC2,0xFC,0xCF,0x58,0xA9,0x7F,0xE6,0x17,0x76,0x9F,0xC3,0xC5,0x81,0x83,0x6C,0x61,0x0D,0x74,0xB2,0xC7,0x1D,0x96,0xB9,0xA4,0x64,0x4C,0x38,0x89,0x59,0xDF,0x2B,0xF4,0xDC,0x9B,0x2E,0x22,0xB4,0xC1,0xE0,0x00,0xE7,0x84,0x7B,0x85,0x32,0x69,0x4B,0x27,0x29,0x1C,0x49,0x21,0xA8,0x98,0x3A,0xD2,0x4A,0xF3,0x53,0xCC,0xBC,0xBD,0x39,0x0B,0x0F,0x65,0xEE,0xAB,0x45,0x71,0x8A,0x9E,0xAC,0xED,0x6F,0x60,0x7D,0x28,0x23,0xD8,0x5D,0x31,0x6E,0x51,0xEC,0x15,0xAF,0x03,0x7A,0x48,0x10,0x1E,0xCA,0xBB,0xB1,0x5E,0xBA,0x7E,0x43,0x6D,0x33,0xF2,0x95,0xA1,0x99,0xD9,0x6A,0xE2,0x2A,0x41,0xDE,0x5C,0xE4,0x40,0x55,0x4D,0x6B,0xE8,0xD7,0xA6,0x93,0x3B,0x54,0x57,0x2C,0xD0,0xB5,0x73,0xFD,0x4F,0xAD,0xAA,0xE5,0x97,0xF5,0x13,0xA2,0x44,0x8E,0x72,0x04,0xFF,0xD5,0x91,0x02,0xF8,0x8B,0xEA,0x87,0x68,0x9D,0x1A,0xD1,0x66,0x2D,0x12,0xB6,0xEF,0x4E,0xA0,0xF0,0x77,0x47,0xBD,0xD1,0x02,0xC4,0x31,0x75,0xDC,0x33,0xC6,0xA7,0x73,0x2F,0x19,0xE8,0x56,0xCF,0x6C,0x44,0x9E,0x2B,0xE9,0x39,0x9B,0x6F,0xD4,0x14,0x88,0xFC,0xAD,0x77,0x09,0x26,0xCC,0x51,0xC0,0x5B,0x85,0xD3,0x59,0xF6,0x8F,0xD2,0x79,0x80,0x15,0xEF,0x8D,0x41,0x72,0xB7,0x7F,0x4C,0x87,0xC9,0xA9,0x17,0x08,0x70,0x32,0x30,0x22,0x64,0x2C,0x13,0xE6,0x3D,0xB5,0x96,0xEA,0x95,0x7E,0x1E,0xC5,0xE0,0x78,0x49,0xC8,0x9F,0xEB,0xA1,0x66,0xB8,0x7D,0x6A,0x07,0x7B,0x46,0x84,0xA4,0x4E,0xB9,0xE2,0x8C,0x24,0xD7,0x36,0x3C,0xAB,0xBA,0x6B,0x20,0x6D,0xB1,0x47,0xA8,0x4B,0x90,0x0E,0x94,0x3F,0x2A,0xF2,0xB6,0x0F,0xBE,0x63,0x74,0xA6,0x38,0x53,0x00,0x03,0x8E,0x76,0x4A,0xAF,0x86,0xBC,0xB2,0x21,0x3B,0x48,0xB4,0xC2,0x65,0x4F,0x12,0xA3,0x3E,0xF4,0x55,0x1A,0x45,0x27,0x40,0x10,0xF7,0xC7,0x06,0xA2,0xFE,0x5F,0x61,0xAA,0x9D,0xD6,0x37,0x5A,0x2D,0xD8,0x54,0xEC,0xE5,0xF0,0x9A,0x52,0x6E,0xF1,0x29,0x11,0xDA,0x69,0x83,0xDD,0x25,0x42,0x4D,0xC3,0x1D,0xFF,0x9C,0xE7,0x05,0x60,0x23,0x16,0xE4,0x8B,0xDB,0xFD,0x67,0x58,0xED,0x68,0xDE,0x81,0xCD,0xD0,0x93,0x98,0x1C,0x2E,0xDF,0x5D,0xF5,0x1B,0x3A,0xC1,0x0A,0xEE,0xF3,0xCE,0x7A,0xAE,0x01,0x0B,0xCA,0xB3,0xA0,0xF8,0x5C,0xE1,0x1F,0xA5,0x99,0x97,0xF9,0xAC,0x82,0x35,0xFB,0xD9,0x57,0xB0,0xCB,0x34,0x04,0x92,0x50,0x71,0xBF,0xBB,0x5E,0xD5,0x0C,0x7C,0x89,0x0D,0xFA,0x62,0xE3,0x43,0x18,0x91,0x8A,0x28,0x54,0x31,0xD3,0xA8,0xCB,0x29,0xF7,0x79,0x6C,0x53,0xC9,0xEF,0xBF,0xD0,0x22,0x17,0xC5,0x5A,0x66,0xAE,0xC4,0xD1,0xD8,0x60,0x76,0x11,0xE9,0xB7,0x5D,0xEE,0x25,0x1D,0x6B,0xCA,0x96,0x32,0xF3,0xC3,0x24,0x74,0xEC,0x19,0x6E,0x03,0xE2,0xA9,0x9E,0x55,0x7B,0x51,0xF6,0x80,0x7C,0x0F,0x15,0x86,0x13,0x71,0x2E,0x61,0xC0,0x0A,0x97,0x26,0x39,0xBD,0x48,0x38,0xE1,0x6A,0x8F,0x8B,0x1C,0xBE,0xA5,0x2C,0x77,0xD7,0x56,0xCE,0xED,0xCF,0x01,0xB6,0x98,0xCD,0xA3,0xAD,0x45,0x64,0xA6,0x30,0x00,0xFF,0x84,0x63,0x3F,0x35,0x9A,0x4E,0xFA,0xC7,0xDA,0x3E,0x91,0x2B,0xD5,0x68,0xCC,0x94,0x87,0xFE,0xAC,0xA7,0xE4,0xF9,0xB5,0xEA,0x5C,0xD9,0xF5,0x0E,0x2F,0xC1,0x69,0xEB,0x1A,0x28,0x23,0x9D,0xFD,0xB3,0x78,0x4B,0x83,0x46,0x27,0x18,0x50,0x16,0x04,0x06,0x44,0x3C,0xC2,0x6D,0xE7,0xB1,0x6F,0xF4,0x65,0xF8,0x75,0xB9,0xDB,0x21,0xB4,0x4D,0xE6,0xBB,0x5B,0xAF,0x0D,0xDD,0x1F,0xAA,0x70,0x58,0x12,0x3D,0x43,0x99,0xC8,0xBC,0x20,0xE0,0x07,0xE8,0x41,0x05,0xF0,0x36,0xE5,0x89,0xFB,0x62,0xDC,0x2D,0x1B,0x47,0x93,0xF2,0x67,0x0C,0x92,0x40,0x57,0x8A,0x3B,0x82,0x88,0xB2,0x9B,0x7E,0x42,0xBA,0x37,0x34,0x73,0x85,0x59,0x14,0x5F,0x8E,0x9F,0x08,0xC6,0x1E,0x0B,0xA0,0x3A,0xA4,0x7F,0x9C,0xB0,0x72,0x4F,0x33,0x5E,0x49,0x8C,0x52,0x02,0xE3,0x10,0xB8,0xD6,0x8D,0x7A,0x90,0x2A,0x4A,0xA1,0xDE,0xA2,0x81,0x09,0xD2,0x95,0xDF,0xAB,0xFC,0x7D,0x4C,0xD4,0xF1,0x58,0x89,0x98,0x0F,0x74,0x82,0x5E,0x13,0x3D,0xA3,0x78,0x9B,0xC1,0x19,0x0C,0xA7,0x50,0x8D,0x3C,0x85,0x60,0x0B,0x95,0x47,0x45,0xBD,0x30,0x33,0x8F,0xB5,0x9C,0x79,0xA5,0x86,0x0E,0xD5,0x2D,0x4D,0xA6,0xD9,0x7A,0x4B,0xD3,0xF6,0x92,0xD8,0xAC,0xFB,0x59,0x4E,0x8B,0x55,0xB7,0x75,0x48,0x34,0xD1,0x8A,0x7D,0x97,0x05,0xE4,0x17,0xBF,0x68,0xF3,0x62,0xFF,0xC5,0x6A,0xE0,0xB6,0xB3,0x4A,0xE1,0xBC,0x72,0xBE,0xDC,0x26,0x7F,0x4C,0x84,0x41,0x24,0x9A,0xFA,0xB4,0x03,0x01,0x43,0x3B,0x20,0x1F,0x57,0x11,0xF7,0x31,0xE2,0x8E,0x00,0xEF,0x46,0x02,0x1C,0x40,0x94,0xF5,0xFC,0x65,0xDB,0x2A,0x18,0xAD,0x77,0x5F,0x5C,0xA8,0x0A,0xDA,0xCF,0xBB,0x27,0xE7,0x15,0x3A,0x44,0x9E,0x9F,0xCA,0xA4,0xAA,0xEA,0xC8,0x06,0xB1,0x07,0xF8,0x83,0x64,0x42,0x63,0xA1,0x37,0xE6,0x6D,0x88,0x8C,0x3E,0xBA,0x4F,0x3F,0x70,0xD0,0x51,0xC9,0x1B,0xB9,0xA2,0x2B,0xB2,0xED,0x5B,0xDE,0xAB,0xA0,0xE3,0xFE,0x6E,0xEC,0x1D,0x2F,0xF2,0x09,0x28,0xC6,0xFD,0xC0,0xDD,0x39,0x38,0x32,0x9D,0x49,0xCB,0x93,0x80,0xF9,0x96,0x2C,0xD2,0x6F,0xC3,0xD6,0xDF,0x67,0xC2,0x5D,0x61,0xA9,0x5A,0xE9,0x22,0x1A,0x71,0x16,0xEE,0xB0,0xCC,0x2E,0xF0,0x7E,0x53,0x36,0xD4,0xAF,0xB8,0xD7,0x25,0x10,0x6B,0x54,0xCE,0xE8,0x7B,0x08,0x12,0x81,0x7C,0x56,0xF1,0x87,0xC7,0x0D,0x90,0x21,0x14,0x76,0x29,0x66,0xF4,0xC4,0x23,0x73,0x6C,0xCD,0x91,0x35,0xE5,0xAE,0x99,0x52,0xEB,0x1E,0x69,0x04,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0x48,0x3B,0x21,0xB2,0x4F,0x65,0xC2,0xB4,0xF4,0x3E,0xA3,0x12,0x27,0x45,0x1A,0x55,0xC7,0xF7,0x10,0x40,0x5F,0xFE,0xA2,0x06,0xD6,0x9D,0xAA,0x61,0xD8,0x2D,0x5A,0x37,0xF0,0xE5,0xEC,0x54,0xF1,0x6E,0x52,0x9A,0x69,0xDA,0x11,0x29,0x42,0x25,0xDD,0x83,0xFF,0x1D,0xC3,0x4D,0x60,0x05,0xE7,0x9C,0x8B,0xE4,0x16,0x23,0x58,0x67,0xFD,0xDB,0x81,0xDE,0x68,0xED,0x98,0x93,0xD0,0xCD,0x5D,0xDF,0x2E,0x1C,0xC1,0x3A,0x1B,0xF5,0xCE,0xF3,0xEE,0x0A,0x0B,0x01,0xAE,0x7A,0xF8,0xA0,0xB3,0xCA,0xA5,0x1F,0xE1,0x5C,0xAC,0xF9,0x97,0x99,0xD9,0xFB,0x35,0x82,0x34,0xCB,0xB0,0x57,0x71,0x50,0x92,0x04,0xD5,0x5E,0xBB,0xBF,0x0D,0x89,0x7C,0x0C,0x43,0xE3,0x62,0xFA,0x28,0x8A,0x91,0x18,0xC4,0x02,0xD1,0xBD,0x33,0xDC,0x75,0x31,0x2F,0x73,0xA7,0xC6,0xCF,0x56,0xE8,0x19,0x2B,0x9E,0x44,0x6C,0x6F,0x9B,0x39,0xE9,0xFC,0x88,0x14,0xD4,0x26,0x09,0x77,0xAD,0x5B,0xC0,0x51,0xCC,0xF6,0x59,0xD3,0x85,0x80,0x79,0xD2,0x8F,0x41,0x8D,0xEF,0x15,0x4C,0x7F,0xB7,0x72,0x17,0xA9,0xC9,0x87,0x30,0x32,0x70,0x08,0x13,0x2C,0x64,0x22,0x96,0xB5,0x3D,0xE6,0x1E,0x7E,0x95,0xEA,0x49,0x78,0xE0,0xC5,0xA1,0xEB,0x9F,0xC8,0x6A,0x7D,0xB8,0x66,0x84,0x46,0x7B,0x07,0xE2,0xB9,0x4E,0xA4,0x36,0xD7,0x24,0x8C,0x6B,0xBA,0xAB,0x3C,0x47,0xB1,0x6D,0x20,0x0E,0x90,0x4B,0xA8,0xF2,0x2A,0x3F,0x94,0x63,0xBE,0x0F,0xB6,0x53,0x38,0xA6,0x74,0x76,0x8E,0x03,0x00,0xBC,0x86,0xAF,0x4A,0x99,0x43,0x3D,0x12,0xE0,0x20,0xBC,0xC8,0xDD,0x0D,0xAF,0x5B,0x58,0x70,0xAA,0x1F,0x2D,0xDC,0x62,0xFB,0xF2,0x93,0x47,0x1B,0x05,0x41,0xE8,0x07,0x89,0xE5,0x36,0xF0,0x16,0x50,0x18,0x27,0x3C,0x44,0x06,0x04,0xB3,0xFD,0x9D,0x23,0x46,0x83,0x4B,0x78,0x21,0xDB,0xB9,0x75,0xBB,0xE6,0x4D,0xB4,0xB1,0xE7,0x6D,0xC2,0xF8,0x65,0xF4,0x6F,0xB8,0x10,0xE3,0x02,0x90,0x7A,0x8D,0xD6,0x33,0x4F,0x72,0xB0,0x52,0x8C,0x49,0x5E,0xFC,0xAB,0xDF,0x95,0xF1,0xD4,0x4C,0x7D,0xDE,0xA1,0x4A,0x2A,0xD2,0x09,0x81,0xA2,0x7E,0x9B,0xB2,0x88,0x34,0x37,0xBA,0x42,0x40,0x92,0x0C,0x67,0x82,0x3B,0x8A,0x57,0xA0,0x0B,0x1E,0xC6,0x9C,0x7F,0xA4,0x3A,0x14,0x59,0x85,0x73,0x08,0x9F,0x8E,0x5F,0x03,0x6E,0x19,0xEC,0x55,0x9E,0xA9,0xE2,0x32,0x96,0xCA,0x6B,0x74,0x24,0xC3,0xF3,0x61,0x2E,0x71,0x13,0x26,0x97,0x0A,0xC0,0x80,0xF6,0x51,0x7B,0x86,0x15,0x0F,0x7C,0xEF,0xC9,0x53,0x6C,0x17,0x22,0xD0,0xBF,0xA8,0xD3,0x31,0x54,0x79,0xF7,0x29,0xCB,0xB7,0xE9,0x11,0x76,0x1D,0x25,0xEE,0x5D,0xAE,0x66,0x5A,0xC5,0x60,0xD8,0xD1,0xC4,0x68,0xD5,0x2B,0x91,0xFE,0x87,0x94,0xCC,0x4E,0x9A,0x35,0x3F,0x3E,0xDA,0xC7,0xFA,0xC1,0x2F,0x0E,0xF5,0x28,0x1A,0xEB,0x69,0xF9,0xE4,0xA7,0xAC,0xD9,0x5C,0xEA,0xB5,0x2C,0xA5,0xBE,0x1C,0xCE,0x56,0xD7,0x77,0x38,0x48,0xBD,0x39,0x8B,0x8F,0x6A,0xE1,0x30,0xA6,0x64,0x45,0x63,0x84,0xFF,0x00,0xB6,0x01,0xCF,0xED,0xAD,0xA3,0xCD,0x98,0xA0,0xAB,0xFE,0xE3,0xED,0xB2,0xDE,0x5B,0x09,0xF2,0xC6,0x28,0xEC,0x6E,0x2F,0x1D,0x32,0x38,0x49,0x9D,0xC0,0xFD,0x39,0xDD,0x2C,0x96,0x6F,0xD2,0x93,0xCB,0xF9,0x80,0xC8,0xEA,0xB1,0x06,0xCA,0x9F,0xAA,0xA4,0x63,0x42,0x37,0xA1,0xF8,0x07,0x64,0x83,0xBA,0x3E,0x3F,0x4F,0x6D,0xE6,0x8C,0x88,0xB9,0x1B,0x2B,0xA2,0xD0,0x70,0xC9,0x51,0x56,0x7C,0x87,0xF1,0x08,0x7B,0x81,0x12,0x76,0x14,0x66,0x29,0x0D,0xC7,0x21,0x90,0xCD,0x6C,0x35,0x91,0xC4,0xF4,0x73,0x23,0x1E,0xEB,0x04,0x69,0xAE,0xE5,0x52,0x99,0x5D,0xC2,0xA9,0x61,0xD6,0xC3,0x67,0xDF,0x16,0x71,0xB0,0xEE,0xE9,0x5A,0x1A,0x22,0x36,0x53,0xAF,0xD4,0x2E,0xCC,0x7E,0xF0,0x54,0x6B,0xE8,0xCE,0xD7,0xB8,0x10,0x25,0x4D,0x2D,0xD9,0xA6,0x86,0xA5,0xD5,0x0E,0xD8,0x92,0xFB,0xAC,0x4B,0x7A,0xF6,0xD3,0x75,0xB7,0x34,0x48,0x4E,0x59,0x55,0x8B,0xE4,0x05,0xBF,0x17,0x8A,0xD1,0x97,0x7D,0x82,0x74,0x13,0x5E,0x89,0x58,0x0F,0x98,0x19,0xC1,0xA7,0x0C,0xA3,0x3D,0x9B,0x78,0x0B,0x60,0x47,0x95,0x8D,0x50,0x85,0x3C,0xB5,0x8F,0x79,0x9C,0xBD,0x45,0x33,0x30,0xEF,0x00,0x02,0x46,0x31,0xF7,0x8E,0xE2,0x65,0xFC,0x2A,0xDB,0x40,0x1C,0xF5,0x94,0xA8,0x5C,0xDA,0x0A,0xAD,0x18,0x5F,0x77,0x3A,0x15,0x9E,0x44,0xBB,0xCF,0xE7,0x27,0x6A,0xC5,0xB6,0xE0,0xF3,0x68,0xFF,0x62,0xBE,0x72,0x26,0xDC,0x4A,0xB3,0xBC,0xE1,0x9A,0x24,0xB4,0xFA,0x4C,0x7F,0x41,0x84,0x1F,0x20,0x11,0x57,0x01,0x03,0x3B,0x43,0x1E,0xCA,0xBB,0xB1,0x5E,0xBA,0x7E,0x43,0x51,0xEC,0x15,0xAF,0x03,0x7A,0x48,0x10,0x60,0x7D,0x28,0x23,0xD8,0x5D,0x31,0x6E,0xAB,0x45,0x71,0x8A,0x9E,0xAC,0xED,0x6F,0xCC,0xBC,0xBD,0x39,0x0B,0x0F,0x65,0xEE,0x21,0xA8,0x98,0x3A,0xD2,0x4A,0xF3,0x53,0x85,0x32,0x69,0x4B,0x27,0x29,0x1C,0x49,0x22,0xB4,0xC1,0xE0,0x00,0xE7,0x84,0x7B,0x12,0xB6,0xEF,0x4E,0xA0,0xF0,0x77,0x47,0xEA,0x87,0x68,0x9D,0x1A,0xD1,0x66,0x2D,0x72,0x04,0xFF,0xD5,0x91,0x02,0xF8,0x8B,0xAA,0xE5,0x97,0xF5,0x13,0xA2,0x44,0x8E,0x57,0x2C,0xD0,0xB5,0x73,0xFD,0x4F,0xAD,0x4D,0x6B,0xE8,0xD7,0xA6,0x93,0x3B,0x54,0xE2,0x2A,0x41,0xDE,0x5C,0xE4,0x40,0x55,0x6D,0x33,0xF2,0x95,0xA1,0x99,0xD9,0x6A,0xCB,0xB7,0x34,0xF6,0x08,0xD6,0xDA,0xCD,0x94,0x3C,0x86,0x67,0xFE,0x14,0x52,0x09,0x25,0x5A,0xAE,0xCE,0x8D,0x56,0x26,0x05,0x2F,0x78,0x11,0x5B,0x50,0x75,0xF9,0xC8,0x16,0xC4,0xE3,0x88,0xBF,0x06,0xD3,0x0E,0x1F,0xFA,0x0C,0x36,0xB3,0xB0,0xC6,0x3E,0xDD,0x90,0xF7,0x01,0x1B,0x8C,0xDB,0x0A,0x8F,0x24,0x42,0x9A,0xFB,0x18,0xBE,0x20,0x89,0x59,0xDF,0x2B,0xF4,0xDC,0x9B,0x2E,0xC7,0x1D,0x96,0xB9,0xA4,0x64,0x4C,0x38,0xC5,0x81,0x83,0x6C,0x61,0x0D,0x74,0xB2,0x58,0xA9,0x7F,0xE6,0x17,0x76,0x9F,0xC3,0x79,0x37,0xA7,0x19,0x07,0xC2,0xFC,0xCF,0xD4,0x92,0xA3,0x9C,0xC0,0xB8,0x80,0x82,0x63,0x35,0x46,0xE9,0xE1,0x7C,0xEB,0x70,0x5F,0xA5,0xF1,0x3D,0x62,0x3F,0x30,0xC9,0x20,0x6D,0xB1,0x47,0x3C,0xAB,0xBA,0x6B,0x94,0x3F,0x2A,0xF2,0xA8,0x4B,0x90,0x0E,0x74,0xA6,0x38,0x53,0xB6,0x0F,0xBE,0x63,0x4A,0xAF,0x86,0xBC,0x00,0x03,0x8E,0x76,0xEA,0x95,0x7E,0x1E,0xE6,0x3D,0xB5,0x96,0xC8,0x9F,0xEB,0xA1,0xC5,0xE0,0x78,0x49,0x07,0x7B,0x46,0x84,0x66,0xB8,0x7D,0x6A,0x8C,0x24,0xD7,0x36,0xA4,0x4E,0xB9,0xE2,0x85,0xD3,0x59,0xF6,0xCC,0x51,0xC0,0x5B,0x15,0xEF,0x8D,0x41,0x8F,0xD2,0x79,0x80,0x87,0xC9,0xA9,0x17,0x72,0xB7,0x7F,0x4C,0x22,0x64,0x2C,0x13,0x08,0x70,0x32,0x30,0x31,0x75,0xDC,0x33,0xBD,0xD1,0x02,0xC4,0x19,0xE8,0x56,0xCF,0xC6,0xA7,0x73,0x2F,0xE9,0x39,0x9B,0x6F,0x6C,0x44,0x9E,0x2B,0xAD,0x77,0x09,0x26,0xD4,0x14,0x88,0xFC,0x82,0x35,0xFB,0xD9,0x99,0x97,0xF9,0xAC,0x04,0x92,0x50,0x71,0x57,0xB0,0xCB,0x34,0x0C,0x7C,0x89,0x0D,0xBF,0xBB,0x5E,0xD5,0x18,0x91,0x8A,0x28,0xFA,0x62,0xE3,0x43,0xCD,0xD0,0x93,0x98,0xED,0x68,0xDE,0x81,0xF5,0x1B,0x3A,0xC1,0x1C,0x2E,0xDF,0x5D,0x7A,0xAE,0x01,0x0B,0x0A,0xEE,0xF3,0xCE,0x5C,0xE1,0x1F,0xA5,0xCA,0xB3,0xA0,0xF8,0x9A,0x52,0x6E,0xF1,0x54,0xEC,0xE5,0xF0,0x83,0xDD,0x25,0x42,0x29,0x11,0xDA,0x69,0x9C,0xE7,0x05,0x60,0x4D,0xC3,0x1D,0xFF,0xDB,0xFD,0x67,0x58,0x23,0x16,0xE4,0x8B,0xB4,0xC2,0x65,0x4F,0xB2,0x21,0x3B,0x48,0x55,0x1A,0x45,0x27,0x12,0xA3,0x3E,0xF4,0x06,0xA2,0xFE,0x5F,0x40,0x10,0xF7,0xC7,0x37,0x5A,0x2D,0xD8,0x61,0xAA,0x9D,0xD6,0x6E,0x03,0xEC,0x19,0x9E,0x55,0xE2,0xA9,0x96,0x32,0x6B,0xCA,0x24,0x74,0xF3,0xC3,0x2E,0x61,0x13,0x71,0x97,0x26,0xC0,0x0A,0xF6,0x80,0x7B,0x51,0x15,0x86,0x7C,0x0F,0xC9,0xEF,0x6C,0x53,0x22,0x17,0xBF,0xD0,0xD3,0xA8,0x54,0x31,0xF7,0x79,0xCB,0x29,0xE9,0xB7,0x76,0x11,0x25,0x1D,0x5D,0xEE,0x66,0xAE,0xC5,0x5A,0xD8,0x60,0xC4,0xD1,0xD5,0x68,0x91,0x2B,0x87,0xFE,0xCC,0x94,0x9A,0x4E,0x3F,0x35,0xDA,0x3E,0xFA,0xC7,0x2F,0xC1,0xF5,0x0E,0x1A,0x28,0x69,0xEB,0xE4,0xF9,0xAC,0xA7,0x5C,0xD9,0xB5,0xEA,0xA5,0x2C,0x1C,0xBE,0x56,0xCE,0x77,0xD7,0x48,0x38,0x39,0xBD,0x8F,0x8B,0xE1,0x6A,0xA6,0x30,0x45,0x64,0x84,0x63,0x00,0xFF,0x01,0xB6,0xED,0xCF,0xA3,0xAD,0x98,0xCD,0x43,0x99,0x12,0x3D,0x20,0xE0,0xC8,0xBC,0x0D,0xDD,0x5B,0xAF,0x70,0x58,0x1F,0xAA,0xDC,0x2D,0xFB,0x62,0x93,0xF2,0x1B,0x47,0x41,0x05,0x07,0xE8,0xE5,0x89,0xF0,0x36,0x50,0x16,0x27,0x18,0x44,0x3C,0x04,0x06,0xFD,0xB3,0x23,0x9D,0x83,0x46,0x78,0x4B,0xDB,0x21,0x75,0xB9,0xE6,0xBB,0xB4,0x4D,0xE7,0xB1,0xC2,0x6D,0x65,0xF8,0x6F,0xF4,0x10,0xB8,0x02,0xE3,0x7A,0x90,0xD6,0x8D,0x4F,0x33,0xB0,0x72,0x8C,0x52,0x5E,0x49,0xAB,0xFC,0x95,0xDF,0xD4,0xF1,0x7D,0x4C,0xA1,0xDE,0x2A,0x4A,0x09,0xD2,0xA2,0x81,0x9B,0x7E,0x88,0xB2,0x37,0x34,0x42,0xBA,0x92,0x40,0x67,0x0C,0x3B,0x82,0x57,0x8A,0x0B,0xA0,0xC6,0x1E,0x7F,0x9C,0x3A,0xA4,0x59,0x14,0x73,0x85,0x9F,0x08,0x5F,0x8E,0xFD,0xC0,0xDD,0x39,0x38,0x32,0x9D,0x49,0xCB,0x93,0x80,0xF9,0x96,0x2C,0xD2,0x6F,0xB2,0xED,0x5B,0xDE,0xAB,0xA0,0xE3,0xFE,0x6E,0xEC,0x1D,0x2F,0xF2,0x09,0x28,0xC6,0xE6,0x6D,0x88,0x8C,0x3E,0xBA,0x4F,0x3F,0x70,0xD0,0x51,0xC9,0x1B,0xB9,0xA2,0x2B,0x9F,0xCA,0xA4,0xAA,0xEA,0xC8,0x06,0xB1,0x07,0xF8,0x83,0x64,0x42,0x63,0xA1,0x37,0xF4,0xC4,0x23,0x73,0x6C,0xCD,0x91,0x35,0xE5,0xAE,0x99,0x52,0xEB,0x1E,0x69,0x04,0x7B,0x08,0x12,0x81,0x7C,0x56,0xF1,0x87,0xC7,0x0D,0x90,0x21,0x14,0x76,0x29,0x66,0xCC,0x2E,0xF0,0x7E,0x53,0x36,0xD4,0xAF,0xB8,0xD7,0x25,0x10,0x6B,0x54,0xCE,0xE8,0xC3,0xD6,0xDF,0x67,0xC2,0x5D,0x61,0xA9,0x5A,0xE9,0x22,0x1A,0x71,0x16,0xEE,0xB0,0x59,0x4E,0x8B,0x55,0xB7,0x75,0x48,0x34,0xD1,0x8A,0x7D,0x97,0x05,0xE4,0x17,0xBF,0xA5,0x86,0x0E,0xD5,0x2D,0x4D,0xA6,0xD9,0x7A,0x4B,0xD3,0xF6,0x92,0xD8,0xAC,0xFB,0x50,0x8D,0x3C,0x85,0x60,0x0B,0x95,0x47,0x45,0xBD,0x30,0x33,0x8F,0xB5,0x9C,0x79,0x58,0x89,0x98,0x0F,0x74,0x82,0x5E,0x13,0x3D,0xA3,0x78,0x9B,0xC1,0x19,0x0C,0xA7,0x18,0xAD,0x77,0x5F,0x5C,0xA8,0x0A,0xDA,0xCF,0xBB,0x27,0xE7,0x15,0x3A,0x44,0x9E,0xF7,0x31,0xE2,0x8E,0x00,0xEF,0x46,0x02,0x1C,0x40,0x94,0xF5,0xFC,0x65,0xDB,0x2A,0x7F,0x4C,0x84,0x41,0x24,0x9A,0xFA,0xB4,0x03,0x01,0x43,0x3B,0x20,0x1F,0x57,0x11,0x68,0xF3,0x62,0xFF,0xC5,0x6A,0xE0,0xB6,0xB3,0x4A,0xE1,0xBC,0x72,0xBE,0xDC,0x26,0x3E,0xC6,0xB0,0xB3,0x36,0x0C,0xFA,0x1F,0x0E,0xD3,0x06,0xBF,0x88,0xE3,0xC4,0x16,0x20,0xBE,0x18,0xFB,0x9A,0x42,0x24,0x8F,0x0A,0xDB,0x8C,0x1B,0x01,0xF7,0x90,0xDD,0x09,0x52,0x14,0xFE,0x67,0x86,0x3C,0x94,0xCD,0xDA,0xD6,0x08,0xF6,0x34,0xB7,0xCB,0xC8,0xF9,0x75,0x50,0x5B,0x11,0x78,0x2F,0x05,0x26,0x56,0x8D,0xCE,0xAE,0x5A,0x25,0x82,0x80,0xB8,0xC0,0x9C,0xA3,0x92,0xD4,0xCF,0xFC,0xC2,0x07,0x19,0xA7,0x37,0x79,0xC9,0x30,0x3F,0x62,0x3D,0xF1,0xA5,0x5F,0x70,0xEB,0x7C,0xE1,0xE9,0x46,0x35,0x63,0x38,0x4C,0x64,0xA4,0xB9,0x96,0x1D,0xC7,0x2E,0x9B,0xDC,0xF4,0x2B,0xDF,0x59,0x89,0xC3,0x9F,0x76,0x17,0xE6,0x7F,0xA9,0x58,0xB2,0x74,0x0D,0x61,0x6C,0x83,0x81,0xC5,0x53,0xF3,0x4A,0xD2,0x3A,0x98,0xA8,0x21,0xEE,0x65,0x0F,0x0B,0x39,0xBD,0xBC,0xCC,0x7B,0x84,0xE7,0x00,0xE0,0xC1,0xB4,0x22,0x49,0x1C,0x29,0x27,0x4B,0x69,0x32,0x85,0x10,0x48,0x7A,0x03,0xAF,0x15,0xEC,0x51,0x43,0x7E,0xBA,0x5E,0xB1,0xBB,0xCA,0x1E,0x6F,0xED,0xAC,0x9E,0x8A,0x71,0x45,0xAB,0x6E,0x31,0x5D,0xD8,0x23,0x28,0x7D,0x60,0x54,0x3B,0x93,0xA6,0xD7,0xE8,0x6B,0x4D,0xAD,0x4F,0xFD,0x73,0xB5,0xD0,0x2C,0x57,0x6A,0xD9,0x99,0xA1,0x95,0xF2,0x33,0x6D,0x55,0x40,0xE4,0x5C,0xDE,0x41,0x2A,0xE2,0x2D,0x66,0xD1,0x1A,0x9D,0x68,0x87,0xEA,0x47,0x77,0xF0,0xA0,0x4E,0xEF,0xB6,0x12,0x8E,0x44,0xA2,0x13,0xF5,0x97,0xE5,0xAA,0x8B,0xF8,0x02,0x91,0xD5,0xFF,0x04,0x72,0xA2,0x06,0x5F,0xFE,0x10,0x40,0xC7,0xF7,0x5A,0x37,0xD8,0x2D,0xAA,0x61,0xD6,0x9D,0xC2,0xB4,0x4F,0x65,0x21,0xB2,0x48,0x3B,0x1A,0x55,0x27,0x45,0xA3,0x12,0xF4,0x3E,0xE7,0x9C,0x60,0x05,0xC3,0x4D,0xFF,0x1D,0xFD,0xDB,0x58,0x67,0x16,0x23,0x8B,0xE4,0x52,0x9A,0xF1,0x6E,0xEC,0x54,0xF0,0xE5,0xDD,0x83,0x42,0x25,0x11,0x29,0x69,0xDA,0xAE,0x7A,0x0B,0x01,0xEE,0x0A,0xCE,0xF3,0xE1,0x5C,0xA5,0x1F,0xB3,0xCA,0xF8,0xA0,0xD0,0xCD,0x98,0x93,0x68,0xED,0x81,0xDE,0x1B,0xF5,0xC1,0x3A,0x2E,0x1C,0x5D,0xDF,0x7C,0x0C,0x0D,0x89,0xBB,0xBF,0xD5,0x5E,0x91,0x18,0x28,0x8A,0x62,0xFA,0x43,0xE3,0x35,0x82,0xD9,0xFB,0x97,0x99,0xAC,0xF9,0x92,0x04,0x71,0x50,0xB0,0x57,0x34,0xCB,0x39,0xE9,0x6F,0x9B,0x44,0x6C,0x2B,0x9E,0x77,0xAD,0x26,0x09,0x14,0xD4,0xFC,0x88,0x75,0x31,0x33,0xDC,0xD1,0xBD,0xC4,0x02,0xE8,0x19,0xCF,0x56,0xA7,0xC6,0x2F,0x73,0xC9,0x87,0x17,0xA9,0xB7,0x72,0x4C,0x7F,0x64,0x22,0x13,0x2C,0x70,0x08,0x30,0x32,0xD3,0x85,0xF6,0x59,0x51,0xCC,0x5B,0xC0,0xEF,0x15,0x41,0x8D,0xD2,0x8F,0x80,0x79,0x7B,0x07,0x84,0x46,0xB8,0x66,0x6A,0x7D,0x24,0x8C,0x36,0xD7,0x4E,0xA4,0xE2,0xB9,0x95,0xEA,0x1E,0x7E,0x3D,0xE6,0x96,0xB5,0x9F,0xC8,0xA1,0xEB,0xE0,0xC5,0x49,0x78,0xA6,0x74,0x53,0x38,0x0F,0xB6,0x63,0xBE,0xAF,0x4A,0xBC,0x86,0x03,0x00,0x76,0x8E,0x6D,0x20,0x47,0xB1,0xAB,0x3C,0x6B,0xBA,0x3F,0x94,0xF2,0x2A,0x4B,0xA8,0x0E,0x90,0xDB,0x21,0x75,0xB9,0xE6,0xBB,0xB4,0x4D,0xE7,0xB1,0xC2,0x6D,0x65,0xF8,0x6F,0xF4,0x50,0x16,0x27,0x18,0x44,0x3C,0x04,0x06,0xFD,0xB3,0x23,0x9D,0x83,0x46,0x78,0x4B,0xDC,0x2D,0xFB,0x62,0x93,0xF2,0x1B,0x47,0x41,0x05,0x07,0xE8,0xE5,0x89,0xF0,0x36,0x43,0x99,0x12,0x3D,0x20,0xE0,0xC8,0xBC,0x0D,0xDD,0x5B,0xAF,0x70,0x58,0x1F,0xAA,0x0B,0xA0,0xC6,0x1E,0x7F,0x9C,0x3A,0xA4,0x59,0x14,0x73,0x85,0x9F,0x08,0x5F,0x8E,0x9B,0x7E,0x88,0xB2,0x37,0x34,0x42,0xBA,0x92,0x40,0x67,0x0C,0x3B,0x82,0x57,0x8A,0xAB,0xFC,0x95,0xDF,0xD4,0xF1,0x7D,0x4C,0xA1,0xDE,0x2A,0x4A,0x09,0xD2,0xA2,0x81,0x10,0xB8,0x02,0xE3,0x7A,0x90,0xD6,0x8D,0x4F,0x33,0xB0,0x72,0x8C,0x52,0x5E,0x49,0xE9,0xB7,0x76,0x11,0x25,0x1D,0x5D,0xEE,0x66,0xAE,0xC5,0x5A,0xD8,0x60,0xC4,0xD1,0xC9,0xEF,0x6C,0x53,0x22,0x17,0xBF,0xD0,0xD3,0xA8,0x54,0x31,0xF7,0x79,0xCB,0x29,0x2E,0x61,0x13,0x71,0x97,0x26,0xC0,0x0A,0xF6,0x80,0x7B,0x51,0x15,0x86,0x7C,0x0F,0x6E,0x03,0xEC,0x19,0x9E,0x55,0xE2,0xA9,0x96,0x32,0x6B,0xCA,0x24,0x74,0xF3,0xC3,0xA6,0x30,0x45,0x64,0x84,0x63,0x00,0xFF,0x01,0xB6,0xED,0xCF,0xA3,0xAD,0x98,0xCD,0xA5,0x2C,0x1C,0xBE,0x56,0xCE,0x77,0xD7,0x48,0x38,0x39,0xBD,0x8F,0x8B,0xE1,0x6A,0x2F,0xC1,0xF5,0x0E,0x1A,0x28,0x69,0xEB,0xE4,0xF9,0xAC,0xA7,0x5C,0xD9,0xB5,0xEA,0xD5,0x68,0x91,0x2B,0x87,0xFE,0xCC,0x94,0x9A,0x4E,0x3F,0x35,0xDA,0x3E,0xFA,0xC7,0xD4,0xAF,0x53,0x36,0xF0,0x7E,0xCC,0x2E,0xCE,0xE8,0x6B,0x54,0x25,0x10,0xB8,0xD7,0x61,0xA9,0xC2,0x5D,0xDF,0x67,0xC3,0xD6,0xEE,0xB0,0x71,0x16,0x22,0x1A,0x5A,0xE9,0x91,0x35,0x6C,0xCD,0x23,0x73,0xF4,0xC4,0x69,0x04,0xEB,0x1E,0x99,0x52,0xE5,0xAE,0xF1,0x87,0x7C,0x56,0x12,0x81,0x7B,0x08,0x29,0x66,0x14,0x76,0x90,0x21,0xC7,0x0D,0x4F,0x3F,0x3E,0xBA,0x88,0x8C,0xE6,0x6D,0xA2,0x2B,0x1B,0xB9,0x51,0xC9,0x70,0xD0,0x06,0xB1,0xEA,0xC8,0xA4,0xAA,0x9F,0xCA,0xA1,0x37,0x42,0x63,0x83,0x64,0x07,0xF8,0x9D,0x49,0x38,0x32,0xDD,0x39,0xFD,0xC0,0xD2,0x6F,0x96,0x2C,0x80,0xF9,0xCB,0x93,0xE3,0xFE,0xAB,0xA0,0x5B,0xDE,0xB2,0xED,0x28,0xC6,0xF2,0x09,0x1D,0x2F,0x6E,0xEC,0xFA,0xB4,0x24,0x9A,0x84,0x41,0x7F,0x4C,0x57,0x11,0x20,0x1F,0x43,0x3B,0x03,0x01,0xE0,0xB6,0xC5,0x6A,0x62,0xFF,0x68,0xF3,0xDC,0x26,0x72,0xBE,0xE1,0xBC,0xB3,0x4A,0x0A,0xDA,0x5C,0xA8,0x77,0x5F,0x18,0xAD,0x44,0x9E,0x15,0x3A,0x27,0xE7,0xCF,0xBB,0x46,0x02,0x00,0xEF,0xE2,0x8E,0xF7,0x31,0xDB,0x2A,0xFC,0x65,0x94,0xF5,0x1C,0x40,0x95,0x47,0x60,0x0B,0x3C,0x85,0x50,0x8D,0x9C,0x79,0x8F,0xB5,0x30,0x33,0x45,0xBD,0x5E,0x13,0x74,0x82,0x98,0x0F,0x58,0x89,0x0C,0xA7,0xC1,0x19,0x78,0x9B,0x3D,0xA3,0x48,0x34,0xB7,0x75,0x8B,0x55,0x59,0x4E,0x17,0xBF,0x05,0xE4,0x7D,0x97,0xD1,0x8A,0xA6,0xD9,0x2D,0x4D,0x0E,0xD5,0xA5,0x86,0xAC,0xFB,0x92,0xD8,0xD3,0xF6,0x7A,0x4B,0x27,0x29,0x1C,0x49,0x85,0x32,0x69,0x4B,0x00,0xE7,0x84,0x7B,0x22,0xB4,0xC1,0xE0,0x0B,0x0F,0x65,0xEE,0xCC,0xBC,0xBD,0x39,0xD2,0x4A,0xF3,0x53,0x21,0xA8,0x98,0x3A,0xD8,0x5D,0x31,0x6E,0x60,0x7D,0x28,0x23,0x9E,0xAC,0xED,0x6F,0xAB,0x45,0x71,0x8A,0x5E,0xBA,0x7E,0x43,0x1E,0xCA,0xBB,0xB1,0x03,0x7A,0x48,0x10,0x51,0xEC,0x15,0xAF,0x5C,0xE4,0x40,0x55,0xE2,0x2A,0x41,0xDE,0xA1,0x99,0xD9,0x6A,0x6D,0x33,0xF2,0x95,0x73,0xFD,0x4F,0xAD,0x57,0x2C,0xD0,0xB5,0xA6,0x93,0x3B,0x54,0x4D,0x6B,0xE8,0xD7,0x91,0x02,0xF8,0x8B,0x72,0x04,0xFF,0xD5,0x13,0xA2,0x44,0x8E,0xAA,0xE5,0x97,0xF5,0xA0,0xF0,0x77,0x47,0x12,0xB6,0xEF,0x4E,0x1A,0xD1,0x66,0x2D,0xEA,0x87,0x68,0x9D,0x1B,0x8C,0xDB,0x0A,0xDD,0x90,0xF7,0x01,0xFB,0x18,0xBE,0x20,0x8F,0x24,0x42,0x9A,0xBF,0x06,0xD3,0x0E,0x16,0xC4,0xE3,0x88,0xB3,0xB0,0xC6,0x3E,0x1F,0xFA,0x0C,0x36,0x8D,0x56,0x26,0x05,0x25,0x5A,0xAE,0xCE,0x50,0x75,0xF9,0xC8,0x2F,0x78,0x11,0x5B,0x08,0xD6,0xDA,0xCD,0xCB,0xB7,0x34,0xF6,0xFE,0x14,0x52,0x09,0x94,0x3C,0x86,0x67,0xE1,0x7C,0xEB,0x70,0x63,0x35,0x46,0xE9,0x62,0x3F,0x30,0xC9,0x5F,0xA5,0xF1,0x3D,0x07,0xC2,0xFC,0xCF,0x79,0x37,0xA7,0x19,0xC0,0xB8,0x80,0x82,0xD4,0x92,0xA3,0x9C,0x61,0x0D,0x74,0xB2,0xC5,0x81,0x83,0x6C,0x17,0x76,0x9F,0xC3,0x58,0xA9,0x7F,0xE6,0xF4,0xDC,0x9B,0x2E,0x89,0x59,0xDF,0x2B,0xA4,0x64,0x4C,0x38,0xC7,0x1D,0x96,0xB9,0x04,0x92,0x50,0x71,0x57,0xB0,0xCB,0x34,0x82,0x35,0xFB,0xD9,0x99,0x97,0xF9,0xAC,0x18,0x91,0x8A,0x28,0xFA,0x62,0xE3,0x43,0x0C,0x7C,0x89,0x0D,0xBF,0xBB,0x5E,0xD5,0xF5,0x1B,0x3A,0xC1,0x1C,0x2E,0xDF,0x5D,0xCD,0xD0,0x93,0x98,0xED,0x68,0xDE,0x81,0x5C,0xE1,0x1F,0xA5,0xCA,0xB3,0xA0,0xF8,0x7A,0xAE,0x01,0x0B,0x0A,0xEE,0xF3,0xCE,0x83,0xDD,0x25,0x42,0x29,0x11,0xDA,0x69,0x9A,0x52,0x6E,0xF1,0x54,0xEC,0xE5,0xF0,0xDB,0xFD,0x67,0x58,0x23,0x16,0xE4,0x8B,0x9C,0xE7,0x05,0x60,0x4D,0xC3,0x1D,0xFF,0x55,0x1A,0x45,0x27,0x12,0xA3,0x3E,0xF4,0xB4,0xC2,0x65,0x4F,0xB2,0x21,0x3B,0x48,0x37,0x5A,0x2D,0xD8,0x61,0xAA,0x9D,0xD6,0x06,0xA2,0xFE,0x5F,0x40,0x10,0xF7,0xC7,0x94,0x3F,0x2A,0xF2,0xA8,0x4B,0x90,0x0E,0x20,0x6D,0xB1,0x47,0x3C,0xAB,0xBA,0x6B,0x4A,0xAF,0x86,0xBC,0x00,0x03,0x8E,0x76,0x74,0xA6,0x38,0x53,0xB6,0x0F,0xBE,0x63,0xC8,0x9F,0xEB,0xA1,0xC5,0xE0,0x78,0x49,0xEA,0x95,0x7E,0x1E,0xE6,0x3D,0xB5,0x96,0x8C,0x24,0xD7,0x36,0xA4,0x4E,0xB9,0xE2,0x07,0x7B,0x46,0x84,0x66,0xB8,0x7D,0x6A,0x15,0xEF,0x8D,0x41,0x8F,0xD2,0x79,0x80,0x85,0xD3,0x59,0xF6,0xCC,0x51,0xC0,0x5B,0x22,0x64,0x2C,0x13,0x08,0x70,0x32,0x30,0x87,0xC9,0xA9,0x17,0x72,0xB7,0x7F,0x4C,0x19,0xE8,0x56,0xCF,0xC6,0xA7,0x73,0x2F,0x31,0x75,0xDC,0x33,0xBD,0xD1,0x02,0xC4,0xAD,0x77,0x09,0x26,0xD4,0x14,0x88,0xFC,0xE9,0x39,0x9B,0x6F,0x6C,0x44,0x9E,0x2B,0x99,0x43,0x3D,0x12,0xE0,0x20,0xBC,0xC8,0xDD,0x0D,0xAF,0x5B,0x58,0x70,0xAA,0x1F,0x2D,0xDC,0x62,0xFB,0xF2,0x93,0x47,0x1B,0x05,0x41,0xE8,0x07,0x89,0xE5,0x36,0xF0,0x16,0x50,0x18,0x27,0x3C,0x44,0x06,0x04,0xB3,0xFD,0x9D,0x23,0x46,0x83,0x4B,0x78,0x21,0xDB,0xB9,0x75,0xBB,0xE6,0x4D,0xB4,0xB1,0xE7,0x6D,0xC2,0xF8,0x65,0xF4,0x6F,0xB8,0x10,0xE3,0x02,0x90,0x7A,0x8D,0xD6,0x33,0x4F,0x72,0xB0,0x52,0x8C,0x49,0x5E,0xFC,0xAB,0xDF,0x95,0xF1,0xD4,0x4C,0x7D,0xDE,0xA1,0x4A,0x2A,0xD2,0x09,0x81,0xA2,0x7E,0x9B,0xB2,0x88,0x34,0x37,0xBA,0x42,0x40,0x92,0x0C,0x67,0x82,0x3B,0x8A,0x57,0xA0,0x0B,0x1E,0xC6,0x9C,0x7F,0xA4,0x3A,0x14,0x59,0x85,0x73,0x08,0x9F,0x8E,0x5F,0x03,0x6E,0x19,0xEC,0x55,0x9E,0xA9,0xE2,0x32,0x96,0xCA,0x6B,0x74,0x24,0xC3,0xF3,0x61,0x2E,0x71,0x13,0x26,0x97,0x0A,0xC0,0x80,0xF6,0x51,0x7B,0x86,0x15,0x0F,0x7C,0xEF,0xC9,0x53,0x6C,0x17,0x22,0xD0,0xBF,0xA8,0xD3,0x31,0x54,0x79,0xF7,0x29,0xCB,0xB7,0xE9,0x11,0x76,0x1D,0x25,0xEE,0x5D,0xAE,0x66,0x5A,0xC5,0x60,0xD8,0xD1,0xC4,0x68,0xD5,0x2B,0x91,0xFE,0x87,0x94,0xCC,0x4E,0x9A,0x35,0x3F,0x3E,0xDA,0xC7,0xFA,0xC1,0x2F,0x0E,0xF5,0x28,0x1A,0xEB,0x69,0xF9,0xE4,0xA7,0xAC,0xD9,0x5C,0xEA,0xB5,0x2C,0xA5,0xBE,0x1C,0xCE,0x56,0xD7,0x77,0x38,0x48,0xBD,0x39,0x8B,0x8F,0x6A,0xE1,0x30,0xA6,0x64,0x45,0x63,0x84,0xFF,0x00,0xB6,0x01,0xCF,0xED,0xAD,0xA3,0xCD,0x98,0xEE,0xB0,0x71,0x16,0x22,0x1A,0x5A,0xE9,0x61,0xA9,0xC2,0x5D,0xDF,0x67,0xC3,0xD6,0xCE,0xE8,0x6B,0x54,0x25,0x10,0xB8,0xD7,0xD4,0xAF,0x53,0x36,0xF0,0x7E,0xCC,0x2E,0x29,0x66,0x14,0x76,0x90,0x21,0xC7,0x0D,0xF1,0x87,0x7C,0x56,0x12,0x81,0x7B,0x08,0x69,0x04,0xEB,0x1E,0x99,0x52,0xE5,0xAE,0x91,0x35,0x6C,0xCD,0x23,0x73,0xF4,0xC4,0xA1,0x37,0x42,0x63,0x83,0x64,0x07,0xF8,0x06,0xB1,0xEA,0xC8,0xA4,0xAA,0x9F,0xCA,0xA2,0x2B,0x1B,0xB9,0x51,0xC9,0x70,0xD0,0x4F,0x3F,0x3E,0xBA,0x88,0x8C,0xE6,0x6D,0x28,0xC6,0xF2,0x09,0x1D,0x2F,0x6E,0xEC,0xE3,0xFE,0xAB,0xA0,0x5B,0xDE,0xB2,0xED,0xD2,0x6F,0x96,0x2C,0x80,0xF9,0xCB,0x93,0x9D,0x49,0x38,0x32,0xDD,0x39,0xFD,0xC0,0xDC,0x26,0x72,0xBE,0xE1,0xBC,0xB3,0x4A,0xE0,0xB6,0xC5,0x6A,0x62,0xFF,0x68,0xF3,0x57,0x11,0x20,0x1F,0x43,0x3B,0x03,0x01,0xFA,0xB4,0x24,0x9A,0x84,0x41,0x7F,0x4C,0xDB,0x2A,0xFC,0x65,0x94,0xF5,0x1C,0x40,0x46,0x02,0x00,0xEF,0xE2,0x8E,0xF7,0x31,0x44,0x9E,0x15,0x3A,0x27,0xE7,0xCF,0xBB,0x0A,0xDA,0x5C,0xA8,0x77,0x5F,0x18,0xAD,0x0C,0xA7,0xC1,0x19,0x78,0x9B,0x3D,0xA3,0x5E,0x13,0x74,0x82,0x98,0x0F,0x58,0x89,0x9C,0x79,0x8F,0xB5,0x30,0x33,0x45,0xBD,0x95,0x47,0x60,0x0B,0x3C,0x85,0x50,0x8D,0xAC,0xFB,0x92,0xD8,0xD3,0xF6,0x7A,0x4B,0xA6,0xD9,0x2D,0x4D,0x0E,0xD5,0xA5,0x86,0x17,0xBF,0x05,0xE4,0x7D,0x97,0xD1,0x8A,0x48,0x34,0xB7,0x75,0x8B,0x55,0x59,0x4E,0x75,0x50,0xC8,0xF9,0x78,0x2F,0x5B,0x11,0x56,0x8D,0x05,0x26,0x5A,0x25,0xCE,0xAE,0x14,0xFE,0x09,0x52,0x3C,0x94,0x67,0x86,0xD6,0x08,0xCD,0xDA,0xB7,0xCB,0xF6,0x34,0x18,0xFB,0x20,0xBE,0x24,0x8F,0x9A,0x42,0x8C,0x1B,0x0A,0xDB,0x90,0xDD,0x01,0xF7,0xB0,0xB3,0x3E,0xC6,0xFA,0x1F,0x36,0x0C,0x06,0xBF,0x0E,0xD3,0xC4,0x16,0x88,0xE3,0x76,0x17,0xC3,0x9F,0xA9,0x58,0xE6,0x7F,0x0D,0x61,0xB2,0x74,0x81,0xC5,0x6C,0x83,0x64,0xA4,0x38,0x4C,0x1D,0xC7,0xB9,0x96,0xDC,0xF4,0x2E,0x9B,0x59,0x89,0x2B,0xDF,0x3F,0x62,0xC9,0x30,0xA5,0x5F,0x3D,0xF1,0x7C,0xE1,0x70,0xEB,0x35,0x63,0xE9,0x46,0xB8,0xC0,0x82,0x80,0x92,0xD4,0x9C,0xA3,0xC2,0x07,0xCF,0xFC,0x37,0x79,0x19,0xA7,0xAC,0x9E,0x6F,0xED,0x45,0xAB,0x8A,0x71,0x5D,0xD8,0x6E,0x31,0x7D,0x60,0x23,0x28,0x7A,0x03,0x10,0x48,0xEC,0x51,0xAF,0x15,0xBA,0x5E,0x43,0x7E,0xCA,0x1E,0xB1,0xBB,0xE7,0x00,0x7B,0x84,0xB4,0x22,0xE0,0xC1,0x29,0x27,0x49,0x1C,0x32,0x85,0x4B,0x69,0x4A,0xD2,0x53,0xF3,0xA8,0x21,0x3A,0x98,0x0F,0x0B,0xEE,0x65,0xBC,0xCC,0x39,0xBD,0xA2,0x13,0x8E,0x44,0xE5,0xAA,0xF5,0x97,0x02,0x91,0x8B,0xF8,0x04,0x72,0xD5,0xFF,0xD1,0x1A,0x2D,0x66,0x87,0xEA,0x9D,0x68,0xF0,0xA0,0x47,0x77,0xB6,0x12,0x4E,0xEF,0x99,0xA1,0x6A,0xD9,0x33,0x6D,0x95,0xF2,0xE4,0x5C,0x55,0x40,0x2A,0xE2,0xDE,0x41,0x93,0xA6,0x54,0x3B,0x6B,0x4D,0xD7,0xE8,0xFD,0x73,0xAD,0x4F,0x2C,0x57,0xB5,0xD0,0x50,0x71,0x04,0x92,0xCB,0x34,0x57,0xB0,0xFB,0xD9,0x82,0x35,0xF9,0xAC,0x99,0x97,0x8A,0x28,0x18,0x91,0xE3,0x43,0xFA,0x62,0x89,0x0D,0x0C,0x7C,0x5E,0xD5,0xBF,0xBB,0x3A,0xC1,0xF5,0x1B,0xDF,0x5D,0x1C,0x2E,0x93,0x98,0xCD,0xD0,0xDE,0x81,0xED,0x68,0x1F,0xA5,0x5C,0xE1,0xA0,0xF8,0xCA,0xB3,0x01,0x0B,0x7A,0xAE,0xF3,0xCE,0x0A,0xEE,0x25,0x42,0x83,0xDD,0xDA,0x69,0x29,0x11,0x6E,0xF1,0x9A,0x52,0xE5,0xF0,0x54,0xEC,0x67,0x58,0xDB,0xFD,0xE4,0x8B,0x23,0x16,0x05,0x60,0x9C,0xE7,0x1D,0xFF,0x4D,0xC3,0x45,0x27,0x55,0x1A,0x3E,0xF4,0x12,0xA3,0x65,0x4F,0xB4,0xC2,0x3B,0x48,0xB2,0x21,0x2D,0xD8,0x37,0x5A,0x9D,0xD6,0x61,0xAA,0xFE,0x5F,0x06,0xA2,0xF7,0xC7,0x40,0x10,0x2A,0xF2,0x94,0x3F,0x90,0x0E,0xA8,0x4B,0xB1,0x47,0x20,0x6D,0xBA,0x6B,0x3C,0xAB,0x86,0xBC,0x4A,0xAF,0x8E,0x76,0x00,0x03,0x38,0x53,0x74,0xA6,0xBE,0x63,0xB6,0x0F,0xEB,0xA1,0xC8,0x9F,0x78,0x49,0xC5,0xE0,0x7E,0x1E,0xEA,0x95,0xB5,0x96,0xE6,0x3D,0xD7,0x36,0x8C,0x24,0xB9,0xE2,0xA4,0x4E,0x46,0x84,0x07,0x7B,0x7D,0x6A,0x66,0xB8,0x8D,0x41,0x15,0xEF,0x79,0x80,0x8F,0xD2,0x59,0xF6,0x85,0xD3,0xC0,0x5B,0xCC,0x51,0x2C,0x13,0x22,0x64,0x32,0x30,0x08,0x70,0xA9,0x17,0x87,0xC9,0x7F,0x4C,0x72,0xB7,0x56,0xCF,0x19,0xE8,0x73,0x2F,0xC6,0xA7,0xDC,0x33,0x31,0x75,0x02,0xC4,0xBD,0xD1,0x09,0x26,0xAD,0x77,0x88,0xFC,0xD4,0x14,0x9B,0x6F,0xE9,0x39,0x9E,0x2B,0x6C,0x44,0x79,0xF7,0x29,0xCB,0xA8,0xD3,0x31,0x54,0x17,0x22,0xD0,0xBF,0xEF,0xC9,0x53,0x6C,0x60,0xD8,0xD1,0xC4,0xAE,0x66,0x5A,0xC5,0x1D,0x25,0xEE,0x5D,0xB7,0xE9,0x11,0x76,0x74,0x24,0xC3,0xF3,0x32,0x96,0xCA,0x6B,0x55,0x9E,0xA9,0xE2,0x03,0x6E,0x19,0xEC,0x86,0x15,0x0F,0x7C,0x80,0xF6,0x51,0x7B,0x26,0x97,0x0A,0xC0,0x61,0x2E,0x71,0x13,0x8B,0x8F,0x6A,0xE1,0x38,0x48,0xBD,0x39,0xCE,0x56,0xD7,0x77,0x2C,0xA5,0xBE,0x1C,0xAD,0xA3,0xCD,0x98,0xB6,0x01,0xCF,0xED,0x63,0x84,0xFF,0x00,0x30,0xA6,0x64,0x45,0x3E,0xDA,0xC7,0xFA,0x4E,0x9A,0x35,0x3F,0xFE,0x87,0x94,0xCC,0x68,0xD5,0x2B,0x91,0xD9,0x5C,0xEA,0xB5,0xF9,0xE4,0xA7,0xAC,0x28,0x1A,0xEB,0x69,0xC1,0x2F,0x0E,0xF5,0x46,0x83,0x4B,0x78,0xB3,0xFD,0x9D,0x23,0x3C,0x44,0x06,0x04,0x16,0x50,0x18,0x27,0xF8,0x65,0xF4,0x6F,0xB1,0xE7,0x6D,0xC2,0xBB,0xE6,0x4D,0xB4,0x21,0xDB,0xB9,0x75,0x58,0x70,0xAA,0x1F,0xDD,0x0D,0xAF,0x5B,0xE0,0x20,0xBC,0xC8,0x99,0x43,0x3D,0x12,0x89,0xE5,0x36,0xF0,0x05,0x41,0xE8,0x07,0xF2,0x93,0x47,0x1B,0x2D,0xDC,0x62,0xFB,0x82,0x3B,0x8A,0x57,0x40,0x92,0x0C,0x67,0x34,0x37,0xBA,0x42,0x7E,0x9B,0xB2,0x88,0x08,0x9F,0x8E,0x5F,0x14,0x59,0x85,0x73,0x9C,0x7F,0xA4,0x3A,0xA0,0x0B,0x1E,0xC6,0x52,0x8C,0x49,0x5E,0x33,0x4F,0x72,0xB0,0x90,0x7A,0x8D,0xD6,0xB8,0x10,0xE3,0x02,0xD2,0x09,0x81,0xA2,0xDE,0xA1,0x4A,0x2A,0xF1,0xD4,0x4C,0x7D,0xFC,0xAB,0xDF,0x95,0xAD,0x18,0x5F,0x77,0xA8,0x5C,0xDA,0x0A,0xBB,0xCF,0xE7,0x27,0x3A,0x15,0x9E,0x44,0x31,0xF7,0x8E,0xE2,0xEF,0x00,0x02,0x46,0x40,0x1C,0xF5,0x94,0x65,0xFC,0x2A,0xDB,0x4C,0x7F,0x41,0x84,0x9A,0x24,0xB4,0xFA,0x01,0x03,0x3B,0x43,0x1F,0x20,0x11,0x57,0xF3,0x68,0xFF,0x62,0x6A,0xC5,0xB6,0xE0,0x4A,0xB3,0xBC,0xE1,0xBE,0x72,0x26,0xDC,0x4E,0x59,0x55,0x8B,0x75,0xB7,0x34,0x48,0x8A,0xD1,0x97,0x7D,0xE4,0x05,0xBF,0x17,0x86,0xA5,0xD5,0x0E,0x4D,0x2D,0xD9,0xA6,0x4B,0x7A,0xF6,0xD3,0xD8,0x92,0xFB,0xAC,0x8D,0x50,0x85,0x3C,0x0B,0x60,0x47,0x95,0xBD,0x45,0x33,0x30,0xB5,0x8F,0x79,0x9C,0x89,0x58,0x0F,0x98,0x82,0x74,0x13,0x5E,0xA3,0x3D,0x9B,0x78,0x19,0xC1,0xA7,0x0C,0xC4,0xF4,0x73,0x23,0xCD,0x6C,0x35,0x91,0xAE,0xE5,0x52,0x99,0x1E,0xEB,0x04,0x69,0x08,0x7B,0x81,0x12,0x56,0x7C,0x87,0xF1,0x0D,0xC7,0x21,0x90,0x76,0x14,0x66,0x29,0x2E,0xCC,0x7E,0xF0,0x36,0x53,0xAF,0xD4,0xD7,0xB8,0x10,0x25,0x54,0x6B,0xE8,0xCE,0xD6,0xC3,0x67,0xDF,0x5D,0xC2,0xA9,0x61,0xE9,0x5A,0x1A,0x22,0x16,0x71,0xB0,0xEE,0xC0,0xFD,0x39,0xDD,0x32,0x38,0x49,0x9D,0x93,0xCB,0xF9,0x80,0x2C,0x96,0x6F,0xD2,0xED,0xB2,0xDE,0x5B,0xA0,0xAB,0xFE,0xE3,0xEC,0x6E,0x2F,0x1D,0x09,0xF2,0xC6,0x28,0x6D,0xE6,0x8C,0x88,0xBA,0x3E,0x3F,0x4F,0xD0,0x70,0xC9,0x51,0xB9,0x1B,0x2B,0xA2,0xCA,0x9F,0xAA,0xA4,0xC8,0xEA,0xB1,0x06,0xF8,0x07,0x64,0x83,0x63,0x42,0x37,0xA1,0x9B,0x2E,0xF4,0xDC,0xDF,0x2B,0x89,0x59,0x4C,0x38,0xA4,0x64,0x96,0xB9,0xC7,0x1D,0x74,0xB2,0x61,0x0D,0x83,0x6C,0xC5,0x81,0x9F,0xC3,0x17,0x76,0x7F,0xE6,0x58,0xA9,0xFC,0xCF,0x07,0xC2,0xA7,0x19,0x79,0x37,0x80,0x82,0xC0,0xB8,0xA3,0x9C,0xD4,0x92,0xEB,0x70,0xE1,0x7C,0x46,0xE9,0x63,0x35,0x30,0xC9,0x62,0x3F,0xF1,0x3D,0x5F,0xA5,0xDA,0xCD,0x08,0xD6,0x34,0xF6,0xCB,0xB7,0x52,0x09,0xFE,0x14,0x86,0x67,0x94,0x3C,0x26,0x05,0x8D,0x56,0xAE,0xCE,0x25,0x5A,0xF9,0xC8,0x50,0x75,0x11,0x5B,0x2F,0x78,0xD3,0x0E,0xBF,0x06,0xE3,0x88,0x16,0xC4,0xC6,0x3E,0xB3,0xB0,0x0C,0x36,0x1F,0xFA,0xDB,0x0A,0x1B,0x8C,0xF7,0x01,0xDD,0x90,0xBE,0x20,0xFB,0x18,0x42,0x9A,0x8F,0x24,0x77,0x47,0xA0,0xF0,0xEF,0x4E,0x12,0xB6,0x66,0x2D,0x1A,0xD1,0x68,0x9D,0xEA,0x87,0xF8,0x8B,0x91,0x02,0xFF,0xD5,0x72,0x04,0x44,0x8E,0x13,0xA2,0x97,0xF5,0xAA,0xE5,0x4F,0xAD,0x73,0xFD,0xD0,0xB5,0x57,0x2C,0x3B,0x54,0xA6,0x93,0xE8,0xD7,0x4D,0x6B,0x40,0x55,0x5C,0xE4,0x41,0xDE,0xE2,0x2A,0xD9,0x6A,0xA1,0x99,0xF2,0x95,0x6D,0x33,0x7E,0x43,0x5E,0xBA,0xBB,0xB1,0x1E,0xCA,0x48,0x10,0x03,0x7A,0x15,0xAF,0x51,0xEC,0x31,0x6E,0xD8,0x5D,0x28,0x23,0x60,0x7D,0xED,0x6F,0x9E,0xAC,0x71,0x8A,0xAB,0x45,0x65,0xEE,0x0B,0x0F,0xBD,0x39,0xCC,0xBC,0xF3,0x53,0xD2,0x4A,0x98,0x3A,0x21,0xA8,0x1C,0x49,0x27,0x29,0x69,0x4B,0x85,0x32,0x84,0x7B,0x00,0xE7,0xC1,0xE0,0x22,0xB4,0xD9,0xFB,0x35,0x82,0xAC,0xF9,0x97,0x99,0x71,0x50,0x92,0x04,0x34,0xCB,0xB0,0x57,0x0D,0x89,0x7C,0x0C,0xD5,0x5E,0xBB,0xBF,0x28,0x8A,0x91,0x18,0x43,0xE3,0x62,0xFA,0x98,0x93,0xD0,0xCD,0x81,0xDE,0x68,0xED,0xC1,0x3A,0x1B,0xF5,0x5D,0xDF,0x2E,0x1C,0x0B,0x01,0xAE,0x7A,0xCE,0xF3,0xEE,0x0A,0xA5,0x1F,0xE1,0x5C,0xF8,0xA0,0xB3,0xCA,0xF1,0x6E,0x52,0x9A,0xF0,0xE5,0xEC,0x54,0x42,0x25,0xDD,0x83,0x69,0xDA,0x11,0x29,0x60,0x05,0xE7,0x9C,0xFF,0x1D,0xC3,0x4D,0x58,0x67,0xFD,0xDB,0x8B,0xE4,0x16,0x23,0x4F,0x65,0xC2,0xB4,0x48,0x3B,0x21,0xB2,0x27,0x45,0x1A,0x55,0xF4,0x3E,0xA3,0x12,0x5F,0xFE,0xA2,0x06,0xC7,0xF7,0x10,0x40,0xD8,0x2D,0x5A,0x37,0xD6,0x9D,0xAA,0x61,0x47,0xB1,0x6D,0x20,0x6B,0xBA,0xAB,0x3C,0xF2,0x2A,0x3F,0x94,0x0E,0x90,0x4B,0xA8,0x53,0x38,0xA6,0x74,0x63,0xBE,0x0F,0xB6,0xBC,0x86,0xAF,0x4A,0x76,0x8E,0x03,0x00,0x1E,0x7E,0x95,0xEA,0x96,0xB5,0x3D,0xE6,0xA1,0xEB,0x9F,0xC8,0x49,0x78,0xE0,0xC5,0x84,0x46,0x7B,0x07,0x6A,0x7D,0xB8,0x66,0x36,0xD7,0x24,0x8C,0xE2,0xB9,0x4E,0xA4,0xF6,0x59,0xD3,0x85,0x5B,0xC0,0x51,0xCC,0x41,0x8D,0xEF,0x15,0x80,0x79,0xD2,0x8F,0x17,0xA9,0xC9,0x87,0x4C,0x7F,0xB7,0x72,0x13,0x2C,0x64,0x22,0x30,0x32,0x70,0x08,0x33,0xDC,0x75,0x31,0xC4,0x02,0xD1,0xBD,0xCF,0x56,0xE8,0x19,0x2F,0x73,0xA7,0xC6,0x6F,0x9B,0x39,0xE9,0x2B,0x9E,0x44,0x6C,0x26,0x09,0x77,0xAD,0xFC,0x88,0x14,0xD4,0x31,0x54,0xA8,0xD3,0x29,0xCB,0x79,0xF7,0x53,0x6C,0xEF,0xC9,0xD0,0xBF,0x17,0x22,0x5A,0xC5,0xAE,0x66,0xD1,0xC4,0x60,0xD8,0x11,0x76,0xB7,0xE9,0xEE,0x5D,0x1D,0x25,0xCA,0x6B,0x32,0x96,0xC3,0xF3,0x74,0x24,0x19,0xEC,0x03,0x6E,0xA9,0xE2,0x55,0x9E,0x51,0x7B,0x80,0xF6,0x0F,0x7C,0x86,0x15,0x71,0x13,0x61,0x2E,0x0A,0xC0,0x26,0x97,0xBD,0x39,0x38,0x48,0x6A,0xE1,0x8B,0x8F,0xBE,0x1C,0x2C,0xA5,0xD7,0x77,0xCE,0x56,0xCF,0xED,0xB6,0x01,0xCD,0x98,0xAD,0xA3,0x64,0x45,0x30,0xA6,0xFF,0x00,0x63,0x84,0x35,0x3F,0x4E,0x9A,0xC7,0xFA,0x3E,0xDA,0x2B,0x91,0x68,0xD5,0x94,0xCC,0xFE,0x87,0xA7,0xAC,0xF9,0xE4,0xEA,0xB5,0xD9,0x5C,0x0E,0xF5,0xC1,0x2F,0xEB,0x69,0x28,0x1A,0x9D,0x23,0xB3,0xFD,0x4B,0x78,0x46,0x83,0x18,0x27,0x16,0x50,0x06,0x04,0x3C,0x44,0x6D,0xC2,0xB1,0xE7,0xF4,0x6F,0xF8,0x65,0xB9,0x75,0x21,0xDB,0x4D,0xB4,0xBB,0xE6,0xAF,0x5B,0xDD,0x0D,0xAA,0x1F,0x58,0x70,0x3D,0x12,0x99,0x43,0xBC,0xC8,0xE0,0x20,0xE8,0x07,0x05,0x41,0x36,0xF0,0x89,0xE5,0x62,0xFB,0x2D,0xDC,0x47,0x1B,0xF2,0x93,0x0C,0x67,0x40,0x92,0x8A,0x57,0x82,0x3B,0xB2,0x88,0x7E,0x9B,0xBA,0x42,0x34,0x37,0x85,0x73,0x14,0x59,0x8E,0x5F,0x08,0x9F,0x1E,0xC6,0xA0,0x0B,0xA4,0x3A,0x9C,0x7F,0x72,0xB0,0x33,0x4F,0x49,0x5E,0x52,0x8C,0xE3,0x02,0xB8,0x10,0x8D,0xD6,0x90,0x7A,0x4A,0x2A,0xDE,0xA1,0x81,0xA2,0xD2,0x09,0xDF,0x95,0xFC,0xAB,0x4C,0x7D,0xF1,0xD4,0x1F,0x20,0x11,0x57,0x01,0x03,0x3B,0x43,0x9A,0x24,0xB4,0xFA,0x4C,0x7F,0x41,0x84,0xBE,0x72,0x26,0xDC,0x4A,0xB3,0xBC,0xE1,0x6A,0xC5,0xB6,0xE0,0xF3,0x68,0xFF,0x62,0x3A,0x15,0x9E,0x44,0xBB,0xCF,0xE7,0x27,0xA8,0x5C,0xDA,0x0A,0xAD,0x18,0x5F,0x77,0x65,0xFC,0x2A,0xDB,0x40,0x1C,0xF5,0x94,0xEF,0x00,0x02,0x46,0x31,0xF7,0x8E,0xE2,0xB5,0x8F,0x79,0x9C,0xBD,0x45,0x33,0x30,0x0B,0x60,0x47,0x95,0x8D,0x50,0x85,0x3C,0x19,0xC1,0xA7,0x0C,0xA3,0x3D,0x9B,0x78,0x82,0x74,0x13,0x5E,0x89,0x58,0x0F,0x98,0xE4,0x05,0xBF,0x17,0x8A,0xD1,0x97,0x7D,0x75,0xB7,0x34,0x48,0x4E,0x59,0x55,0x8B,0xD8,0x92,0xFB,0xAC,0x4B,0x7A,0xF6,0xD3,0x4D,0x2D,0xD9,0xA6,0x86,0xA5,0xD5,0x0E,0x54,0x6B,0xE8,0xCE,0xD7,0xB8,0x10,0x25,0x36,0x53,0xAF,0xD4,0x2E,0xCC,0x7E,0xF0,0x16,0x71,0xB0,0xEE,0xE9,0x5A,0x1A,0x22,0x5D,0xC2,0xA9,0x61,0xD6,0xC3,0x67,0xDF,0x1E,0xEB,0x04,0x69,0xAE,0xE5,0x52,0x99,0xCD,0x6C,0x35,0x91,0xC4,0xF4,0x73,0x23,0x76,0x14,0x66,0x29,0x0D,0xC7,0x21,0x90,0x56,0x7C,0x87,0xF1,0x08,0x7B,0x81,0x12,0xB9,0x1B,0x2B,0xA2,0xD0,0x70,0xC9,0x51,0xBA,0x3E,0x3F,0x4F,0x6D,0xE6,0x8C,0x88,0x63,0x42,0x37,0xA1,0xF8,0x07,0x64,0x83,0xC8,0xEA,0xB1,0x06,0xCA,0x9F,0xAA,0xA4,0x2C,0x96,0x6F,0xD2,0x93,0xCB,0xF9,0x80,0x32,0x38,0x49,0x9D,0xC0,0xFD,0x39,0xDD,0x09,0xF2,0xC6,0x28,0xEC,0x6E,0x2F,0x1D,0xA0,0xAB,0xFE,0xE3,0xED,0xB2,0xDE,0x5B,0x29,0x88,0x76,0x4A,0x1F,0xAC,0xFC,0x9C,0x45,0xC0,0x5D,0xD9,0x73,0xE4,0xD7,0x0F,0xF1,0x18,0x20,0x53,0xC7,0x3C,0xAA,0x85,0x9D,0x50,0x0B,0xC0,0xAB,0x74,0x81,0x16,0xA6,0x97,0xDA,0x78,0x90,0xB3,0x50,0xAE,0xCA,0xDF,0xF1,0xEB,0xFC,0xFB,0x7B,0x3D,0x7E,0x07,0x8C,0x61,0x48,0x23,0x06,0xB7,0x12,0x4F,0xA7,0xF2,0x24,0x6B,0x2D,0x24,0x08,0xB6,0x11,0x2E,0x3E,0x92,0x9B,0xF8,0x64,0xFE,0x3A,0xBD,0x52,0xDA,0xB0,0x6B,0xD0,0x26,0x47,0x37,0xE6,0x02,0xCD,0xE1,0xBC,0x6E,0x6C,0xA4,0x8A,0x4A,0xE6,0x72,0x87,0xA9,0xBD,0x1C,0xB1,0x8D,0x37,0xCA,0xEB,0xE1,0x96,0x8F,0xDD,0xC5,0x1C,0x59,0x5F,0x39,0xEB,0x05,0x69,0x1D,0x61,0xD3,0x33,0x71,0xC0,0x96,0x05,0x55,0x4A,0x40,0x6B,0xF4,0xB8,0x82,0x5D,0xD0,0x32,0x54,0x07,0xBC,0x93,0x11,0x31,0x98,0x19,0xC7,0xB3,0x64,0xEE,0x9B,0x85,0x40,0x64,0x4D,0xDF,0x2C,0xC5,0x08,0xE9,0x08,0x4F,0xDE,0xE4,0xEB,0x14,0xB0,0xD2,0xCF,0x9E,0x66,0x88,0xA3,0x3F,0x23,0xBE,0x87,0xB5,0xF5,0x3C,0x7B,0x42,0xA9,0x0A,0x5F,0xC8,0x7F,0x50,0x33,0x69,0x3A,0x66,0x17,0xE3,0xEC,0x4A,0xCA,0xDF,0xE6,0x7C,0xEE,0x55,0x30,0x26,0x82,0xF4,0x75,0x10,0xA6,0x7E,0xA3,0x92,0x5A,0x89,0xFF,0xA4,0x7E,0x03,0x29,0xFE,0x12,0xA2,0x6C,0xC8,0x36,0x28,0xBA,0xC5,0xD5,0x73,0xD4,0xF3,0xF1,0xF9,0x02,0xA9,0x9D,0x58,0x47,0x9F,0xB9,0xD2,0x91,0x1D,0x45,0x25,0xCD,0x2B,0x61,0xAF,0x1B,0x71,0x0D,0x0E,0x5E,0x47,0x29,0x84,0x88,0xAD,0x70,0xD5,0xE5,0x9B,0x54,0x5F,0x33,0xC1,0x38,0xFE,0x76,0xF7,0x1C,0x74,0xA0,0x75,0xE0,0x83,0xFC,0x43,0xC4,0x09,0x2A,0x19,0xA8,0xA8,0x6F,0x2F,0x8C,0x22,0xB9,0x22,0x6F,0x79,0xD7,0x14,0x4B,0xF3,0x01,0x4E,0x27,0x52,0x44,0x78,0x03,0xD8,0x92,0xFA,0xFF,0x2F,0xCE,0xCC,0xDB,0xA5,0x18,0x96,0xB7,0x04,0x5D,0xA0,0x93,0x8E,0x8B,0x8C,0x4E,0xB2,0x81,0xBA,0x6A,0x38,0x57,0xE0,0x06,0x99,0x12,0xD6,0x22,0x13,0xC4,0x54,0xDE,0xE4,0x98,0x62,0xFA,0x6E,0x4E,0x38,0x96,0xCF,0x0B,0x0E,0xB2,0x45,0xDD,0x03,0x51,0x1E,0xB3,0x35,0x75,0x94,0x65,0x6F,0x19,0x35,0x20,0x59,0x3D,0xBF,0xF6,0xDB,0xC1,0x48,0xAA,0xED,0xE5,0xC2,0x7C,0xB7,0x89,0x63,0x39,0x81,0xAD,0xE9,0xEF,0xEF,0x0C,0x1B,0x2D,0xD9,0x28,0x91,0xFB,0x83,0x44,0x30,0xBE,0xB5,0x60,0xBA,0x68,0x37,0x9C,0x4D,0x34,0x01,0xB8,0xC7,0xE2,0x5B,0xD4,0x66,0xA7,0x6D,0xF0,0xEC,0x71,0x60,0x13,0xB7,0x1F,0x56,0x37,0x3D,0xC9,0x0C,0x5B,0x9C,0x8C,0x3A,0x7F,0x16,0x5A,0xB8,0x83,0xE1,0x06,0x8E,0xA7,0x6B,0xD0,0xD4,0xCB,0xCA,0x95,0xE2,0xEF,0x40,0x43,0xCE,0x32,0x7C,0x49,0xF8,0x16,0xF6,0x9F,0xA2,0x7A,0x57,0xDA,0x94,0x5E,0xDD,0x0C,0x16,0xA2,0x2A,0x50,0x20,0x86,0xA0,0x86,0x7A,0xEA,0x01,0xC3,0x4C,0xCE,0x8B,0x15,0x41,0x2D,0xD0,0x7B,0x77,0x09,0x5A,0xAD,0x2D,0x65,0xFB,0xE8,0x1B,0x41,0x71,0x3E,0x99,0xBD,0x86,0x62,0xAF,0x99,0x0C,0xB4,0xF5,0xF5,0xAD,0xF1,0xC3,0xD1,0x27,0x27,0x1E,0x47,0x0F,0x2B,0x28,0x63,0x85,0xFD,0x72,0x0F,0x24,0xB8,0x44,0x2B,0xAE,0x6E,0xC6,0xD7,0x59,0x32,0xF0,0xF3,0xD3,0xE4,0xAA,0x9F,0x72,0xA1,0x9C,0xBB,0xF8,0x77,0x91,0x58,0xA3,0x19,0xA7,0x7C,0x29,0xCF,0xFD,0x10,0x88,0x8A,0xCB,0x34,0x02,0x5C,0x49,0xC8,0xF5,0x00,0x7F,0xEC,0x7F,0xD6,0x25,0x80,0xDE,0x93,0x13,0xA4,0x54,0x45,0x3F,0x79,0x68,0x4F,0x09,0x5D,0xE2,0x99,0x53,0x31,0x43,0xDC,0x65,0x15,0xC9,0x0A,0xE7,0xE9,0x3E,0x56,0xD1,0xCD,0xB4,0x80,0x8B,0xA1,0x15,0xC5,0xBD,0x85,0x9F,0x13,0xB0,0x66,0xC4,0x7D,0x86,0x42,0x4E,0xAB,0xDC,0x2E,0xEF,0xEE,0xEA,0x0A,0x65,0x38,0x68,0xF6,0x92,0x64,0x5E,0xD2,0x18,0xB2,0x04,0xBE,0xB9,0xF7,0x32,0x9A,0x33,0x21,0x5C,0x3B,0xC1,0xE3,0x6A,0x1F,0x4B,0x35,0x30,0x73,0xEA,0x70,0x06,0x57,0x60,0xA6,0x84,0xAB,0x97,0xFA,0xB2,0x8F,0x1D,0x2C,0xE8,0xE3,0xBC,0x69,0xDE,0xC7,0x36,0xBF,0xD3,0x24,0x6D,0xD1,0xE5,0x00,0xE7,0x07,0xBF,0x6C,0x46,0x42,0x89,0x48,0xCC,0x94,0x0B,0xB4,0x3B,0xC8,0x3D,0x90,0xB1,0x1E,0x67,0xFC,0x10,0x5B,0x51,0xD8,0x9A,0x8D,0x7D,0x05,0xA6,0x87,0x4B,0x21,0x2C,0x51,0x11,0x4D,0x8D,0x14,0x27,0x69,0x07,0xC2,0xA5,0x95,0xF0,0x9E,0x93,0xB1,0x7A,0x48,0xC9,0xDD,0xDB,0x0D,0xFF,0xF9,0x51,0xDB,0xF2,0x1A,0x0A,0xB5,0xC4,0x3E,0x80,0x63,0x9E,0x52,0x21,0x26,0xA8,0x76,0xAB,0xF0,0x2A,0x8A,0x5C,0xAC,0x1C,0xAE,0xD6,0x7A,0x46,0xC2,0x77,0x3F,0x70,0xE6,0xFD,0xE9,0x9A,0xBF,0xAC,0x84,0xAC,0x9B,0x26,0x52,0xF6,0xF7,0x87,0x17,0xC0,0xD3,0x0D,0xC1,0x42,0x2F,0xFA,0x9D,0x74,0x0B,0x70,0x4B,0x2E,0x67,0xD1,0x0E,0x18,0x43,0x5B,0xD8,0x15,0xA0,0x00,0xB6,0x23,0x84,0x8A,0x60,0x79,0xE8,0x2B,0x25,0x4F,0xCC,0xA1,0xF3,0xCD,0x30,0x56,0xAF,0xFB,0x14,0xDC,0x79,0xA1,0x78,0x7D,0x3C,0x97,0x5C,0xF7,0xEA,0xBB,0x81,0xCB,0xE0,0x8D,0xA5,0x41,0x36,0xD7,0xC9,0xE0,0x73,0xE1,0xED,0x6A,0xA5,0x63,0x11,0x9D,0xF9,0x55,0x35,0x17,0x2F,0x0F,0x59,0xB6,0x6A,0x39,0x7D,0x3C,0xBC,0x34,0x9E,0x67,0xD2,0x02,0xBA,0xED,0x04,0x58,0xD6,0x4C,0x41,0x6E,0xF2,0xC6,0x97,0xEC,0x0E,0x31,0xCB,0xDA,0x2A,0xBB,0x1D,0x80,0x46,0x1A,0x58,0xB6,0x62,0x90,0x8E,0xD8,0xC3,0x62,0x4C,0xEE,0xE7,0xE8,0x9A,0xB4,0x8B,0x49,0xDF,0x82,0xAF,0xC3,0x09,0x00,0x53,0x34,0x55,0x36,0x77,0xBE,0x83,0x6C,0x1B,0x1F,0xC6,0x5A,0x3F,0x95,0x10,0x57,0xDC,0xCE,0x7E,0x61,0xF8,0x44,0xA8,0x3B,0x94,0xE5,0xED,0x0D,0xB0,0x6F,0x3B,0x8F,0x4C,0x98,0x67,0xB9,0x68,0x12,0xB1,0xE3,0x04,0xB3,0xF4,0xD5,0x20,0x39,0x22,0xF9,0xFD,0x05,0x28,0xCF,0xD9,0x8F,0xFE,0x95,0xB5,0x2E,0xBB,0xA3,0x91,0xA4,0x6D,0x21,0x6D,0x53,0x31,0x17,0x49,0xD9,0xE7,0x4D,0x25,0x78,0xA2,0x7B,0x01,0xF2,0x74,0x76,0xE2,0xA9,0x1A,0x40,0xC6,0x23,0xCC,0x1A,0xAA,0x82,0x89,0x2C,0x8E,0x08,0x5F,0xAE,0x72,0xFF,0x03,0x98,0x56,0x75,0xD5,0xC2,0x3A,0xD4,0x90,0xF4,0x1E,0x5E,0x46,0x1A,0x5A,0x64,0x0F,0xAC,0x2F,0xE1,0x5C,0x49,0xB0,0x51,0xA9,0xFF,0xC5,0xD4,0xFA,0xBC,0xB1,0x0E,0x7C,0x0A,0xC4,0x8B,0x2F,0xEF,0x5B,0x3B,0xDA,0x59,0x2E,0xBE,0x89,0x69,0xB3,0xB0,0xE9,0xDF,0xC6,0x35,0xBA,0x3A,0x59,0x85,0x4F,0x8C,0x2C,0x00,0x1C,0xCF,0x58,0xDA,0x9A,0x79,0x2D,0x5F,0xC9,0x9C,0xB2,0xEF,0x3C,0x2A,0xC7,0x6A,0x6F,0xFC,0xB7,0xF3,0xFC,0x4A,0xC2,0x76,0xAF,0xAF,0x5D,0xC6,0x5A,0x19,0x28,0x43,0x09,0x5A,0x5C,0x99,0x8F,0xEC,0x29,0x1C,0xDC,0x09,0xB6,0xAC,0x29,0xBF,0xC3,0x29,0x7A,0x8F,0x5E,0x27,0x1A,0x39,0x2B,0xA2,0x49,0xDC,0xB4,0x12,0xBC,0x6A,0xC1,0x97,0xEF,0x29,0xB5,0x4D,0x69,0x9F,0xC0,0xC8,0x3A,0x7A,0x5F,0x78,0xCF,0xCC,0x2A,0xFD,0x9C,0xE9,0xBF,0x75,0xD6,0x5F,0xCA,0xF0,0x85,0xBA,0x55,0x40,0x70,0x0C,0x20,0xC5,0x23,0x4F,0x54,0x1F,0xA5,0xF9,0x21,0x9A,0xF6,0x1C,0xBE,0x2A,0x03,0xAA,0xCB,0xAF,0x50,0x9A,0x56,0xA1,0x30,0x2C,0x23,0x24,0x63,0xC9,0xBC,0x94,0x96,0x7F,0xC9,0x11,0xC5,0x3C,0xBD,0xCB,0x43,0x8A,0xC8,0x4E,0x10,0x6F,0x57,0xFE,0xE5,0xD9,0x22,0x7B,0xB6,0x0F,0x52,0xE2,0x25,0xB9,0x27,0x67,0x76,0x5C,0xB8,0xD7,0x83,0xEA,0xCD,0x52,0xD0,0xA9,0xB9,0x88,0x56,0x1F,0xCC,0x0D,0x05,0xFA,0x53,0xBD,0xF0,0x4C,0x26,0x38,0xA3,0x7C,0xBB,0x36,0xC3,0xCA,0xCE,0xB3,0x90,0x2F,0x51,0x03,0x65,0x99,0x24,0x86,0x36,0xDA,0x50,0x5C,0xB0,0x6C,0x25,0xD9,0xE3,0x89,0xBA,0x69,0x16,0x3F,0xCF,0xEC,0x45,0xC3,0xAF,0x46,0x82,0x75,0xDA,0xC3,0xD1,0x90,0x45,0x73,0x24,0x26,0x30,0xF6,0x77,0x65,0x44,0x2C,0xF1,0xD3,0x31,0xA9,0xA2,0x36,0xAE,0x19,0x57,0x80,0xDB,0x9C,0x04,0xB0,0x46,0x92,0x64,0x06,0x33,0x17,0x37,0xE3,0xAC,0xA7,0xC2,0x55,0xD9,0x22,0x91,0x16,0xAD,0xF8,0x17,0xA0,0xD8,0x7D,0x44,0x45,0x47,0xCD,0xB1,0xF3,0x32,0x48,0xE2,0x25,0x42,0xD1,0x71,0x93,0x37,0x54,0x22,0x76,0xA8,0xE4,0xD7,0xC0,0xDD,0x61,0x84,0x83,0xA9,0xBB,0x02,0x35,0xDC,0x3E,0x51,0xD0,0x43,0x8E,0xA4,0x66,0x36,0x0B,0xF7,0x56,0xAB,0x05,0x97,0xE0,0xDE,0x80,0xC4,0x05,0x41,0x30,0x31,0xB3,0x34,0xB5,0x62,0xF0,0x40,0x6F,0xE4,0x46,0x35,0xEA,0xB7,0xA3,0xAA,0x5A,0x42,0x15,0xDF,0xDF,0x11,0x30,0x4A,0x57,0x5B,0x86,0x3F,0xD2,0x08,0x63,0xA0,0x62,0xFD,0xD5,0xD5,0xE7,0xAE,0x96,0xA1,0x3D,0x28,0x20,0xD4,0xB8,0x7B,0xC5,0x4B,0x08,0x8E,0x73,0x3E,0x8D,0xDD,0x43,0xA3,0x83,0xBD,0xF5,0xD6,0x06,0xEE,0x10,0x49,0xB6,0x1B,0xA6,0x3C,0x33,0x48,0xE5,0x48,0xE9,0xCE,0x53,0x3D,0x6C,0x9D,0xB6,0xA2,0xDC,0x68,0x00,0xD7,0x59,0x3B,0xD6,0xA7,0xC0,0xA8,0x60,0xD2,0x45,0xFB,0x85,0x4D,0xF5,0x0E,0x33,0x38,0x70,0x5D,0x70,0x4C,0xAA,0xDB,0xC6,0x39,0x2F,0x88,0x23,0xA6,0x9F,0x7D,0x95,0xD3,0x1A,0x2E,0xA5,0x4E,0x14,0x4E,0x13,0x3B,0x91,0x1D,0xF6,0xA4,0x21,0xE8,0x40,0xD1,0xA4,0xBB,0x03,0xA5,0x7E,0x3D,0xB5,0xD0,0xFB,0x6E,0x50,0x4F,0x4B,0x9B,0xE6,0x3A,0xCE,0xC8,0x97,0x8F,0x20,0x2A,0x21,0xFA,0xA5,0x79,0xC4,0x65,0x15,0x8C,0x72,0x10,0x90,0xDF,0x31,0x64,0x4A,0x59,0x87,0x11,0xCF,0x0A,0x62,0x8E,0x7F,0xFF,0xD4,0xFB,0xFA,0xAC,0xE4,0x66,0xF4,0xCC,0x52,0x13,0x71,0x9F,0xB7,0x8C,0xC1,0x6A,0x01,0xF9,0x44,0x39,0x42,0x8D,0x9E,0xBF,0xF4,0xF8,0x1B,0xEC,0x11,0x67,0xAB,0x19,0xA7,0x12,0x2E,0x4A,0x71,0x62,0xB7,0xD9,0xC7,0x17,0x32,0x8A,0x22,0x88,0x82,0x7F,0x94,0xFD,0x07,0x2C,0xD7,0x89,0xDD,0xAA,0x61,0xFC,0x58,0xF9,0x84,0x63,0xE8,0x0C,0x32,0x16,0x6D,0x5F,0x02,0x8B,0x63,0x3F,0xB4,0xFE,0xE6,0x6C,0x51,0x61,0x56,0x99,0xE7,0x14,0xD3,0xCA,0xA4,0x60,0x09,0x4C,0x12,0x15,0x8C,0x1F,0xF7,0x8A,0x3C,0xEA,0x41,0xFF,0xB9,0xB9,0x64,0x6A,0x31,0xF3,0xD2,0x1F,0xB4,0xA0,0x37,0x80,0x04,0x55,0x81,0xF5,0x81,0x06,0xC2,0x81,0x5B,0x80,0x74,0xF4,0xDE,0xD3,0x91,0x6B,0x6E,0x26,0x27,0x1E,0xEB,0x75,0x17,0x83,0xE5,0x15,0xA1,0xF6,0x60,0x46,0x44,0x69,0xD0,0xB3,0xF2,0x1C,0x55,0xE0,0xB1,0x68,0x8F,0x66,0x07,0x1D,0x0A,0x35,0xE2,0x82,0xBA,0xC0,0x54,0xF7,0x3F,0x93,0x82,0x87,0xA6,0x00,0x34,0xF2,0x23,0x53,0xD1,0x6D,0x93,0xA6,0x67,0x18,0x16,0xF5,0x24,0x6C,0xCC,0x73,0x92,0x19,0x49,0x20,0x77,0x86,0xF9,0xD5,0xC1,0xF3,0x7C,0x86,0xF1,0x6E,0x72,0xE6,0x47,0x1B,0xF7,0xB5,0xA2,0x84,0x47,0x40,0x14,0xF1,0xC2,0x13,0x57,0x85,0x18,0x95,0xE1,0xF0,0x9D,0xC6,0x04,0x6F,0x2D,0x33,0xB2,0x1A,0xA8,0x60,0x4E,0x7A,0x02,0xA7,0xF8,0x0F,0x87,0xF4,0x1D,0x90,0x37,0x01,0xAB,0xE5,0xB2,0x52,0xE8,0x91,0x68,0xD4,0x5E,0xE4,0xED,0x87,0xBB,0x7B,0x5D,0x72,0x0D,0x0E,0xD8,0x21,0x3D,0x93,0xD6,0x41,0x8B,0xE6,0x53,0x12,0x6E,0x79,0xE3,0xE7,0xD8,0x0C,0x66,0xB4,0x9B,0x78,0xBC,0x32,0x2D,0x0D,0x39,0x61,0xC8,0x92,0x89,0x94,0x7E,0xE7,0x0C,0xC7,0xA8,0x97,0x95,0x54,0x1E,0xE2,0x10,0x07,0xFB,0x7D,0xA0,0xF2,0x4D,0x08,0x25,0xA1,0x0E,0x7C,0xFF,0x27,0xB8,0x09,0x7A,0x74,0x5D,0x96,0xCA,0x81,0xEB,0xE3,0x4F,0xD2,0xDB,0x7E,0x41,0xB2,0x6D,0x0B,0xC4,0xE1,0x88,0x94,0x74,0x14,0x3E,0xE1,0xF1,0x47,0x7D,0x95,0x2B,0xC1,0xCB,0xE0,0xAE,0x92,0x2E,0x7F,0x1E,0x67,0x98,0x0A,0x9B,0x34,0xBD,0x9F,0x13,0x7E,0x0B,0xEA,0x96,0x2D,0xEE,0x75,0x26,0xD8,0x58,0x00,0xA3,0x8B,0x1B,0x74,0x79,0x0D,0xAD,0x01,0xFC,0x5E,0x48,0x9E,0x4C,0xAB,0xFE,0xEB,0xC9,0xF8,0xCE,0x76,0xC7,0x98,0x78,0x03,0x42,0xCB,0x9D,0x9C,0xF2,0x3E,0x2B,0xE9,0x77,0x6D,0x68,0x9D,0xAD,0xEB,0xDE,0xE8,0x28,0xB8,0x3B,0x77,0x98,0x4D,0x8D,0x02,0x1D,0x1E,0x5B,0x72,0x84,0x8D,0xED,0x07,0x01,0xDE,0x08,0x98,0xB1,0x2B,0xBE,0xED,0x34,0x78,0xFD,0x99,0xEE,0xFE,0x4B,0xEC,0x6B,0xAD,0xAE,0x73,0xDB,0x58,0x18,0x06,0x5E,0x0B,0x28,0x9B,0x50,0x6B,0x9E,0xEE,0xD5,0x38,0x7B,0x71,0x65,0xCD,0xCD,0x04,0xE0,0x9E,0x8E,0x70,0x3A,0x18,0x38,0x05,0xBF,0x4B,0xDD,0x9A,0x0F,0xBE,0x6B,0xEF,0x8A,0xED,0x85,0x20,0x2A,0xF4,0xCC,0x52,0x14,0x42,0x17,0xC4,0x56,0xA7,0x5E,0xB6,0x68,0x11,0x9E,0xD7,0xD2,0x52,0xD7,0xA5,0xEC,0xE4,0x0C,0x33,0xAE,0x01,0x45,0x41,0x90,0xB7,0xB3,0xF1,0xE5,0x87,0xFA,0x83,0xDB,0x31,0x21,0x15,0x99,0xD4,0x68,0x67,0xA7,0x62,0xA8,0x06,0x1D,0x21,0xE1,0x74,0x23,0x97,0x3A,0xE2,0x61,0x72,0x73,0x90,0x5F,0xC4,0xE9,0xBD,0x8B,0x12,0xA0,0xCF,0xB5,0xA4,0x7B,0x59,0xF7,0x41,0x32,0x2B,0xC9,0xF7,0xF2,0x4A,0x73,0xB4,0xBB,0x38,0x4D,0x02,0x60,0xAE,0x0F,0xE7,0x29,0xDC,0x31,0x51,0xDF,0x6C,0x44,0x61,0x96,0x1E,0x7A,0xD7,0x4D,0x88,0x38,0x32,0x04,0xFA,0x06,0x84,0xC4,0x9B,0xBC,0xC7,0x8D,0xE9,0x82,0x71,0x56,0x7F,0xC0,0x94,0x1F,0x0D,0xFE,0x22,0x5D,0x25,0x57,0x07,0x14,0x57,0x69,0xB1,0xCF,0xC1,0x2B,0x54,0x86,0xB3,0x15,0xE2,0x46,0xD2,0xAF,0xA1,0x0F,0xA0,0x91,0x17,0xD4,0x36,0xD3,0xF2,0x9D,0x44,0xED,0x44,0x6B,0xF4,0x98,0x74,0x22,0x86,0xA6,0xC2,0xF9,0x10,0xE4,0x27,0xB0,0x62,0xDA,0x91,0x70,0x03,0x60,0xD2,0x39,0x71,0x5E,0x64,0xE2,0xE7,0x1C,0x81,0xAB,0x95,0x22,0x37,0x31,0xB8,0xF6,0xE1,0x78,0xCA,0xC8,0x57,0xA3,0x5C,0x8A,0xB2,0xEA,0x2E,0xB4,0x04,0x2A,0x4F,0x0E,0x47,0x63,0x3D,0x30,0xF1,0xB8,0xAB,0x72,0x14,0xF1,0xD9,0x4C,0xA2,0x07,0x69,0x39,0x92,0x4E,0x1B,0x07,0x24,0x95,0x8D,0x45,0xC1,0xDC,0xFF,0x7B,0x77,0x1C,0x9E,0xC1,0x34,0x55,0xEC,0xFF,0x82,0x8E,0x7A,0xBD,0x67,0xC7,0x08,0x83,0xD1,0x0A,0x2A,0xD0,0x2D,0x43,0x58,0xEE,0x9B,0x98,0xCE,0xAC,0x7E,0xD1,0xBC,0x92,0xC8,0x11,0xDD,0x28,0x8B,0x58,0xAF,0x16,0x3D,0x83,0x39,0x54,0xD8,0xCA,0x4B,0x6A,0x6E,0x3C,0xFB,0x1F,0x5E,0x75,0x89,0x21,0xE8,0xAE,0x1F,0x63,0x0D,0xE7,0x6D,0x5D,0xBB,0x27,0x0C,0xE7,0xF8,0x6E,0x7E,0xD9,0x4E,0xB5,0xE8,0x9B,0xAB,0xFC,0x9A,0xA5,0x1D,0x66,0xB7,0x71,0xCB,0x2F,0xC5,0x4F,0x7D,0xF4,0x53,0x0D,0x98,0xBD,0x21,0x33,0x2E,0x7D,0x40,0x89,0x6D,0x34,0x32,0xB7,0xDB,0xEF,0xA4,0xF5,0x3E,0xA6,0xD6,0xCB,0x88,0x50,0x66,0xBE,0xB8,0x19,0x14,0x80,0x0E,0xC2,0x82,0xC2,0xEB,0x8B,0xF0,0xFC,0x5D,0x4B,0x91,0x46,0x1E,0x02,0xE3,0x78,0xA8,0xD9,0x75,0x3A,0x4D,0x90,0x07,0x04,0xFB,0xD2,0x2F,0xAD,0xDE,0x9B,0x5D,0x93,0x68,0x40,0xCB,0xD1,0x8D,0x09,0xB9,0xEF,0x3B,0xC9,0xD8,0x55,0x78,0x80,0xAA,0x6B,0xCE,0x5B,0x3C,0x29,0x2B,0x12,0x4E,0x17,0x9D,0xE4,0xFE,0x62,0xAD,0xAD,0x8C,0x5C,0x1B,0x76,0x1A,0x1E,0xFE,0x3F,0x68,0x20,0x48,0xFF,0x09,0x9A,0x0B,0xB6,0x7B,0xA4,0xBD,0x6D,0xED,0xE6,0x58,0x24,0x9F,0xD8,0xEE,0xBE,0xB2,0x0C,0x38,0xF7,0xC0,0x32,0x8E,0x2C,0x56,0x70,0x6B,0x65,0x24,0x4E,0xDD,0xA5,0x45,0xF4,0x9E,0xEC,0x37,0xCA,0x28,0x37,0xA1,0x88,0xCD,0x7E,0xD3,0xB6,0x7B,0x88,0x63,0xC3,0x4B,0xC1,0x11,0xFD,0xFD,0x1A,0x87,0xBF,0x18,0x53,0xF5,0x81,0xAE,0x93,0x94,0x3B,0xED,0xDA,0xE6,0x05,0x5B,0x01,0x70,0x47,0xBE,0x48,0x02,0x79,0x08,0xA4,0x34,0xE1,0x79,0xED,0x46,0xDF,0xCF,0x36,0xD0,0x9D,0x2A,0x7F,0xA2,0xA3,0x9C,0xBF,0xC3,0x19,0xDF,0xF6,0xB1,0x27,0x69,0x2D,0x27,0x65,0x8C,0x64,0x55,0x5B,0x3A,0x92,0xE5,0x2E,0x0A,0xDB,0x97,0x10,0xBC,0x00,0x01,0x52,0x59,0x49,0x73,0x6C,0xEF,0x89,0x12,0xD6,0xAC,0xC0,0x60,0xE8,0x1A,0x1B,0xF6,0xAA,0xFF,0x52,0x84,0x94,0x49,0xC8,0xA9,0x40,0x9F,0x81,0xDB,0x7E,0x29,0x5A,0x4D,0x3C,0xCC,0x13,0x3F,0x02,0x7A,0xD3,0x5E,0xB8,0x39,0x9A,0x2C,0x86,0x8F,0x41,0xBA,0xC4,0x6A,0x08,0xC8,0xFA,0xDC,0xFE,0x78,0x8F,0xEC,0xB7,0x0A,0xB1,0x5A,0x6C,0x9C,0xF3,0xBF,0x25,0xEE,0xCD,0x09,0xE5,0x8F,0x77,0x4A,0xAC,0xFD,0x49,0xFC,0x77,0x6B,0x0B,0x19,0x3E,0x19,0x35,0xAF,0x7C,0x31,0x9C,0x8A,0x35,0x43,0xA2,0x3C,0xEE,0xD5,0xE0,0xD9,0xA7,0xA7,0xDE,0x6F,0x67,0xC6,0x64,0x2C,0x2E,0xB4,0x5A,0x9A,0xF5,0x22,0x18,0x7F,0xBC,0x50,0x26,0xC9,0x4A,0xE0,0x53,0xF9,0x03,0x92,0x6D,0x4F,0xD8,0x04,0x2F,0xAA,0x91,0x76,0x11,0x1C,0x51,0x17,0xAB,0x5F,0x18,0x65,0x95,0xE9,0xC3,0xF3,0xD7,0x0C,0x8A,0x81,0xE9,0xBA,0x10,0xAC,0x3D,0x6C,0x59,0xDE,0x03,0xDA,0x82,0x48,0x41,0x3F,0xCB,0x3A,0x7F,0x89,0x0B,0x5B,0xC5,0xCA,0x42,0x29,0xFB,0x7C,0x99,0xBF,0xB9,0x99,0xD0,0xCD,0x87,0x2F,0x26,0x7D,0xF2,0x1F,0x6F,0x0F,0xCC,0xA9,0xB4,0x99,0x8E,0x4C,0xFD,0xEB,0xB0,0xFA,0x3D,0x8A,0x0A,0xB9,0x74,0xF8,0x34,0x0F,0xAF,0x6E,0x76,0xEA,0xE6,0x1C,0x48,0x5C,0x2B,0x3E,0x1B,0xA0,0x62,0x4C,0x25,0x16,0xB9,0xDA,0x67,0xF3,0xF0,0xA8,0x59,0x45,0x30,0xC9,0xE3,0x06,0x79,0xBB,0xDD,0xB0,0xA2,0x2D,0x9F,0x55,0xEB,0x5F,0xA1,0xE3,0x1D,0xEF,0xD4,0xD3,0x54,0x9D,0xEA,0x65,0x8F,0x0B,0xA8,0x80,0xC6,0x79,0x96,0x36,0x06,0x18,0x2C,0x75,0x4F,0x6A,0x12,0xC3,0x94,0xFC,0x50,0x26,0xDD,0x8E,0x6E,0x90,0x47,0xA3,0xBA,0x46,0x0E,0xD1,0x84,0xF0,0xD5,0x47,0xC6,0x15,0x9C,0x35,0xF8,0xA3,0x5C,0x54,0x42,0xE0,0x15,0x26,0x7C,0x56,0xCE,0xB0,0x3E,0xB3,0x87,0xC2,0x00,0x05,0x71,0x72,0x75,0x35,0x38,0x00,0x4B,0x83,0xE3,0x96,0x09,0x66,0xAA,0xE4,0x37,0xD0,0x6A,0x85,0x8D,0x93,0x23,0xF7,0xB3,0x25,0xF8,0x61,0xF1,0xC0,0xB1,0x13,0xCF,0x76,0xF3,0x3B,0x66,0x53,0xBA,0x49,0x58,0xE5,0x61,0xDF,0x1A,0x00,0x28,0xAD,0x24,0xB6,0xE8,0xCC,0x9E,0xF5,0xA1,0xBE,0xA0,0x43,0x7A,0x28,0xE2,0xA6,0x33,0x5A,0xDC,0x10,0xC5,0xEA,0xA9,0x20,0x8C,0x98,0x97,0x96,0x57,0x0E,0xD5,0x73,0x1E,0x7C,0xEB,0xC5,0xDE,0x1D,0x51,0x86,0x97,0x6F,0x6F,0x30,0x4C,0xF9,0x2D,0xD5,0x05,0x8B,0x13,0x63,0x9F,0xA6,0xC7,0xB5,0xD6,0xD4,0xF9,0x03,0x0D,0x42,0xBB,0xE6,0x44,0x30,0x85,0x50,0x84,0x51,0x3F,0x13,0xCD,0x23,0x01,0xA5,0x16,0xB5,0x43,0x40,0x5F,0xC7,0x7D,0xF6,0xA9,0x77,0x08,0xC6,0xE0,0x05,0x36,0x70,0x3B,0x93,0x74,0x95,0x72,0xE1,0x4A,0x23,0xB2,0x80,0xF0,0x60,0xFB,0xF2,0xCE,0xD6,0x20,0x64,0x8C,0x33,0x69,0x16,0xB2,0x85,0xA3,0x2C,0x91,0x08,0x62,0xF6,0x63,0x9A,0x1E,0xA7,0x4A,0x13,0xDF,0x7D,0xB8,0x81,0xE6,0x05,0x18,0x3E,0x27,0xDF,0xEA,0xAC,0x5B,0x8E,0xC3,0x25,0x9A,0x54,0x31,0xB7,0x29,0x7E,0xBC,0x64,0xE8,0xA4,0x4E,0xF6,0x94,0xF5,0x67,0x7F,0x55,0x2F,0x95,0xED,0x6C,0x57,0x35,0x52,0xAD,0x8D,0xC7,0xC0,0xD1,0xDC,0xEE,0x49,0x10,0x06,0x1C,0xDB,0x88,0x88,0xCB,0xD0,0x49,0x52,0x39,0x42,0x35,0x03,0x10,0xCB,0xF4,0xD9,0xE2,0x59,0xCD,0xA1,0x42,0xE6,0x0C,0x7B,0xB0,0x74,0x70,0x2A,0x99,0xFD,0xB1,0xF0,0x6B,0x6F,0x02,0xDA,0xE6,0xBC,0xC3,0x00,0x14,0x2E,0xBF,0x51,0x3D,0xA7,0x7E,0x8B,0xCF,0x35,0x47,0xF3,0x6F,0x8A,0x86,0x29,0x9D,0x18,0xFA,0x78,0xB4,0x91,0x3B,0xA2,0x46,0x03,0xF5,0x5B,0x25,0x87,0x34,0x81,0xD7,0x15,0x48,0xD0,0xFE,0x9C,0x89,0x0A,0x0C,0x0E,0xB0,0x72,0xAC,0xB1,0x71,0xA8,0x5E,0x23,0x0D,0xF9,0x77,0xAA,0xCC,0x23,0x85,0x38,0x7F,0x09,0x08,0xEB,0xBE,0xD3,0xFA,0x79,0xC2,0x82,0xD3,0xF0,0x03,0x58,0x21,0x62,0x3A,0x20,0x81,0xDD,0xFB,0xFA,0x73,0x4F,0x87,0xAB,0x5A,0xC6,0x46,0x71,0xA8,0x54,0xDE,0xFF,0x7F,0x5F,0x1F,0x25,0x8D,0xCD,0x63,0x74,0xA4,0x44,0xA2,0xAE,0x56,0xD6,0x9B,0xD6,0xF6,0x69,0x5A,0x0C,0x04,0xFB,0x26,0x5D,0x2D,0x72,0xE7,0x87,0xDF,0xE0,0x54,0xAD,0x52,0x33,0x95,0x77,0xA0,0xA1,0xE9,0x26,0x89,0x28,0x28,0xFC,0x7B,0xBA,0x11,0x84,0xDB,0x05,0xD0,0x5E,0x29,0x97,0xAC,0x0F,0x00,0x1E,0x6D,0xD5,0xF2,0x8C,0x0F,0xC2,0xC6,0x29,0xCE,0x18,0x34,0xBB,0xB2,0x49,0x1D,0x32,0x73,0x93,0xEF,0xA0,0x4A,0xEB,0x4F,0x1F,0x8B,0x31,0xBD,0x8D,0xF7,0x60,0x94,0x04,0x36,0xBA,0x66,0x96,0x85,0x90,0xEB,0x45,0x44,0x4A,0x19,0xD7,0x38,0x1B,0x30,0x5E,0xF9,0xC1,0xC2,0xCC,0xC0,0xB9,0x62,0x73,0x01,0x63,0x90,0xE1,0x7D,0x32,0xB9,0x68,0xBC,0xE8,0x4B,0xFA,0x24,0x66,0x9C,0xF1,0xE5,0xBC,0x6E,0x63,0x99,0xED,0x47,0xEA,0x58,0x37,0xB5,0x78,0x61,0x4F,0x15,0xC7,0xA0,0x95,0xE7,0x55,0xDC,0xC4,0xCE,0xDC,0x1D,0x1E,0x3C,0x4E,0xAE,0x34,0xB1,0x9D,0x6F,0xEE,0x43,0x0F,0x13,0xBF,0x6A,0x86,0xD2,0x65,0x98,0x14,0xEB,0x1D,0x38,0xAB,0x2A,0xC7,0xCA,0x39,0x56,0x96,0xE3,0xB0,0x97,0x4C,0x11,0x22,0x59,0xB5,0x72,0xA6,0x98,0x6F,0x80,0x34,0xE4,0x3E,0xA9,0xBD,0x25,0xE4,0x5B,0x2F,0x1C,0x9C,0xFB,0x90,0xDD,0x46,0x09,0x02,0xA1,0x17,0x20,0x8B,0x60,0xCD,0xD2,0x19,0xD3,0xE7,0x5F,0xCA,0x12,0x3D,0xAD,0x58,0x6E,0x6C,0x84,0xD1,0xAF,0xB6,0x76,0x43,0x96,0xCE,0xD6,0xFC,0x57,0x14,0x24,0x6E,0x2B,0x45,0x0D,0xE7,0xEA,0x9F,0xFF,0x75,0x72,0x11,0x28,0x7E,0xB3,0xCB,0xDA,0xEC,0xCF,0x9A,0xF3,0x65,0x0E,0x40,0x01,0xF7,0x37,0x38,0xA1,0x48,0xF6,0xE2,0x53,0xDA,0x8A,0xB3,0x7A,0x53,0x4B,0x69,0x88,0xC1,0xF8,0x43,0x05,0x12,0x39,0x99,0xF7,0x80,0x45,0xC8,0xDE,0x09,0x84,0x12,0x2C,0x9B,0xBD,0x6A,0x8C,0x24,0x7C,0xB0,0x7E,0xB6,0x00,0xE1,0x57,0x3F,0xC1,0x3B,0xA5,0xAD,0xC4,0xCF,0x3F,0x4A,0x05,0x15,0xCD,0xD8,0x79,0x44,0xE4,0x51,0xB8,0x9E,0x16,0xC3,0x81,0xE6,0xB6,0x7C,0x40,0x3C,0x44,0xEE,0x3C,0x6D,0x6D,0x67,0xFD,0xB7,0x9F,0xF5,0x4E,0x9D,0x12,0x26,0x8F,0x47,0xE0,0xB4,0xF3,0x16,0xC9,0x3D,0x32,0xCC,0x3B,0xAF,0x0B,0xB4,0x9B,0x10,0xCA,0x6E,0x69,0x82,0xB6,0x3F,0x40,0x0B,0x77,0xE5,0xB2,0x99,0xEF,0x6B,0x65,0x92,0x2E,0xB1,0x97,0x00,0x52,0xE0,0xBE,0x89,0x93,0x3A,0x4C,0x1B,0xAA,0x42,0xEC,0xA4,0x6B,0x98,0x1E,0x36,0x17,0xC9,0x37,0xBF,0xD6,0x13,0xC5,0x2D,0x65,0x39,0x48,0xFE,0xA4,0xE3,0xBA,0x6C,0xD8,0xB2,0x93,0xE5,0x19,0x68,0x61,0x77,0x20,0x10,0xC1,0xC8,0xE1,0xCA,0x33,0x5A,0x9D,0x9B,0x1A,0xD3,0x5C,0x41,0xE8,0x41,0x92,0xB8,0x8B,0xC5,0x53,0x62,0x79,0x57,0x2F,0x33,0x50,0xDE,0xEE,0xE9,0xA2,0x4C,0xD7,0x91,0x02,0xF3,0x16,0x4B,0xF0,0x61,0x6A,0x1A,0xD9,0xE8,0xAB,0xC0,0x2B,0x7A,0x18,0xEA,0xA6,0xA9,0xD9,0x30,0x54,0x3B,0xA5,0x61,0x7D,0xB2,0x64,0xBB,0x8F,0x20,0x5D,0xC3,0x2F,0x9F,0x9C,0x19,0xDD,0x0D,0xE0,0x48,0xF4,0x84,0x21,0x92,0x06,0x16,0xB9,0x1C,0xD1,0x1D,0x78,0xC6,0x23,0x8F,0x04,0x97,0x0A,0x06,0xC5,0x4D,0xF8,0x94,0xFC,0x35,0x58,0x2B,0x3D,0xEF,0xAA,0xB9,0x41,0xBE,0x83,0x30,0x80,0x64,0x71,0xA2,0x33,0x4E,0xFC,0x71,0xF2,0x94,0x0E,0xE3,0x8E,0xC5,0x27,0x6A,0x4F,0x1F,0xD5,0xF8,0x76,0x67,0x75,0x47,0xB7,0xBD,0x87,0xD5,0xCB,0xEC,0xAE,0x5C,0x0A,0x36,0x5C,0xCE,0x68,0x21,0x68,0x6B,0xA9,0xFB,0x9A,0xF9,0xD5,0xAA,0xB3,0x70,0x14,0x70,0x41,0xE2,0x2D,0x08,0xE1,0x5D,0xEC,0xD2,0x13,0xCF,0x90,0x83,0x3A,0x46,0x51,0x59,0xC8,0xD4,0xE2,0x73,0x45,0x07,0x23,0xA9,0xB7,0x95,0x5F,0xF8,0x9E,0x1C,0x9E,0x22,0x6C,0x8E,0xA7,0x5A,0xCC,0x31,0x66,0x80,0x3E,0xA3,0x1A,0xD1,0x17,0x2A,0xDB,0x0B,0xE5,0xB8,0x43,0x85,0x32,0xB3,0x82,0x5F,0xC0,0x21,0xFE,0x0E,0xE9,0xA8,0x3F,0xD4,0x1B,0x3A,0x06,0xAC,0xBB,0x85,0xC7,0x76,0x49,0x17,0xBB,0x27,0x60,0x9E,0x7A,0xFD,0x92,0x0C,0xC9,0xD7,0x1F,0xDF,0x08,0x0D,0xED,0x4D,0x74,0x5C,0xC4,0xC4,0xB5,0x86,0x36,0x56,0x8C,0xFE,0x96,0xE9,0x4D,0x24,0x64,0x7B,0x31,0x75,0x4D,0xF2,0xF0,0xAF,0xBF,0x60,0x3E,0x56,0xDC,0xE4,0xFF,0x8C,0x2E,0x76,0x83,0xDD,0x07,0xFF,0x42,0x07,0xF5,0x6D,0x7B,0x7F,0x55,0xD2,0xBA,0xA5,0xA7,0x40,0xC6,0xF4,0x8E,0xC9,0x07,0x2E,0x7C,0x5B,0xB4,0x04,0xF1,0x88,0x75,0xDE,0x03,0x1A,0x09,0x8F,0x2A,0x93,0xC8,0x55,0xD8,0x01,0xF1,0x2D,0x78,0xBE,0x30,0xF7,0x8A,0x2C,0x4C,0xA6,0xA3,0xA5,0x8D,0x7C,0x51,0x37,0x15,0xF2,0x86,0x3C,0xD4,0x28,0x74,0xAE,0xA8,0x79,0x5D,0x27,0x69,0xA3,0xAF,0xB5,0x50,0xDB,0x0F,0x0A,0x91,0x01,0xFD,0x98,0xED,0x50,0xD4,0x11,0x2C,0x8A,0x26,0x83,0x9F,0xA0,0xAB,0x50,0x5E,0x7A,0x59,0xC2,0x22,0x2B,0x70,0x4B,0xE3,0xF1,0x82,0xD9,0xDA,0x89,0x22,0x66,0x1B,0x53,0xD0,0xF4,0x67,0x02,0xF9,0x7D,0xA6,0xD8,0x0B,0xEF,0x63,0xA3,0x3F,0x4B,0x1A,0xC0,0xBE,0x91,0xDB,0xF3,0x29,0x9C,0x5E,0x8E,0x2C,0xD8,0x71,0x10,0xC4,0x98,0xAE,0x5F,0xE1,0x78,0x0A,0x66,0xB5,0x73,0x86,0xC2,0x6B,0x84,0xBF,0xC7,0x85,0x87,0x95,0xD3,0x9B,0xA4,0xC5,0x00,0xC8,0xFB,0x30,0x7E,0x1E,0xA0,0x38,0x65,0xCE,0x37,0xA2,0x58,0x3A,0xF6,0x7B,0xE6,0x77,0xEC,0x32,0x64,0xEE,0x41,0x13,0xF9,0x0E,0x55,0x3B,0x93,0x60,0x81,0xD1,0x0F,0xCA,0xDD,0xB0,0xCC,0xF1,0x33,0x72,0x57,0xCF,0xFE,0x7F,0x28,0x5C,0x16,0x51,0x8A,0x02,0x21,0x5D,0x22,0xC9,0xA9,0xB7,0xB4,0x39,0xC1,0xFD,0x18,0x31,0x0B,0x01,0xB8,0x09,0xD4,0xC3,0x11,0x8F,0xE4,0x1F,0xFC,0x27,0xB9,0x23,0x88,0x9D,0x45,0x8B,0x1C,0x0D,0xDC,0x97,0xDA,0x06,0xF0,0xD6,0x1D,0x2A,0x61,0x80,0xED,0x9A,0x6F,0xF7,0xA7,0x40,0x70,0xB1,0x15,0x49,0xE8,0xA5,0x14,0x89,0x43,0xE2,0xAD,0xF2,0x90,0x05,0x96,0x8C,0xFF,0x03,0x75,0xD2,0xF8,0x94,0xA1,0x53,0x3C,0x6C,0x4A,0xD0,0xEF,0xFA,0x74,0xAA,0x48,0x2B,0x50,0xB2,0xD7,0x9E,0xA6,0x6D,0xDE,0x34,0x6A,0x92,0xF5,0xE3,0x5B,0x52,0x47,0x2D,0xE5,0xD9,0x46,0x7D,0x04,0x17,0x4F,0xEB,0x56,0xA8,0x12,0xBD,0x59,0x44,0x79,0xCD,0x19,0xB6,0xBC,0xAB,0x99,0x68,0xEA,0x42,0xAC,0x8D,0x76,0x5A,0xDF,0x69,0x36,0x7A,0x67,0x24,0x2F,0x4D,0xD5,0x54,0xF4,0xAF,0x26,0x3D,0x9F,0x08,0x0C,0xE9,0x62,0xBB,0xCB,0x3E,0xBA,0xE0,0x07,0x7C,0x83,0xB3,0x25,0xE7,0xC6,0x2E,0x20,0x4E,0x1B,0x35,0x82,0x4C,0x6E,0x40,0xA1,0x1B,0xB3,0x2E,0x75,0x33,0xD9,0xD1,0x13,0x90,0xEC,0xEA,0xFD,0xF1,0x2F,0x7C,0x36,0x5F,0x08,0xEF,0xDE,0x52,0x77,0xE9,0x89,0x7D,0x02,0x22,0x01,0x71,0xAA,0x11,0x2B,0xDD,0x38,0x19,0xE1,0x97,0x94,0xAF,0xC4,0xE3,0x31,0x29,0xF4,0x21,0x98,0xBD,0x65,0x03,0xA8,0x07,0x99,0x3F,0xDC,0x26,0xD0,0xB7,0xFA,0x2D,0xFC,0xAB,0x3C,0x9E,0xB1,0x3A,0xE0,0x1F,0x6B,0x43,0x83,0x0C,0xF8,0x7E,0xAE,0x09,0xBC,0xFB,0xD3,0xC1,0x58,0x8E,0x7F,0xE4,0xB8,0x51,0x30,0x4B,0xA4,0xA6,0xE2,0x95,0x53,0x2A,0x46,0xBB,0x84,0xB5,0xF3,0xA5,0xA7,0x9F,0xE7,0x3E,0x80,0x10,0x5E,0xE8,0xDB,0xE5,0x20,0x1A,0xD6,0x82,0x78,0xEE,0x17,0x18,0x45,0xCE,0x61,0x12,0x44,0x57,0xCC,0x5B,0xC6,0x88,0x32,0xCB,0x76,0x37,0x6F,0x5D,0x24,0x96,0x9C,0xED,0x39,0x64,0x59,0x9D,0x79,0xAD,0x56,0x62,0x8C,0x48,0xCA,0x8B,0xB9,0x04,0x0F,0x5A,0x47,0x49,0x16,0x7A,0xFF,0x1D,0xBF,0x8F,0x06,0x74,0xD4,0x6D,0xF5,0x1E,0x9A,0x9B,0xEB,0xC9,0x42,0x28,0x2C,0xC7,0xE6,0x93,0x05,0x5C,0xA3,0xC0,0x27,0x6C,0x4E,0x15,0xA2,0x6E,0x3B,0x0E,0x00,0xBA,0x4F,0xA0,0xCD,0x0A,0x41,0xF6,0x3D,0x69,0xC8,0x91,0x35,0x60,0x50,0xD7,0x87,0xD2,0xB0,0xC2,0x8D,0xA9,0x63,0x85,0x34,0xF2,0xD8,0x23,0x55,0xAC,0xDF,0x25,0xB6,0xF0,0xCF,0x4C,0x6A,0x73,0x1C,0xB4,0x81,0x92,0xF7,0x0B,0x70,0x8A,0x68,0xDA,0x54,0xB2,0xD5,0x14,0x4A,0x4D,0xFE,0xBE,0x86,0xF9,0x66,0x0D,0xC5,0x72,0x67,0xC3,0x7B,0x27,0x6D,0x19,0x4E,0xCF,0xFE,0x66,0x43,0x98,0xF8,0x13,0x6C,0x10,0x33,0xBB,0x60,0xB0,0x51,0xA2,0x0A,0x64,0x3F,0xC8,0x22,0x02,0xC0,0xFD,0x81,0xEC,0xFB,0x3E,0xE0,0x74,0xAC,0xB9,0x12,0x88,0x16,0xCD,0x2E,0xC1,0x37,0xEB,0xA6,0xED,0x3C,0x2D,0xBA,0x3A,0x00,0x29,0xCC,0xF0,0x08,0x85,0x86,0xD5,0xBE,0x20,0xF2,0xE5,0x38,0x89,0x30,0x49,0xD0,0x6E,0x9F,0xA9,0xF5,0x21,0x40,0xB5,0x5A,0xF3,0xB7,0x42,0x84,0x57,0x3B,0xA0,0x8F,0xF1,0x2B,0x7A,0x0E,0x92,0x52,0xE9,0x1D,0xBF,0x6F,0xAD,0x18,0xC2,0xEA,0xC7,0x0B,0x69,0x93,0x06,0xFF,0x54,0x09,0x70,0xDF,0x55,0x03,0xDD,0x46,0xD7,0x4A,0x95,0xAA,0xE2,0xA4,0xB6,0xB4,0xF6,0x8E,0x91,0x2F,0x4F,0x01,0xCA,0xF9,0x31,0xF4,0x47,0xBC,0x9D,0x73,0xDB,0x59,0xA8,0x9A,0x1E,0x15,0x56,0x4B,0x07,0x58,0xEE,0x6B,0x23,0x99,0x67,0xDA,0x7E,0x26,0x35,0x4C,0x8D,0x87,0x28,0xFC,0x48,0x75,0x68,0x8C,0xF7,0xD6,0x14,0x82,0xB2,0x4D,0x36,0xD1,0x5F,0x7D,0xB3,0x04,0x2A,0x7F,0x11,0x1F,0xAE,0x0C,0x17,0x9E,0xC5,0x65,0xE4,0x7C,0x8B,0x0F,0xFA,0x8A,0x53,0xD8,0x3D,0x39,0xA1,0xC3,0x9C,0xD3,0x72,0xB8,0x25,0x94,0xC9,0xE3,0x44,0x32,0xCE,0xBD,0xA7,0x34,0x5E,0xAB,0xDC,0xB1,0x50,0x1B,0x2C,0xE7,0xD9,0x78,0x24,0x80,0x41,0x71,0x96,0xC6,0xC4,0xA3,0x5B,0x05,0xEF,0x5C,0x97,0xAF,0x77,0xE8,0xD4,0x1C,0x76,0x63,0x6A,0xD2,0xDE,0xE1,0x7B,0x5D,0x0D,0x62,0x90,0xA5,0xE6,0x83,0x61,0x1A,0x79,0x9B,0x45,0xCB,0xEC,0x59,0x1E,0x36,0xE9,0x1D,0x9B,0x4B,0xFA,0x8E,0xA6,0x66,0x7B,0x54,0xDF,0x05,0x70,0xB6,0xCF,0xA3,0xAE,0x41,0x43,0x07,0x01,0x5D,0xB4,0xD5,0x24,0xBD,0x6B,0x9A,0x0D,0x3E,0x00,0xC5,0xDB,0x65,0xF5,0xBB,0x40,0x42,0x7A,0x02,0x5E,0x61,0x50,0x16,0xB2,0x29,0xBE,0x23,0x2B,0x84,0xF7,0xA1,0x0B,0xF2,0xFD,0xA0,0xFF,0x33,0x67,0x9D,0x0F,0x18,0x14,0xCA,0x34,0xF6,0x75,0x09,0xCB,0x90,0xD6,0x3C,0xA5,0x44,0xFE,0x56,0xC7,0xE4,0x94,0x4F,0x0C,0x6C,0x98,0xE7,0x0A,0x3B,0xB7,0x92,0x99,0xD3,0xBA,0xED,0xCC,0x11,0xC4,0x7D,0x4A,0x21,0x06,0xD4,0xFC,0x04,0x72,0x71,0xF4,0xCE,0x38,0xDD,0xC8,0x19,0x4E,0xD9,0xC3,0x35,0x52,0x1F,0xE2,0x7C,0xDA,0x39,0x58,0x80,0xE6,0x4D,0x85,0xB5,0x32,0x62,0x8C,0x2D,0x74,0xD0,0xEF,0xA4,0x13,0xD8,0x5F,0xAA,0x45,0x28,0x49,0x3A,0xC0,0x53,0x17,0x3D,0xC6,0xB0,0x4C,0x86,0x60,0xD1,0x37,0x55,0x27,0x68,0x6F,0x8D,0x3F,0xB1,0x77,0x12,0xEE,0x95,0x96,0xF9,0x51,0x64,0x15,0x2A,0xA9,0x8F,0x97,0x82,0x26,0x9E,0x1C,0x83,0xE8,0x20,0xA8,0x1B,0x5B,0x63,0x57,0x30,0xF1,0xAF,0x81,0xBC,0x78,0x9C,0x73,0x79,0x08,0xDC,0xD2,0x8A,0xB8,0xC1,0x6D,0xD7,0x2E,0x93,0xAC,0xF3,0x9F,0x1A,0xE1,0xEA,0xBF,0xA2,0xAD,0x2F,0x6E,0x5C,0x48,0xB3,0x87,0x69,0x2C,0xA7,0xCD,0xC9,0xFB,0x7F,0x7E,0x0E,0x91,0x31,0x88,0x10,0xF8,0x5A,0x6A,0xE3,0x8B,0xDE,0xEB,0xE5,0x89,0xAB,0xF0,0x47,0xB9,0x46,0x25,0xC2,0x22,0x03,0x76,0xE0,0xA6,0xF8,0x00,0x67,0x0C,0x34,0xFF,0x4C,0xBF,0x77,0x4B,0xD4,0x71,0xC9,0xC0,0xD5,0xFE,0xD8,0x42,0x7D,0x06,0x33,0xC1,0xAE,0xB9,0xC2,0x20,0x45,0x68,0xE6,0x38,0xDA,0x70,0x3F,0x60,0x02,0x37,0x86,0x1B,0xD1,0x91,0xE7,0x40,0x6A,0x97,0x04,0x1E,0x6D,0x12,0x7F,0x08,0xFD,0x44,0x8F,0xB8,0xF3,0x23,0x87,0xDB,0x7A,0x65,0x35,0xD2,0xE2,0x21,0xB7,0x75,0x54,0x72,0x95,0xEE,0x11,0xA7,0x10,0xDE,0xFC,0xBC,0xB2,0xDC,0x89,0x3D,0xB4,0xAF,0x0D,0xDF,0x47,0xC6,0x66,0x29,0x59,0xAC,0x28,0x9A,0x9E,0x7B,0xF0,0xD0,0x3E,0x1F,0xE4,0x39,0x0B,0xFA,0x78,0xE8,0xF5,0xB6,0xBD,0xC8,0x4D,0xFB,0xA4,0x79,0xC4,0x3A,0x80,0xEF,0x96,0x85,0xDD,0x5F,0x8B,0x24,0x2E,0x2F,0xCB,0xD6,0xEB,0x30,0xCA,0xA8,0x64,0xAA,0xF7,0x5C,0xA5,0xA0,0xF6,0x7C,0xD3,0xE9,0x74,0xE5,0x7E,0x07,0x41,0x09,0x36,0x2D,0x55,0x17,0x15,0xA2,0xEC,0x8C,0x32,0x57,0x92,0x5A,0x69,0x3C,0xCD,0x73,0xEA,0xE3,0x82,0x56,0x0A,0x14,0x50,0xF9,0x16,0x98,0xF4,0x27,0xE1,0x88,0x52,0x2C,0x03,0xF1,0x31,0xAD,0xD9,0xCC,0x1C,0xBE,0x4A,0x49,0x61,0xBB,0x0E,0xB1,0x1A,0x0F,0xD7,0x8D,0x6E,0xB5,0x2B,0x05,0x48,0x94,0x62,0x19,0x8E,0x9F,0x4E,0x6F,0x8A,0xA3,0x99,0x25,0x26,0xAB,0x53,0x51,0x83,0x1D,0x76,0x93,0x2A,0x9B,0x46,0xED,0xBA,0xCE,0x84,0xE0,0xC5,0x5D,0x6C,0xCF,0xB0,0x5B,0x3B,0xC3,0x18,0x90,0xB3,0xA9,0x01,0xF2,0x13,0x81,0x6B,0x9C,0xC7,0x22,0x5E,0x63,0xA1,0x43,0x9D,0x58,0x4F,0x2B,0x7B,0xFC,0xCC,0x99,0x3D,0x64,0xC5,0x91,0x5A,0xED,0xA6,0x61,0x0C,0xE3,0x16,0x1A,0x89,0x73,0x00,0xF9,0x8F,0x74,0x5E,0x98,0x29,0xCF,0x05,0x21,0x6E,0x1C,0x7E,0xF8,0x76,0xC4,0x26,0xDC,0xA7,0x5B,0x3E,0x2D,0x18,0xB0,0xDF,0xC6,0xE0,0x63,0x5C,0xD7,0x6F,0xCB,0xDE,0x69,0xA1,0xCA,0x55,0x2A,0x12,0x52,0xE1,0xE6,0xB8,0x79,0x1E,0xD5,0x31,0xF5,0xC8,0x95,0x41,0x30,0x3A,0x88,0xF1,0xC3,0x9B,0xDA,0x67,0x9E,0x24,0x53,0xD6,0xBA,0xE5,0xEB,0xF6,0xA3,0xA8,0x15,0x27,0x66,0xE4,0x20,0xCE,0xFA,0x01,0x80,0x84,0xEE,0x65,0x47,0x37,0x36,0xB2,0x59,0xC1,0x78,0xD8,0xAA,0x23,0x13,0xB1,0xAC,0xA2,0x97,0xC2,0x0E,0xB9,0xE2,0xC0,0x8B,0x6C,0x0F,0xF0,0xA9,0x3F,0x4A,0x6B,0x7F,0x57,0x10,0xA5,0x02,0xD2,0x54,0xA0,0x2F,0xEF,0xC7,0xB3,0x4C,0x96,0x1D,0x32,0xEA,0x86,0xFF,0x39,0x4E,0x0A,0x08,0xE7,0x9C,0xFD,0x14,0x48,0xD3,0x22,0xF4,0x6D,0x8C,0x49,0x77,0x44,0xF2,0xBC,0x2C,0x92,0x4B,0x33,0x0B,0x09,0x5F,0x19,0x28,0x17,0x6A,0xF7,0x60,0xFB,0xE8,0xBE,0xCD,0x62,0xE9,0xB4,0xBB,0x42,0xD4,0x2E,0x7A,0xB6,0x83,0x5D,0x51,0x46,0x40,0x3C,0xBF,0x7D,0x75,0x9F,0xD9,0x82,0x1F,0xB7,0x0D,0xEC,0x06,0xDD,0xAD,0x8E,0xAE,0xD1,0x25,0x45,0xDB,0xFE,0x72,0x43,0xA4,0xF3,0x9A,0xD0,0x34,0x8D,0x58,0x85,0x9D,0x4F,0x68,0x03,0x38,0x3B,0x4D,0xB5,0x94,0x71,0x87,0xBD,0x90,0x07,0x50,0x81,0x56,0x1B,0x7C,0x8A,0x70,0x93,0x35,0xAB,0x04,0xAF,0xC9,0x11,0xB5,0x3E,0xDB,0xDF,0x6D,0xE9,0x1C,0x6C,0x23,0x83,0x02,0x9A,0x48,0xEA,0xF1,0x78,0xCC,0x99,0xF7,0xF9,0xB9,0x9B,0x55,0xE2,0x54,0xAB,0xD0,0x37,0x11,0x30,0xF2,0x64,0xAE,0x93,0x8E,0x6A,0x6B,0x61,0xCE,0x1A,0x98,0xC0,0xD3,0xAA,0xC5,0x7F,0x81,0x3C,0xE1,0xBE,0x08,0x8D,0xF8,0xF3,0xB0,0xAD,0x3D,0xBF,0x4E,0x7C,0xA1,0x5A,0x7B,0x95,0x9F,0x7D,0xA3,0x2D,0x00,0x65,0x87,0xFC,0xEB,0x84,0x76,0x43,0x38,0x07,0x9D,0xBB,0x90,0x85,0x8C,0x34,0x91,0x0E,0x32,0xFA,0x09,0xBA,0x71,0x49,0x22,0x45,0xBD,0xE3,0xA7,0x97,0x70,0x20,0x3F,0x9E,0xC2,0x66,0xB6,0xFD,0xCA,0x01,0xB8,0x4D,0x3A,0x57,0x28,0x5B,0x41,0xD2,0x2F,0x05,0xA2,0xD4,0x94,0x5E,0xC3,0x72,0x47,0x25,0x7A,0x35,0x03,0xDE,0x6F,0xD6,0x33,0x58,0xC6,0x14,0x16,0xEE,0x63,0x60,0xDC,0xE6,0xCF,0x2A,0x0B,0xDA,0xCB,0x5C,0x27,0xD1,0x0D,0x40,0x6E,0xF0,0x2B,0xC8,0x92,0x4A,0x5F,0xF4,0x0A,0x1D,0xD8,0x06,0xE4,0x26,0x1B,0x67,0x82,0xD9,0x2E,0xC4,0x56,0xB7,0x44,0xEC,0xF6,0xD5,0x5D,0x86,0x7E,0x1E,0xF5,0x8A,0x29,0x18,0x80,0xA5,0xC1,0x8B,0xFF,0xA8,0x2C,0x1F,0xD7,0x12,0x77,0xC9,0xA9,0xE7,0x50,0x52,0x10,0x68,0x73,0x4C,0x04,0x42,0x3B,0xA0,0x31,0xAC,0x96,0x39,0xB3,0xE5,0xE0,0x19,0xB2,0xEF,0x21,0xED,0x8F,0x75,0x4B,0xFE,0x24,0x0C,0x0F,0xFB,0x59,0x89,0x9C,0xE8,0x74,0xB4,0x46,0x69,0x17,0xCD,0xA4,0x62,0xB1,0xDD,0x53,0xBC,0x15,0x51,0x4F,0x13,0xC7,0xA6,0xAF,0x36,0x88,0x79,0x19,0x36,0xBD,0x67,0x98,0xEC,0xC4,0x04,0x8B,0x7F,0xF9,0x29,0x8E,0x3B,0x7C,0x54,0x46,0xDF,0x09,0xF8,0x63,0x3F,0xD6,0xB7,0xCC,0x23,0x21,0x65,0x12,0xD4,0xAD,0xC1,0x3C,0x03,0x32,0x74,0x22,0x20,0x18,0x60,0xB9,0x07,0x97,0xD9,0x6F,0x5C,0x62,0xA7,0x9D,0x51,0x05,0xFF,0x69,0x90,0x9F,0xC2,0x49,0xE6,0x95,0xC3,0xD0,0x4B,0xDC,0x41,0xC7,0x26,0x9C,0x34,0xA9,0xF2,0xB4,0x5E,0x56,0x94,0x17,0x6B,0x6D,0x7A,0x76,0xA8,0xFB,0xB1,0xD8,0x8F,0x68,0x59,0xD5,0xF0,0x6E,0x0E,0xFA,0x85,0xA5,0x86,0xF6,0x2D,0x96,0xAC,0x5A,0xBF,0x9E,0x66,0x10,0x13,0x28,0x43,0x64,0xB6,0xAE,0x73,0xA6,0x1F,0x3A,0xE2,0x84,0x2F,0x80,0x1E,0xB8,0x5B,0xA1,0x57,0x30,0x7D,0xAA,0x7B,0x2C,0xBB,0x3D,0xC8,0x27,0x4A,0x8D,0xC6,0x71,0xBA,0xEE,0x4F,0x16,0xB2,0xE7,0xD7,0x50,0x00,0x55,0x37,0x45,0x0A,0x2E,0xE4,0x02,0xB3,0x75,0x5F,0xA4,0xD2,0x2B,0x58,0xA2,0x31,0x77,0x48,0xCB,0xED,0xF4,0x9B,0x33,0x06,0x15,0x70,0x8C,0xF7,0x0D,0xEF,0x5D,0xD3,0x35,0x52,0x93,0xCD,0xCA,0x79,0x39,0x01,0x7E,0xE1,0x8A,0x42,0xF5,0xE0,0x44,0xFC,0x0F,0xB5,0x4C,0xF1,0xB0,0xE8,0xDA,0xA3,0x11,0x1B,0x6A,0xBE,0xE3,0xDE,0x1A,0xFE,0x2A,0xD1,0xE5,0x0B,0xCF,0x4D,0x0C,0x3E,0x83,0x88,0xDD,0xC0,0xCE,0x91,0xFD,0x78,0x9A,0x38,0x08,0x81,0xF3,0x53,0xEA,0x72,0x99,0x1D,0x1C,0x6C,0x4E,0xC5,0xAF,0xAB,0x40,0x61,0x14,0x82,0xDB,0x24,0x47,0xA0,0xEB,0xC9,0x92,0x25,0xE9,0xBC,0x89,0x87,0x97,0x46,0x57,0xC0,0xBB,0x4D,0x91,0xDC,0xF2,0x6C,0xB7,0x54,0x0E,0xD6,0xC3,0x68,0x9F,0x42,0xF3,0x4A,0xAF,0xC4,0x5A,0x88,0x8A,0x72,0xFF,0xFC,0x40,0x7A,0x53,0xB6,0x6A,0x49,0xC1,0x1A,0xE2,0x82,0x69,0x16,0xB5,0x84,0x1C,0x39,0x5D,0x17,0x63,0x34,0x96,0x81,0x44,0x9A,0x78,0xBA,0x87,0xFB,0x1E,0x45,0xB2,0x58,0xCA,0x2B,0xD8,0x70,0xA7,0x3C,0xAD,0x30,0x0A,0xA5,0x2F,0x79,0x7C,0x85,0x2E,0x73,0xBD,0x71,0x13,0xE9,0xB0,0x83,0x4B,0x8E,0xEB,0x55,0x35,0x7B,0xCC,0xCE,0x8C,0xF4,0xEF,0xD0,0x98,0xDE,0x38,0xFE,0x2D,0x41,0xCF,0x20,0x89,0xCD,0xD3,0x8F,0x5B,0x3A,0x33,0xAA,0x14,0xE5,0xD7,0x62,0xB8,0x90,0x93,0x67,0xC5,0x15,0x00,0x74,0xE8,0x28,0xDA,0xF5,0x8B,0x51,0x50,0x05,0x6B,0x65,0x25,0x07,0xC9,0x7E,0xC8,0x37,0x4C,0xAB,0x8D,0xAC,0x6E,0xF8,0x29,0xA2,0x47,0x43,0xF1,0x75,0x80,0xF0,0xBF,0x1F,0x9E,0x06,0xD4,0x76,0x6D,0xE4,0x7D,0x22,0x94,0x11,0x64,0x6F,0x2C,0x31,0xA1,0x23,0xD2,0xE0,0x3D,0xC6,0xE7,0x09,0x32,0x0F,0x12,0xF6,0xF7,0xFD,0x52,0x86,0x04,0x5C,0x4F,0x36,0x59,0xE3,0x1D,0xA0,0x0C,0x19,0x10,0xA8,0x0D,0x92,0xAE,0x66,0x95,0x26,0xED,0xD5,0xBE,0xD9,0x21,0x7F,0x03,0xE1,0x3F,0xB1,0x9C,0xF9,0x1B,0x60,0x77,0x18,0xEA,0xDF,0xA4,0x9B,0x01,0x27,0xB4,0xC7,0xDD,0x4E,0xB3,0x99,0x3E,0x48,0x08,0xC2,0x5F,0xEE,0xDB,0xB9,0xE6,0xA9,0x3B,0x0B,0xEC,0xBC,0xA3,0x02,0x5E,0xFA,0x2A,0x61,0x56,0x9D,0x24,0xD1,0xA6,0xCB,0x7B,0xED,0x98,0xB9,0x59,0xBE,0xDD,0x22,0xDC,0x6B,0x30,0x12,0x7E,0x70,0x45,0x10,0x78,0xF1,0xC1,0x63,0x8B,0x13,0xAA,0x0A,0x95,0xE5,0xE4,0x60,0x52,0x56,0x3C,0xB7,0xF2,0x1C,0x28,0xD3,0xC7,0xF5,0xB4,0x36,0x39,0x24,0x71,0x7A,0x81,0x04,0x68,0x37,0x08,0xB5,0x4C,0xF6,0x5A,0x23,0x11,0x49,0x47,0x93,0xE2,0xE8,0x07,0xE3,0x27,0x1A,0x34,0x6A,0xAB,0xCC,0xF8,0xC0,0x80,0x33,0xBB,0x73,0x18,0x87,0x05,0xBD,0x19,0x0C,0x14,0x32,0xB1,0x8E,0xFF,0xCA,0x62,0x0D,0x0E,0x75,0x89,0xEC,0x2A,0xA4,0x16,0xF4,0xF3,0xBC,0xCE,0xAC,0x4A,0xFB,0x1D,0xD7,0x2B,0x5D,0xA6,0x8C,0xC8,0x5B,0xA1,0xD2,0xB3,0xDE,0x31,0xC4,0x43,0x88,0x3F,0x74,0x4B,0xEF,0xB6,0x17,0xF9,0xA9,0x2E,0x1E,0xD6,0x7D,0x1B,0xC3,0xA2,0x41,0xE7,0x79,0x84,0xC9,0xAE,0x58,0x42,0xD5,0x82,0x53,0x46,0xA3,0x55,0x6F,0xEA,0xE9,0x9F,0x67,0x4F,0x9D,0xBA,0xD1,0xE6,0x5F,0x8A,0x57,0x76,0x21,0x48,0x02,0x09,0x2C,0xA0,0x91,0x7C,0x03,0xF7,0x97,0xD4,0x0F,0x7F,0x5C,0xCD,0x65,0xDF,0x3E,0xA7,0x4D,0x0B,0x50,0x92,0xEE,0x6D,0xAF,0x51,0x8F,0x83,0x94,0x06,0xFC,0xA8,0x64,0x3B,0x66,0x69,0x90,0x3A,0x6C,0x1F,0xB0,0xB8,0x25,0xB2,0x29,0x8D,0xCB,0xFA,0xC5,0x99,0xE1,0xD9,0xDB,0x20,0x6E,0xFE,0x40,0x5E,0x9B,0xA5,0x96,0x01,0xF0,0x26,0xBF,0x4E,0x2F,0xC6,0x9A,0x9C,0xD8,0xDA,0x35,0x38,0x54,0x2D,0xEB,0x9E,0x44,0xCF,0xE0,0xFD,0x3D,0x15,0x61,0xD0,0x00,0x86,0x72,0xAD,0x85,0xC2,0x77,0x69,0x5C,0xF4,0x9B,0x82,0xA4,0x27,0x18,0xBC,0x32,0x80,0x62,0x98,0xE3,0x1F,0x7A,0x6E,0x56,0x16,0xA5,0xA2,0xFC,0x3D,0x5A,0x93,0x2B,0x8F,0x9A,0x2D,0xE5,0x8E,0x11,0xD5,0x1E,0xA9,0xE2,0x25,0x48,0xA7,0x52,0x6F,0x3F,0xB8,0x88,0xDD,0x79,0x20,0x81,0xDC,0x6D,0x8B,0x41,0x65,0x2A,0x58,0x3A,0x5E,0xCD,0x37,0x44,0xBD,0xCB,0x30,0x1A,0x1D,0x85,0x3C,0x9C,0xEE,0x67,0x57,0xF5,0xC4,0xC0,0xAA,0x21,0x03,0x73,0x72,0xF6,0xCF,0x28,0x4B,0xB4,0xED,0x7B,0x0E,0x2F,0xE8,0xE6,0xD3,0x86,0x4A,0xFD,0xA6,0x84,0xCC,0xB5,0x87,0xDF,0x9E,0x23,0xDA,0x60,0x91,0x75,0xB1,0x8C,0xD1,0x05,0x74,0x7E,0x51,0x63,0x22,0xA0,0x64,0x8A,0xBE,0x45,0x17,0x92,0xFE,0xA1,0xAF,0xB2,0xE7,0xEC,0x0F,0x77,0x4F,0x4D,0x1B,0x5D,0x6C,0x53,0xC8,0x0D,0x33,0x00,0xB6,0xF8,0x68,0xD6,0xAD,0xF0,0xFF,0x06,0x90,0x6A,0x3E,0xF2,0x2E,0xB3,0x24,0xBF,0xAC,0xFA,0x89,0x26,0x6B,0xAB,0x83,0xF7,0x08,0xD2,0x59,0x76,0x3B,0x13,0x54,0xE1,0x46,0x96,0x10,0xE4,0xD8,0xB9,0x50,0x0C,0x97,0x66,0xB0,0x29,0xAE,0xC2,0xBB,0x7D,0x0A,0x4E,0x4C,0xA3,0x7C,0x7F,0x09,0xF1,0xD0,0x35,0xC3,0xF9,0x70,0xC9,0x1C,0xC1,0xD9,0x0B,0x2C,0x47,0x34,0xD7,0x71,0xEF,0x40,0xEB,0x8D,0x55,0xD4,0x43,0x14,0xC5,0x12,0x5F,0x38,0xCE,0x31,0xDB,0x9D,0xC6,0x5B,0xF3,0x49,0xA8,0xC7,0x19,0x15,0x02,0x04,0x78,0xFB,0x39,0x9F,0xBA,0x36,0x07,0xE0,0xB7,0xDE,0x94,0x42,0x99,0xE9,0xCA,0xEA,0x95,0x61,0x01,0x76,0xB4,0x37,0x4B,0x4D,0x5A,0x56,0x88,0xE7,0x06,0xBC,0x14,0x89,0xD2,0x94,0x7E,0x4E,0x2E,0xDA,0xA5,0x85,0xA6,0xD6,0x0D,0xDB,0x91,0xF8,0xAF,0x48,0x79,0xF5,0xD0,0x08,0x63,0x44,0x96,0x8E,0x53,0x86,0x3F,0xB6,0x8C,0x7A,0x9F,0xBE,0x46,0x30,0x33,0x81,0x77,0x10,0x5D,0x8A,0x5B,0x0C,0x9B,0x1A,0xC2,0xA4,0x0F,0xA0,0x3E,0x98,0x7B,0xAB,0x5F,0xD9,0x09,0xAE,0x1B,0x5C,0x74,0x39,0x16,0x9D,0x47,0xB8,0xCC,0xE4,0x24,0xEC,0x03,0x01,0x45,0x32,0xF4,0x8D,0xE1,0x66,0xFF,0x29,0xD8,0x43,0x1F,0xF6,0x97,0x99,0x27,0xB7,0xF9,0x4F,0x7C,0x42,0x87,0x1C,0x23,0x12,0x54,0x02,0x00,0x38,0x40,0x69,0xC6,0xB5,0xE3,0xF0,0x6B,0xFC,0x61,0xBD,0x71,0x25,0xDF,0x49,0xB0,0xBF,0xE2,0x31,0x3B,0x4A,0x9E,0xC3,0xFE,0x3A,0xDE,0x2F,0x95,0x6C,0xD1,0x90,0xC8,0xFA,0x83,0xA3,0xA8,0xFD,0xE0,0xEE,0xB1,0xDD,0x58,0x0A,0xF1,0xC5,0x2B,0xEF,0x6D,0x2C,0x1E,0xB9,0x3D,0x3C,0x4C,0x6E,0xE5,0x8F,0x8B,0xBA,0x18,0x28,0xA1,0xD3,0x73,0xCA,0x52,0xCB,0xE9,0xB2,0x05,0xC9,0x9C,0xA9,0xA7,0x60,0x41,0x34,0xA2,0xFB,0x04,0x67,0x80,0xCE,0x6F,0x36,0x92,0xC7,0xF7,0x70,0x20,0x1D,0xE8,0x07,0x6A,0xAD,0xE6,0x51,0x9A,0x55,0x7F,0x84,0xF2,0x0B,0x78,0x82,0x11,0x75,0x17,0x65,0x2A,0x0E,0xC4,0x22,0x93,0x35,0x50,0xAC,0xD7,0x2D,0xCF,0x7D,0xF3,0x57,0x68,0xEB,0xCD,0xD4,0xBB,0x13,0x26,0x5E,0xC1,0xAA,0x62,0xD5,0xC0,0x64,0xDC,0x15,0x72,0xB3,0xED,0xEA,0x59,0x19,0x21,0x4C,0x42,0x2C,0x79,0x57,0xE0,0x2E,0x0C,0x82,0x65,0x1E,0xE1,0xD1,0x47,0x85,0xA4,0x6A,0x6E,0x8B,0x00,0xD9,0xA9,0x5C,0xD8,0x2F,0xB7,0x36,0x96,0xCD,0x44,0x5F,0xFD,0x38,0xBD,0x0B,0x54,0x18,0x05,0x46,0x4D,0xC9,0xFB,0x0A,0x88,0x20,0xCE,0xEF,0x14,0xDF,0x3B,0x26,0x1B,0xAF,0x7B,0xD4,0xDE,0x1F,0x66,0x75,0x2D,0x89,0x34,0xCA,0x70,0x81,0x39,0x30,0x25,0x4F,0x87,0xBB,0x24,0xFC,0xC4,0x0F,0xBC,0x56,0x08,0xF0,0x97,0x98,0x16,0xC8,0x2A,0x49,0x32,0xD0,0xB5,0xF6,0xC3,0x31,0x5E,0x0E,0x28,0xB2,0x8D,0x67,0xF4,0xEE,0x9D,0x61,0x17,0xB0,0x9A,0xC7,0x76,0xEB,0x21,0x80,0xCF,0x90,0xF2,0x95,0xC5,0x22,0x12,0xD3,0x77,0x2B,0x8A,0xB4,0x7F,0x48,0x03,0xE2,0x8F,0xF8,0x0D,0xE9,0x7E,0x6F,0xBE,0xF5,0xB8,0x64,0x92,0x7D,0x9E,0x45,0xDB,0x41,0xEA,0xFF,0x27,0x63,0xDA,0x6B,0xB6,0xA1,0x73,0xED,0x86,0xD5,0xD6,0x5B,0xA3,0x9F,0x7A,0x53,0x69,0x33,0xE8,0x60,0x43,0x3F,0x40,0xAB,0xCB,0x10,0x35,0xAD,0x9C,0x1D,0x4A,0x3E,0x74,0xB3,0x6D,0xA8,0xBF,0xD2,0xAE,0x93,0x51,0x71,0x9B,0x6C,0x37,0x59,0xF1,0x02,0xE3,0x19,0x84,0x15,0x8E,0x50,0x06,0x8C,0x23,0x5A,0x07,0xAC,0x55,0xC0,0x3A,0x58,0x94,0xA7,0x62,0xAA,0x99,0x52,0x1C,0x7C,0xC2,0xDD,0xA5,0xE7,0xE5,0xF7,0xB1,0xF9,0xC6,0x68,0x04,0xD7,0x11,0xE4,0xA0,0x09,0xE6,0x13,0x72,0xA6,0xFA,0xCC,0x3D,0x83,0x1A,0xB9,0x91,0x4B,0xFE,0x3C,0xEC,0x4E,0xBA,0x01,0xC1,0x5D,0x29,0x78,0xA2,0xDC,0xF3,0xBB,0x83,0x48,0xFB,0x11,0x4F,0xB7,0xD0,0xC6,0x7E,0x77,0x62,0x08,0xC0,0xFC,0x63,0xB1,0x84,0x76,0x19,0x49,0x6F,0xF5,0xCA,0xDF,0x51,0x8F,0x6D,0x0E,0x75,0x97,0xF2,0x80,0x31,0xAC,0x66,0xC7,0x88,0xD7,0xB5,0x20,0xB3,0xA9,0xDA,0x26,0x50,0xF7,0xDD,0xF3,0x38,0x0F,0x44,0xA5,0xC8,0xBF,0x4A,0xD2,0x82,0x65,0x55,0x94,0x30,0x6C,0xCD,0xC5,0x22,0x59,0xA6,0x96,0x00,0xC2,0xE3,0x0B,0x05,0x6B,0x3E,0x10,0xA7,0x69,0x4B,0x68,0xF0,0x71,0xD1,0x8A,0x03,0x18,0xBA,0x2D,0x29,0xCC,0x47,0x9E,0xEE,0x1B,0x9F,0x8E,0xBC,0x4D,0xCF,0x67,0x89,0xA8,0x53,0x7F,0xFA,0x4C,0x13,0x5F,0x42,0x01,0x0A,0x58,0x21,0x32,0x6A,0xCE,0x73,0x8D,0x37,0x98,0x7C,0x61,0x5C,0xE8,0x3C,0x93,0x99,0x1D,0x40,0xEB,0x12,0x87,0x7D,0x1F,0xD3,0x5E,0xC3,0x52,0xC9,0x17,0x41,0xCB,0x64,0x9A,0xE2,0xA0,0xA2,0xB0,0xF6,0xBE,0x81,0xE0,0x25,0xED,0xDE,0x15,0x5B,0x3B,0x85,0x54,0x35,0xE1,0xBD,0x8B,0x7A,0xC4,0x5D,0x2F,0x43,0x90,0x56,0xA3,0xE7,0x4E,0xA1,0x46,0x86,0x1A,0x6E,0x3F,0xE5,0x9B,0xB4,0xFE,0xD6,0x0C,0xB9,0x7B,0xAB,0x09,0xFD,0x3A,0xD9,0x02,0x9C,0x06,0xAD,0xB8,0x60,0xAE,0x39,0x28,0xF9,0xB2,0xFF,0x23,0xD5,0x92,0x91,0x1C,0xE4,0xD8,0x3D,0x14,0x2E,0x24,0x9D,0x2C,0xF1,0xE6,0x34,0xAA,0xC1,0x57,0x72,0xEA,0xDB,0x5A,0x0D,0x79,0x33,0x74,0xAF,0x27,0x04,0x78,0x07,0xEC,0x8C,0x36,0xDC,0x2B,0x70,0x1E,0xB6,0x45,0xA4,0xF4,0x2A,0xEF,0xF8,0x95,0xE9,0xD4,0x16,0x13,0xB1,0x81,0x08,0x7A,0xDA,0x63,0xFB,0x10,0x94,0x95,0xE5,0xC7,0x4C,0x26,0x22,0xC9,0xE8,0x9D,0x0B,0x52,0xAD,0xCE,0x29,0x62,0x40,0x1B,0xAC,0x60,0x35,0x00,0x0E,0x86,0x3C,0xC5,0x78,0x39,0x61,0x53,0x2A,0x98,0x92,0xE3,0x37,0x6A,0x57,0x93,0x77,0xA3,0x58,0x6C,0x82,0x46,0xC4,0x85,0xB7,0x0A,0x01,0x54,0x49,0x47,0x18,0x74,0xF1,0xFE,0xC1,0x42,0x64,0x7D,0x12,0xBA,0x8F,0x9C,0xF9,0x05,0x7E,0x84,0x66,0xD4,0x5A,0xBC,0xDB,0x1A,0x44,0x43,0xF0,0xB0,0x88,0xF7,0x68,0x03,0xCB,0x7C,0x69,0xCD,0x75,0xB4,0x41,0xAE,0xC3,0x04,0x4F,0xF8,0x33,0x67,0xC6,0x9F,0x3B,0x6E,0x5E,0xD9,0x89,0xDC,0xBE,0xCC,0x83,0xA7,0x6D,0x8B,0x3A,0xFC,0xD6,0x2D,0x5B,0xA2,0xD1,0x2B,0xB8,0x1F,0x25,0xD3,0x36,0x17,0xEF,0x99,0x9A,0xA1,0xCA,0xED,0x3F,0x27,0xFA,0x2F,0x96,0xB3,0x6B,0x0D,0xA6,0x09,0x97,0x31,0xD2,0x28,0xDE,0xB9,0xF4,0x23,0xF2,0xA5,0x32,0x4E,0xAF,0x15,0xBD,0x20,0x7B,0x3D,0xD7,0xDF,0x1D,0x9E,0xE2,0xE4,0xF3,0xFF,0x21,0x72,0x38,0x51,0x06,0xE1,0xD0,0x5C,0x79,0xE7,0x87,0x73,0x0C,0x2C,0x0F,0x7F,0xA4,0xB5,0x8A,0xBB,0xFD,0xAB,0xA9,0x91,0xE9,0x30,0x8E,0x1E,0x50,0xE6,0xD5,0xEB,0x2E,0x14,0xD8,0x8C,0x76,0xE0,0x19,0x16,0x4B,0xC0,0x6F,0x1C,0x4A,0x59,0xC2,0x55,0xC8,0x90,0xBF,0x34,0xEE,0x11,0x65,0x4D,0x8D,0x02,0xF6,0x70,0xA0,0x07,0xB2,0xF5,0xDD,0xCF,0x56,0x80,0x71,0xEA,0xB6,0x5F,0x3E,0x45,0xAA,0xA8,0xEC,0x9B,0x5D,0x24,0x48,0x1B,0x44,0xF2,0x77,0x02,0x09,0x4A,0x57,0xC7,0x45,0xB4,0x86,0x5B,0xA0,0x81,0x6F,0x54,0x69,0x74,0x90,0x91,0x9B,0x34,0xE0,0x62,0x3A,0x29,0x50,0x3F,0x85,0x7B,0xC6,0x36,0x63,0x0D,0x03,0x43,0x61,0xAF,0x18,0xAE,0x51,0x2A,0xCD,0xEB,0xCA,0x08,0x9E,0x4F,0xC4,0x21,0x25,0x97,0x13,0xE6,0x96,0xD9,0x79,0xF8,0x60,0xB2,0x10,0x0B,0x82,0xD2,0xA1,0xBB,0x28,0xD5,0xFF,0x58,0x2E,0x6E,0xA4,0x39,0x88,0xBD,0xDF,0x80,0xCF,0x5D,0x6D,0x8A,0xDA,0xC5,0x64,0x38,0x9C,0x4C,0x07,0x30,0xFB,0x42,0xB7,0xC0,0xAD,0x6A,0x7F,0x76,0xCE,0x6B,0xF4,0xC8,0x00,0xF3,0x40,0x8B,0xB3,0xD8,0xBF,0x47,0x19,0x65,0x87,0x59,0xD7,0xFA,0x9F,0x7D,0x06,0x11,0x7E,0x8C,0xB9,0xC2,0xFD,0x67,0x41,0x0C,0x2F,0xA7,0x7C,0x84,0xE4,0x0F,0x70,0xD3,0xE2,0x7A,0x5F,0x3B,0x71,0x05,0x52,0xF0,0xE7,0x22,0xFC,0x1E,0xDC,0xE1,0x9D,0x78,0x23,0xD4,0x3E,0xAC,0x4D,0xBE,0x16,0xF1,0x20,0x31,0xA6,0xDD,0x2B,0xF7,0xBA,0x94,0x0A,0xD1,0x32,0x68,0xB0,0xA5,0x0E,0xF9,0x24,0x95,0x2C,0xC9,0xA2,0x3C,0xEE,0xEC,0x14,0x99,0x9A,0x26,0x1C,0x35,0xD0,0x5E,0x98,0x4B,0x27,0xA9,0x46,0xEF,0xAB,0xB5,0xE9,0x3D,0x5C,0x55,0xCC,0x72,0x83,0xB1,0x04,0xDE,0xF6,0xF5,0x01,0xA3,0x73,0x66,0x12,0x8E,0x4E,0xBC,0x93,0xED,0x37,0xC1,0x5A,0xCB,0x56,0x6C,0xC3,0x49,0x1F,0x1A,0xE3,0x48,0x15,0xDB,0x17,0x75,0x8F,0xD6,0xE5,0x2D,0xE8,0x8D,0x33,0x53,0x1D,0xAA,0xA8,0xEA,0x92,0x89,0xB6,0xFE,0xB8,0x50,0x75,0xEB,0x00,0x80,0xFF,0xFF,0xFF,0x80,0x75,0xEB,0x00,0x80,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0xEF,0x26,0x00,0x80,0xFF,0xFF,0xFF

.section .text
	.global sub_ffffff8000ec7320

    .align 0x10
	jumptbl_0xffffff8000ebb693:
		.long _0xffffff8000ebdd4b - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbe75 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebba50 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebc958 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb977 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbab0 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb772 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbc46 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebba9f - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbae2 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebe32a - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebc047 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebdda6 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbd40 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebba9f - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebc598 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebe3ae - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebd3b3 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb9a1 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb962 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebd024 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebc159 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb94f - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb880 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebe385 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebdaab - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebb6c8 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebd36f - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbfc1 - jumptbl_0xffffff8000ebb693
		.long _0xffffff8000ebbabc - jumptbl_0xffffff8000ebb693

    .align 0x10
	jumptbl_0xffffff8000ebb93c:
		.long _0xffffff8000ebc6d4 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebc881 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebb8e1 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebd410 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebc800 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebba9f - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebc64d - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebd1f6 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebb98c - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebbb46 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebbbf4 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000eb7dd6 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebba9f - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebd4c6 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebe484 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebbbd1 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebc714 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebe426 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebd8ef - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebe400 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebcf9e - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebc2c0 - jumptbl_0xffffff8000ebb93c
		.long _0xffffff8000ebc5be - jumptbl_0xffffff8000ebb93c

    .align 0x10
	jumptbl_0xffffff8000ebbad2:
		.long _0xffffff8000ebba25 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebbec1 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000eb7dc1 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebba79 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc9b0 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebb90a - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebbc90 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebd238 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebd52e - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebd64e - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc676 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebca3e - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000eb90ff - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebb6f1 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebbdb8 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebbb73 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebcd4d - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc0fa - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebb6ad - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebe494 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebbcda - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebd468 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc829 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebd5e6 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc782 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc26e - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebe0a8 - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebb7bb - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebbd8a - jumptbl_0xffffff8000ebbad2
		.long _0xffffff8000ebc574 - jumptbl_0xffffff8000ebbad2

    .align 0x10
	jumptbl_0xffffff8000ebe7fc:
		.long _0xffffff8000ebf91d - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebf3e9 - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebe895 - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebf947 - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebfa81 - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebf99d - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebf790 - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebf615 - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ebfb7e - jumptbl_0xffffff8000ebe7fc
		.long _0xffffff8000ec6f5f - jumptbl_0xffffff8000ebe7fc

    .align 0x10
	jumptbl_0xffffff8000ebea20:
		.long _0xffffff8000ebfbd4 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebea76 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebe950 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ec6b6b - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebf52c - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebfbfa - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebe72a - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebeb3c - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebef84 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebfafc - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ec6b1f - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ec70ac - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ec66e5 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebf9de - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ec6a9b - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebf855 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebf4c9 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebf317 - jumptbl_0xffffff8000ebea20
		.long _0xffffff8000ebee14 - jumptbl_0xffffff8000ebea20

    .align 0x10
	jumptbl_0xffffff8000ec6610:
		.long _0xffffff8000ebf6bd - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebfc0c - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebf5d6 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebee6c - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebec64 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebed50 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebea30 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebeba2 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ec701b - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ec6620 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ec6ef4 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ec6a5c - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebe6d8 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebfa02 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebe855 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebfbc2 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebf47f - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ec66a1 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebeec1 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ec7145 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebe80c - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebef28 - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebee2b - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebea0e - jumptbl_0xffffff8000ec6610
		.long _0xffffff8000ebe6bb - jumptbl_0xffffff8000ec6610

    .align 0x10
	jumptbl_0xffffff8000eb7cb9:
		.long _0xffffff8000eb7cc2 - jumptbl_0xffffff8000eb7cb9
		.long _0xffffff8000eb7b30 - jumptbl_0xffffff8000eb7cb9
		.long _0xffffff8000eb76d6 - jumptbl_0xffffff8000eb7cb9
		.long _0xffffff8000eb7650 - jumptbl_0xffffff8000eb7cb9
		.long _0xffffff8000eb7850 - jumptbl_0xffffff8000eb7cb9
		.long _0xffffff8000eb783b - jumptbl_0xffffff8000eb7cb9

    .align 0x10
	jumptbl_0xffffff8000ec755b:
		.long _0xffffff8000ec756b - jumptbl_0xffffff8000ec755b
		.long _0xffffff8000ec79e8 - jumptbl_0xffffff8000ec755b
		.long _0xffffff8000ec7bfc - jumptbl_0xffffff8000ec755b
		.long _0xffffff8000ec74ed - jumptbl_0xffffff8000ec755b
		.long _0xffffff8000ec73d0 - jumptbl_0xffffff8000ec755b

	.align 0x100
	sub_0xffffff8000eb7d00:
		_0xffffff8000eb7d00: push rbp
		_0xffffff8000eb7d01: mov rbp, rsp
		_0xffffff8000eb7d04: push r15
		_0xffffff8000eb7d06: push r14
		_0xffffff8000eb7d08: push r13
		_0xffffff8000eb7d0a: push r12
		_0xffffff8000eb7d0c: push rbx
		_0xffffff8000eb7d0d: sub rsp, 0x358
		_0xffffff8000eb7d14: lea rcx, [rbp - 0x344]
		_0xffffff8000eb7d1b: mov dword ptr [rbp - 0x344], ecx
		_0xffffff8000eb7d21: lea rsi, [rbp - 0x348]
		_0xffffff8000eb7d28: mov dword ptr [rbp - 0x348], esi
		_0xffffff8000eb7d2e: lea rax, [rbp - 0x350]
		_0xffffff8000eb7d35: mov qword ptr [rbp - 0x350], rax
		_0xffffff8000eb7d3c: lea rax, [rbp - 0x358]
		_0xffffff8000eb7d43: mov qword ptr [rbp - 0x358], rax
		_0xffffff8000eb7d4a: mov dword ptr [rbp - 0x35c], 0x2a0d4638
		_0xffffff8000eb7d54: mov qword ptr [rbp - 0x350], rcx
		_0xffffff8000eb7d5b: mov qword ptr [rbp - 0x358], rsi
		_0xffffff8000eb7d62: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000eb7d68: lea edx, [rax + 0x26940251]
		_0xffffff8000eb7d6e: mov r8, qword ptr [rbp - 0x350]
		_0xffffff8000eb7d75: mov dword ptr [r8], edx
		_0xffffff8000eb7d78: add eax, 0x2e11899
		_0xffffff8000eb7d7d: mov dword ptr [rbp - 0x348], eax
		_0xffffff8000eb7d83: mov dword ptr [rbp - 0x35c], 0x50a14884
		_0xffffff8000eb7d8d: lea r8, [rip + jumptbl_0xffffff8000ebb93c]
		_0xffffff8000eb7d94: movabs r9, 0x2fff5bfbe797ffbe
		_0xffffff8000eb7d9e: movabs r10, 0x3fbfeedfc51bf7ef
		_0xffffff8000eb7da8: movabs r11, 0x2fc5f9fede7adfe7
		_0xffffff8000eb7db2: movabs rbx, 0x5fffb76f9f77ff7f
		_0xffffff8000eb7dbc: jmp _0xffffff8000ebbabc
		_0xffffff8000eb7dc1: mov rcx, qword ptr [rbp - 0x128]
		_0xffffff8000eb7dc8: mov eax, dword ptr [rbp - 0x1ec]
		_0xffffff8000eb7dce: mov dword ptr [rcx + 4], eax
		_0xffffff8000eb7dd1: jmp _0xffffff8000ebe494
		_0xffffff8000eb7dd6: mov esi, dword ptr [rdi + 4]
		_0xffffff8000eb7dd9: mov eax, 3
		_0xffffff8000eb7dde: xor edx, edx
		_0xffffff8000eb7de0: div esi
		_0xffffff8000eb7de2: imul eax, edx, 0x416b0f2
		_0xffffff8000eb7de8: mov ecx, eax
		_0xffffff8000eb7dea: imul ecx, ecx
		_0xffffff8000eb7ded: mov r8d, eax
		_0xffffff8000eb7df0: sub r8d, ecx
		_0xffffff8000eb7df3: add eax, 0x2f89c8e4
		_0xffffff8000eb7df8: imul eax, eax
		_0xffffff8000eb7dfb: lea ecx, [rax + r8 - 0x59ad0b10]
		_0xffffff8000eb7e03: add eax, r8d
		_0xffffff8000eb7e06: mov r8d, 0x59ad0b14
		_0xffffff8000eb7e0c: sub r8d, eax
		_0xffffff8000eb7e0f: mov eax, ecx
		_0xffffff8000eb7e11: and eax, r8d
		_0xffffff8000eb7e14: xor r8d, ecx
		_0xffffff8000eb7e17: lea eax, [r8 + rax*2]
		_0xffffff8000eb7e1b: mov r8d, eax
		_0xffffff8000eb7e1e: xor r8d, ecx
		_0xffffff8000eb7e21: sar eax, 1
		_0xffffff8000eb7e23: sar ecx, 1
		_0xffffff8000eb7e25: add ecx, eax
		_0xffffff8000eb7e27: sar r8d, 1
		_0xffffff8000eb7e2a: sub ecx, r8d
		_0xffffff8000eb7e2d: or ecx, edx
		_0xffffff8000eb7e2f: mov eax, 0x6eaf7a5a
		_0xffffff8000eb7e34: sub eax, ecx
		_0xffffff8000eb7e36: mov edx, eax
		_0xffffff8000eb7e38: and edx, ecx
		_0xffffff8000eb7e3a: xor eax, ecx
		_0xffffff8000eb7e3c: lea r8d, [rax + rdx*2]
		_0xffffff8000eb7e40: xor r8d, ecx
		_0xffffff8000eb7e43: mov eax, 0xf1f8edae
		_0xffffff8000eb7e48: sub eax, r8d
		_0xffffff8000eb7e4b: mov ecx, eax
		_0xffffff8000eb7e4d: and ecx, 0xa2854251
		_0xffffff8000eb7e53: mov edx, r8d
		_0xffffff8000eb7e56: and edx, 0xa2854251
		_0xffffff8000eb7e5c: add edx, 0x450a84a2
		_0xffffff8000eb7e62: sub edx, ecx
		_0xffffff8000eb7e64: and ecx, r8d
		_0xffffff8000eb7e67: add ecx, ecx
		_0xffffff8000eb7e69: and edx, 0xa2854251
		_0xffffff8000eb7e6f: add edx, ecx
		_0xffffff8000eb7e71: mov ecx, eax
		_0xffffff8000eb7e73: and ecx, 0x4952288a
		_0xffffff8000eb7e79: mov r9d, r8d
		_0xffffff8000eb7e7c: and r9d, 0x4952288a
		_0xffffff8000eb7e83: add r9d, 0x12a45114
		_0xffffff8000eb7e8a: sub r9d, ecx
		_0xffffff8000eb7e8d: and ecx, r8d
		_0xffffff8000eb7e90: add ecx, ecx
		_0xffffff8000eb7e92: and r9d, 0x4952288a
		_0xffffff8000eb7e99: add r9d, ecx
		_0xffffff8000eb7e9c: add r9d, edx
		_0xffffff8000eb7e9f: mov ecx, r8d
		_0xffffff8000eb7ea2: and ecx, 0x14289524
		_0xffffff8000eb7ea8: mov edx, eax
		_0xffffff8000eb7eaa: and edx, ecx
		_0xffffff8000eb7eac: add edx, edx
		_0xffffff8000eb7eae: and eax, 0x14289524
		_0xffffff8000eb7eb3: add eax, 0x8512a48
		_0xffffff8000eb7eb8: sub eax, ecx
		_0xffffff8000eb7eba: and eax, 0x14289524
		_0xffffff8000eb7ebf: add eax, edx
		_0xffffff8000eb7ec1: add eax, r9d
		_0xffffff8000eb7ec4: mov ecx, r8d
		_0xffffff8000eb7ec7: and ecx, 0x8a49224a
		_0xffffff8000eb7ecd: mov edx, eax
		_0xffffff8000eb7ecf: and edx, ecx
		_0xffffff8000eb7ed1: mov r9d, r8d
		_0xffffff8000eb7ed4: and r9d, 0x24924921
		_0xffffff8000eb7edb: mov r10d, eax
		_0xffffff8000eb7ede: and r10d, r9d
		_0xffffff8000eb7ee1: add r10d, r10d
		_0xffffff8000eb7ee4: mov r11d, eax
		_0xffffff8000eb7ee7: and r11d, 0x24924921
		_0xffffff8000eb7eee: add r11d, 0x9249242
		_0xffffff8000eb7ef5: sub r11d, r9d
		_0xffffff8000eb7ef8: and r11d, 0x24924921
		_0xffffff8000eb7eff: add r11d, r10d
		_0xffffff8000eb7f02: add edx, edx
		_0xffffff8000eb7f04: mov r9d, eax
		_0xffffff8000eb7f07: and r9d, 0x8a49224a
		_0xffffff8000eb7f0e: add r9d, 0x14924494
		_0xffffff8000eb7f15: sub r9d, ecx
		_0xffffff8000eb7f18: and r9d, 0x8a49224a
		_0xffffff8000eb7f1f: add r9d, edx
		_0xffffff8000eb7f22: and eax, 0x51249494
		_0xffffff8000eb7f27: and r8d, 0x51249494
		_0xffffff8000eb7f2e: add r8d, eax
		_0xffffff8000eb7f31: add r8d, r9d
		_0xffffff8000eb7f34: add r8d, r11d
		_0xffffff8000eb7f37: mov rcx, r8
		_0xffffff8000eb7f3a: xor rcx, 0xffffffff9f5797f8
		_0xffffff8000eb7f41: mov r9d, r8d
		_0xffffff8000eb7f44: and r9d, 0x9f5797f8
		_0xffffff8000eb7f4b: lea rcx, [rcx + r9*2]
		_0xffffff8000eb7f4f: movabs r9, 0xa92290a84a45424a
		_0xffffff8000eb7f59: and r9, rcx
		_0xffffff8000eb7f5c: movabs r10, 0x44892a42a4921521
		_0xffffff8000eb7f66: and r10, rcx
		_0xffffff8000eb7f69: cmp r8d, 0x60a86808
		_0xffffff8000eb7f70: sbb r8, r8
		_0xffffff8000eb7f73: and r8d, 1
		_0xffffff8000eb7f77: shl r8, 0x20
		_0xffffff8000eb7f7b: add r8, r10
		_0xffffff8000eb7f7e: add r8, r9
		_0xffffff8000eb7f81: movabs r9, 0x125445151128a894
		_0xffffff8000eb7f8b: and r9, rcx
		_0xffffff8000eb7f8e: add r9, r8
		_0xffffff8000eb7f91: mov r8, qword ptr [rdi + 8]
		_0xffffff8000eb7f95: mov cl, byte ptr [r8 + r9]
		_0xffffff8000eb7f99: mov al, cl
		_0xffffff8000eb7f9b: and al, 0xf9
		_0xffffff8000eb7f9d: sub cl, al
		_0xffffff8000eb7f9f: xor cl, al
		_0xffffff8000eb7fa1: mov eax, 2
		_0xffffff8000eb7fa6: xor edx, edx
		_0xffffff8000eb7fa8: div esi
		_0xffffff8000eb7faa: mov eax, edx
		_0xffffff8000eb7fac: xor eax, 0xa5b6f58f
		_0xffffff8000eb7fb1: mov r9d, eax
		_0xffffff8000eb7fb4: and r9d, 0x800009
		_0xffffff8000eb7fbb: and eax, 0x1122102
		_0xffffff8000eb7fc0: mov r10d, 0xf3e45264
		_0xffffff8000eb7fc6: sub r10d, eax
		_0xffffff8000eb7fc9: and r10d, 0x51522922
		_0xffffff8000eb7fd0: add r10d, r9d
		_0xffffff8000eb7fd3: add r10d, 0x242d4204
		_0xffffff8000eb7fda: mov eax, r10d
		_0xffffff8000eb7fdd: and eax, 0x71dd682e
		_0xffffff8000eb7fe2: xor r10d, 0xfbddfcfe
		_0xffffff8000eb7fe9: lea eax, [r10 + rax*2]
		_0xffffff8000eb7fed: imul edx, edx, 0x70c79e6a
		_0xffffff8000eb7ff3: sar edx, 1
		_0xffffff8000eb7ff5: mov r9d, edx
		_0xffffff8000eb7ff8: imul r9d, r9d
		_0xffffff8000eb7ffc: mov r10d, 7
		_0xffffff8000eb8002: sub r10d, r9d
		_0xffffff8000eb8005: add edx, 0x61a94b1d
		_0xffffff8000eb800b: imul edx, edx
		_0xffffff8000eb800e: add edx, r10d
		_0xffffff8000eb8011: and edx, 6
		_0xffffff8000eb8014: mov r9d, eax
		_0xffffff8000eb8017: and r9d, edx
		_0xffffff8000eb801a: xor edx, eax
		_0xffffff8000eb801c: lea r9d, [rdx + r9*2]
		_0xffffff8000eb8020: lea r10, [r9 + 0x202c2d36]
		_0xffffff8000eb8027: movabs r11, 0x7fffffff6ef6729d
		_0xffffff8000eb8031: and r11, r10
		_0xffffff8000eb8034: movabs rbx, 0xffffffff6ef6729d
		_0xffffff8000eb803e: xor rbx, r10
		_0xffffff8000eb8041: lea r10, [rbx + r11*2]
		_0xffffff8000eb8045: cmp r9d, 0x70dd602d
		_0xffffff8000eb804c: sbb r9, r9
		_0xffffff8000eb804f: and r9d, 1
		_0xffffff8000eb8053: shl r9, 0x20
		_0xffffff8000eb8057: mov r11, r10
		_0xffffff8000eb805a: and r11, r9
		_0xffffff8000eb805d: xor r9, r10
		_0xffffff8000eb8060: lea r9, [r9 + r11*2]
		_0xffffff8000eb8064: and cl, byte ptr [r8 + r9]
		_0xffffff8000eb8068: mov r9b, cl
		_0xffffff8000eb806b: add r9b, r9b
		_0xffffff8000eb806e: mov al, 0xde
		_0xffffff8000eb8070: sub al, r9b
		_0xffffff8000eb8073: mov dl, al
		_0xffffff8000eb8075: xor dl, r9b
		_0xffffff8000eb8078: and al, r9b
		_0xffffff8000eb807b: add al, al
		_0xffffff8000eb807d: add al, dl
		_0xffffff8000eb807f: mov dl, r9b
		_0xffffff8000eb8082: and dl, 0xa0
		_0xffffff8000eb8085: mov r10b, r9b
		_0xffffff8000eb8088: sub r10b, dl
		_0xffffff8000eb808b: and r10b, al
		_0xffffff8000eb808e: and dl, al
		_0xffffff8000eb8090: xor cl, 0x6f
		_0xffffff8000eb8093: and r9b, 0xde
		_0xffffff8000eb8097: add r9b, cl
		_0xffffff8000eb809a: sub r9b, dl
		_0xffffff8000eb809d: sub r9b, r10b
		_0xffffff8000eb80a0: xor r9b, 0xa8
		_0xffffff8000eb80a4: mov eax, 1
		_0xffffff8000eb80a9: xor edx, edx
		_0xffffff8000eb80ab: div esi
		_0xffffff8000eb80ad: mov eax, edx
		_0xffffff8000eb80af: neg eax
		_0xffffff8000eb80b1: and eax, 0xf495921a
		_0xffffff8000eb80b6: imul eax, eax, 0x7c8c2dc5
		_0xffffff8000eb80bc: sar eax, 1
		_0xffffff8000eb80be: mov ecx, eax
		_0xffffff8000eb80c0: xor ecx, 1
		_0xffffff8000eb80c3: neg ecx
		_0xffffff8000eb80c5: lea eax, [rax + rcx + 1]
		_0xffffff8000eb80c9: xor eax, 0x5b07f10e
		_0xffffff8000eb80ce: not edx
		_0xffffff8000eb80d0: mov ecx, edx
		_0xffffff8000eb80d2: or ecx, 0xf649e9c4
		_0xffffff8000eb80d8: and ecx, eax
		_0xffffff8000eb80da: and edx, 0xa4f80ef1
		_0xffffff8000eb80e0: xor edx, ecx
		_0xffffff8000eb80e2: mov eax, edx
		_0xffffff8000eb80e4: not eax
		_0xffffff8000eb80e6: lea ecx, [rdx + 0x4b754fbe]
		_0xffffff8000eb80ec: mov r10d, ecx
		_0xffffff8000eb80ef: and r10d, eax
		_0xffffff8000eb80f2: xor ecx, eax
		_0xffffff8000eb80f4: lea eax, [rcx + r10*2]
		_0xffffff8000eb80f8: xor eax, 0x1250390e
		_0xffffff8000eb80fd: mov ecx, eax
		_0xffffff8000eb80ff: and ecx, 0x2249444a
		_0xffffff8000eb8105: xor edx, 0xedafc6f1
		_0xffffff8000eb810b: mov r10d, edx
		_0xffffff8000eb810e: and r10d, 0x2249444a
		_0xffffff8000eb8115: add r10d, 0x4928894
		_0xffffff8000eb811c: sub r10d, ecx
		_0xffffff8000eb811f: and r10d, 0x2249444a
		_0xffffff8000eb8126: mov ecx, eax
		_0xffffff8000eb8128: and ecx, 0x549212a4
		_0xffffff8000eb812e: mov r11d, edx
		_0xffffff8000eb8131: and r11d, 0x549212a4
		_0xffffff8000eb8138: add r11d, 0x29242548
		_0xffffff8000eb813f: sub r11d, ecx
		_0xffffff8000eb8142: and r11d, 0x549212a4
		_0xffffff8000eb8149: add r11d, r10d
		_0xffffff8000eb814c: and eax, 0x8924a911
		_0xffffff8000eb8151: and edx, 0x8924a911
		_0xffffff8000eb8157: add edx, 0x12495222
		_0xffffff8000eb815d: sub edx, eax
		_0xffffff8000eb815f: and edx, 0x8924a911
		_0xffffff8000eb8165: add edx, r11d
		_0xffffff8000eb8168: mov eax, edx
		_0xffffff8000eb816a: and eax, 0x7ddebffb
		_0xffffff8000eb816f: xor edx, 0xfddebffb
		_0xffffff8000eb8175: lea ecx, [rdx + rax*2]
		_0xffffff8000eb8178: mov r10, rcx
		_0xffffff8000eb817b: xor r10, 0xffffffffb6abf048
		_0xffffff8000eb8182: mov r11d, ecx
		_0xffffff8000eb8185: and r11d, 0xb6abf048
		_0xffffff8000eb818c: lea r10, [r10 + r11*2]
		_0xffffff8000eb8190: movabs r11, 0x48894a2912449254
		_0xffffff8000eb819a: and r11, r10
		_0xffffff8000eb819d: cmp ecx, 0x49540fb8
		_0xffffff8000eb81a3: sbb rcx, rcx
		_0xffffff8000eb81a6: and ecx, 1
		_0xffffff8000eb81a9: shl rcx, 0x20
		_0xffffff8000eb81ad: xor r11, rcx
		_0xffffff8000eb81b0: and rcx, r10
		_0xffffff8000eb81b3: add rcx, rcx
		_0xffffff8000eb81b6: add rcx, r11
		_0xffffff8000eb81b9: movabs r11, 0xb776b5d6edbb6dab
		_0xffffff8000eb81c3: and r11, r10
		_0xffffff8000eb81c6: add r11, rcx
		_0xffffff8000eb81c9: mov al, byte ptr [r8 + r11]
		_0xffffff8000eb81cd: not al
		_0xffffff8000eb81cf: mov cl, al
		_0xffffff8000eb81d1: and cl, 0x47
		_0xffffff8000eb81d4: sub al, cl
		_0xffffff8000eb81d6: mov dl, byte ptr [r8]
		_0xffffff8000eb81d9: not dl
		_0xffffff8000eb81db: and al, dl
		_0xffffff8000eb81dd: and dl, cl
		_0xffffff8000eb81df: add dl, al
		_0xffffff8000eb81e1: mov al, dl
		_0xffffff8000eb81e3: xor al, 0xfb
		_0xffffff8000eb81e5: not dl
		_0xffffff8000eb81e7: add dl, dl
		_0xffffff8000eb81e9: and dl, 8
		_0xffffff8000eb81ec: add al, dl
		_0xffffff8000eb81ee: add al, 0xf2
		_0xffffff8000eb81f0: mov cl, al
		_0xffffff8000eb81f2: and cl, 0xa
		_0xffffff8000eb81f5: or cl, 4
		_0xffffff8000eb81f8: mov r10b, 0xe
		_0xffffff8000eb81fb: sub r10b, dl
		_0xffffff8000eb81fe: mov dl, r10b
		_0xffffff8000eb8201: and dl, 0xa
		_0xffffff8000eb8204: sub cl, dl
		_0xffffff8000eb8206: and dl, al
		_0xffffff8000eb8208: mov r11b, al
		_0xffffff8000eb820b: and r11b, 0x54
		_0xffffff8000eb820f: mov bl, r10b
		_0xffffff8000eb8212: and bl, r11b
		_0xffffff8000eb8215: add bl, bl
		_0xffffff8000eb8217: mov r14b, r10b
		_0xffffff8000eb821a: and r14b, 0x54
		_0xffffff8000eb821e: or r14b, 0x28
		_0xffffff8000eb8222: sub r14b, r11b
		_0xffffff8000eb8225: and r14b, 0x54
		_0xffffff8000eb8229: or r14b, bl
		_0xffffff8000eb822c: add dl, dl
		_0xffffff8000eb822e: and cl, 0xa
		_0xffffff8000eb8231: or cl, dl
		_0xffffff8000eb8233: and al, 0xa1
		_0xffffff8000eb8235: and r10b, 0xa0
		_0xffffff8000eb8239: add r10b, al
		_0xffffff8000eb823c: or r10b, cl
		_0xffffff8000eb823f: add r10b, r14b
		_0xffffff8000eb8242: xor r10b, 0xd9
		_0xffffff8000eb8246: mov r11b, r10b
		_0xffffff8000eb8249: add r11b, r9b
		_0xffffff8000eb824c: and r10b, r9b
		_0xffffff8000eb824f: add r10b, r10b
		_0xffffff8000eb8252: sub r11b, r10b
		_0xffffff8000eb8255: mov eax, 5
		_0xffffff8000eb825a: xor edx, edx
		_0xffffff8000eb825c: div esi
		_0xffffff8000eb825e: mov eax, 0x7bfef7dd
		_0xffffff8000eb8263: sub eax, edx
		_0xffffff8000eb8265: mov ecx, edx
		_0xffffff8000eb8267: and ecx, 1
		_0xffffff8000eb826a: mov r9d, eax
		_0xffffff8000eb826d: and r9d, ecx
		_0xffffff8000eb8270: add r9d, r9d
		_0xffffff8000eb8273: mov r10d, eax
		_0xffffff8000eb8276: and r10d, 0x52452251
		_0xffffff8000eb827d: neg r10d
		_0xffffff8000eb8280: lea ecx, [rcx + r10 + 0x248a44a2]
		_0xffffff8000eb8288: and ecx, 0x52452251
		_0xffffff8000eb828e: add ecx, r9d
		_0xffffff8000eb8291: mov r9d, edx
		_0xffffff8000eb8294: and r9d, 4
		_0xffffff8000eb8298: mov r10d, eax
		_0xffffff8000eb829b: and r10d, r9d
		_0xffffff8000eb829e: add r10d, r10d
		_0xffffff8000eb82a1: mov ebx, eax
		_0xffffff8000eb82a3: and ebx, 0x249248a4
		_0xffffff8000eb82a9: neg ebx
		_0xffffff8000eb82ab: lea r9d, [r9 + rbx + 0x9249148]
		_0xffffff8000eb82b3: and r9d, 0x249248a4
		_0xffffff8000eb82ba: add r9d, r10d
		_0xffffff8000eb82bd: add r9d, ecx
		_0xffffff8000eb82c0: mov ecx, edx
		_0xffffff8000eb82c2: and ecx, 2
		_0xffffff8000eb82c5: mov r10d, eax
		_0xffffff8000eb82c8: and r10d, ecx
		_0xffffff8000eb82cb: add r10d, r10d
		_0xffffff8000eb82ce: and eax, 0x928950a
		_0xffffff8000eb82d3: neg eax
		_0xffffff8000eb82d5: lea eax, [rcx + rax + 0x12512a14]
		_0xffffff8000eb82dc: and eax, 0x8928950a
		_0xffffff8000eb82e1: add eax, r10d
		_0xffffff8000eb82e4: add eax, r9d
		_0xffffff8000eb82e7: xor eax, 0x9489a7ba
		_0xffffff8000eb82ec: mov ecx, 1
		_0xffffff8000eb82f1: sub ecx, edx
		_0xffffff8000eb82f3: mov r9d, ecx
		_0xffffff8000eb82f6: xor r9d, edx
		_0xffffff8000eb82f9: and ecx, edx
		_0xffffff8000eb82fb: mov r10d, edx
		_0xffffff8000eb82fe: xor r10d, 0x9489a7ba
		_0xffffff8000eb8305: lea ebx, [r10 + rax + 0x537a27f6]
		_0xffffff8000eb830d: and r10d, eax
		_0xffffff8000eb8310: add r10d, r10d
		_0xffffff8000eb8313: sub ebx, r10d
		_0xffffff8000eb8316: mov eax, ebx
		_0xffffff8000eb8318: xor eax, 0x6bb12189
		_0xffffff8000eb831d: lea ecx, [r9 + rcx*2]
		_0xffffff8000eb8321: shl edx, cl
		_0xffffff8000eb8323: and edx, 0xa
		_0xffffff8000eb8326: add edx, eax
		_0xffffff8000eb8328: and ebx, 0x6bb12189
		_0xffffff8000eb832e: lea ecx, [rdx + rbx*2]
		_0xffffff8000eb8331: mov r9, 0xffffffffc4d5bea4
		_0xffffff8000eb8338: sub r9, rcx
		_0xffffff8000eb833b: movabs r10, 0x44494a4909521524
		_0xffffff8000eb8345: mov rbx, r9
		_0xffffff8000eb8348: and rbx, r10
		_0xffffff8000eb834b: mov rax, rcx
		_0xffffff8000eb834e: and rax, 0x9521524
		_0xffffff8000eb8354: movabs rdx, 0x892949212a42a48
		_0xffffff8000eb835e: add rdx, rax
		_0xffffff8000eb8361: sub rdx, rbx
		_0xffffff8000eb8364: and rdx, r10
		_0xffffff8000eb8367: and rbx, rcx
		_0xffffff8000eb836a: add rbx, rbx
		_0xffffff8000eb836d: add rbx, rdx
		_0xffffff8000eb8370: movabs r10, 0xa9149112a4894852
		_0xffffff8000eb837a: and r10, r9
		_0xffffff8000eb837d: mov eax, ecx
		_0xffffff8000eb837f: and eax, 0xa4894852
		_0xffffff8000eb8384: add rax, r10
		_0xffffff8000eb8387: add rax, rbx
		_0xffffff8000eb838a: movabs r10, 0x12a224a45224a289
		_0xffffff8000eb8394: and r9, r10
		_0xffffff8000eb8397: mov rbx, rcx
		_0xffffff8000eb839a: and rbx, 0x5224a289
		_0xffffff8000eb83a1: movabs rdx, 0x5444948a4494512
		_0xffffff8000eb83ab: add rdx, rbx
		_0xffffff8000eb83ae: sub rdx, r9
		_0xffffff8000eb83b1: and rdx, r10
		_0xffffff8000eb83b4: and r9, rcx
		_0xffffff8000eb83b7: add r9, r9
		_0xffffff8000eb83ba: add r9, rdx
		_0xffffff8000eb83bd: add r9, rax
		_0xffffff8000eb83c0: movabs r10, 0xa85128a48a924489
		_0xffffff8000eb83ca: mov rbx, r9
		_0xffffff8000eb83cd: and rbx, r10
		_0xffffff8000eb83d0: mov eax, ecx
		_0xffffff8000eb83d2: and eax, 0x8a924489
		_0xffffff8000eb83d7: movabs rdx, 0x50a2514915248912
		_0xffffff8000eb83e1: add rdx, rax
		_0xffffff8000eb83e4: sub rdx, rbx
		_0xffffff8000eb83e7: and rbx, rcx
		_0xffffff8000eb83ea: movabs rax, 0x128a454924292924
		_0xffffff8000eb83f4: mov r14, r9
		_0xffffff8000eb83f7: and r14, rax
		_0xffffff8000eb83fa: mov r15, rcx
		_0xffffff8000eb83fd: and r15, 0x24292924
		_0xffffff8000eb8404: movabs r12, 0x5148a9248525248
		_0xffffff8000eb840e: add r12, r15
		_0xffffff8000eb8411: sub r12, r14
		_0xffffff8000eb8414: and r14, rcx
		_0xffffff8000eb8417: movabs r15, 0x4524921251449252
		_0xffffff8000eb8421: and r15, r9
		_0xffffff8000eb8424: mov r9, r15
		_0xffffff8000eb8427: and r9, rcx
		_0xffffff8000eb842a: mov r13, rcx
		_0xffffff8000eb842d: and r13, 0x51449252
		_0xffffff8000eb8434: xor r13, r15
		_0xffffff8000eb8437: add r9, r9
		_0xffffff8000eb843a: add r9, r13
		_0xffffff8000eb843d: and r12, rax
		_0xffffff8000eb8440: add r14, r14
		_0xffffff8000eb8443: add r14, r12
		_0xffffff8000eb8446: add r14, r9
		_0xffffff8000eb8449: and rdx, r10
		_0xffffff8000eb844c: add rbx, rbx
		_0xffffff8000eb844f: add rbx, rdx
		_0xffffff8000eb8452: add rbx, r14
		_0xffffff8000eb8455: cmp ecx, 0x3b2a415c
		_0xffffff8000eb845b: sbb rcx, rcx
		_0xffffff8000eb845e: and ecx, 1
		_0xffffff8000eb8461: shl rcx, 0x20
		_0xffffff8000eb8465: mov r9, rbx
		_0xffffff8000eb8468: and r9, rcx
		_0xffffff8000eb846b: xor rcx, rbx
		_0xffffff8000eb846e: lea rcx, [rcx + r9*2]
		_0xffffff8000eb8472: mov cl, byte ptr [r8 + rcx]
		_0xffffff8000eb8476: mov eax, 4
		_0xffffff8000eb847b: xor edx, edx
		_0xffffff8000eb847d: div esi
		_0xffffff8000eb847f: mov eax, 0x7be9f7bf
		_0xffffff8000eb8484: sub eax, edx
		_0xffffff8000eb8486: mov r9d, eax
		_0xffffff8000eb8489: and r9d, edx
		_0xffffff8000eb848c: xor eax, edx
		_0xffffff8000eb848e: lea eax, [rax + r9*2]
		_0xffffff8000eb8492: xor eax, 0xb4049443
		_0xffffff8000eb8497: mov r9d, edx
		_0xffffff8000eb849a: or r9d, 0x64279818
		_0xffffff8000eb84a1: lea r10d, [rax + r9]
		_0xffffff8000eb84a5: and r9d, eax
		_0xffffff8000eb84a8: add r9d, r9d
		_0xffffff8000eb84ab: sub r10d, r9d
		_0xffffff8000eb84ae: mov eax, r10d
		_0xffffff8000eb84b1: xor eax, 0x6f54e12d
		_0xffffff8000eb84b6: lea r9d, [r10 + r10]
		_0xffffff8000eb84ba: and r9d, 0x7eefdaec
		_0xffffff8000eb84c1: xor r9d, 0x204618a4
		_0xffffff8000eb84c8: add r9d, eax
		_0xffffff8000eb84cb: imul eax, r9d, 0x2daaea8b
		_0xffffff8000eb84d2: add edx, edx
		_0xffffff8000eb84d4: mov r9d, edx
		_0xffffff8000eb84d7: and r9d, 0xc
		_0xffffff8000eb84db: and edx, 2
		_0xffffff8000eb84de: add edx, r9d
		_0xffffff8000eb84e1: imul edx, edx, 0x2daaea8b
		_0xffffff8000eb84e7: mov r9d, eax
		_0xffffff8000eb84ea: and r9d, edx
		_0xffffff8000eb84ed: xor eax, edx
		_0xffffff8000eb84ef: lea eax, [rax + r9*2]
		_0xffffff8000eb84f3: imul r9d, eax, 0xe1a6ad23
		_0xffffff8000eb84fa: mov r10, r9
		_0xffffff8000eb84fd: xor r10, 0xffffffffc49e1acb
		_0xffffff8000eb8504: mov ebx, r9d
		_0xffffff8000eb8507: and ebx, 0xc49e1acb
		_0xffffff8000eb850d: lea r10, [r10 + rbx*2]
		_0xffffff8000eb8511: cmp r9d, 0x3b61e535
		_0xffffff8000eb8518: sbb r9, r9
		_0xffffff8000eb851b: and r9d, 1
		_0xffffff8000eb851f: shl r9, 0x20
		_0xffffff8000eb8523: mov rbx, r10
		_0xffffff8000eb8526: and rbx, r9
		_0xffffff8000eb8529: xor r9, r10
		_0xffffff8000eb852c: lea r9, [r9 + rbx*2]
		_0xffffff8000eb8530: mov al, byte ptr [r8 + r9]
		_0xffffff8000eb8534: mov dl, cl
		_0xffffff8000eb8536: xor dl, al
		_0xffffff8000eb8538: and cl, al
		_0xffffff8000eb853a: add cl, cl
		_0xffffff8000eb853c: add cl, dl
		_0xffffff8000eb853e: mov al, cl
		_0xffffff8000eb8540: add al, al
		_0xffffff8000eb8542: add cl, 0x2f
		_0xffffff8000eb8545: mov dl, cl
		_0xffffff8000eb8547: and dl, 0xa2
		_0xffffff8000eb854a: and al, 0x5e
		_0xffffff8000eb854c: neg al
		_0xffffff8000eb854e: mov r9b, al
		_0xffffff8000eb8551: and r9b, 0xa2
		_0xffffff8000eb8555: or r9b, 0x44
		_0xffffff8000eb8559: sub r9b, dl
		_0xffffff8000eb855c: and dl, al
		_0xffffff8000eb855e: add dl, dl
		_0xffffff8000eb8560: and r9b, 0xa2
		_0xffffff8000eb8564: or r9b, dl
		_0xffffff8000eb8567: mov dl, cl
		_0xffffff8000eb8569: and dl, 9
		_0xffffff8000eb856c: or dl, 2
		_0xffffff8000eb856f: mov r10b, al
		_0xffffff8000eb8572: and r10b, 8
		_0xffffff8000eb8576: sub dl, r10b
		_0xffffff8000eb8579: and r10b, cl
		_0xffffff8000eb857c: add r10b, r10b
		_0xffffff8000eb857f: and dl, 9
		_0xffffff8000eb8582: or dl, r10b
		_0xffffff8000eb8585: or dl, r9b
		_0xffffff8000eb8588: and cl, 0x54
		_0xffffff8000eb858b: mov r9b, al
		_0xffffff8000eb858e: and r9b, 0x54
		_0xffffff8000eb8592: or r9b, 0x28
		_0xffffff8000eb8596: sub r9b, cl
		_0xffffff8000eb8599: and cl, al
		_0xffffff8000eb859b: add cl, cl
		_0xffffff8000eb859d: and r9b, 0x54
		_0xffffff8000eb85a1: or r9b, cl
		_0xffffff8000eb85a4: add r9b, dl
		_0xffffff8000eb85a7: xor r9b, r11b
		_0xffffff8000eb85aa: xor r9b, 0x52
		_0xffffff8000eb85ae: mov eax, 6
		_0xffffff8000eb85b3: xor edx, edx
		_0xffffff8000eb85b5: div esi
		_0xffffff8000eb85b7: mov eax, edx
		_0xffffff8000eb85b9: xor eax, 0x1d9675a3
		_0xffffff8000eb85be: mov ecx, eax
		_0xffffff8000eb85c0: shl ecx, 0xe
		_0xffffff8000eb85c3: and ecx, 0x10000
		_0xffffff8000eb85c9: or ecx, eax
		_0xffffff8000eb85cb: xor ecx, 0x236b8e1e
		_0xffffff8000eb85d1: mov eax, ecx
		_0xffffff8000eb85d3: shl eax, 0xe
		_0xffffff8000eb85d6: and eax, 0x10000
		_0xffffff8000eb85db: xor eax, ecx
		_0xffffff8000eb85dd: lea ecx, [rax + rax - 0x2ea40e12]
		_0xffffff8000eb85e4: mov r10d, ecx
		_0xffffff8000eb85e7: and r10d, 0xa0a05240
		_0xffffff8000eb85ee: add eax, 0xe8adf8f7
		_0xffffff8000eb85f3: mov r11d, eax
		_0xffffff8000eb85f6: and r11d, 0x51522924
		_0xffffff8000eb85fd: mov ebx, 0xf2f47b68
		_0xffffff8000eb8602: sub ebx, r11d
		_0xffffff8000eb8605: and ebx, 0x51522924
		_0xffffff8000eb860b: add ebx, r10d
		_0xffffff8000eb860e: mov r10d, ecx
		_0xffffff8000eb8611: and r10d, 0x49020812
		_0xffffff8000eb8618: mov r11d, eax
		_0xffffff8000eb861b: and r11d, 0xa4854489
		_0xffffff8000eb8622: mov r14d, 0x5b7efbf7
		_0xffffff8000eb8628: lea r11d, [r11 + r14 + 0x490a8912]
		_0xffffff8000eb8630: and r11d, 0xa4854489
		_0xffffff8000eb8637: add r11d, r10d
		_0xffffff8000eb863a: add r11d, ebx
		_0xffffff8000eb863d: and ecx, 0x144020a0
		_0xffffff8000eb8643: and eax, 0xa289252
		_0xffffff8000eb8648: add eax, 0x45124a4
		_0xffffff8000eb864d: add eax, 0x5dfefb0
		_0xffffff8000eb8652: and eax, 0xa289252
		_0xffffff8000eb8657: add eax, ecx
		_0xffffff8000eb8659: add eax, r11d
		_0xffffff8000eb865c: mov ecx, eax
		_0xffffff8000eb865e: and ecx, 0x214a48a1
		_0xffffff8000eb8664: mov r10d, eax
		_0xffffff8000eb8667: and r10d, 0x54252254
		_0xffffff8000eb866e: mov r11d, 0xa84a44a8
		_0xffffff8000eb8674: sub r11d, r10d
		_0xffffff8000eb8677: and r11d, 0x54252254
		_0xffffff8000eb867e: add r11d, ecx
		_0xffffff8000eb8681: and eax, 0x8a90950a
		_0xffffff8000eb8686: and edx, 5
		_0xffffff8000eb8689: lea ecx, [rax + rdx*2]
		_0xffffff8000eb868c: add ecx, r11d
		_0xffffff8000eb868f: mov r10, rcx
		_0xffffff8000eb8692: xor r10, 0xffffffffd963cdd3
		_0xffffff8000eb8699: mov r11d, ecx
		_0xffffff8000eb869c: and r11d, 0xd963cdd3
		_0xffffff8000eb86a3: lea r10, [r10 + r11*2]
		_0xffffff8000eb86a7: movabs r11, 0x489152490a25424a
		_0xffffff8000eb86b1: and r11, r10
		_0xffffff8000eb86b4: cmp ecx, 0x269c322d
		_0xffffff8000eb86ba: sbb rcx, rcx
		_0xffffff8000eb86bd: and ecx, 1
		_0xffffff8000eb86c0: shl rcx, 0x20
		_0xffffff8000eb86c4: xor r11, rcx
		_0xffffff8000eb86c7: movabs rbx, 0x224a2494a48894a4
		_0xffffff8000eb86d1: mov rax, r10
		_0xffffff8000eb86d4: and rax, rbx
		_0xffffff8000eb86d7: movabs rdx, 0x4494492949112948
		_0xffffff8000eb86e1: sub rdx, rax
		_0xffffff8000eb86e4: and rdx, rbx
		_0xffffff8000eb86e7: add rdx, r11
		_0xffffff8000eb86ea: and rcx, r10
		_0xffffff8000eb86ed: add rcx, rcx
		_0xffffff8000eb86f0: add rcx, rdx
		_0xffffff8000eb86f3: movabs r11, 0x9524892251522911
		_0xffffff8000eb86fd: and r11, r10
		_0xffffff8000eb8700: add r11, rcx
		_0xffffff8000eb8703: mov cl, byte ptr [r8 + r11]
		_0xffffff8000eb8707: mov eax, 7
		_0xffffff8000eb870c: xor edx, edx
		_0xffffff8000eb870e: div esi
		_0xffffff8000eb8710: lea eax, [rdx + rdx]
		_0xffffff8000eb8713: mov r10d, eax
		_0xffffff8000eb8716: or r10d, 0xa
		_0xffffff8000eb871a: xor r10d, 4
		_0xffffff8000eb871e: or eax, 4
		_0xffffff8000eb8721: xor eax, 0xa
		_0xffffff8000eb8724: and eax, r10d
		_0xffffff8000eb8727: xor eax, 0xe
		_0xffffff8000eb872a: xor edx, 0x7db9afbf
		_0xffffff8000eb8730: add edx, 0xf7d7f7c8
		_0xffffff8000eb8736: mov r10d, eax
		_0xffffff8000eb8739: and r10d, edx
		_0xffffff8000eb873c: xor edx, eax
		_0xffffff8000eb873e: lea r10d, [rdx + r10*2]
		_0xffffff8000eb8742: mov r11, 0xffffffff8a6e5879
		_0xffffff8000eb8749: sub r11, r10
		_0xffffff8000eb874c: mov rbx, r11
		_0xffffff8000eb874f: and rbx, r10
		_0xffffff8000eb8752: xor r11, r10
		_0xffffff8000eb8755: lea r11, [r11 + rbx*2]
		_0xffffff8000eb8759: mov rbx, r11
		_0xffffff8000eb875c: and rbx, r10
		_0xffffff8000eb875f: xor r11, r10
		_0xffffff8000eb8762: lea r11, [r11 + rbx*2]
		_0xffffff8000eb8766: cmp r10d, 0x7591a787
		_0xffffff8000eb876d: sbb r10, r10
		_0xffffff8000eb8770: and r10d, 1
		_0xffffff8000eb8774: shl r10, 0x20
		_0xffffff8000eb8778: mov rbx, r11
		_0xffffff8000eb877b: and rbx, r10
		_0xffffff8000eb877e: xor r10, r11
		_0xffffff8000eb8781: lea r10, [r10 + rbx*2]
		_0xffffff8000eb8785: xor dl, dl
		_0xffffff8000eb8787: sub dl, byte ptr [r8 + r10]
		_0xffffff8000eb878b: mov al, cl
		_0xffffff8000eb878d: xor al, dl
		_0xffffff8000eb878f: and dl, cl
		_0xffffff8000eb8791: add dl, dl
		_0xffffff8000eb8793: add dl, al
		_0xffffff8000eb8795: mov cl, 0x5b
		_0xffffff8000eb8797: mov al, dl
		_0xffffff8000eb8799: mul cl
		_0xffffff8000eb879b: mov cl, al
		_0xffffff8000eb879d: add dl, dl
		_0xffffff8000eb879f: mov al, dl
		_0xffffff8000eb87a1: and al, 0x36
		_0xffffff8000eb87a3: mov dl, 0xa5
		_0xffffff8000eb87a5: mul dl
		_0xffffff8000eb87a7: add cl, 0x99
		_0xffffff8000eb87aa: mov dl, al
		_0xffffff8000eb87ac: xor dl, cl
		_0xffffff8000eb87ae: and cl, al
		_0xffffff8000eb87b0: add cl, cl
		_0xffffff8000eb87b2: mov al, cl
		_0xffffff8000eb87b4: add al, dl
		_0xffffff8000eb87b6: mov cl, 0xd3
		_0xffffff8000eb87b8: mul cl
		_0xffffff8000eb87ba: xor al, 0x52
		_0xffffff8000eb87bc: mov r10b, r9b
		_0xffffff8000eb87bf: add r10b, al
		_0xffffff8000eb87c2: and al, r9b
		_0xffffff8000eb87c5: add al, al
		_0xffffff8000eb87c7: sub r10b, al
		_0xffffff8000eb87ca: mov eax, 9
		_0xffffff8000eb87cf: xor edx, edx
		_0xffffff8000eb87d1: div esi
		_0xffffff8000eb87d3: mov eax, edx
		_0xffffff8000eb87d5: xor eax, 0xc6ce54dc
		_0xffffff8000eb87da: lea ecx, [rax + rax]
		_0xffffff8000eb87dd: lea r9d, [rax - 0x74ca604d]
		_0xffffff8000eb87e4: and ecx, 0x4082926
		_0xffffff8000eb87ea: sub r9d, ecx
		_0xffffff8000eb87ed: neg ecx
		_0xffffff8000eb87ef: lea eax, [rax + rcx - 0x11b4c309]
		_0xffffff8000eb87f6: mov ecx, 0x5c9ea2b9
		_0xffffff8000eb87fb: sub ecx, r9d
		_0xffffff8000eb87fe: mov r11d, ecx
		_0xffffff8000eb8801: and r11d, eax
		_0xffffff8000eb8804: xor ecx, eax
		_0xffffff8000eb8806: lea eax, [rcx + r11*2]
		_0xffffff8000eb880a: lea rcx, [rip]
		_0xffffff8000eb8811: mov rcx, qword ptr [rcx + 0x1204]
		// Inject value
		//mov rcx, 0x29444c6318eac681
		_0xffffff8000eb8818: mov ecx, eax
		_0xffffff8000eb881a: xor ecx, r9d
		_0xffffff8000eb881d: mov r11d, r9d
		_0xffffff8000eb8820: and r11d, eax
		_0xffffff8000eb8823: mov ebx, r9d
		_0xffffff8000eb8826: and ebx, 0x9425148a
		_0xffffff8000eb882c: mov r14d, eax
		_0xffffff8000eb882f: and r14d, ebx
		_0xffffff8000eb8832: add r14d, r14d
		_0xffffff8000eb8835: mov r15d, eax
		_0xffffff8000eb8838: and r15d, 0x9425148a
		_0xffffff8000eb883f: add r15d, 0x284a2914
		_0xffffff8000eb8846: sub r15d, ebx
		_0xffffff8000eb8849: and r15d, 0x9425148a
		_0xffffff8000eb8850: add r15d, r14d
		_0xffffff8000eb8853: and ecx, 0x4a8a4924
		_0xffffff8000eb8859: and r11d, 0x4a8a4924
		_0xffffff8000eb8860: add r11d, r11d
		_0xffffff8000eb8863: add r11d, ecx
		_0xffffff8000eb8866: and eax, 0x2150a251
		_0xffffff8000eb886b: add edx, edx
		_0xffffff8000eb886d: xor edx, 0x2df9b9c8
		_0xffffff8000eb8873: lea ecx, [rdx + rdx]
		_0xffffff8000eb8876: and ecx, 0x10
		_0xffffff8000eb8879: neg ecx
		_0xffffff8000eb887b: lea ecx, [rdx + rcx + 8]
		_0xffffff8000eb887f: and ecx, 0x1e
		_0xffffff8000eb8882: and r9d, 0x2150a251
		_0xffffff8000eb8889: add r9d, ecx
		_0xffffff8000eb888c: add r9d, eax
		_0xffffff8000eb888f: add r9d, r11d
		_0xffffff8000eb8892: add r9d, r15d
		_0xffffff8000eb8895: mov rcx, r9
		_0xffffff8000eb8898: xor rcx, 0xfffffffff24ff494
		_0xffffff8000eb889f: mov r11d, r9d
		_0xffffff8000eb88a2: and r11d, 0xf24ff494
		_0xffffff8000eb88a9: lea rcx, [rcx + r11*2]
		_0xffffff8000eb88ad: cmp r9d, 0xdb00b6c
		_0xffffff8000eb88b4: sbb r9, r9
		_0xffffff8000eb88b7: and r9d, 1
		_0xffffff8000eb88bb: shl r9, 0x20
		_0xffffff8000eb88bf: mov r11, rcx
		_0xffffff8000eb88c2: and r11, r9
		_0xffffff8000eb88c5: xor r9, rcx
		_0xffffff8000eb88c8: lea rcx, [r9 + r11*2]
		_0xffffff8000eb88cc: mov cl, byte ptr [r8 + rcx]
		_0xffffff8000eb88d0: mov eax, 8
		_0xffffff8000eb88d5: xor edx, edx
		_0xffffff8000eb88d7: div esi
		_0xffffff8000eb88d9: mov eax, 0x7ffd326b
		_0xffffff8000eb88de: sub eax, edx
		_0xffffff8000eb88e0: mov r9d, edx
		_0xffffff8000eb88e3: and r9d, 4
		_0xffffff8000eb88e7: mov r11d, eax
		_0xffffff8000eb88ea: and r11d, r9d
		_0xffffff8000eb88ed: add r11d, r11d
		_0xffffff8000eb88f0: mov ebx, eax
		_0xffffff8000eb88f2: and ebx, 0x229112a4
		_0xffffff8000eb88f8: neg ebx
		_0xffffff8000eb88fa: lea r9d, [r9 + rbx + 0x5222548]
		_0xffffff8000eb8902: and r9d, 0x229112a4
		_0xffffff8000eb8909: add r9d, r11d
		_0xffffff8000eb890c: mov r11d, edx
		_0xffffff8000eb890f: and r11d, 2
		_0xffffff8000eb8913: mov ebx, eax
		_0xffffff8000eb8915: and ebx, r11d
		_0xffffff8000eb8918: add ebx, ebx
		_0xffffff8000eb891a: mov r14d, eax
		_0xffffff8000eb891d: and r14d, 0x492a4912
		_0xffffff8000eb8924: neg r14d
		_0xffffff8000eb8927: lea r11d, [r11 + r14 + 0x12549224]
		_0xffffff8000eb892f: and r11d, 0x492a4912
		_0xffffff8000eb8936: add r11d, ebx
		_0xffffff8000eb8939: add r11d, r9d
		_0xffffff8000eb893c: mov r9d, edx
		_0xffffff8000eb893f: and r9d, 9
		_0xffffff8000eb8943: mov ebx, eax
		_0xffffff8000eb8945: and ebx, r9d
		_0xffffff8000eb8948: add ebx, ebx
		_0xffffff8000eb894a: and eax, 0x1444a449
		_0xffffff8000eb894f: neg eax
		_0xffffff8000eb8951: lea eax, [r9 + rax + 0x28894892]
		_0xffffff8000eb8959: and eax, 0x9444a449
		_0xffffff8000eb895e: add eax, ebx
		_0xffffff8000eb8960: add eax, r11d
		_0xffffff8000eb8963: xor eax, 0xc52516a2
		_0xffffff8000eb8968: mov r9d, edx
		_0xffffff8000eb896b: xor r9d, 0xc52516a2
		_0xffffff8000eb8972: lea r11d, [r9 + rax - 0x6810100b]
		_0xffffff8000eb897a: and r9d, eax
		_0xffffff8000eb897d: add r9d, r9d
		_0xffffff8000eb8980: sub r11d, r9d
		_0xffffff8000eb8983: add edx, edx
		_0xffffff8000eb8985: mov eax, edx
		_0xffffff8000eb8987: and eax, 4
		_0xffffff8000eb898a: mov r9d, r11d
		_0xffffff8000eb898d: and r9d, eax
		_0xffffff8000eb8990: mov ebx, edx
		_0xffffff8000eb8992: and ebx, 0x10
		_0xffffff8000eb8995: mov r14d, r11d
		_0xffffff8000eb8998: and r14d, ebx
		_0xffffff8000eb899b: add r14d, r14d
		_0xffffff8000eb899e: mov r15d, r11d
		_0xffffff8000eb89a1: and r15d, 0x92449451
		_0xffffff8000eb89a8: neg r15d
		_0xffffff8000eb89ab: lea ebx, [rbx + r15 + 0x248928a2]
		_0xffffff8000eb89b3: and ebx, 0x92449451
		_0xffffff8000eb89b9: add ebx, r14d
		_0xffffff8000eb89bc: add r9d, r9d
		_0xffffff8000eb89bf: mov r14d, r11d
		_0xffffff8000eb89c2: and r14d, 0x49294924
		_0xffffff8000eb89c9: neg r14d
		_0xffffff8000eb89cc: lea eax, [rax + r14 + 0x12529248]
		_0xffffff8000eb89d4: and eax, 0x49294924
		_0xffffff8000eb89d9: add eax, r9d
		_0xffffff8000eb89dc: and r11d, 0x2492228a
		_0xffffff8000eb89e3: and edx, 2
		_0xffffff8000eb89e6: add edx, r11d
		_0xffffff8000eb89e9: add edx, eax
		_0xffffff8000eb89eb: add edx, ebx
		_0xffffff8000eb89ed: cmp edx, 0x17ed2260
		_0xffffff8000eb89f3: sbb r9, r9
		_0xffffff8000eb89f6: and r9d, 1
		_0xffffff8000eb89fa: shl r9, 0x20
		_0xffffff8000eb89fe: add r9, rdx
		_0xffffff8000eb8a01: or cl, byte ptr [r9 + r8 - 0x17ed2260]
		_0xffffff8000eb8a09: mov al, cl
		_0xffffff8000eb8a0b: add al, al
		_0xffffff8000eb8a0d: mov dl, al
		_0xffffff8000eb8a0f: and dl, 0x82
		_0xffffff8000eb8a12: and al, 0x14
		_0xffffff8000eb8a14: or al, dl
		_0xffffff8000eb8a16: neg al
		_0xffffff8000eb8a18: add cl, 0x4b
		_0xffffff8000eb8a1b: mov dl, cl
		_0xffffff8000eb8a1d: xor dl, al
		_0xffffff8000eb8a1f: and cl, al
		_0xffffff8000eb8a21: add cl, cl
		_0xffffff8000eb8a23: add cl, dl
		_0xffffff8000eb8a25: xor cl, 0x87
		_0xffffff8000eb8a28: mov al, cl
		_0xffffff8000eb8a2a: add al, al
		_0xffffff8000eb8a2c: add cl, 0xa1
		_0xffffff8000eb8a2f: and al, 0x42
		_0xffffff8000eb8a31: sub cl, al
		_0xffffff8000eb8a33: xor cl, 0x2a
		_0xffffff8000eb8a36: mov al, cl
		_0xffffff8000eb8a38: shl al, 3
		_0xffffff8000eb8a3b: and al, 0x20
		_0xffffff8000eb8a3d: xor al, cl
		_0xffffff8000eb8a3f: mov r9b, al
		_0xffffff8000eb8a42: shl r9b, 7
		_0xffffff8000eb8a46: xor r9b, al
		_0xffffff8000eb8a49: mov eax, 0xa
		_0xffffff8000eb8a4e: xor edx, edx
		_0xffffff8000eb8a50: div esi
		_0xffffff8000eb8a52: mov eax, 0xb110db45
		_0xffffff8000eb8a57: sub eax, edx
		_0xffffff8000eb8a59: lea ecx, [rdx + 0x4eef24bc]
		_0xffffff8000eb8a5f: mov r11d, eax
		_0xffffff8000eb8a62: and r11d, ecx
		_0xffffff8000eb8a65: xor eax, ecx
		_0xffffff8000eb8a67: lea ecx, [rax + r11*2]
		_0xffffff8000eb8a6b: and ecx, 0x1f
		_0xffffff8000eb8a6e: mov eax, 0xce5ffbbb
		_0xffffff8000eb8a73: shl eax, cl
		_0xffffff8000eb8a75: lea r11d, [rdx - 0x31a00445]
		_0xffffff8000eb8a7c: shl r11d, cl
		_0xffffff8000eb8a7f: sub r11d, eax
		_0xffffff8000eb8a82: and r11d, 0x1e
		_0xffffff8000eb8a86: xor edx, 0x36fc0bca
		_0xffffff8000eb8a8c: lea eax, [rdx + rdx]
		_0xffffff8000eb8a8f: and eax, 0x8e0140a
		_0xffffff8000eb8a94: neg eax
		_0xffffff8000eb8a96: lea eax, [rdx + rax + 0x4689ca1]
		_0xffffff8000eb8a9d: mov ecx, r11d
		_0xffffff8000eb8aa0: and ecx, eax
		_0xffffff8000eb8aa2: xor r11d, eax
		_0xffffff8000eb8aa5: lea ecx, [r11 + rcx*2]
		_0xffffff8000eb8aa9: mov r11, rcx
		_0xffffff8000eb8aac: xor r11, 0xffffffffcd7b6b95
		_0xffffff8000eb8ab3: mov ebx, ecx
		_0xffffff8000eb8ab5: and ebx, 0xcd7b6b95
		_0xffffff8000eb8abb: lea r11, [r11 + rbx*2]
		_0xffffff8000eb8abf: cmp ecx, 0x3284946b
		_0xffffff8000eb8ac5: sbb rcx, rcx
		_0xffffff8000eb8ac8: and ecx, 1
		_0xffffff8000eb8acb: shl rcx, 0x20
		_0xffffff8000eb8acf: mov rbx, r11
		_0xffffff8000eb8ad2: and rbx, rcx
		_0xffffff8000eb8ad5: xor rcx, r11
		_0xffffff8000eb8ad8: lea rcx, [rcx + rbx*2]
		_0xffffff8000eb8adc: mov cl, byte ptr [r8 + rcx]
		_0xffffff8000eb8ae0: mov eax, 0xb
		_0xffffff8000eb8ae5: xor edx, edx
		_0xffffff8000eb8ae7: div esi
		_0xffffff8000eb8ae9: mov eax, edx
		_0xffffff8000eb8aeb: xor eax, 0x5eb2f1be
		_0xffffff8000eb8af0: lea r11d, [rax + rax]
		_0xffffff8000eb8af4: and edx, 0xe
		_0xffffff8000eb8af7: mov ebx, eax
		_0xffffff8000eb8af9: and ebx, 0x5000a0a4
		_0xffffff8000eb8aff: lea edx, [rbx + rdx*2]
		_0xffffff8000eb8b02: mov ebx, eax
		_0xffffff8000eb8b04: and ebx, 0x204009
		_0xffffff8000eb8b0a: mov r14d, r11d
		_0xffffff8000eb8b0d: and r14d, 0x8000010
		_0xffffff8000eb8b14: add r14d, ebx
		_0xffffff8000eb8b17: xor r14d, 0xa0050248
		_0xffffff8000eb8b1e: add r14d, edx
		_0xffffff8000eb8b21: and r11d, 0x15202224
		_0xffffff8000eb8b28: and eax, 0xa921112
		_0xffffff8000eb8b2d: mov edx, 0x1fb43f36
		_0xffffff8000eb8b32: sub edx, eax
		_0xffffff8000eb8b34: and edx, 0xa921512
		_0xffffff8000eb8b3a: add edx, r11d
		_0xffffff8000eb8b3d: lea r11d, [rdx + r14 + 0x5148a8a4]
		_0xffffff8000eb8b45: lea rbx, [r11 - 0x5e90b1bc]
		_0xffffff8000eb8b4c: cmp r11d, 0x5e90b1bc
		_0xffffff8000eb8b53: sbb r11, r11
		_0xffffff8000eb8b56: and r11d, 1
		_0xffffff8000eb8b5a: shl r11, 0x20
		_0xffffff8000eb8b5e: mov rax, rbx
		_0xffffff8000eb8b61: and rax, r11
		_0xffffff8000eb8b64: xor r11, rbx
		_0xffffff8000eb8b67: lea r11, [r11 + rax*2]
		_0xffffff8000eb8b6b: mov al, byte ptr [r8 + r11]
		_0xffffff8000eb8b6f: mov dl, cl
		_0xffffff8000eb8b71: and dl, al
		_0xffffff8000eb8b73: mov r11b, al
		_0xffffff8000eb8b76: xor r11b, cl
		_0xffffff8000eb8b79: sar cl, 1
		_0xffffff8000eb8b7b: and dl, 1
		_0xffffff8000eb8b7e: add dl, cl
		_0xffffff8000eb8b80: sar al, 1
		_0xffffff8000eb8b82: add al, dl
		_0xffffff8000eb8b84: sar r11b, 1
		_0xffffff8000eb8b87: sub al, r11b
		_0xffffff8000eb8b8a: mov cl, al
		_0xffffff8000eb8b8c: add cl, cl
		_0xffffff8000eb8b8e: mov dl, cl
		_0xffffff8000eb8b90: or dl, 0xdc
		_0xffffff8000eb8b93: sar dl, 1
		_0xffffff8000eb8b95: xor dl, 0x11
		_0xffffff8000eb8b98: mov r11b, 0xfe
		_0xffffff8000eb8b9b: sub r11b, dl
		_0xffffff8000eb8b9e: mov bl, cl
		_0xffffff8000eb8ba0: or bl, 0x22
		_0xffffff8000eb8ba3: xor bl, 0xdc
		_0xffffff8000eb8ba6: sar bl, 1
		_0xffffff8000eb8ba8: xor dl, bl
		_0xffffff8000eb8baa: sub r11b, bl
		_0xffffff8000eb8bad: add r11b, dl
		_0xffffff8000eb8bb0: and r11b, 0x52
		_0xffffff8000eb8bb4: neg r11b
		_0xffffff8000eb8bb7: xor al, 0x29
		_0xffffff8000eb8bb9: and cl, 0x52
		_0xffffff8000eb8bbc: add cl, al
		_0xffffff8000eb8bbe: mov al, cl
		_0xffffff8000eb8bc0: xor al, r11b
		_0xffffff8000eb8bc3: and cl, r11b
		_0xffffff8000eb8bc6: add cl, cl
		_0xffffff8000eb8bc8: add cl, al
		_0xffffff8000eb8bca: xor cl, 0x2a
		_0xffffff8000eb8bcd: mov dl, cl
		_0xffffff8000eb8bcf: shl dl, 3
		_0xffffff8000eb8bd2: and dl, 0x20
		_0xffffff8000eb8bd5: xor dl, cl
		_0xffffff8000eb8bd7: xor r9b, dl
		_0xffffff8000eb8bda: shl dl, 7
		_0xffffff8000eb8bdd: xor dl, r9b
		_0xffffff8000eb8be0: mov cl, dl
		_0xffffff8000eb8be2: and cl, 1
		_0xffffff8000eb8be5: mov r9b, 0xab
		_0xffffff8000eb8be8: mov al, cl
		_0xffffff8000eb8bea: mul r9b
		_0xffffff8000eb8bed: shr ax, 8
		_0xffffff8000eb8bf1: shr al, 1
		_0xffffff8000eb8bf3: mov r11b, 3
		_0xffffff8000eb8bf6: mul r11b
		_0xffffff8000eb8bf9: sub cl, al
		_0xffffff8000eb8bfb: mov bl, cl
		_0xffffff8000eb8bfd: neg bl
		_0xffffff8000eb8bff: and bl, cl
		_0xffffff8000eb8c01: mov al, bl
		_0xffffff8000eb8c03: mul r9b
		_0xffffff8000eb8c06: shr ax, 8
		_0xffffff8000eb8c0a: shr al, 1
		_0xffffff8000eb8c0c: mul r11b
		_0xffffff8000eb8c0f: sub bl, al
		_0xffffff8000eb8c11: shl bl, 7
		_0xffffff8000eb8c14: xor bl, dl
		_0xffffff8000eb8c16: mov eax, 0xd
		_0xffffff8000eb8c1b: xor edx, edx
		_0xffffff8000eb8c1d: div esi
		_0xffffff8000eb8c1f: lea eax, [rdx + rdx]
		_0xffffff8000eb8c22: mov ecx, 0x12
		_0xffffff8000eb8c27: sub ecx, eax
		_0xffffff8000eb8c29: mov r9d, ecx
		_0xffffff8000eb8c2c: and r9d, eax
		_0xffffff8000eb8c2f: xor ecx, eax
		_0xffffff8000eb8c31: lea eax, [rcx + r9*2]
		_0xffffff8000eb8c35: sar eax, 1
		_0xffffff8000eb8c37: mov ecx, eax
		_0xffffff8000eb8c39: xor ecx, edx
		_0xffffff8000eb8c3b: sub eax, ecx
		_0xffffff8000eb8c3d: add eax, edx
		_0xffffff8000eb8c3f: xor edx, 0x9ec32dfe
		_0xffffff8000eb8c45: mov ecx, edx
		_0xffffff8000eb8c47: and ecx, 0x14002122
		_0xffffff8000eb8c4d: mov r9d, edx
		_0xffffff8000eb8c50: and r9d, 0xa820494
		_0xffffff8000eb8c57: add r9d, 0x42101084
		_0xffffff8000eb8c5e: and r9d, 0x4a921494
		_0xffffff8000eb8c65: add r9d, ecx
		_0xffffff8000eb8c68: and edx, 0x80410049
		_0xffffff8000eb8c6e: mov ecx, 0xe3dac493
		_0xffffff8000eb8c73: sub ecx, edx
		_0xffffff8000eb8c75: and ecx, 0xa1494249
		_0xffffff8000eb8c7b: add ecx, r9d
		_0xffffff8000eb8c7e: xor ecx, 0x248002
		_0xffffff8000eb8c84: add ecx, 0xfffdeeb8
		_0xffffff8000eb8c8a: mov edx, eax
		_0xffffff8000eb8c8c: and edx, ecx
		_0xffffff8000eb8c8e: xor ecx, eax
		_0xffffff8000eb8c90: lea ecx, [rcx + rdx*2]
		_0xffffff8000eb8c93: lea r9, [rcx - 0x7dbde431]
		_0xffffff8000eb8c9a: cmp ecx, 0x7dbde431
		_0xffffff8000eb8ca0: sbb rcx, rcx
		_0xffffff8000eb8ca3: and ecx, 1
		_0xffffff8000eb8ca6: shl rcx, 0x20
		_0xffffff8000eb8caa: mov r11, r9
		_0xffffff8000eb8cad: and r11, rcx
		_0xffffff8000eb8cb0: xor rcx, r9
		_0xffffff8000eb8cb3: lea rcx, [rcx + r11*2]
		_0xffffff8000eb8cb7: mov cl, byte ptr [r8 + rcx]
		_0xffffff8000eb8cbb: mov eax, 0xc
		_0xffffff8000eb8cc0: xor edx, edx
		_0xffffff8000eb8cc2: div esi
		_0xffffff8000eb8cc4: imul eax, edx, 0x9245850a
		_0xffffff8000eb8cca: xor edx, 0x355fbfee
		_0xffffff8000eb8cd0: mov r9d, edx
		_0xffffff8000eb8cd3: and r9d, 0x2002
		_0xffffff8000eb8cda: mov r11d, edx
		_0xffffff8000eb8cdd: and r11d, 0x140a1289
		_0xffffff8000eb8ce4: lea r9d, [r11 + r9 + 0x42291240]
		_0xffffff8000eb8cec: mov r11d, edx
		_0xffffff8000eb8cef: and r11d, 0x1100004
		_0xffffff8000eb8cf6: lea edx, [rdx + rdx]
		_0xffffff8000eb8cf9: and edx, 0x820888
		_0xffffff8000eb8cff: add edx, r11d
		_0xffffff8000eb8d02: xor edx, 0x48004014
		_0xffffff8000eb8d08: lea edx, [rdx + r9 - 0x6f75ff80]
		_0xffffff8000eb8d10: mov r9d, eax
		_0xffffff8000eb8d13: sar r9d, 1
		_0xffffff8000eb8d16: lea r11d, [r9 - 0x16947326]
		_0xffffff8000eb8d1d: imul r11d, r11d
		_0xffffff8000eb8d21: sub eax, r11d
		_0xffffff8000eb8d24: add r9d, 0x16947326
		_0xffffff8000eb8d2b: imul r9d, r9d
		_0xffffff8000eb8d2f: add r9d, eax
		_0xffffff8000eb8d32: and r9d, 0x1c
		_0xffffff8000eb8d36: mov eax, r9d
		_0xffffff8000eb8d39: and eax, edx
		_0xffffff8000eb8d3b: xor r9d, edx
		_0xffffff8000eb8d3e: lea r9d, [r9 + rax*2]
		_0xffffff8000eb8d42: cmp r9d, 0x304f8de2
		_0xffffff8000eb8d49: sbb r11, r11
		_0xffffff8000eb8d4c: and r11d, 1
		_0xffffff8000eb8d50: shl r11, 0x20
		_0xffffff8000eb8d54: add r11, r9
		_0xffffff8000eb8d57: mov al, byte ptr [r11 + r8 - 0x304f8de2]
		_0xffffff8000eb8d5f: mov dl, cl
		_0xffffff8000eb8d61: xor dl, al
		_0xffffff8000eb8d63: and cl, al
		_0xffffff8000eb8d65: add cl, cl
		_0xffffff8000eb8d67: add cl, dl
		_0xffffff8000eb8d69: mov dl, 5
		_0xffffff8000eb8d6b: sub dl, cl
		_0xffffff8000eb8d6d: mov al, dl
		_0xffffff8000eb8d6f: and al, 0x21
		_0xffffff8000eb8d71: mov r9b, cl
		_0xffffff8000eb8d74: and r9b, 0x21
		_0xffffff8000eb8d78: or r9b, 2
		_0xffffff8000eb8d7c: sub r9b, al
		_0xffffff8000eb8d7f: and al, cl
		_0xffffff8000eb8d81: mov r11b, dl
		_0xffffff8000eb8d84: and r11b, 0x94
		_0xffffff8000eb8d88: mov r14b, cl
		_0xffffff8000eb8d8b: and r14b, 0x94
		_0xffffff8000eb8d8f: or r14b, 0x28
		_0xffffff8000eb8d93: sub r14b, r11b
		_0xffffff8000eb8d96: and r11b, cl
		_0xffffff8000eb8d99: add r11b, r11b
		_0xffffff8000eb8d9c: and r14b, 0x94
		_0xffffff8000eb8da0: or r14b, r11b
		_0xffffff8000eb8da3: add al, al
		_0xffffff8000eb8da5: and r9b, 0x21
		_0xffffff8000eb8da9: or r9b, al
		_0xffffff8000eb8dac: and dl, 0x4a
		_0xffffff8000eb8daf: mov r11b, cl
		_0xffffff8000eb8db2: and r11b, 0x4a
		_0xffffff8000eb8db6: add dl, r11b
		_0xffffff8000eb8db9: add dl, r9b
		_0xffffff8000eb8dbc: add dl, r14b
		_0xffffff8000eb8dbf: mov al, dl
		_0xffffff8000eb8dc1: xor al, cl
		_0xffffff8000eb8dc3: and al, 0x24
		_0xffffff8000eb8dc5: mov r9b, cl
		_0xffffff8000eb8dc8: and r9b, dl
		_0xffffff8000eb8dcb: and r9b, 0x24
		_0xffffff8000eb8dcf: add r9b, r9b
		_0xffffff8000eb8dd2: or r9b, al
		_0xffffff8000eb8dd5: mov r14b, dl
		_0xffffff8000eb8dd8: and r14b, r11b
		_0xffffff8000eb8ddb: mov r15b, 0x4f
		_0xffffff8000eb8dde: mov al, cl
		_0xffffff8000eb8de0: mul r15b
		_0xffffff8000eb8de3: shr ax, 8
		_0xffffff8000eb8de7: mov r15b, cl
		_0xffffff8000eb8dea: sub r15b, al
		_0xffffff8000eb8ded: shr r15b, 1
		_0xffffff8000eb8df0: add r15b, al
		_0xffffff8000eb8df3: shr r15b, 5
		_0xffffff8000eb8df7: mov al, r15b
		_0xffffff8000eb8dfa: mul r15b
		_0xffffff8000eb8dfd: mov r12b, 0x9f
		_0xffffff8000eb8e00: sub r12b, al
		_0xffffff8000eb8e03: mov r13b, 0x31
		_0xffffff8000eb8e06: mov al, r15b
		_0xffffff8000eb8e09: mul r13b
		_0xffffff8000eb8e0c: mov r13b, cl
		_0xffffff8000eb8e0f: sub r13b, al
		_0xffffff8000eb8e12: add r13b, r13b
		_0xffffff8000eb8e15: add r13b, r12b
		_0xffffff8000eb8e18: mov al, r15b
		_0xffffff8000eb8e1b: add al, 0x31
		_0xffffff8000eb8e1d: mul al
		_0xffffff8000eb8e1f: add al, r13b
		_0xffffff8000eb8e22: sar al, 1
		_0xffffff8000eb8e24: and cl, 0x91
		_0xffffff8000eb8e27: add cl, 0xfb
		_0xffffff8000eb8e2a: sub cl, al
		_0xffffff8000eb8e2c: xor al, 5
		_0xffffff8000eb8e2e: add al, cl
		_0xffffff8000eb8e30: mov cl, dl
		_0xffffff8000eb8e32: and cl, 0x91
		_0xffffff8000eb8e35: add cl, al
		_0xffffff8000eb8e37: add cl, r9b
		_0xffffff8000eb8e3a: add r14b, r14b
		_0xffffff8000eb8e3d: and dl, 0x4a
		_0xffffff8000eb8e40: or dl, 0x14
		_0xffffff8000eb8e43: sub dl, r11b
		_0xffffff8000eb8e46: and dl, 0x4a
		_0xffffff8000eb8e49: or dl, r14b
		_0xffffff8000eb8e4c: add dl, cl
		_0xffffff8000eb8e4e: xor dl, bl
		_0xffffff8000eb8e50: shl bl, 3
		_0xffffff8000eb8e53: and bl, 0x20
		_0xffffff8000eb8e56: xor bl, dl
		_0xffffff8000eb8e58: xor bl, 0x1a
		_0xffffff8000eb8e5b: mov eax, 0xf
		_0xffffff8000eb8e60: xor edx, edx
		_0xffffff8000eb8e62: div esi
		_0xffffff8000eb8e64: mov eax, 1
		_0xffffff8000eb8e69: sub eax, edx
		_0xffffff8000eb8e6b: mov dword ptr [rbp - 0x360], eax
		_0xffffff8000eb8e71: mov ecx, eax
		_0xffffff8000eb8e73: and ecx, edx
		_0xffffff8000eb8e75: xor dword ptr [rbp - 0x360], edx
		_0xffffff8000eb8e7b: mov eax, dword ptr [rbp - 0x360]
		_0xffffff8000eb8e81: lea ecx, [rax + rcx*2]
		_0xffffff8000eb8e84: and ecx, 0x1f
		_0xffffff8000eb8e87: mov eax, edx
		_0xffffff8000eb8e89: and eax, 0xa
		_0xffffff8000eb8e8c: shl eax, cl
		_0xffffff8000eb8e8e: xor eax, 0x501d3c16
		_0xffffff8000eb8e93: mov r9d, edx
		_0xffffff8000eb8e96: and r9d, 5
		_0xffffff8000eb8e9a: shl r9d, cl
		_0xffffff8000eb8e9d: xor r9d, 0x501d3c16
		_0xffffff8000eb8ea4: lea ecx, [r9 + rax]
		_0xffffff8000eb8ea8: and r9d, eax
		_0xffffff8000eb8eab: add r9d, r9d
		_0xffffff8000eb8eae: sub ecx, r9d
		_0xffffff8000eb8eb1: mov eax, 0x1e
		_0xffffff8000eb8eb6: sub eax, ecx
		_0xffffff8000eb8eb8: mov r9d, eax
		_0xffffff8000eb8ebb: and r9d, ecx
		_0xffffff8000eb8ebe: xor eax, ecx
		_0xffffff8000eb8ec0: lea eax, [rax + r9*2]
		_0xffffff8000eb8ec4: and eax, ecx
		_0xffffff8000eb8ec6: xor edx, 0x260513cd
		_0xffffff8000eb8ecc: lea ecx, [rdx + rdx]
		_0xffffff8000eb8ecf: and ecx, 0x22184
		_0xffffff8000eb8ed5: neg ecx
		_0xffffff8000eb8ed7: lea ecx, [rdx + rcx + 0xc29dcc2]
		_0xffffff8000eb8ede: mov edx, eax
		_0xffffff8000eb8ee0: and edx, ecx
		_0xffffff8000eb8ee2: xor eax, ecx
		_0xffffff8000eb8ee4: lea ecx, [rax + rdx*2]
		_0xffffff8000eb8ee7: lea r9, [rcx + rcx]
		_0xffffff8000eb8eeb: movabs r11, 0x108002100
		_0xffffff8000eb8ef5: and r11, r9
		_0xffffff8000eb8ef8: mov r9d, ecx
		_0xffffff8000eb8efb: and r9d, 0xa424948a
		_0xffffff8000eb8f02: movabs rax, 0x4a9112948492914
		_0xffffff8000eb8f0c: add rax, r9
		_0xffffff8000eb8f0f: movabs r9, 0x1dab776b7bffef80
		_0xffffff8000eb8f19: add r9, rax
		_0xffffff8000eb8f1c: movabs rax, 0x22548894a424948a
		_0xffffff8000eb8f26: and rax, r9
		_0xffffff8000eb8f29: add rax, r11
		_0xffffff8000eb8f2c: mov r9, rcx
		_0xffffff8000eb8f2f: and r9, 0x5bdb6b75
		_0xffffff8000eb8f36: add r9, rax
		_0xffffff8000eb8f39: movabs r11, 0xddab776b70e7934a
		_0xffffff8000eb8f43: add r11, r9
		_0xffffff8000eb8f46: cmp ecx, 0x322ccf0f
		_0xffffff8000eb8f4c: mov ecx, 0xd8eb8d27
		_0xffffff8000eb8f51: mov r9, 0xffffffffd8eb8d27
		_0xffffff8000eb8f58: cmovb r9, rcx
		_0xffffff8000eb8f5c: mov rcx, r11
		_0xffffff8000eb8f5f: and rcx, r9
		_0xffffff8000eb8f62: xor r9, r11
		_0xffffff8000eb8f65: lea rcx, [r9 + rcx*2]
		_0xffffff8000eb8f69: xor r9b, r9b
		_0xffffff8000eb8f6c: sub r9b, byte ptr [r8 + rcx]
		_0xffffff8000eb8f70: mov eax, 0xe
		_0xffffff8000eb8f75: xor edx, edx
		_0xffffff8000eb8f77: div esi
		_0xffffff8000eb8f79: mov eax, edx
		_0xffffff8000eb8f7b: xor eax, 0x75ff3bd8
		_0xffffff8000eb8f80: lea ecx, [rdx + rdx]
		_0xffffff8000eb8f83: imul edx, eax, 0xd1f0d019
		_0xffffff8000eb8f89: mov esi, 0xbf6ae740
		_0xffffff8000eb8f8e: sub esi, eax
		_0xffffff8000eb8f90: imul esi, esi, 0xd1f0d019
		_0xffffff8000eb8f96: mov r11d, esi
		_0xffffff8000eb8f99: and r11d, edx
		_0xffffff8000eb8f9c: xor esi, edx
		_0xffffff8000eb8f9e: lea edx, [rsi + r11*2]
		_0xffffff8000eb8fa2: imul edx, edx, 0x3c98c29
		_0xffffff8000eb8fa8: mov esi, ecx
		_0xffffff8000eb8faa: and esi, 4
		_0xffffff8000eb8fad: xor esi, 0x14
		_0xffffff8000eb8fb0: and ecx, 0x10
		_0xffffff8000eb8fb3: xor ecx, 0x1c
		_0xffffff8000eb8fb6: sub ecx, esi
		_0xffffff8000eb8fb8: and ecx, 0x10
		_0xffffff8000eb8fbb: add ecx, eax
		_0xffffff8000eb8fbd: add ecx, edx
		_0xffffff8000eb8fbf: cmp ecx, 0x356a2318
		_0xffffff8000eb8fc5: sbb rsi, rsi
		_0xffffff8000eb8fc8: and esi, 1
		_0xffffff8000eb8fcb: shl rsi, 0x20
		_0xffffff8000eb8fcf: add rsi, rcx
		_0xffffff8000eb8fd2: mov al, byte ptr [rsi + r8 - 0x356a2318]
		_0xffffff8000eb8fda: mov cl, al
		_0xffffff8000eb8fdc: xor cl, r9b
		_0xffffff8000eb8fdf: and r9b, al
		_0xffffff8000eb8fe2: add r9b, r9b
		_0xffffff8000eb8fe5: add r9b, cl
		_0xffffff8000eb8fe8: mov al, r9b
		_0xffffff8000eb8feb: add al, al
		_0xffffff8000eb8fed: mov cl, r9b
		_0xffffff8000eb8ff0: and cl, 9
		_0xffffff8000eb8ff3: and al, 0x20
		_0xffffff8000eb8ff5: or cl, al
		_0xffffff8000eb8ff7: mov dl, r9b
		_0xffffff8000eb8ffa: and dl, 0x52
		_0xffffff8000eb8ffd: mov sil, 0xb4
		_0xffffff8000eb9000: sub sil, dl
		_0xffffff8000eb9003: and sil, 0x52
		_0xffffff8000eb9007: or sil, cl
		_0xffffff8000eb900a: and r9b, 0xa4
		_0xffffff8000eb900e: mov cl, 0x48
		_0xffffff8000eb9010: sub cl, r9b
		_0xffffff8000eb9013: and cl, 0xa4
		_0xffffff8000eb9016: add cl, sil
		_0xffffff8000eb9019: neg al
		_0xffffff8000eb901b: mov dl, cl
		_0xffffff8000eb901d: xor dl, al
		_0xffffff8000eb901f: and al, cl
		_0xffffff8000eb9021: add al, al
		_0xffffff8000eb9023: add al, dl
		_0xffffff8000eb9025: xor al, 0x1a
		_0xffffff8000eb9027: mov dl, bl
		_0xffffff8000eb9029: add dl, al
		_0xffffff8000eb902b: and al, bl
		_0xffffff8000eb902d: add al, al
		_0xffffff8000eb902f: sub dl, al
		_0xffffff8000eb9031: mov al, dl
		_0xffffff8000eb9033: xor al, 0x51
		_0xffffff8000eb9035: mov cl, al
		_0xffffff8000eb9037: xor cl, r10b
		_0xffffff8000eb903a: and al, r10b
		_0xffffff8000eb903d: add al, al
		_0xffffff8000eb903f: add al, cl
		_0xffffff8000eb9041: mov cl, al
		_0xffffff8000eb9043: add cl, cl
		_0xffffff8000eb9045: xor al, 0x7f
		_0xffffff8000eb9047: xor cl, 0x81
		_0xffffff8000eb904a: mov sil, cl
		_0xffffff8000eb904d: xor sil, al
		_0xffffff8000eb9050: and cl, al
		_0xffffff8000eb9052: add cl, cl
		_0xffffff8000eb9054: add cl, sil
		_0xffffff8000eb9057: mov rsi, qword ptr [rdi + 0x18]
		_0xffffff8000eb905b: mov rdi, qword ptr [rdi + 0x10]
		_0xffffff8000eb905f: mov byte ptr [rdi], cl
		_0xffffff8000eb9061: mov al, dl
		_0xffffff8000eb9063: sar al, 1
		_0xffffff8000eb9065: mov cl, al
		_0xffffff8000eb9067: xor cl, 5
		_0xffffff8000eb906a: mov dil, 5
		_0xffffff8000eb906d: sub dil, cl
		_0xffffff8000eb9070: add dil, al
		_0xffffff8000eb9073: or dil, 0x54
		_0xffffff8000eb9077: xor dil, 0x2c
		_0xffffff8000eb907b: mov al, dl
		_0xffffff8000eb907d: or al, 0xf5
		_0xffffff8000eb907f: xor al, 0xa
		_0xffffff8000eb9081: add al, 0xec
		_0xffffff8000eb9083: and al, 0xaa
		_0xffffff8000eb9085: xor al, 0xd2
		_0xffffff8000eb9087: mov r8b, dil
		_0xffffff8000eb908a: add r8b, al
		_0xffffff8000eb908d: and al, dil
		_0xffffff8000eb9090: add al, al
		_0xffffff8000eb9092: sub r8b, al
		_0xffffff8000eb9095: mov cl, 1
		_0xffffff8000eb9097: sub cl, r8b
		_0xffffff8000eb909a: mov al, cl
		_0xffffff8000eb909c: xor al, r8b
		_0xffffff8000eb909f: and cl, r8b
		_0xffffff8000eb90a2: add cl, cl
		_0xffffff8000eb90a4: add cl, al
		_0xffffff8000eb90a6: shl r8b, cl
		_0xffffff8000eb90a9: neg r8b
		_0xffffff8000eb90ac: or dl, 0xf1
		_0xffffff8000eb90af: xor dl, 0xe
		_0xffffff8000eb90b2: mov al, dl
		_0xffffff8000eb90b4: or al, 0xb1
		_0xffffff8000eb90b6: xor al, 0x4e
		_0xffffff8000eb90b8: and dl, 0x4e
		_0xffffff8000eb90bb: or dl, 0xa0
		_0xffffff8000eb90be: add dl, al
		_0xffffff8000eb90c0: mov cl, dl
		_0xffffff8000eb90c2: xor cl, al
		_0xffffff8000eb90c4: and dl, al
		_0xffffff8000eb90c6: add dl, dl
		_0xffffff8000eb90c8: add dl, cl
		_0xffffff8000eb90ca: mov al, dl
		_0xffffff8000eb90cc: xor al, r8b
		_0xffffff8000eb90cf: and dl, r8b
		_0xffffff8000eb90d2: add dl, dl
		_0xffffff8000eb90d4: add dl, al
		_0xffffff8000eb90d6: xor dl, 0x13
		_0xffffff8000eb90d9: mov al, dl
		_0xffffff8000eb90db: and al, 9
		_0xffffff8000eb90dd: mov cl, dl
		_0xffffff8000eb90df: and cl, 0xa2
		_0xffffff8000eb90e2: add cl, 2
		_0xffffff8000eb90e5: and cl, 0xa2
		_0xffffff8000eb90e8: or cl, al
		_0xffffff8000eb90ea: and dl, 0x54
		_0xffffff8000eb90ed: or dl, 0x28
		_0xffffff8000eb90f0: add dl, 0x40
		_0xffffff8000eb90f3: and dl, 0x54
		_0xffffff8000eb90f6: or dl, cl
		_0xffffff8000eb90f8: mov byte ptr [rsi], dl
		_0xffffff8000eb90fa: jmp _0xffffff8000ebe494
		_0xffffff8000eb90ff: mov rcx, qword ptr [rbp - 0x60]
		_0xffffff8000eb9103: mov eax, dword ptr [rcx + 4]
		_0xffffff8000eb9106: mov edx, dword ptr [rcx + 8]
		_0xffffff8000eb9109: mov esi, dword ptr [rcx + 0xc]
		_0xffffff8000eb910c: mov edi, esi
		_0xffffff8000eb910e: xor edi, edx
		_0xffffff8000eb9110: and edi, eax
		_0xffffff8000eb9112: lea r8d, [rdi + rdi]
		_0xffffff8000eb9116: and r8d, 0x2a763186
		_0xffffff8000eb911d: neg r8d
		_0xffffff8000eb9120: lea edi, [rdi + r8 + 0x153b18c3]
		_0xffffff8000eb9128: xor edi, esi
		_0xffffff8000eb912a: xor edi, 0x153b18c3
		_0xffffff8000eb9130: mov r8d, dword ptr [rbp - 0xa0]
		_0xffffff8000eb9137: mov dword ptr [rbp - 0x360], r8d
		_0xffffff8000eb913e: mov r8d, dword ptr [rbp - 0x9c]
		_0xffffff8000eb9145: mov dword ptr [rbp - 0x364], r8d
		_0xffffff8000eb914c: add edi, dword ptr [rbp - 0x360]
		_0xffffff8000eb9152: mov r8d, edi
		_0xffffff8000eb9155: xor r8d, 0x7adb6fbb
		_0xffffff8000eb915c: add r8d, dword ptr [rcx]
		_0xffffff8000eb915f: and edi, 0x7adb6fbb
		_0xffffff8000eb9165: lea ecx, [r8 + rdi*2 + 0x5c8f34bd]
		_0xffffff8000eb916d: mov edi, ecx
		_0xffffff8000eb916f: shl edi, 8
		_0xffffff8000eb9172: and edi, 0x9f7bbf00
		_0xffffff8000eb9178: mov r8d, ecx
		_0xffffff8000eb917b: shl r8d, 7
		_0xffffff8000eb917f: xor r8d, 0x4fbddfeb
		_0xffffff8000eb9186: lea edi, [r8 + rdi - 0x4fbddfeb]
		_0xffffff8000eb918e: mov r8d, ecx
		_0xffffff8000eb9191: shr r8d, 0x18
		_0xffffff8000eb9195: and r8d, 0xd4
		_0xffffff8000eb919c: shr ecx, 0x19
		_0xffffff8000eb919f: add ecx, 0x266c836a
		_0xffffff8000eb91a5: sub ecx, r8d
		_0xffffff8000eb91a8: xor ecx, 0x266c836a
		_0xffffff8000eb91ae: or ecx, edi
		_0xffffff8000eb91b0: add ecx, eax
		_0xffffff8000eb91b2: mov edi, edx
		_0xffffff8000eb91b4: xor edi, eax
		_0xffffff8000eb91b6: and edi, ecx
		_0xffffff8000eb91b8: lea r8d, [rdi + rdi]
		_0xffffff8000eb91bc: and r8d, 0x894467da
		_0xffffff8000eb91c3: neg r8d
		_0xffffff8000eb91c6: lea edi, [rdi + r8 + 0x44a233ed]
		_0xffffff8000eb91ce: xor edi, edx
		_0xffffff8000eb91d0: xor edi, 0x44a233ed
		_0xffffff8000eb91d6: add edi, dword ptr [rbp - 0x364]
		_0xffffff8000eb91dc: mov r8d, edi
		_0xffffff8000eb91df: xor r8d, 0x777fd6bc
		_0xffffff8000eb91e6: add r8d, esi
		_0xffffff8000eb91e9: and edi, 0x777fd6bc
		_0xffffff8000eb91ef: lea esi, [r8 + rdi*2 + 0x7147e09a]
		_0xffffff8000eb91f7: mov edi, esi
		_0xffffff8000eb91f9: shl edi, 0xd
		_0xffffff8000eb91fc: and edi, 0xdfb7a000
		_0xffffff8000eb9202: mov r8d, esi
		_0xffffff8000eb9205: shl r8d, 0xc
		_0xffffff8000eb9209: xor r8d, 0x6fdbd7dd
		_0xffffff8000eb9210: lea edi, [r8 + rdi - 0x6fdbd7dd]
		_0xffffff8000eb9218: mov r8d, esi
		_0xffffff8000eb921b: shr r8d, 0x13
		_0xffffff8000eb921f: and r8d, 0xb4a
		_0xffffff8000eb9226: shr esi, 0x14
		_0xffffff8000eb9229: add esi, 0x21e615a5
		_0xffffff8000eb922f: sub esi, r8d
		_0xffffff8000eb9232: xor esi, 0x21e615a5
		_0xffffff8000eb9238: or esi, edi
		_0xffffff8000eb923a: add esi, ecx
		_0xffffff8000eb923c: mov edi, ecx
		_0xffffff8000eb923e: xor edi, eax
		_0xffffff8000eb9240: and edi, esi
		_0xffffff8000eb9242: lea r8d, [rdi + rdi]
		_0xffffff8000eb9246: and r8d, 0xfd72c678
		_0xffffff8000eb924d: neg r8d
		_0xffffff8000eb9250: lea edi, [rdi + r8 + 0x7eb9633c]
		_0xffffff8000eb9258: xor edi, eax
		_0xffffff8000eb925a: xor edi, 0x7eb9633c
		_0xffffff8000eb9260: mov r8d, dword ptr [rbp - 0x98]
		_0xffffff8000eb9267: mov dword ptr [rbp - 0x368], r8d
		_0xffffff8000eb926e: add edi, r8d
		_0xffffff8000eb9271: mov r8d, edi
		_0xffffff8000eb9274: xor r8d, 0x7599e7ff
		_0xffffff8000eb927b: add r8d, edx
		_0xffffff8000eb927e: and edi, 0x7599e7ff
		_0xffffff8000eb9284: lea edx, [r8 + rdi*2 - 0x51797724]
		_0xffffff8000eb928c: mov edi, edx
		_0xffffff8000eb928e: shl edi, 0x12
		_0xffffff8000eb9291: and edi, 0x3b3c0000
		_0xffffff8000eb9297: mov r8d, edx
		_0xffffff8000eb929a: shl r8d, 0x11
		_0xffffff8000eb929e: xor r8d, 0x1d9ffffd
		_0xffffff8000eb92a5: lea edi, [r8 + rdi - 0x1d9ffffd]
		_0xffffff8000eb92ad: mov r8d, edx
		_0xffffff8000eb92b0: shr r8d, 0xe
		_0xffffff8000eb92b4: and r8d, 0x1b32c
		_0xffffff8000eb92bb: shr edx, 0xf
		_0xffffff8000eb92be: add edx, 0x7680d996
		_0xffffff8000eb92c4: sub edx, r8d
		_0xffffff8000eb92c7: xor edx, 0x7680d996
		_0xffffff8000eb92cd: or edx, edi
		_0xffffff8000eb92cf: add edx, esi
		_0xffffff8000eb92d1: mov edi, esi
		_0xffffff8000eb92d3: xor edi, ecx
		_0xffffff8000eb92d5: and edi, edx
		_0xffffff8000eb92d7: lea r8d, [rdi + rdi]
		_0xffffff8000eb92db: and r8d, 0x75febf8c
		_0xffffff8000eb92e2: neg r8d
		_0xffffff8000eb92e5: lea edi, [rdi + r8 + 0x3aff5fc6]
		_0xffffff8000eb92ed: xor edi, ecx
		_0xffffff8000eb92ef: xor edi, 0x3aff5fc6
		_0xffffff8000eb92f5: mov r8d, dword ptr [rbp - 0x94]
		_0xffffff8000eb92fc: mov dword ptr [rbp - 0x370], r8d
		_0xffffff8000eb9303: add edi, r8d
		_0xffffff8000eb9306: mov r8d, edi
		_0xffffff8000eb9309: xor r8d, 0x757ff5af
		_0xffffff8000eb9310: add r8d, eax
		_0xffffff8000eb9313: and edi, 0x757ff5af
		_0xffffff8000eb9319: lea eax, [r8 + rdi*2 + 0x4c3dd93f]
		_0xffffff8000eb9321: mov edi, eax
		_0xffffff8000eb9323: shr edi, 9
		_0xffffff8000eb9326: and edi, 0x57aa92
		_0xffffff8000eb932c: mov r8d, eax
		_0xffffff8000eb932f: shr r8d, 0xa
		_0xffffff8000eb9333: add r8d, 0x712bd549
		_0xffffff8000eb933a: sub r8d, edi
		_0xffffff8000eb933d: xor r8d, 0x712bd549
		_0xffffff8000eb9344: shl eax, 0x16
		_0xffffff8000eb9347: or eax, r8d
		_0xffffff8000eb934a: add eax, edx
		_0xffffff8000eb934c: mov edi, edx
		_0xffffff8000eb934e: xor edi, esi
		_0xffffff8000eb9350: and edi, eax
		_0xffffff8000eb9352: lea r8d, [rdi + rdi]
		_0xffffff8000eb9356: and r8d, 0x97bb5686
		_0xffffff8000eb935d: neg r8d
		_0xffffff8000eb9360: lea edi, [rdi + r8 + 0x4bddab43]
		_0xffffff8000eb9368: xor edi, esi
		_0xffffff8000eb936a: xor edi, 0x4bddab43
		_0xffffff8000eb9370: mov r8d, dword ptr [rbp - 0x90]
		_0xffffff8000eb9377: mov dword ptr [rbp - 0x378], r8d
		_0xffffff8000eb937e: add edi, r8d
		_0xffffff8000eb9381: mov r8d, edi
		_0xffffff8000eb9384: xor r8d, 0x772772fb
		_0xffffff8000eb938b: add r8d, ecx
		_0xffffff8000eb938e: and edi, 0x772772fb
		_0xffffff8000eb9394: lea ecx, [r8 + rdi*2 + 0x7e549cb4]
		_0xffffff8000eb939c: mov edi, ecx
		_0xffffff8000eb939e: shl edi, 8
		_0xffffff8000eb93a1: and edi, 0xffefdb00
		_0xffffff8000eb93a7: mov r8d, ecx
		_0xffffff8000eb93aa: shl r8d, 7
		_0xffffff8000eb93ae: xor r8d, 0x7ff7edbf
		_0xffffff8000eb93b5: lea edi, [r8 + rdi - 0x7ff7edbf]
		_0xffffff8000eb93bd: mov r8d, ecx
		_0xffffff8000eb93c0: shr r8d, 0x18
		_0xffffff8000eb93c4: and r8d, 0x38
		_0xffffff8000eb93c8: shr ecx, 0x19
		_0xffffff8000eb93cb: add ecx, 0x4370011c
		_0xffffff8000eb93d1: sub ecx, r8d
		_0xffffff8000eb93d4: xor ecx, 0x4370011c
		_0xffffff8000eb93da: or ecx, edi
		_0xffffff8000eb93dc: add ecx, eax
		_0xffffff8000eb93de: mov edi, eax
		_0xffffff8000eb93e0: xor edi, edx
		_0xffffff8000eb93e2: and edi, ecx
		_0xffffff8000eb93e4: lea r8d, [rdi + rdi]
		_0xffffff8000eb93e8: and r8d, 0x30ab5ce8
		_0xffffff8000eb93ef: neg r8d
		_0xffffff8000eb93f2: lea edi, [rdi + r8 + 0x1855ae74]
		_0xffffff8000eb93fa: xor edi, edx
		_0xffffff8000eb93fc: xor edi, 0x1855ae74
		_0xffffff8000eb9402: mov r8d, dword ptr [rbp - 0x8c]
		_0xffffff8000eb9409: add edi, r8d
		_0xffffff8000eb940c: mov r9d, edi
		_0xffffff8000eb940f: xor r9d, 0x5eff5fff
		_0xffffff8000eb9416: add r9d, esi
		_0xffffff8000eb9419: and edi, 0x5eff5fff
		_0xffffff8000eb941f: lea esi, [r9 + rdi*2 - 0x177799d5]
		_0xffffff8000eb9427: mov edi, esi
		_0xffffff8000eb9429: shl edi, 0xd
		_0xffffff8000eb942c: and edi, 0x2ffbc000
		_0xffffff8000eb9432: mov r9d, esi
		_0xffffff8000eb9435: shl r9d, 0xc
		_0xffffff8000eb9439: xor r9d, 0x17fde775
		_0xffffff8000eb9440: lea edi, [r9 + rdi - 0x17fde775]
		_0xffffff8000eb9448: mov r9d, esi
		_0xffffff8000eb944b: shr r9d, 0x13
		_0xffffff8000eb944f: and r9d, 0x1812
		_0xffffff8000eb9456: shr esi, 0x14
		_0xffffff8000eb9459: add esi, 0x53c39c09
		_0xffffff8000eb945f: sub esi, r9d
		_0xffffff8000eb9462: xor esi, 0x53c39c09
		_0xffffff8000eb9468: or esi, edi
		_0xffffff8000eb946a: add esi, ecx
		_0xffffff8000eb946c: mov edi, ecx
		_0xffffff8000eb946e: xor edi, eax
		_0xffffff8000eb9470: and edi, esi
		_0xffffff8000eb9472: lea r9d, [rdi + rdi]
		_0xffffff8000eb9476: and r9d, 0x78da716c
		_0xffffff8000eb947d: neg r9d
		_0xffffff8000eb9480: lea edi, [rdi + r9 + 0x3c6d38b6]
		_0xffffff8000eb9488: xor edi, eax
		_0xffffff8000eb948a: xor edi, 0x3c6d38b6
		_0xffffff8000eb9490: mov r9d, dword ptr [rbp - 0x88]
		_0xffffff8000eb9497: add edi, r9d
		_0xffffff8000eb949a: mov r10d, edi
		_0xffffff8000eb949d: xor r10d, 0x7cdfa377
		_0xffffff8000eb94a4: add r10d, edx
		_0xffffff8000eb94a7: and edi, 0x7cdfa377
		_0xffffff8000eb94ad: lea edx, [r10 + rdi*2 + 0x2b50a29c]
		_0xffffff8000eb94b5: mov edi, edx
		_0xffffff8000eb94b7: shr edi, 0xe
		_0xffffff8000eb94ba: and edi, 0x8c82
		_0xffffff8000eb94c0: mov r10d, edx
		_0xffffff8000eb94c3: shr r10d, 0xf
		_0xffffff8000eb94c7: add r10d, 0x6ffa4641
		_0xffffff8000eb94ce: sub r10d, edi
		_0xffffff8000eb94d1: xor r10d, 0x6ffa4641
		_0xffffff8000eb94d8: shl edx, 0x11
		_0xffffff8000eb94db: or edx, r10d
		_0xffffff8000eb94de: add edx, esi
		_0xffffff8000eb94e0: mov edi, esi
		_0xffffff8000eb94e2: xor edi, ecx
		_0xffffff8000eb94e4: and edi, edx
		_0xffffff8000eb94e6: lea r10d, [rdi + rdi]
		_0xffffff8000eb94ea: and r10d, 0x313e2d92
		_0xffffff8000eb94f1: neg r10d
		_0xffffff8000eb94f4: lea edi, [rdi + r10 + 0x189f16c9]
		_0xffffff8000eb94fc: xor edi, ecx
		_0xffffff8000eb94fe: xor edi, 0x189f16c9
		_0xffffff8000eb9504: mov r10d, dword ptr [rbp - 0x84]
		_0xffffff8000eb950b: mov dword ptr [rbp - 0x36c], r10d
		_0xffffff8000eb9512: add edi, r10d
		_0xffffff8000eb9515: mov r10d, edi
		_0xffffff8000eb9518: xor r10d, 0x7bdfbf5e
		_0xffffff8000eb951f: add r10d, eax
		_0xffffff8000eb9522: and edi, 0x7bdfbf5e
		_0xffffff8000eb9528: lea eax, [r10 + rdi*2 - 0x7e992a5d]
		_0xffffff8000eb9530: mov edi, eax
		_0xffffff8000eb9532: shl edi, 0x17
		_0xffffff8000eb9535: and edi, 0xdb800000
		_0xffffff8000eb953b: mov r10d, eax
		_0xffffff8000eb953e: shl r10d, 0x16
		_0xffffff8000eb9542: xor r10d, 0x6debeb7e
		_0xffffff8000eb9549: lea edi, [r10 + rdi - 0x6debeb7e]
		_0xffffff8000eb9551: mov r10d, eax
		_0xffffff8000eb9554: shr r10d, 9
		_0xffffff8000eb9558: and r10d, 0x1e48ce
		_0xffffff8000eb955f: shr eax, 0xa
		_0xffffff8000eb9562: add eax, 0x3a4f2467
		_0xffffff8000eb9567: sub eax, r10d
		_0xffffff8000eb956a: xor eax, 0x3a4f2467
		_0xffffff8000eb956f: or eax, edi
		_0xffffff8000eb9571: add eax, edx
		_0xffffff8000eb9573: mov edi, edx
		_0xffffff8000eb9575: xor edi, esi
		_0xffffff8000eb9577: and edi, eax
		_0xffffff8000eb9579: lea r10d, [rdi + rdi]
		_0xffffff8000eb957d: and r10d, 0x705ad12a
		_0xffffff8000eb9584: neg r10d
		_0xffffff8000eb9587: lea edi, [rdi + r10 + 0x382d6895]
		_0xffffff8000eb958f: xor edi, esi
		_0xffffff8000eb9591: xor edi, 0x382d6895
		_0xffffff8000eb9597: mov r10d, dword ptr [rbp - 0x80]
		_0xffffff8000eb959b: mov dword ptr [rbp - 0x37c], r10d
		_0xffffff8000eb95a2: add edi, r10d
		_0xffffff8000eb95a5: mov r10d, edi
		_0xffffff8000eb95a8: xor r10d, 0x7fd74fe7
		_0xffffff8000eb95af: add r10d, ecx
		_0xffffff8000eb95b2: and edi, 0x7fd74fe7
		_0xffffff8000eb95b8: lea ecx, [r10 + rdi*2 - 0x1656b70f]
		_0xffffff8000eb95c0: mov edi, ecx
		_0xffffff8000eb95c2: shr edi, 0x18
		_0xffffff8000eb95c5: and edi, 0xa2
		_0xffffff8000eb95cb: mov r10d, ecx
		_0xffffff8000eb95ce: shr r10d, 0x19
		_0xffffff8000eb95d2: add r10d, 0x7ec2a0d1
		_0xffffff8000eb95d9: sub r10d, edi
		_0xffffff8000eb95dc: xor r10d, 0x7ec2a0d1
		_0xffffff8000eb95e3: shl ecx, 7
		_0xffffff8000eb95e6: or ecx, r10d
		_0xffffff8000eb95e9: add ecx, eax
		_0xffffff8000eb95eb: mov edi, eax
		_0xffffff8000eb95ed: xor edi, edx
		_0xffffff8000eb95ef: and edi, ecx
		_0xffffff8000eb95f1: lea r10d, [rdi + rdi]
		_0xffffff8000eb95f5: and r10d, 0xb118b98c
		_0xffffff8000eb95fc: neg r10d
		_0xffffff8000eb95ff: lea edi, [rdi + r10 + 0x588c5cc6]
		_0xffffff8000eb9607: xor edi, edx
		_0xffffff8000eb9609: xor edi, 0x588c5cc6
		_0xffffff8000eb960f: mov r10d, dword ptr [rbp - 0x7c]
		_0xffffff8000eb9613: add edi, r10d
		_0xffffff8000eb9616: mov r11d, edi
		_0xffffff8000eb9619: xor r11d, 0x725fcbfe
		_0xffffff8000eb9620: add r11d, esi
		_0xffffff8000eb9623: and edi, 0x725fcbfe
		_0xffffff8000eb9629: lea esi, [r11 + rdi*2 + 0x18e52bb1]
		_0xffffff8000eb9631: mov edi, esi
		_0xffffff8000eb9633: shr edi, 0x13
		_0xffffff8000eb9636: and edi, 0x197a
		_0xffffff8000eb963c: mov r11d, esi
		_0xffffff8000eb963f: shr r11d, 0x14
		_0xffffff8000eb9643: add r11d, 0x4d602cbd
		_0xffffff8000eb964a: sub r11d, edi
		_0xffffff8000eb964d: xor r11d, 0x4d602cbd
		_0xffffff8000eb9654: shl esi, 0xc
		_0xffffff8000eb9657: or esi, r11d
		_0xffffff8000eb965a: add esi, ecx
		_0xffffff8000eb965c: mov edi, ecx
		_0xffffff8000eb965e: xor edi, eax
		_0xffffff8000eb9660: and edi, esi
		_0xffffff8000eb9662: lea r11d, [rdi + rdi]
		_0xffffff8000eb9666: and r11d, 0xacb77130
		_0xffffff8000eb966d: neg r11d
		_0xffffff8000eb9670: lea edi, [rdi + r11 + 0x565bb898]
		_0xffffff8000eb9678: xor edi, eax
		_0xffffff8000eb967a: xor edi, 0x565bb898
		_0xffffff8000eb9680: mov r11d, dword ptr [rbp - 0x78]
		_0xffffff8000eb9684: add edi, r11d
		_0xffffff8000eb9687: mov ebx, edi
		_0xffffff8000eb9689: xor ebx, 0x6d0af7ff
		_0xffffff8000eb968f: add ebx, edx
		_0xffffff8000eb9691: and edi, 0x6d0af7ff
		_0xffffff8000eb9697: lea edx, [rbx + rdi*2 - 0x6d0b9c4e]
		_0xffffff8000eb969e: mov edi, edx
		_0xffffff8000eb96a0: shl edi, 0x12
		_0xffffff8000eb96a3: and edi, 0x43fc0000
		_0xffffff8000eb96a9: mov ebx, edx
		_0xffffff8000eb96ab: shl ebx, 0x11
		_0xffffff8000eb96ae: xor ebx, 0x21fef9fb
		_0xffffff8000eb96b4: lea edi, [rbx + rdi - 0x21fef9fb]
		_0xffffff8000eb96bb: mov ebx, edx
		_0xffffff8000eb96bd: shr ebx, 0xe
		_0xffffff8000eb96c0: and ebx, 0x39168
		_0xffffff8000eb96c6: shr edx, 0xf
		_0xffffff8000eb96c9: add edx, 0x3871c8b4
		_0xffffff8000eb96cf: sub edx, ebx
		_0xffffff8000eb96d1: xor edx, 0x3871c8b4
		_0xffffff8000eb96d7: or edx, edi
		_0xffffff8000eb96d9: add edx, esi
		_0xffffff8000eb96db: mov edi, esi
		_0xffffff8000eb96dd: xor edi, ecx
		_0xffffff8000eb96df: and edi, edx
		_0xffffff8000eb96e1: lea ebx, [rdi + rdi]
		_0xffffff8000eb96e4: and ebx, 0xae9c67c2
		_0xffffff8000eb96ea: neg ebx
		_0xffffff8000eb96ec: lea edi, [rdi + rbx + 0x574e33e1]
		_0xffffff8000eb96f3: xor edi, ecx
		_0xffffff8000eb96f5: xor edi, 0x574e33e1
		_0xffffff8000eb96fb: mov ebx, dword ptr [rbp - 0x74]
		_0xffffff8000eb96fe: add edi, ebx
		_0xffffff8000eb9700: mov r14d, edi
		_0xffffff8000eb9703: xor r14d, 0x6ebfd6ff
		_0xffffff8000eb970a: add r14d, eax
		_0xffffff8000eb970d: and edi, 0x6ebfd6ff
		_0xffffff8000eb9713: lea eax, [r14 + rdi*2 + 0x1a9d00bf]
		_0xffffff8000eb971b: mov edi, eax
		_0xffffff8000eb971d: shr edi, 9
		_0xffffff8000eb9720: and edi, 0x576e28
		_0xffffff8000eb9726: mov r14d, eax
		_0xffffff8000eb9729: shr r14d, 0xa
		_0xffffff8000eb972d: add r14d, 0x792bb714
		_0xffffff8000eb9734: sub r14d, edi
		_0xffffff8000eb9737: xor r14d, 0x792bb714
		_0xffffff8000eb973e: shl eax, 0x16
		_0xffffff8000eb9741: or eax, r14d
		_0xffffff8000eb9744: add eax, edx
		_0xffffff8000eb9746: mov edi, edx
		_0xffffff8000eb9748: xor edi, esi
		_0xffffff8000eb974a: and edi, eax
		_0xffffff8000eb974c: lea r14d, [rdi + rdi]
		_0xffffff8000eb9750: and r14d, 0xcc12f898
		_0xffffff8000eb9757: neg r14d
		_0xffffff8000eb975a: lea edi, [rdi + r14 + 0x66097c4c]
		_0xffffff8000eb9762: xor edi, esi
		_0xffffff8000eb9764: xor edi, 0x66097c4c
		_0xffffff8000eb976a: mov r14d, dword ptr [rbp - 0x70]
		_0xffffff8000eb976e: mov dword ptr [rbp - 0x374], r14d
		_0xffffff8000eb9775: add edi, r14d
		_0xffffff8000eb9778: mov r14d, edi
		_0xffffff8000eb977b: xor r14d, 0x75dfffbd
		_0xffffff8000eb9782: add r14d, ecx
		_0xffffff8000eb9785: and edi, 0x75dfffbd
		_0xffffff8000eb978b: lea ecx, [r14 + rdi*2 - 0xa4fee9b]
		_0xffffff8000eb9793: mov edi, ecx
		_0xffffff8000eb9795: shr edi, 0x18
		_0xffffff8000eb9798: and edi, 0x42
		_0xffffff8000eb979b: mov r14d, ecx
		_0xffffff8000eb979e: shr r14d, 0x19
		_0xffffff8000eb97a2: add r14d, 0x11b0c7a1
		_0xffffff8000eb97a9: sub r14d, edi
		_0xffffff8000eb97ac: xor r14d, 0x11b0c7a1
		_0xffffff8000eb97b3: shl ecx, 7
		_0xffffff8000eb97b6: or ecx, r14d
		_0xffffff8000eb97b9: add ecx, eax
		_0xffffff8000eb97bb: mov edi, eax
		_0xffffff8000eb97bd: xor edi, edx
		_0xffffff8000eb97bf: and edi, ecx
		_0xffffff8000eb97c1: lea r14d, [rdi + rdi]
		_0xffffff8000eb97c5: and r14d, 0x15eac9a8
		_0xffffff8000eb97cc: neg r14d
		_0xffffff8000eb97cf: lea edi, [rdi + r14 + 0xaf564d4]
		_0xffffff8000eb97d7: xor edi, edx
		_0xffffff8000eb97d9: xor edi, 0xaf564d4
		_0xffffff8000eb97df: mov r14d, dword ptr [rbp - 0x6c]
		_0xffffff8000eb97e3: add edi, r14d
		_0xffffff8000eb97e6: mov r15d, edi
		_0xffffff8000eb97e9: xor r15d, 0x3febcd65
		_0xffffff8000eb97f0: add r15d, esi
		_0xffffff8000eb97f3: and edi, 0x3febcd65
		_0xffffff8000eb97f9: lea esi, [r15 + rdi*2 - 0x42535bd2]
		_0xffffff8000eb9801: mov edi, esi
		_0xffffff8000eb9803: shr edi, 0x13
		_0xffffff8000eb9806: and edi, 0x153c
		_0xffffff8000eb980c: mov r15d, esi
		_0xffffff8000eb980f: shr r15d, 0x14
		_0xffffff8000eb9813: add r15d, 0x119a9e
		_0xffffff8000eb981a: sub r15d, edi
		_0xffffff8000eb981d: xor r15d, 0x119a9e
		_0xffffff8000eb9824: shl esi, 0xc
		_0xffffff8000eb9827: or esi, r15d
		_0xffffff8000eb982a: add esi, ecx
		_0xffffff8000eb982c: mov edi, ecx
		_0xffffff8000eb982e: xor edi, eax
		_0xffffff8000eb9830: and edi, esi
		_0xffffff8000eb9832: lea r15d, [rdi + rdi]
		_0xffffff8000eb9836: and r15d, 0x8e5ea05c
		_0xffffff8000eb983d: neg r15d
		_0xffffff8000eb9840: lea edi, [rdi + r15 + 0x472f502e]
		_0xffffff8000eb9848: xor edi, eax
		_0xffffff8000eb984a: xor edi, 0x472f502e
		_0xffffff8000eb9850: mov r15d, dword ptr [rbp - 0x68]
		_0xffffff8000eb9854: add edi, r15d
		_0xffffff8000eb9857: mov r12d, edi
		_0xffffff8000eb985a: xor r12d, 0x3fe7d132
		_0xffffff8000eb9861: add r12d, edx
		_0xffffff8000eb9864: and edi, 0x3fe7d132
		_0xffffff8000eb986a: lea edx, [r12 + rdi*2 + 0x6691725c]
		_0xffffff8000eb9872: mov edi, edx
		_0xffffff8000eb9874: shr edi, 0xe
		_0xffffff8000eb9877: and edi, 0x23240
		_0xffffff8000eb987d: mov r12d, edx
		_0xffffff8000eb9880: shr r12d, 0xf
		_0xffffff8000eb9884: add r12d, 0x7b791920
		_0xffffff8000eb988b: sub r12d, edi
		_0xffffff8000eb988e: xor r12d, 0x7b791920
		_0xffffff8000eb9895: shl edx, 0x11
		_0xffffff8000eb9898: or edx, r12d
		_0xffffff8000eb989b: add edx, esi
		_0xffffff8000eb989d: mov edi, esi
		_0xffffff8000eb989f: xor edi, ecx
		_0xffffff8000eb98a1: and edi, edx
		_0xffffff8000eb98a3: lea r12d, [rdi + rdi]
		_0xffffff8000eb98a7: and r12d, 0xe9dead2e
		_0xffffff8000eb98ae: neg r12d
		_0xffffff8000eb98b1: lea edi, [rdi + r12 + 0x74ef5697]
		_0xffffff8000eb98b9: xor edi, ecx
		_0xffffff8000eb98bb: xor edi, 0x74ef5697
		_0xffffff8000eb98c1: mov r12d, dword ptr [rbp - 0x64]
		_0xffffff8000eb98c5: add edi, r12d
		_0xffffff8000eb98c8: mov r13d, edi
		_0xffffff8000eb98cb: xor r13d, 0x5fa3ffef
		_0xffffff8000eb98d2: add r13d, eax
		_0xffffff8000eb98d5: and edi, 0x5fa3ffef
		_0xffffff8000eb98db: lea eax, [r13 + rdi*2 - 0x15eff7ce]
		_0xffffff8000eb98e3: mov edi, eax
		_0xffffff8000eb98e5: shl edi, 0x17
		_0xffffff8000eb98e8: and edi, 0xef800000
		_0xffffff8000eb98ee: mov r13d, eax
		_0xffffff8000eb98f1: shl r13d, 0x16
		_0xffffff8000eb98f5: xor r13d, 0x77eb6bcf
		_0xffffff8000eb98fc: lea edi, [r13 + rdi - 0x77eb6bcf]
		_0xffffff8000eb9904: mov r13d, eax
		_0xffffff8000eb9907: shr r13d, 9
		_0xffffff8000eb990b: and r13d, 0x6c6308
		_0xffffff8000eb9912: shr eax, 0xa
		_0xffffff8000eb9915: add eax, 0x43363184
		_0xffffff8000eb991a: sub eax, r13d
		_0xffffff8000eb991d: xor eax, 0x43363184
		_0xffffff8000eb9922: or eax, edi
		_0xffffff8000eb9924: add eax, edx
		_0xffffff8000eb9926: mov edi, eax
		_0xffffff8000eb9928: xor edi, edx
		_0xffffff8000eb992a: and edi, esi
		_0xffffff8000eb992c: lea r13d, [rdi + rdi]
		_0xffffff8000eb9930: and r13d, 0x1764f7a0
		_0xffffff8000eb9937: neg r13d
		_0xffffff8000eb993a: lea edi, [rdi + r13 + 0xbb27bd0]
		_0xffffff8000eb9942: xor edi, edx
		_0xffffff8000eb9944: xor edi, 0xbb27bd0
		_0xffffff8000eb994a: add edi, dword ptr [rbp - 0x364]
		_0xffffff8000eb9950: mov r13d, edi
		_0xffffff8000eb9953: xor r13d, 0x6feff7f8
		_0xffffff8000eb995a: add r13d, ecx
		_0xffffff8000eb995d: and edi, 0x6feff7f8
		_0xffffff8000eb9963: lea ecx, [r13 + rdi*2 - 0x79d1d296]
		_0xffffff8000eb996b: mov edi, ecx
		_0xffffff8000eb996d: shr edi, 0x1b
		_0xffffff8000eb9970: mov r13d, edi
		_0xffffff8000eb9973: or r13d, 0x6ffb6ff9
		_0xffffff8000eb997a: xor r13d, edi
		_0xffffff8000eb997d: xor r13d, 0x6ffb6ff9
		_0xffffff8000eb9984: add r13d, r13d
		_0xffffff8000eb9987: neg r13d
		_0xffffff8000eb998a: lea edi, [rdi + r13 + 0x432967f9]
		_0xffffff8000eb9992: xor edi, 0x432967f9
		_0xffffff8000eb9998: shl ecx, 5
		_0xffffff8000eb999b: or ecx, edi
		_0xffffff8000eb999d: add ecx, eax
		_0xffffff8000eb999f: mov edi, ecx
		_0xffffff8000eb99a1: xor edi, eax
		_0xffffff8000eb99a3: and edi, edx
		_0xffffff8000eb99a5: lea r13d, [rdi + rdi]
		_0xffffff8000eb99a9: and r13d, 0x4bd8d424
		_0xffffff8000eb99b0: neg r13d
		_0xffffff8000eb99b3: lea edi, [rdi + r13 + 0x25ec6a12]
		_0xffffff8000eb99bb: xor edi, eax
		_0xffffff8000eb99bd: xor edi, 0x25ec6a12
		_0xffffff8000eb99c3: add edi, r9d
		_0xffffff8000eb99c6: mov r9d, edi
		_0xffffff8000eb99c9: xor r9d, 0x2fff9bf7
		_0xffffff8000eb99d0: add r9d, esi
		_0xffffff8000eb99d3: and edi, 0x2fff9bf7
		_0xffffff8000eb99d9: lea esi, [r9 + rdi*2 - 0x6fbee8b7]
		_0xffffff8000eb99e1: mov edi, esi
		_0xffffff8000eb99e3: shl edi, 0xa
		_0xffffff8000eb99e6: and edi, 0xcfcac400
		_0xffffff8000eb99ec: mov r9d, esi
		_0xffffff8000eb99ef: shl r9d, 9
		_0xffffff8000eb99f3: xor r9d, 0x67e563bd
		_0xffffff8000eb99fa: lea edi, [r9 + rdi - 0x67e563bd]
		_0xffffff8000eb9a02: mov r9d, esi
		_0xffffff8000eb9a05: shr r9d, 0x16
		_0xffffff8000eb9a09: and r9d, 0x1d4
		_0xffffff8000eb9a10: shr esi, 0x17
		_0xffffff8000eb9a13: add esi, 0x4c6318ea
		_0xffffff8000eb9a19: sub esi, r9d
		_0xffffff8000eb9a1c: xor esi, 0x4c6318ea
		_0xffffff8000eb9a22: or esi, edi
		_0xffffff8000eb9a24: add esi, ecx
		_0xffffff8000eb9a26: mov edi, esi
		_0xffffff8000eb9a28: xor edi, ecx
		_0xffffff8000eb9a2a: and edi, eax
		_0xffffff8000eb9a2c: lea r9d, [rdi + rdi]
		_0xffffff8000eb9a30: and r9d, 0x4ef55154
		_0xffffff8000eb9a37: neg r9d
		_0xffffff8000eb9a3a: lea edi, [rdi + r9 + 0x277aa8aa]
		_0xffffff8000eb9a42: xor edi, ecx
		_0xffffff8000eb9a44: xor edi, 0x277aa8aa
		_0xffffff8000eb9a4a: add edi, ebx
		_0xffffff8000eb9a4c: mov r9d, edi
		_0xffffff8000eb9a4f: xor r9d, 0x3ddffb76
		_0xffffff8000eb9a56: add r9d, edx
		_0xffffff8000eb9a59: and edi, 0x3ddffb76
		_0xffffff8000eb9a5f: lea edx, [r9 + rdi*2 - 0x1781a125]
		_0xffffff8000eb9a67: mov edi, edx
		_0xffffff8000eb9a69: shr edi, 0x11
		_0xffffff8000eb9a6c: and edi, 0xc42
		_0xffffff8000eb9a72: mov r9d, edx
		_0xffffff8000eb9a75: shr r9d, 0x12
		_0xffffff8000eb9a79: add r9d, 0x4348c621
		_0xffffff8000eb9a80: sub r9d, edi
		_0xffffff8000eb9a83: xor r9d, 0x4348c621
		_0xffffff8000eb9a8a: shl edx, 0xe
		_0xffffff8000eb9a8d: or edx, r9d
		_0xffffff8000eb9a90: add edx, esi
		_0xffffff8000eb9a92: mov edi, edx
		_0xffffff8000eb9a94: xor edi, esi
		_0xffffff8000eb9a96: and edi, ecx
		_0xffffff8000eb9a98: lea r9d, [rdi + rdi]
		_0xffffff8000eb9a9c: and r9d, 0x4f55c8ba
		_0xffffff8000eb9aa3: neg r9d
		_0xffffff8000eb9aa6: lea edi, [rdi + r9 + 0x27aae45d]
		_0xffffff8000eb9aae: xor edi, esi
		_0xffffff8000eb9ab0: xor edi, 0x27aae45d
		_0xffffff8000eb9ab6: add edi, dword ptr [rbp - 0x360]
		_0xffffff8000eb9abc: mov r9d, edi
		_0xffffff8000eb9abf: xor r9d, 0x6cfcd9fb
		_0xffffff8000eb9ac6: add r9d, eax
		_0xffffff8000eb9ac9: and edi, 0x6cfcd9fb
		_0xffffff8000eb9acf: lea eax, [r9 + rdi*2 + 0x7cb9edaf]
		_0xffffff8000eb9ad7: mov edi, eax
		_0xffffff8000eb9ad9: shl edi, 0x15
		_0xffffff8000eb9adc: and edi, 0xbbe00000
		_0xffffff8000eb9ae2: mov r9d, eax
		_0xffffff8000eb9ae5: shl r9d, 0x14
		_0xffffff8000eb9ae9: xor r9d, 0x5dff6afc
		_0xffffff8000eb9af0: lea edi, [r9 + rdi - 0x5dff6afc]
		_0xffffff8000eb9af8: mov r9d, eax
		_0xffffff8000eb9afb: shr r9d, 0xb
		_0xffffff8000eb9aff: and r9d, 0x10c80
		_0xffffff8000eb9b06: shr eax, 0xc
		_0xffffff8000eb9b09: add eax, 0x4b208640
		_0xffffff8000eb9b0e: sub eax, r9d
		_0xffffff8000eb9b11: xor eax, 0x4b208640
		_0xffffff8000eb9b16: or eax, edi
		_0xffffff8000eb9b18: add eax, edx
		_0xffffff8000eb9b1a: mov edi, eax
		_0xffffff8000eb9b1c: xor edi, edx
		_0xffffff8000eb9b1e: and edi, esi
		_0xffffff8000eb9b20: lea r9d, [rdi + rdi]
		_0xffffff8000eb9b24: and r9d, 0x7abd61f4
		_0xffffff8000eb9b2b: neg r9d
		_0xffffff8000eb9b2e: lea edi, [rdi + r9 + 0x3d5eb0fa]
		_0xffffff8000eb9b36: xor edi, edx
		_0xffffff8000eb9b38: xor edi, 0x3d5eb0fa
		_0xffffff8000eb9b3e: add edi, r8d
		_0xffffff8000eb9b41: mov r8d, edi
		_0xffffff8000eb9b44: xor r8d, 0x7e624ff7
		_0xffffff8000eb9b4b: add r8d, ecx
		_0xffffff8000eb9b4e: and edi, 0x7e624ff7
		_0xffffff8000eb9b54: lea ecx, [r8 + rdi*2 + 0x57ccc066]
		_0xffffff8000eb9b5c: mov edi, ecx
		_0xffffff8000eb9b5e: shr edi, 0x1b
		_0xffffff8000eb9b61: mov r8d, edi
		_0xffffff8000eb9b64: or r8d, 0x7f69f6d7
		_0xffffff8000eb9b6b: xor r8d, edi
		_0xffffff8000eb9b6e: xor r8d, 0x7f69f6d7
		_0xffffff8000eb9b75: add r8d, r8d
		_0xffffff8000eb9b78: neg r8d
		_0xffffff8000eb9b7b: lea edi, [rdi + r8 + 0x4201d6d7]
		_0xffffff8000eb9b83: xor edi, 0x4201d6d7
		_0xffffff8000eb9b89: shl ecx, 5
		_0xffffff8000eb9b8c: or ecx, edi
		_0xffffff8000eb9b8e: add ecx, eax
		_0xffffff8000eb9b90: mov edi, ecx
		_0xffffff8000eb9b92: xor edi, eax
		_0xffffff8000eb9b94: and edi, edx
		_0xffffff8000eb9b96: lea r8d, [rdi + rdi]
		_0xffffff8000eb9b9a: and r8d, 0x1f9d2152
		_0xffffff8000eb9ba1: neg r8d
		_0xffffff8000eb9ba4: lea edi, [rdi + r8 + 0xfce90a9]
		_0xffffff8000eb9bac: xor edi, eax
		_0xffffff8000eb9bae: xor edi, 0xfce90a9
		_0xffffff8000eb9bb4: add edi, r11d
		_0xffffff8000eb9bb7: mov r8d, edi
		_0xffffff8000eb9bba: xor r8d, 0x5bbf9cf7
		_0xffffff8000eb9bc1: add r8d, esi
		_0xffffff8000eb9bc4: and edi, 0x5bbf9cf7
		_0xffffff8000eb9bca: lea esi, [r8 + rdi*2 - 0x597b88a4]
		_0xffffff8000eb9bd2: mov edi, esi
		_0xffffff8000eb9bd4: shl edi, 0xa
		_0xffffff8000eb9bd7: and edi, 0x7b76f400
		_0xffffff8000eb9bdd: mov r8d, esi
		_0xffffff8000eb9be0: shl r8d, 9
		_0xffffff8000eb9be4: xor r8d, 0x3dbb7b07
		_0xffffff8000eb9beb: lea edi, [r8 + rdi - 0x3dbb7b07]
		_0xffffff8000eb9bf3: mov r8d, esi
		_0xffffff8000eb9bf6: shr r8d, 0x16
		_0xffffff8000eb9bfa: and r8d, 0x3c8
		_0xffffff8000eb9c01: shr esi, 0x17
		_0xffffff8000eb9c04: add esi, 0x253695e4
		_0xffffff8000eb9c0a: sub esi, r8d
		_0xffffff8000eb9c0d: xor esi, 0x253695e4
		_0xffffff8000eb9c13: or esi, edi
		_0xffffff8000eb9c15: add esi, ecx
		_0xffffff8000eb9c17: mov edi, esi
		_0xffffff8000eb9c19: xor edi, ecx
		_0xffffff8000eb9c1b: and edi, eax
		_0xffffff8000eb9c1d: lea r8d, [rdi + rdi]
		_0xffffff8000eb9c21: and r8d, 0x349a0f6
		_0xffffff8000eb9c28: neg r8d
		_0xffffff8000eb9c2b: lea edi, [rdi + r8 + 0x1a4d07b]
		_0xffffff8000eb9c33: xor edi, ecx
		_0xffffff8000eb9c35: xor edi, 0x1a4d07b
		_0xffffff8000eb9c3b: add edi, r12d
		_0xffffff8000eb9c3e: mov r8d, edi
		_0xffffff8000eb9c41: xor r8d, 0x7ff7ffee
		_0xffffff8000eb9c48: add r8d, edx
		_0xffffff8000eb9c4b: and edi, 0x7ff7ffee
		_0xffffff8000eb9c51: lea edx, [r8 + rdi*2 + 0x58a9e693]
		_0xffffff8000eb9c59: mov edi, edx
		_0xffffff8000eb9c5b: shl edi, 0xf
		_0xffffff8000eb9c5e: and edi, 0xc7a90000
		_0xffffff8000eb9c64: mov r8d, edx
		_0xffffff8000eb9c67: shl r8d, 0xe
		_0xffffff8000eb9c6b: xor r8d, 0x63d4b5fd
		_0xffffff8000eb9c72: lea edi, [r8 + rdi - 0x63d4b5fd]
		_0xffffff8000eb9c7a: mov r8d, edx
		_0xffffff8000eb9c7d: shr r8d, 0x11
		_0xffffff8000eb9c81: and r8d, 0x5e38
		_0xffffff8000eb9c88: shr edx, 0x12
		_0xffffff8000eb9c8b: add edx, 0x65f2ef1c
		_0xffffff8000eb9c91: sub edx, r8d
		_0xffffff8000eb9c94: xor edx, 0x65f2ef1c
		_0xffffff8000eb9c9a: or edx, edi
		_0xffffff8000eb9c9c: add edx, esi
		_0xffffff8000eb9c9e: mov edi, edx
		_0xffffff8000eb9ca0: xor edi, esi
		_0xffffff8000eb9ca2: and edi, ecx
		_0xffffff8000eb9ca4: lea r8d, [rdi + rdi]
		_0xffffff8000eb9ca8: and r8d, 0x994b17c
		_0xffffff8000eb9caf: neg r8d
		_0xffffff8000eb9cb2: lea edi, [rdi + r8 + 0x4ca58be]
		_0xffffff8000eb9cba: xor edi, esi
		_0xffffff8000eb9cbc: xor edi, 0x4ca58be
		_0xffffff8000eb9cc2: add edi, dword ptr [rbp - 0x378]
		_0xffffff8000eb9cc8: mov r8d, edi
		_0xffffff8000eb9ccb: xor r8d, 0x5a5f7f5d
		_0xffffff8000eb9cd2: add r8d, eax
		_0xffffff8000eb9cd5: and edi, 0x5a5f7f5d
		_0xffffff8000eb9cdb: lea eax, [r8 + rdi*2 - 0x728b8395]
		_0xffffff8000eb9ce3: mov edi, eax
		_0xffffff8000eb9ce5: shr edi, 0xb
		_0xffffff8000eb9ce8: and edi, 0x1ff660
		_0xffffff8000eb9cee: mov r8d, eax
		_0xffffff8000eb9cf1: shr r8d, 0xc
		_0xffffff8000eb9cf5: add r8d, 0x17ffb30
		_0xffffff8000eb9cfc: sub r8d, edi
		_0xffffff8000eb9cff: xor r8d, 0x17ffb30
		_0xffffff8000eb9d06: shl eax, 0x14
		_0xffffff8000eb9d09: or eax, r8d
		_0xffffff8000eb9d0c: add eax, edx
		_0xffffff8000eb9d0e: mov edi, eax
		_0xffffff8000eb9d10: xor edi, edx
		_0xffffff8000eb9d12: and edi, esi
		_0xffffff8000eb9d14: lea r8d, [rdi + rdi]
		_0xffffff8000eb9d18: and r8d, 0x63a14442
		_0xffffff8000eb9d1f: neg r8d
		_0xffffff8000eb9d22: lea edi, [rdi + r8 + 0x31d0a221]
		_0xffffff8000eb9d2a: xor edi, edx
		_0xffffff8000eb9d2c: xor edi, 0x31d0a221
		_0xffffff8000eb9d32: add edi, r10d
		_0xffffff8000eb9d35: mov r8d, edi
		_0xffffff8000eb9d38: xor r8d, 0x36bfeeef
		_0xffffff8000eb9d3f: add r8d, ecx
		_0xffffff8000eb9d42: and edi, 0x36bfeeef
		_0xffffff8000eb9d48: lea ecx, [r8 + rdi*2 - 0x14de2109]
		_0xffffff8000eb9d50: mov edi, ecx
		_0xffffff8000eb9d52: shr edi, 0x1b
		_0xffffff8000eb9d55: mov r8d, edi
		_0xffffff8000eb9d58: or r8d, 0x57fdfd5d
		_0xffffff8000eb9d5f: xor r8d, edi
		_0xffffff8000eb9d62: xor r8d, 0x57fdfd5d
		_0xffffff8000eb9d69: add r8d, r8d
		_0xffffff8000eb9d6c: neg r8d
		_0xffffff8000eb9d6f: lea edi, [rdi + r8 + 0x10edfc5d]
		_0xffffff8000eb9d77: xor edi, 0x10edfc5d
		_0xffffff8000eb9d7d: shl ecx, 5
		_0xffffff8000eb9d80: or ecx, edi
		_0xffffff8000eb9d82: add ecx, eax
		_0xffffff8000eb9d84: mov edi, ecx
		_0xffffff8000eb9d86: xor edi, eax
		_0xffffff8000eb9d88: and edi, edx
		_0xffffff8000eb9d8a: lea r8d, [rdi + rdi]
		_0xffffff8000eb9d8e: and r8d, 0x4d3c4446
		_0xffffff8000eb9d95: neg r8d
		_0xffffff8000eb9d98: lea edi, [rdi + r8 + 0x269e2223]
		_0xffffff8000eb9da0: xor edi, eax
		_0xffffff8000eb9da2: xor edi, 0x269e2223
		_0xffffff8000eb9da8: add edi, r15d
		_0xffffff8000eb9dab: mov r8d, edi
		_0xffffff8000eb9dae: xor r8d, 0x786fcd9d
		_0xffffff8000eb9db5: add r8d, esi
		_0xffffff8000eb9db8: and edi, 0x786fcd9d
		_0xffffff8000eb9dbe: lea esi, [r8 + rdi*2 + 0x4ac73a39]
		_0xffffff8000eb9dc6: mov edi, esi
		_0xffffff8000eb9dc8: shr edi, 0x16
		_0xffffff8000eb9dcb: and edi, 0x33e
		_0xffffff8000eb9dd1: mov r8d, esi
		_0xffffff8000eb9dd4: shr r8d, 0x17
		_0xffffff8000eb9dd8: add r8d, 0x22178d9f
		_0xffffff8000eb9ddf: sub r8d, edi
		_0xffffff8000eb9de2: xor r8d, 0x22178d9f
		_0xffffff8000eb9de9: shl esi, 9
		_0xffffff8000eb9dec: or esi, r8d
		_0xffffff8000eb9def: add esi, ecx
		_0xffffff8000eb9df1: mov edi, esi
		_0xffffff8000eb9df3: xor edi, ecx
		_0xffffff8000eb9df5: and edi, eax
		_0xffffff8000eb9df7: lea r8d, [rdi + rdi]
		_0xffffff8000eb9dfb: and r8d, 0xf918609c
		_0xffffff8000eb9e02: neg r8d
		_0xffffff8000eb9e05: lea edi, [rdi + r8 + 0x7c8c304e]
		_0xffffff8000eb9e0d: xor edi, ecx
		_0xffffff8000eb9e0f: xor edi, 0x7c8c304e
		_0xffffff8000eb9e15: add edi, dword ptr [rbp - 0x370]
		_0xffffff8000eb9e1b: mov r8d, edi
		_0xffffff8000eb9e1e: xor r8d, 0x3eaffbfe
		_0xffffff8000eb9e25: add r8d, edx
		_0xffffff8000eb9e28: and edi, 0x3eaffbfe
		_0xffffff8000eb9e2e: lea edx, [r8 + rdi*2 - 0x49daee77]
		_0xffffff8000eb9e36: mov edi, edx
		_0xffffff8000eb9e38: shl edi, 0xf
		_0xffffff8000eb9e3b: and edi, 0xfbff8000
		_0xffffff8000eb9e41: mov r8d, edx
		_0xffffff8000eb9e44: shl r8d, 0xe
		_0xffffff8000eb9e48: xor r8d, 0x7dffdf5f
		_0xffffff8000eb9e4f: lea edi, [r8 + rdi - 0x7dffdf5f]
		_0xffffff8000eb9e57: mov r8d, edx
		_0xffffff8000eb9e5a: shr r8d, 0x11
		_0xffffff8000eb9e5e: and r8d, 0x7e9a
		_0xffffff8000eb9e65: shr edx, 0x12
		_0xffffff8000eb9e68: add edx, 0x6c9d7f4d
		_0xffffff8000eb9e6e: sub edx, r8d
		_0xffffff8000eb9e71: xor edx, 0x6c9d7f4d
		_0xffffff8000eb9e77: or edx, edi
		_0xffffff8000eb9e79: add edx, esi
		_0xffffff8000eb9e7b: mov edi, edx
		_0xffffff8000eb9e7d: xor edi, esi
		_0xffffff8000eb9e7f: and edi, ecx
		_0xffffff8000eb9e81: lea r8d, [rdi + rdi]
		_0xffffff8000eb9e85: and r8d, 0x5810c772
		_0xffffff8000eb9e8c: neg r8d
		_0xffffff8000eb9e8f: lea edi, [rdi + r8 + 0x2c0863b9]
		_0xffffff8000eb9e97: xor edi, esi
		_0xffffff8000eb9e99: xor edi, 0x2c0863b9
		_0xffffff8000eb9e9f: add edi, dword ptr [rbp - 0x37c]
		_0xffffff8000eb9ea5: mov r8d, edi
		_0xffffff8000eb9ea8: xor r8d, 0x127eef6f
		_0xffffff8000eb9eaf: add r8d, eax
		_0xffffff8000eb9eb2: and edi, 0x127eef6f
		_0xffffff8000eb9eb8: lea eax, [r8 + rdi*2 + 0x32db257e]
		_0xffffff8000eb9ec0: mov edi, eax
		_0xffffff8000eb9ec2: shl edi, 0x15
		_0xffffff8000eb9ec5: and edi, 0xdde00000
		_0xffffff8000eb9ecb: mov r8d, eax
		_0xffffff8000eb9ece: shl r8d, 0x14
		_0xffffff8000eb9ed2: xor r8d, 0x6ef6ebf4
		_0xffffff8000eb9ed9: lea edi, [r8 + rdi - 0x6ef6ebf4]
		_0xffffff8000eb9ee1: mov r8d, eax
		_0xffffff8000eb9ee4: shr r8d, 0xb
		_0xffffff8000eb9ee8: and r8d, 0xbe694
		_0xffffff8000eb9eef: shr eax, 0xc
		_0xffffff8000eb9ef2: add eax, 0xdb5f34a
		_0xffffff8000eb9ef7: sub eax, r8d
		_0xffffff8000eb9efa: xor eax, 0xdb5f34a
		_0xffffff8000eb9eff: or eax, edi
		_0xffffff8000eb9f01: add eax, edx
		_0xffffff8000eb9f03: mov edi, eax
		_0xffffff8000eb9f05: xor edi, edx
		_0xffffff8000eb9f07: and edi, esi
		_0xffffff8000eb9f09: lea r8d, [rdi + rdi]
		_0xffffff8000eb9f0d: and r8d, 0xdf00ea82
		_0xffffff8000eb9f14: neg r8d
		_0xffffff8000eb9f17: lea edi, [rdi + r8 + 0x6f807541]
		_0xffffff8000eb9f1f: xor edi, edx
		_0xffffff8000eb9f21: xor edi, 0x6f807541
		_0xffffff8000eb9f27: add edi, r14d
		_0xffffff8000eb9f2a: mov r8d, edi
		_0xffffff8000eb9f2d: xor r8d, 0x5fffc75c
		_0xffffff8000eb9f34: add r8d, ecx
		_0xffffff8000eb9f37: and edi, 0x5fffc75c
		_0xffffff8000eb9f3d: lea ecx, [r8 + rdi*2 + 0x49e421a9]
		_0xffffff8000eb9f45: mov edi, ecx
		_0xffffff8000eb9f47: shl edi, 6
		_0xffffff8000eb9f4a: and edi, 0xdffe9cc0
		_0xffffff8000eb9f50: mov r8d, ecx
		_0xffffff8000eb9f53: shl r8d, 5
		_0xffffff8000eb9f57: xor r8d, 0x6fff4e6b
		_0xffffff8000eb9f5e: lea edi, [r8 + rdi - 0x6fff4e6b]
		_0xffffff8000eb9f66: mov r8d, ecx
		_0xffffff8000eb9f69: shr r8d, 0x1a
		_0xffffff8000eb9f6d: and r8d, 0x22
		_0xffffff8000eb9f71: shr ecx, 0x1b
		_0xffffff8000eb9f74: add ecx, 0x5abfd731
		_0xffffff8000eb9f7a: sub ecx, r8d
		_0xffffff8000eb9f7d: xor ecx, 0x5abfd731
		_0xffffff8000eb9f83: or ecx, edi
		_0xffffff8000eb9f85: add ecx, eax
		_0xffffff8000eb9f87: mov edi, ecx
		_0xffffff8000eb9f89: xor edi, eax
		_0xffffff8000eb9f8b: and edi, edx
		_0xffffff8000eb9f8d: lea r8d, [rdi + rdi]
		_0xffffff8000eb9f91: and r8d, 0x965d5fde
		_0xffffff8000eb9f98: neg r8d
		_0xffffff8000eb9f9b: lea edi, [rdi + r8 + 0x4b2eafef]
		_0xffffff8000eb9fa3: xor edi, eax
		_0xffffff8000eb9fa5: xor edi, 0x4b2eafef
		_0xffffff8000eb9fab: add edi, dword ptr [rbp - 0x368]
		_0xffffff8000eb9fb1: mov r8d, edi
		_0xffffff8000eb9fb4: xor r8d, 0x7a5b9dbf
		_0xffffff8000eb9fbb: add r8d, esi
		_0xffffff8000eb9fbe: and edi, 0x7a5b9dbf
		_0xffffff8000eb9fc4: lea esi, [r8 + rdi*2 - 0x7d6bf9c7]
		_0xffffff8000eb9fcc: mov edi, esi
		_0xffffff8000eb9fce: shl edi, 0xa
		_0xffffff8000eb9fd1: and edi, 0xc37f9c00
		_0xffffff8000eb9fd7: mov r8d, esi
		_0xffffff8000eb9fda: shl r8d, 9
		_0xffffff8000eb9fde: xor r8d, 0x61bfcf77
		_0xffffff8000eb9fe5: lea edi, [r8 + rdi - 0x61bfcf77]
		_0xffffff8000eb9fed: shr esi, 0x17
		_0xffffff8000eb9ff0: mov r8d, esi
		_0xffffff8000eb9ff3: or r8d, 0x3f27fdd7
		_0xffffff8000eb9ffa: xor r8d, esi
		_0xffffff8000eb9ffd: xor r8d, 0x3f27fdd7
		_0xffffff8000eba004: add r8d, r8d
		_0xffffff8000eba007: neg r8d
		_0xffffff8000eba00a: lea esi, [rsi + r8 + 0xf07edd7]
		_0xffffff8000eba012: xor esi, 0xf07edd7
		_0xffffff8000eba018: or esi, edi
		_0xffffff8000eba01a: add esi, ecx
		_0xffffff8000eba01c: mov edi, esi
		_0xffffff8000eba01e: xor edi, ecx
		_0xffffff8000eba020: and edi, eax
		_0xffffff8000eba022: lea r8d, [rdi + rdi]
		_0xffffff8000eba026: and r8d, 0xbaa4ea0a
		_0xffffff8000eba02d: neg r8d
		_0xffffff8000eba030: lea edi, [rdi + r8 + 0x5d527505]
		_0xffffff8000eba038: xor edi, ecx
		_0xffffff8000eba03a: xor edi, 0x5d527505
		_0xffffff8000eba040: add edi, dword ptr [rbp - 0x36c]
		_0xffffff8000eba046: mov r8d, edi
		_0xffffff8000eba049: xor r8d, 0x7fd7f1fe
		_0xffffff8000eba050: add r8d, edx
		_0xffffff8000eba053: and edi, 0x7fd7f1fe
		_0xffffff8000eba059: lea edx, [r8 + rdi*2 - 0x1868ef25]
		_0xffffff8000eba061: mov edi, edx
		_0xffffff8000eba063: shl edi, 0xf
		_0xffffff8000eba066: and edi, 0xffa98000
		_0xffffff8000eba06c: mov r8d, edx
		_0xffffff8000eba06f: shl r8d, 0xe
		_0xffffff8000eba073: xor r8d, 0x7fd4fae1
		_0xffffff8000eba07a: lea edi, [r8 + rdi - 0x7fd4fae1]
		_0xffffff8000eba082: mov r8d, edx
		_0xffffff8000eba085: shr r8d, 0x11
		_0xffffff8000eba089: and r8d, 0x440c
		_0xffffff8000eba090: shr edx, 0x12
		_0xffffff8000eba093: add edx, 0x57c4e206
		_0xffffff8000eba099: sub edx, r8d
		_0xffffff8000eba09c: xor edx, 0x57c4e206
		_0xffffff8000eba0a2: or edx, edi
		_0xffffff8000eba0a4: add edx, esi
		_0xffffff8000eba0a6: mov edi, edx
		_0xffffff8000eba0a8: xor edi, esi
		_0xffffff8000eba0aa: mov r8d, edi
		_0xffffff8000eba0ad: and r8d, ecx
		_0xffffff8000eba0b0: lea r9d, [r8 + r8]
		_0xffffff8000eba0b4: and r9d, 0x862aeb2c
		_0xffffff8000eba0bb: neg r9d
		_0xffffff8000eba0be: lea r8d, [r8 + r9 + 0x43157596]
		_0xffffff8000eba0c6: xor r8d, esi
		_0xffffff8000eba0c9: xor r8d, 0x43157596
		_0xffffff8000eba0d0: add r8d, dword ptr [rbp - 0x374]
		_0xffffff8000eba0d7: mov r9d, r8d
		_0xffffff8000eba0da: xor r9d, 0x767bdf3b
		_0xffffff8000eba0e1: add r9d, eax
		_0xffffff8000eba0e4: and r8d, 0x767bdf3b
		_0xffffff8000eba0eb: lea eax, [r9 + r8*2 + 0x16ae6d4f]
		_0xffffff8000eba0f3: mov r8d, eax
		_0xffffff8000eba0f6: shr r8d, 0xb
		_0xffffff8000eba0fa: and r8d, 0x17508c
		_0xffffff8000eba101: mov r9d, eax
		_0xffffff8000eba104: shr r9d, 0xc
		_0xffffff8000eba108: add r9d, 0x569ba846
		_0xffffff8000eba10f: sub r9d, r8d
		_0xffffff8000eba112: xor r9d, 0x569ba846
		_0xffffff8000eba119: shl eax, 0x14
		_0xffffff8000eba11c: or eax, r9d
		_0xffffff8000eba11f: add eax, edx
		_0xffffff8000eba121: mov r8b, al
		_0xffffff8000eba124: add r8b, r8b
		_0xffffff8000eba127: mov r9b, al
		_0xffffff8000eba12a: add r9b, 0x12
		_0xffffff8000eba12e: and r8b, 0x14
		_0xffffff8000eba132: sub r9b, r8b
		_0xffffff8000eba135: mov r8b, r9b
		_0xffffff8000eba138: add r8b, r8b
		_0xffffff8000eba13b: and r9b, 0xf
		_0xffffff8000eba13f: xor r9b, 0x31
		_0xffffff8000eba143: and r8b, 6
		_0xffffff8000eba147: xor r8b, 4
		_0xffffff8000eba14b: add r8b, r9b
		_0xffffff8000eba14e: add r8b, 0xef
		_0xffffff8000eba152: movzx r8d, r8b
		_0xffffff8000eba156: cmp r8b, 0x22
		_0xffffff8000eba15a: sbb r9, r9
		_0xffffff8000eba15d: and r9d, 0x100
		_0xffffff8000eba164: add r9d, r8d
		_0xffffff8000eba167: lea r8d, [r9 + 0x7e887110]
		_0xffffff8000eba16e: shl r8, 0x20
		_0xffffff8000eba172: movabs r10, 0x81778ece00000000
		_0xffffff8000eba17c: add r10, r8
		_0xffffff8000eba17f: mov r8, r10
		_0xffffff8000eba182: sar r8, 0x1f
		_0xffffff8000eba186: movabs r11, 0x22ff51f13be579ee
		_0xffffff8000eba190: and r11, r8
		_0xffffff8000eba193: sar r10, 0x20
		_0xffffff8000eba197: movabs r8, 0x317fa8f89df2bcf7
		_0xffffff8000eba1a1: xor r8, r10
		_0xffffff8000eba1a4: add r8, r11
		_0xffffff8000eba1a7: lea r8, [rbp + r8*4 - 0xa0]
		_0xffffff8000eba1af: movabs r10, 0x3a015c1d88350c24
		_0xffffff8000eba1b9: mov r8d, dword ptr [r10 + r8]
		_0xffffff8000eba1bd: mov r10b, cl
		_0xffffff8000eba1c0: add r10b, r10b
		_0xffffff8000eba1c3: and r10b, 2
		_0xffffff8000eba1c7: mov r11b, cl
		_0xffffff8000eba1ca: sub r11b, r10b
		_0xffffff8000eba1cd: inc r11b
		_0xffffff8000eba1d0: mov r10b, r11b
		_0xffffff8000eba1d3: add r10b, r10b
		_0xffffff8000eba1d6: and r11b, 0xf
		_0xffffff8000eba1da: xor r11b, 0x3e
		_0xffffff8000eba1de: and r10b, 0x1e
		_0xffffff8000eba1e2: xor r10b, 2
		_0xffffff8000eba1e6: add r10b, r11b
		_0xffffff8000eba1e9: add r10b, 0xcd
		_0xffffff8000eba1ed: movzx r10d, r10b
		_0xffffff8000eba1f1: cmp r10b, 0xc
		_0xffffff8000eba1f5: sbb r11, r11
		_0xffffff8000eba1f8: and r11d, 0x100
		_0xffffff8000eba1ff: add r11d, r10d
		_0xffffff8000eba202: lea r10d, [r11 + 0x77ceb567]
		_0xffffff8000eba209: shl r10, 0x20
		_0xffffff8000eba20d: movabs rbx, 0x88314a8d00000000
		_0xffffff8000eba217: add rbx, r10
		_0xffffff8000eba21a: mov r10, rbx
		_0xffffff8000eba21d: sar r10, 0x1f
		_0xffffff8000eba221: movabs r14, 0x3fb9dfbddfead6e6
		_0xffffff8000eba22b: and r14, r10
		_0xffffff8000eba22e: sar rbx, 0x20
		_0xffffff8000eba232: movabs r10, 0x3fdcefdeeff56b73
		_0xffffff8000eba23c: xor r10, rbx
		_0xffffff8000eba23f: add r10, r14
		_0xffffff8000eba242: lea r10, [rbp + r10*4 - 0xa0]
		_0xffffff8000eba24a: movabs rbx, 0x8c4084402a5234
		_0xffffff8000eba254: mov r10d, dword ptr [rbx + r10]
		_0xffffff8000eba258: add r11d, 0x4833135c
		_0xffffff8000eba25f: shl r11, 0x20
		_0xffffff8000eba263: movabs rbx, 0xb7ccec9800000000
		_0xffffff8000eba26d: add rbx, r11
		_0xffffff8000eba270: mov r11, rbx
		_0xffffff8000eba273: sar r11, 0x1f
		_0xffffff8000eba277: movabs r14, 0x346f7dded7f7b7ec
		_0xffffff8000eba281: and r14, r11
		_0xffffff8000eba284: sar rbx, 0x20
		_0xffffff8000eba288: movabs r11, 0x1a37beef6bfbdbf6
		_0xffffff8000eba292: xor r11, rbx
		_0xffffff8000eba295: add r11, r14
		_0xffffff8000eba298: lea r11, [rbp + r11*4 - 0xa0]
		_0xffffff8000eba2a0: movabs rbx, 0x9721044250109028
		_0xffffff8000eba2aa: mov dword ptr [rbx + r11], r8d
		_0xffffff8000eba2ae: add r9d, 0x3e5a7bdd
		_0xffffff8000eba2b5: shl r9, 0x20
		_0xffffff8000eba2b9: movabs r8, 0xc1a5840100000000
		_0xffffff8000eba2c3: add r8, r9
		_0xffffff8000eba2c6: mov r9, r8
		_0xffffff8000eba2c9: sar r9, 0x1f
		_0xffffff8000eba2cd: movabs r11, 0x2fbf5ef7eef7e9fa
		_0xffffff8000eba2d7: and r11, r9
		_0xffffff8000eba2da: sar r8, 0x20
		_0xffffff8000eba2de: movabs r9, 0x37dfaf7bf77bf4fd
		_0xffffff8000eba2e8: xor r9, r8
		_0xffffff8000eba2eb: add r9, r11
		_0xffffff8000eba2ee: lea r8, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba2f6: mov r9b, dl
		_0xffffff8000eba2f9: add r9b, r9b
		_0xffffff8000eba2fc: and r9b, 0x90
		_0xffffff8000eba300: xor r9b, 0x70
		_0xffffff8000eba304: mov r11b, dl
		_0xffffff8000eba307: sub r11b, r9b
		_0xffffff8000eba30a: add r11b, 8
		_0xffffff8000eba30e: mov r9b, r11b
		_0xffffff8000eba311: add r9b, r9b
		_0xffffff8000eba314: and r11b, 0xf
		_0xffffff8000eba318: xor r11b, 0x35
		_0xffffff8000eba31c: and r9b, 0x1a
		_0xffffff8000eba320: xor r9b, 0x10
		_0xffffff8000eba324: add r9b, r11b
		_0xffffff8000eba327: add r9b, 0xec
		_0xffffff8000eba32b: movzx r9d, r9b
		_0xffffff8000eba32f: cmp r9b, 0x29
		_0xffffff8000eba333: sbb r11, r11
		_0xffffff8000eba336: and r11, 0x100
		_0xffffff8000eba33d: lea rbx, [r9 + r11]
		_0xffffff8000eba341: add rbx, -0x29
		_0xffffff8000eba345: movabs r14, 0xfeeb7d9fba7bdbd
		_0xffffff8000eba34f: and r14, rbx
		_0xffffff8000eba352: movabs r15, 0x2feeb7d9fba7bdbd
		_0xffffff8000eba35c: xor r15, rbx
		_0xffffff8000eba35f: lea rbx, [r15 + r14*2]
		_0xffffff8000eba363: lea rbx, [rbp + rbx*4 - 0xa0]
		_0xffffff8000eba36b: movabs r14, 0x404520981161090c
		_0xffffff8000eba375: mov ebx, dword ptr [r14 + rbx]
		_0xffffff8000eba379: movabs r14, 0x2081421022102c0c
		_0xffffff8000eba383: mov dword ptr [r14 + r8], ebx
		_0xffffff8000eba387: movzx r8d, r9b
		_0xffffff8000eba38b: add r11d, r8d
		_0xffffff8000eba38e: add r11d, 0x31eebaff
		_0xffffff8000eba395: shl r11, 0x20
		_0xffffff8000eba399: movabs r8, 0xce1144d800000000
		_0xffffff8000eba3a3: add r8, r11
		_0xffffff8000eba3a6: mov r9, r8
		_0xffffff8000eba3a9: sar r9, 0x1f
		_0xffffff8000eba3ad: movabs r11, 0x33ff7bb6fb9ffafe
		_0xffffff8000eba3b7: and r11, r9
		_0xffffff8000eba3ba: sar r8, 0x20
		_0xffffff8000eba3be: movabs r9, 0x39ffbddb7dcffd7f
		_0xffffff8000eba3c8: xor r9, r8
		_0xffffff8000eba3cb: add r9, r11
		_0xffffff8000eba3ce: lea r8, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba3d6: mov r9b, sil
		_0xffffff8000eba3d9: add r9b, r9b
		_0xffffff8000eba3dc: mov r11b, sil
		_0xffffff8000eba3df: add r11b, 0x17
		_0xffffff8000eba3e3: and r9b, 0xce
		_0xffffff8000eba3e7: xor r9b, 0xb0
		_0xffffff8000eba3eb: sub r11b, r9b
		_0xffffff8000eba3ee: mov r9b, r11b
		_0xffffff8000eba3f1: add r9b, r9b
		_0xffffff8000eba3f4: and r11b, 0xf
		_0xffffff8000eba3f8: xor r11b, 0x64
		_0xffffff8000eba3fc: and r9b, 6
		_0xffffff8000eba400: xor r9b, 6
		_0xffffff8000eba404: add r9b, r11b
		_0xffffff8000eba407: add r9b, 0xfe
		_0xffffff8000eba40b: movzx r9d, r9b
		_0xffffff8000eba40f: cmp r9b, 0x61
		_0xffffff8000eba413: sbb r11, r11
		_0xffffff8000eba416: and r11d, 0x100
		_0xffffff8000eba41d: add r11d, r9d
		_0xffffff8000eba420: lea r9d, [r11 + 0x2de54db5]
		_0xffffff8000eba427: shl r9, 0x20
		_0xffffff8000eba42b: movabs rbx, 0xd21ab1ea00000000
		_0xffffff8000eba435: add rbx, r9
		_0xffffff8000eba438: mov r9, rbx
		_0xffffff8000eba43b: sar r9, 0x1f
		_0xffffff8000eba43f: movabs r14, 0x2fbff2ffd2f75fc8
		_0xffffff8000eba449: and r14, r9
		_0xffffff8000eba44c: sar rbx, 0x20
		_0xffffff8000eba450: movabs r9, 0x17dff97fe97bafe4
		_0xffffff8000eba45a: xor r9, rbx
		_0xffffff8000eba45d: add r9, r14
		_0xffffff8000eba460: lea r9, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba468: movabs rbx, 0xa0801a005a114070
		_0xffffff8000eba472: mov r9d, dword ptr [rbx + r9]
		_0xffffff8000eba476: movabs rbx, 0x1801089208c00a04
		_0xffffff8000eba480: mov dword ptr [rbx + r8], r9d
		_0xffffff8000eba484: add r11d, 0x2350e06d
		_0xffffff8000eba48b: shl r11, 0x20
		_0xffffff8000eba48f: movabs r8, 0xdcaf1f3200000000
		_0xffffff8000eba499: add r8, r11
		_0xffffff8000eba49c: mov r9, r8
		_0xffffff8000eba49f: sar r9, 0x1f
		_0xffffff8000eba4a3: movabs r11, 0x36ebfa25d7e37ffc
		_0xffffff8000eba4ad: and r11, r9
		_0xffffff8000eba4b0: sar r8, 0x20
		_0xffffff8000eba4b4: movabs r9, 0x1b75fd12ebf1bffe
		_0xffffff8000eba4be: xor r9, r8
		_0xffffff8000eba4c1: add r9, r11
		_0xffffff8000eba4c4: lea r8, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba4cc: mov r9d, ecx
		_0xffffff8000eba4cf: shr r9d, 3
		_0xffffff8000eba4d3: and r9d, 0x98
		_0xffffff8000eba4da: mov r11d, ecx
		_0xffffff8000eba4dd: shr r11d, 4
		_0xffffff8000eba4e1: add r11d, 0xc
		_0xffffff8000eba4e5: sub r11d, r9d
		_0xffffff8000eba4e8: xor r11d, 8
		_0xffffff8000eba4ec: mov r9b, r11b
		_0xffffff8000eba4ef: add r9b, r9b
		_0xffffff8000eba4f2: and r11b, 0xf
		_0xffffff8000eba4f6: xor r11b, 0x33
		_0xffffff8000eba4fa: and r9b, 0xe
		_0xffffff8000eba4fe: xor r9b, 8
		_0xffffff8000eba502: add r9b, r11b
		_0xffffff8000eba505: add r9b, 0xfc
		_0xffffff8000eba509: movzx r9d, r9b
		_0xffffff8000eba50d: cmp r9b, 0x33
		_0xffffff8000eba511: sbb r11, r11
		_0xffffff8000eba514: and r11d, 0x100
		_0xffffff8000eba51b: add r11d, r9d
		_0xffffff8000eba51e: lea r9d, [r11 + 0x606161f0]
		_0xffffff8000eba525: shl r9, 0x20
		_0xffffff8000eba529: movabs rbx, 0x9f9e9ddd00000000
		_0xffffff8000eba533: add rbx, r9
		_0xffffff8000eba536: mov r9, rbx
		_0xffffff8000eba539: sar r9, 0x1f
		_0xffffff8000eba53d: movabs r14, 0x1bcfeb775f777d06
		_0xffffff8000eba547: and r14, r9
		_0xffffff8000eba54a: sar rbx, 0x20
		_0xffffff8000eba54e: movabs r9, 0x2de7f5bbafbbbe83
		_0xffffff8000eba558: xor r9, rbx
		_0xffffff8000eba55b: add r9, r14
		_0xffffff8000eba55e: lea r9, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba566: movabs rbx, 0x48602911411105f4
		_0xffffff8000eba570: mov r9d, dword ptr [rbx + r9]
		_0xffffff8000eba574: movabs rbx, 0x92280bb450390008
		_0xffffff8000eba57e: mov dword ptr [rbx + r8], r9d
		_0xffffff8000eba582: mov r8d, eax
		_0xffffff8000eba585: shr r8d, 3
		_0xffffff8000eba589: and r8d, 0x28
		_0xffffff8000eba58d: mov r9d, eax
		_0xffffff8000eba590: shr r9d, 4
		_0xffffff8000eba594: add r9d, 0x14
		_0xffffff8000eba598: sub r9d, r8d
		_0xffffff8000eba59b: xor r9d, 0xe
		_0xffffff8000eba59f: mov r8b, r9b
		_0xffffff8000eba5a2: add r8b, r8b
		_0xffffff8000eba5a5: and r9b, 0xf
		_0xffffff8000eba5a9: xor r9b, 0x74
		_0xffffff8000eba5ad: and r8b, 0x1c
		_0xffffff8000eba5b1: xor r8b, 0x14
		_0xffffff8000eba5b5: add r8b, r9b
		_0xffffff8000eba5b8: add r8b, 0xc0
		_0xffffff8000eba5bc: movzx r8d, r8b
		_0xffffff8000eba5c0: cmp r8b, 0x3e
		_0xffffff8000eba5c4: sbb r9, r9
		_0xffffff8000eba5c7: and r9, 0x100
		_0xffffff8000eba5ce: add r9, r8
		_0xffffff8000eba5d1: lea r8, [r9 + r9 - 0x7c]
		_0xffffff8000eba5d6: movabs rbx, 0x39dd63bbbff7df7e
		_0xffffff8000eba5e0: and rbx, r8
		_0xffffff8000eba5e3: add r9, -0x3e
		_0xffffff8000eba5e7: movabs r14, 0x3ceeb1dddffbefbf
		_0xffffff8000eba5f1: xor r14, r9
		_0xffffff8000eba5f4: add r14, rbx
		_0xffffff8000eba5f7: lea rbx, [rbp + r14*4 - 0xa0]
		_0xffffff8000eba5ff: movabs r14, 0xc45388880104104
		_0xffffff8000eba609: mov ebx, dword ptr [r14 + rbx]
		_0xffffff8000eba60d: add r11d, 0x5a8127be
		_0xffffff8000eba614: shl r11, 0x20
		_0xffffff8000eba618: movabs r14, 0xa57ed80f00000000
		_0xffffff8000eba622: add r14, r11
		_0xffffff8000eba625: mov r11, r14
		_0xffffff8000eba628: sar r11, 0x1f
		_0xffffff8000eba62c: movabs r15, 0x3f37ef9fffefe6c4
		_0xffffff8000eba636: and r15, r11
		_0xffffff8000eba639: sar r14, 0x20
		_0xffffff8000eba63d: movabs r11, 0x3f9bf7cffff7f362
		_0xffffff8000eba647: xor r11, r14
		_0xffffff8000eba64a: add r11, r15
		_0xffffff8000eba64d: lea r11, [rbp + r11*4 - 0xa0]
		_0xffffff8000eba655: movabs r14, 0x19020c000203278
		_0xffffff8000eba65f: mov dword ptr [r14 + r11], ebx
		_0xffffff8000eba663: movabs r11, 0x2fe9ffa67f777f7c
		_0xffffff8000eba66d: and r11, r8
		_0xffffff8000eba670: movabs r8, 0x37f4ffd33fbbbfbe
		_0xffffff8000eba67a: xor r8, r9
		_0xffffff8000eba67d: add r8, r11
		_0xffffff8000eba680: lea r8, [rbp + r8*4 - 0xa0]
		_0xffffff8000eba688: mov r9d, edx
		_0xffffff8000eba68b: shr r9d, 3
		_0xffffff8000eba68f: and r9d, 0xe6
		_0xffffff8000eba696: mov r11d, edx
		_0xffffff8000eba699: shr r11d, 4
		_0xffffff8000eba69d: add r11d, 3
		_0xffffff8000eba6a1: sub r11d, r9d
		_0xffffff8000eba6a4: xor r11d, 6
		_0xffffff8000eba6a8: mov r9b, r11b
		_0xffffff8000eba6ab: add r9b, r9b
		_0xffffff8000eba6ae: and r11b, 0xf
		_0xffffff8000eba6b2: xor r11b, 0x72
		_0xffffff8000eba6b6: and r9b, 0xe
		_0xffffff8000eba6ba: xor r9b, 0xa
		_0xffffff8000eba6be: add r9b, r11b
		_0xffffff8000eba6c1: dec r9b
		_0xffffff8000eba6c4: movzx r9d, r9b
		_0xffffff8000eba6c8: cmp r9b, 0x76
		_0xffffff8000eba6cc: sbb r11, r11
		_0xffffff8000eba6cf: and r11d, 0x100
		_0xffffff8000eba6d6: add r11d, r9d
		_0xffffff8000eba6d9: lea r9d, [r11 + 0x700401b5]
		_0xffffff8000eba6e0: shl r9, 0x20
		_0xffffff8000eba6e4: movabs rbx, 0x8ffbfdd500000000
		_0xffffff8000eba6ee: add rbx, r9
		_0xffffff8000eba6f1: mov r9, rbx
		_0xffffff8000eba6f4: sar r9, 0x1f
		_0xffffff8000eba6f8: movabs r14, 0x37357e77afb9577e
		_0xffffff8000eba702: and r14, r9
		_0xffffff8000eba705: sar rbx, 0x20
		_0xffffff8000eba709: movabs r9, 0x3b9abf3bd7dcabbf
		_0xffffff8000eba713: xor r9, rbx
		_0xffffff8000eba716: add r9, r14
		_0xffffff8000eba719: lea r9, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba721: movabs rbx, 0x11950310a08d5104
		_0xffffff8000eba72b: mov r9d, dword ptr [rbx + r9]
		_0xffffff8000eba72f: movabs rbx, 0x202c00b301110108
		_0xffffff8000eba739: mov dword ptr [rbx + r8], r9d
		_0xffffff8000eba73d: add r11d, 0x503ddfd5
		_0xffffff8000eba744: shl r11, 0x20
		_0xffffff8000eba748: movabs r8, 0xafc21fb500000000
		_0xffffff8000eba752: add r8, r11
		_0xffffff8000eba755: mov r9, r8
		_0xffffff8000eba758: sar r9, 0x1f
		_0xffffff8000eba75c: movabs r11, 0x3eefef7fdd3e366a
		_0xffffff8000eba766: and r11, r9
		_0xffffff8000eba769: sar r8, 0x20
		_0xffffff8000eba76d: movabs r9, 0x3f77f7bfee9f1b35
		_0xffffff8000eba777: xor r9, r8
		_0xffffff8000eba77a: add r9, r11
		_0xffffff8000eba77d: lea r8, [rbp + r9*4 - 0xa0]
		_0xffffff8000eba785: mov r9d, esi
		_0xffffff8000eba788: shr r9d, 3
		_0xffffff8000eba78c: and r9d, 0xee
		_0xffffff8000eba793: mov r11d, esi
		_0xffffff8000eba796: shr r11d, 4
		_0xffffff8000eba79a: add r11d, 0x17
		_0xffffff8000eba79e: sub r11d, r9d
		_0xffffff8000eba7a1: xor r11d, 3
		_0xffffff8000eba7a5: mov r9b, r11b
		_0xffffff8000eba7a8: add r9b, r9b
		_0xffffff8000eba7ab: and r11b, 0xf
		_0xffffff8000eba7af: xor r11b, 0x4a
		_0xffffff8000eba7b3: and r9b, 0x1c
		_0xffffff8000eba7b7: xor r9b, 8
		_0xffffff8000eba7bb: add r9b, r11b
		_0xffffff8000eba7be: add r9b, 0xfc
		_0xffffff8000eba7c2: movzx r9d, r9b
		_0xffffff8000eba7c6: cmp r9b, 0x4a
		_0xffffff8000eba7ca: sbb r11, r11
		_0xffffff8000eba7cd: and r11, 0x100
		_0xffffff8000eba7d4: mov ebx, r11d
		_0xffffff8000eba7d7: add ebx, r9d
		_0xffffff8000eba7da: add ebx, 0x3dc4982c
		_0xffffff8000eba7e0: shl rbx, 0x20
		_0xffffff8000eba7e4: movabs r14, 0xc23b678a00000000
		_0xffffff8000eba7ee: add r14, rbx
		_0xffffff8000eba7f1: mov rbx, r14
		_0xffffff8000eba7f4: sar rbx, 0x1f
		_0xffffff8000eba7f8: movabs r15, 0x3ff3fb23ad7f3ff6
		_0xffffff8000eba802: and r15, rbx
		_0xffffff8000eba805: sar r14, 0x20
		_0xffffff8000eba809: movabs rbx, 0x3ff9fd91d6bf9ffb
		_0xffffff8000eba813: xor rbx, r14
		_0xffffff8000eba816: add rbx, r15
		_0xffffff8000eba819: lea rbx, [rbp + rbx*4 - 0xa0]
		_0xffffff8000eba821: movabs r14, 0x1809b8a5018014
		_0xffffff8000eba82b: mov ebx, dword ptr [r14 + rbx]
		_0xffffff8000eba82f: movabs r14, 0x22021004583932c
		_0xffffff8000eba839: mov dword ptr [r14 + r8], ebx
		_0xffffff8000eba83d: movzx r8d, r9b
		_0xffffff8000eba841: add r8, r11
		_0xffffff8000eba844: add r8, -0x4a
		_0xffffff8000eba848: movabs r9, 0x1fb57bfebffed2ff
		_0xffffff8000eba852: and r9, r8
		_0xffffff8000eba855: movabs r11, 0x3fb57bfebffed2ff
		_0xffffff8000eba85f: xor r11, r8
		_0xffffff8000eba862: lea r8, [r11 + r9*2]
		_0xffffff8000eba866: lea r8, [rbp + r8*4 - 0xa0]
		_0xffffff8000eba86e: movabs r9, 0x12a10050004b404
		_0xffffff8000eba878: mov dword ptr [r9 + r8], r10d
		_0xffffff8000eba87c: xor edi, eax
		_0xffffff8000eba87e: mov r8d, dword ptr [rbp - 0x8c]
		_0xffffff8000eba885: mov dword ptr [rbp - 0x378], r8d
		_0xffffff8000eba88c: add edi, r8d
		_0xffffff8000eba88f: mov r8d, edi
		_0xffffff8000eba892: xor r8d, 0x37d7ff5f
		_0xffffff8000eba899: add r8d, ecx
		_0xffffff8000eba89c: and edi, 0x37d7ff5f
		_0xffffff8000eba8a2: lea ecx, [r8 + rdi*2 - 0x37ddc61d]
		_0xffffff8000eba8aa: mov edi, ecx
		_0xffffff8000eba8ac: shl edi, 5
		_0xffffff8000eba8af: and edi, 0x6bbbffe0
		_0xffffff8000eba8b5: mov r8d, ecx
		_0xffffff8000eba8b8: shl r8d, 4
		_0xffffff8000eba8bc: xor r8d, 0x35ddfff6
		_0xffffff8000eba8c3: lea edi, [r8 + rdi - 0x35ddfff6]
		_0xffffff8000eba8cb: shr ecx, 0x1c
		_0xffffff8000eba8ce: mov r8d, ecx
		_0xffffff8000eba8d1: or r8d, 0x767fdb77
		_0xffffff8000eba8d8: xor r8d, ecx
		_0xffffff8000eba8db: xor r8d, 0x767fdb77
		_0xffffff8000eba8e2: add r8d, r8d
		_0xffffff8000eba8e5: neg r8d
		_0xffffff8000eba8e8: lea ecx, [rcx + r8 + 0x546bc377]
		_0xffffff8000eba8f0: xor ecx, 0x546bc377
		_0xffffff8000eba8f6: or ecx, edi
		_0xffffff8000eba8f8: add ecx, eax
		_0xffffff8000eba8fa: mov edi, eax
		_0xffffff8000eba8fc: xor edi, edx
		_0xffffff8000eba8fe: xor edi, ecx
		_0xffffff8000eba900: mov r8d, dword ptr [rbp - 0x80]
		_0xffffff8000eba904: mov dword ptr [rbp - 0x368], r8d
		_0xffffff8000eba90b: add edi, r8d
		_0xffffff8000eba90e: mov r8d, edi
		_0xffffff8000eba911: xor r8d, 0x6effffed
		_0xffffff8000eba918: add r8d, esi
		_0xffffff8000eba91b: and edi, 0x6effffed
		_0xffffff8000eba921: lea esi, [r8 + rdi*2 + 0x1871f694]
		_0xffffff8000eba929: mov edi, esi
		_0xffffff8000eba92b: shr edi, 0x14
		_0xffffff8000eba92e: and edi, 0x1ae
		_0xffffff8000eba934: mov r8d, esi
		_0xffffff8000eba937: shr r8d, 0x15
		_0xffffff8000eba93b: add r8d, 0x209308d7
		_0xffffff8000eba942: sub r8d, edi
		_0xffffff8000eba945: xor r8d, 0x209308d7
		_0xffffff8000eba94c: shl esi, 0xb
		_0xffffff8000eba94f: or esi, r8d
		_0xffffff8000eba952: add esi, ecx
		_0xffffff8000eba954: mov edi, ecx
		_0xffffff8000eba956: xor edi, eax
		_0xffffff8000eba958: xor edi, esi
		_0xffffff8000eba95a: mov r8d, dword ptr [rbp - 0x74]
		_0xffffff8000eba95e: mov dword ptr [rbp - 0x360], r8d
		_0xffffff8000eba965: add edi, r8d
		_0xffffff8000eba968: mov r8d, edi
		_0xffffff8000eba96b: xor r8d, 0x4dff5c34
		_0xffffff8000eba972: add r8d, edx
		_0xffffff8000eba975: and edi, 0x4dff5c34
		_0xffffff8000eba97b: lea edx, [r8 + rdi*2 + 0x1f9e04ee]
		_0xffffff8000eba983: mov edi, edx
		_0xffffff8000eba985: shl edi, 0x11
		_0xffffff8000eba988: and edi, 0xf3fe0000
		_0xffffff8000eba98e: mov r8d, edx
		_0xffffff8000eba991: shl r8d, 0x10
		_0xffffff8000eba995: xor r8d, 0x79ffdedb
		_0xffffff8000eba99c: lea edi, [r8 + rdi - 0x79ffdedb]
		_0xffffff8000eba9a4: mov r8d, edx
		_0xffffff8000eba9a7: shr r8d, 0xf
		_0xffffff8000eba9ab: and r8d, 0x10562
		_0xffffff8000eba9b2: shr edx, 0x10
		_0xffffff8000eba9b5: add edx, 0x6b9382b1
		_0xffffff8000eba9bb: sub edx, r8d
		_0xffffff8000eba9be: xor edx, 0x6b9382b1
		_0xffffff8000eba9c4: or edx, edi
		_0xffffff8000eba9c6: add edx, esi
		_0xffffff8000eba9c8: mov edi, esi
		_0xffffff8000eba9ca: xor edi, ecx
		_0xffffff8000eba9cc: xor edi, edx
		_0xffffff8000eba9ce: mov r8d, dword ptr [rbp - 0x68]
		_0xffffff8000eba9d2: add edi, r8d
		_0xffffff8000eba9d5: mov r9d, edi
		_0xffffff8000eba9d8: xor r9d, 0x7dbaf45f
		_0xffffff8000eba9df: add r9d, eax
		_0xffffff8000eba9e2: and edi, 0x7dbaf45f
		_0xffffff8000eba9e8: lea eax, [r9 + rdi*2 - 0x7fd5bc53]
		_0xffffff8000eba9f0: mov edi, eax
		_0xffffff8000eba9f2: shl edi, 0x18
		_0xffffff8000eba9f5: and edi, 0xfd000000
		_0xffffff8000eba9fb: mov r9d, eax
		_0xffffff8000eba9fe: shl r9d, 0x17
		_0xffffff8000ebaa02: xor r9d, 0x7eaffbff
		_0xffffff8000ebaa09: lea edi, [r9 + rdi - 0x7eaffbff]
		_0xffffff8000ebaa11: mov r9d, eax
		_0xffffff8000ebaa14: shr r9d, 8
		_0xffffff8000ebaa18: and r9d, 0x722962
		_0xffffff8000ebaa1f: shr eax, 9
		_0xffffff8000ebaa22: add eax, 0x70b914b1
		_0xffffff8000ebaa27: sub eax, r9d
		_0xffffff8000ebaa2a: xor eax, 0x70b914b1
		_0xffffff8000ebaa2f: or eax, edi
		_0xffffff8000ebaa31: add eax, edx
		_0xffffff8000ebaa33: mov edi, edx
		_0xffffff8000ebaa35: xor edi, esi
		_0xffffff8000ebaa37: xor edi, eax
		_0xffffff8000ebaa39: mov r9d, dword ptr [rbp - 0xa0]
		_0xffffff8000ebaa40: mov r10d, dword ptr [rbp - 0x9c]
		_0xffffff8000ebaa47: mov dword ptr [rbp - 0x374], r10d
		_0xffffff8000ebaa4e: add edi, r10d
		_0xffffff8000ebaa51: mov r10d, edi
		_0xffffff8000ebaa54: xor r10d, 0x7979eedf
		_0xffffff8000ebaa5b: add r10d, ecx
		_0xffffff8000ebaa5e: and edi, 0x7979eedf
		_0xffffff8000ebaa64: lea ecx, [r10 + rdi*2 + 0x2b44fb65]
		_0xffffff8000ebaa6c: mov edi, ecx
		_0xffffff8000ebaa6e: shl edi, 5
		_0xffffff8000ebaa71: and edi, 0xbbb1ef60
		_0xffffff8000ebaa77: mov r10d, ecx
		_0xffffff8000ebaa7a: shl r10d, 4
		_0xffffff8000ebaa7e: xor r10d, 0x5dd8f7ba
		_0xffffff8000ebaa85: lea edi, [r10 + rdi - 0x5dd8f7ba]
		_0xffffff8000ebaa8d: shr ecx, 0x1c
		_0xffffff8000ebaa90: or ecx, edi
		_0xffffff8000ebaa92: add ecx, eax
		_0xffffff8000ebaa94: mov edi, eax
		_0xffffff8000ebaa96: xor edi, edx
		_0xffffff8000ebaa98: xor edi, ecx
		_0xffffff8000ebaa9a: mov r10d, dword ptr [rbp - 0x90]
		_0xffffff8000ebaaa1: mov dword ptr [rbp - 0x364], r10d
		_0xffffff8000ebaaa8: add edi, r10d
		_0xffffff8000ebaaab: mov r10d, edi
		_0xffffff8000ebaaae: xor r10d, 0x7ffdef74
		_0xffffff8000ebaab5: add r10d, esi
		_0xffffff8000ebaab8: and edi, 0x7ffdef74
		_0xffffff8000ebaabe: lea esi, [r10 + rdi*2 - 0x341f1fcb]
		_0xffffff8000ebaac6: mov edi, esi
		_0xffffff8000ebaac8: shr edi, 0x14
		_0xffffff8000ebaacb: and edi, 0xcf2
		_0xffffff8000ebaad1: mov r10d, esi
		_0xffffff8000ebaad4: shr r10d, 0x15
		_0xffffff8000ebaad8: add r10d, 0x54a1ee79
		_0xffffff8000ebaadf: sub r10d, edi
		_0xffffff8000ebaae2: xor r10d, 0x54a1ee79
		_0xffffff8000ebaae9: shl esi, 0xb
		_0xffffff8000ebaaec: or esi, r10d
		_0xffffff8000ebaaef: add esi, ecx
		_0xffffff8000ebaaf1: mov edi, ecx
		_0xffffff8000ebaaf3: xor edi, eax
		_0xffffff8000ebaaf5: xor edi, esi
		_0xffffff8000ebaaf7: mov r10d, dword ptr [rbp - 0x84]
		_0xffffff8000ebaafe: add edi, r10d
		_0xffffff8000ebab01: mov r11d, edi
		_0xffffff8000ebab04: xor r11d, 0x27fe0fe7
		_0xffffff8000ebab0b: add r11d, edx
		_0xffffff8000ebab0e: and edi, 0x27fe0fe7
		_0xffffff8000ebab14: lea edx, [r11 + rdi*2 - 0x3142c487]
		_0xffffff8000ebab1c: mov edi, edx
		_0xffffff8000ebab1e: shl edi, 0x11
		_0xffffff8000ebab21: and edi, 0xd6c20000
		_0xffffff8000ebab27: mov r11d, edx
		_0xffffff8000ebab2a: shl r11d, 0x10
		_0xffffff8000ebab2e: xor r11d, 0x6b61f77e
		_0xffffff8000ebab35: lea edi, [r11 + rdi - 0x6b61f77e]
		_0xffffff8000ebab3d: mov r11d, edx
		_0xffffff8000ebab40: shr r11d, 0xf
		_0xffffff8000ebab44: and r11d, 0x1d462
		_0xffffff8000ebab4b: shr edx, 0x10
		_0xffffff8000ebab4e: add edx, 0x6464ea31
		_0xffffff8000ebab54: sub edx, r11d
		_0xffffff8000ebab57: xor edx, 0x6464ea31
		_0xffffff8000ebab5d: or edx, edi
		_0xffffff8000ebab5f: add edx, esi
		_0xffffff8000ebab61: mov edi, esi
		_0xffffff8000ebab63: xor edi, ecx
		_0xffffff8000ebab65: xor edi, edx
		_0xffffff8000ebab67: mov r11d, dword ptr [rbp - 0x78]
		_0xffffff8000ebab6b: add edi, r11d
		_0xffffff8000ebab6e: mov ebx, edi
		_0xffffff8000ebab70: xor ebx, 0x7b2ff9e6
		_0xffffff8000ebab76: add ebx, eax
		_0xffffff8000ebab78: and edi, 0x7b2ff9e6
		_0xffffff8000ebab7e: lea eax, [rbx + rdi*2 + 0x438fc28a]
		_0xffffff8000ebab85: mov edi, eax
		_0xffffff8000ebab87: shl edi, 0x18
		_0xffffff8000ebab8a: and edi, 0xb3000000
		_0xffffff8000ebab90: mov ebx, eax
		_0xffffff8000ebab92: shl ebx, 0x17
		_0xffffff8000ebab95: xor ebx, 0x59fefedf
		_0xffffff8000ebab9b: lea edi, [rbx + rdi - 0x59fefedf]
		_0xffffff8000ebaba2: mov ebx, eax
		_0xffffff8000ebaba4: shr ebx, 8
		_0xffffff8000ebaba7: and ebx, 0x2718
		_0xffffff8000ebabad: shr eax, 9
		_0xffffff8000ebabb0: add eax, 0x6800138c
		_0xffffff8000ebabb5: sub eax, ebx
		_0xffffff8000ebabb7: xor eax, 0x6800138c
		_0xffffff8000ebabbc: or eax, edi
		_0xffffff8000ebabbe: add eax, edx
		_0xffffff8000ebabc0: mov edi, edx
		_0xffffff8000ebabc2: xor edi, esi
		_0xffffff8000ebabc4: xor edi, eax
		_0xffffff8000ebabc6: mov ebx, dword ptr [rbp - 0x6c]
		_0xffffff8000ebabc9: mov dword ptr [rbp - 0x36c], ebx
		_0xffffff8000ebabcf: add edi, ebx
		_0xffffff8000ebabd1: mov ebx, edi
		_0xffffff8000ebabd3: xor ebx, 0x5f9ab54b
		_0xffffff8000ebabd9: add ebx, ecx
		_0xffffff8000ebabdb: and edi, 0x5f9ab54b
		_0xffffff8000ebabe1: lea ecx, [rbx + rdi*2 - 0x36ff3685]
		_0xffffff8000ebabe8: mov edi, ecx
		_0xffffff8000ebabea: shr edi, 0x1c
		_0xffffff8000ebabed: mov ebx, edi
		_0xffffff8000ebabef: or ebx, 0x6ff77ffe
		_0xffffff8000ebabf5: xor ebx, edi
		_0xffffff8000ebabf7: xor ebx, 0x6ff77ffe
		_0xffffff8000ebabfd: add ebx, ebx
		_0xffffff8000ebabff: neg ebx
		_0xffffff8000ebac01: lea edi, [rdi + rbx + 0x4d6072de]
		_0xffffff8000ebac08: xor edi, 0x4d6072de
		_0xffffff8000ebac0e: shl ecx, 4
		_0xffffff8000ebac11: or ecx, edi
		_0xffffff8000ebac13: add ecx, eax
		_0xffffff8000ebac15: mov edi, eax
		_0xffffff8000ebac17: xor edi, edx
		_0xffffff8000ebac19: xor edi, ecx
		_0xffffff8000ebac1b: add edi, r9d
		_0xffffff8000ebac1e: mov ebx, edi
		_0xffffff8000ebac20: xor ebx, 0x6ddffd4f
		_0xffffff8000ebac26: add ebx, esi
		_0xffffff8000ebac28: and edi, 0x6ddffd4f
		_0xffffff8000ebac2e: lea esi, [rbx + rdi*2 + 0x7cc12aab]
		_0xffffff8000ebac35: mov edi, esi
		_0xffffff8000ebac37: shl edi, 0xc
		_0xffffff8000ebac3a: and edi, 0xeafff000
		_0xffffff8000ebac40: mov ebx, esi
		_0xffffff8000ebac42: shl ebx, 0xb
		_0xffffff8000ebac45: xor ebx, 0x757fff1d
		_0xffffff8000ebac4b: lea edi, [rbx + rdi - 0x757fff1d]
		_0xffffff8000ebac52: mov ebx, esi
		_0xffffff8000ebac54: shr ebx, 0x14
		_0xffffff8000ebac57: and ebx, 0x956
		_0xffffff8000ebac5d: shr esi, 0x15
		_0xffffff8000ebac60: add esi, 0xb14c4ab
		_0xffffff8000ebac66: sub esi, ebx
		_0xffffff8000ebac68: xor esi, 0xb14c4ab
		_0xffffff8000ebac6e: or esi, edi
		_0xffffff8000ebac70: add esi, ecx
		_0xffffff8000ebac72: mov edi, ecx
		_0xffffff8000ebac74: xor edi, eax
		_0xffffff8000ebac76: xor edi, esi
		_0xffffff8000ebac78: mov ebx, dword ptr [rbp - 0x94]
		_0xffffff8000ebac7e: add edi, ebx
		_0xffffff8000ebac80: mov r14d, edi
		_0xffffff8000ebac83: xor r14d, 0x3b9bbdef
		_0xffffff8000ebac8a: add r14d, edx
		_0xffffff8000ebac8d: and edi, 0x3b9bbdef
		_0xffffff8000ebac93: lea edx, [r14 + rdi*2 - 0x66ac8d6a]
		_0xffffff8000ebac9b: mov edi, edx
		_0xffffff8000ebac9d: shr edi, 0xf
		_0xffffff8000ebaca0: and edi, 0x1d298
		_0xffffff8000ebaca6: mov r14d, edx
		_0xffffff8000ebaca9: shr r14d, 0x10
		_0xffffff8000ebacad: add r14d, 0x9d9e94c
		_0xffffff8000ebacb4: sub r14d, edi
		_0xffffff8000ebacb7: xor r14d, 0x9d9e94c
		_0xffffff8000ebacbe: shl edx, 0x10
		_0xffffff8000ebacc1: or edx, r14d
		_0xffffff8000ebacc4: add edx, esi
		_0xffffff8000ebacc6: mov edi, esi
		_0xffffff8000ebacc8: xor edi, ecx
		_0xffffff8000ebacca: xor edi, edx
		_0xffffff8000ebaccc: mov r14d, dword ptr [rbp - 0x88]
		_0xffffff8000ebacd3: add edi, r14d
		_0xffffff8000ebacd6: mov r15d, edi
		_0xffffff8000ebacd9: xor r15d, 0x5bafff5e
		_0xffffff8000ebace0: add r15d, eax
		_0xffffff8000ebace3: and edi, 0x5bafff5e
		_0xffffff8000ebace9: lea eax, [r15 + rdi*2 - 0x5727e259]
		_0xffffff8000ebacf1: mov edi, eax
		_0xffffff8000ebacf3: shr edi, 8
		_0xffffff8000ebacf6: and edi, 0x1eab62
		_0xffffff8000ebacfc: mov r15d, eax
		_0xffffff8000ebacff: shr r15d, 9
		_0xffffff8000ebad03: add r15d, 0x168f55b1
		_0xffffff8000ebad0a: sub r15d, edi
		_0xffffff8000ebad0d: xor r15d, 0x168f55b1
		_0xffffff8000ebad14: shl eax, 0x17
		_0xffffff8000ebad17: or eax, r15d
		_0xffffff8000ebad1a: add eax, edx
		_0xffffff8000ebad1c: mov edi, edx
		_0xffffff8000ebad1e: xor edi, esi
		_0xffffff8000ebad20: xor edi, eax
		_0xffffff8000ebad22: mov r15d, dword ptr [rbp - 0x7c]
		_0xffffff8000ebad26: mov dword ptr [rbp - 0x370], r15d
		_0xffffff8000ebad2d: add edi, r15d
		_0xffffff8000ebad30: mov r15d, edi
		_0xffffff8000ebad33: xor r15d, 0x7dfad573
		_0xffffff8000ebad3a: add r15d, ecx
		_0xffffff8000ebad3d: and edi, 0x7dfad573
		_0xffffff8000ebad43: lea ecx, [r15 + rdi*2 + 0x5bd9fac6]
		_0xffffff8000ebad4b: mov edi, ecx
		_0xffffff8000ebad4d: shr edi, 0x1b
		_0xffffff8000ebad50: and edi, 0x16
		_0xffffff8000ebad53: mov r15d, ecx
		_0xffffff8000ebad56: shr r15d, 0x1c
		_0xffffff8000ebad5a: add r15d, 0x4ab9a11b
		_0xffffff8000ebad61: sub r15d, edi
		_0xffffff8000ebad64: xor r15d, 0x4ab9a11b
		_0xffffff8000ebad6b: shl ecx, 4
		_0xffffff8000ebad6e: or ecx, r15d
		_0xffffff8000ebad71: add ecx, eax
		_0xffffff8000ebad73: mov edi, eax
		_0xffffff8000ebad75: xor edi, edx
		_0xffffff8000ebad77: xor edi, ecx
		_0xffffff8000ebad79: mov r15d, dword ptr [rbp - 0x70]
		_0xffffff8000ebad7d: add edi, r15d
		_0xffffff8000ebad80: mov r12d, edi
		_0xffffff8000ebad83: xor r12d, 0x5deefbff
		_0xffffff8000ebad8a: add r12d, esi
		_0xffffff8000ebad8d: and edi, 0x5deefbff
		_0xffffff8000ebad93: lea esi, [r12 + rdi*2 - 0x7713621a]
		_0xffffff8000ebad9b: mov edi, esi
		_0xffffff8000ebad9d: shl edi, 0xc
		_0xffffff8000ebada0: and edi, 0xbbd5f000
		_0xffffff8000ebada6: mov r12d, esi
		_0xffffff8000ebada9: shl r12d, 0xb
		_0xffffff8000ebadad: xor r12d, 0x5deaffab
		_0xffffff8000ebadb4: lea edi, [r12 + rdi - 0x5deaffab]
		_0xffffff8000ebadbc: mov r12d, esi
		_0xffffff8000ebadbf: shr r12d, 0x14
		_0xffffff8000ebadc3: and r12d, 0xd24
		_0xffffff8000ebadca: shr esi, 0x15
		_0xffffff8000ebadcd: add esi, 0x5e35ae92
		_0xffffff8000ebadd3: sub esi, r12d
		_0xffffff8000ebadd6: xor esi, 0x5e35ae92
		_0xffffff8000ebaddc: or esi, edi
		_0xffffff8000ebadde: add esi, ecx
		_0xffffff8000ebade0: mov edi, ecx
		_0xffffff8000ebade2: xor edi, eax
		_0xffffff8000ebade4: xor edi, esi
		_0xffffff8000ebade6: mov r12d, dword ptr [rbp - 0x64]
		_0xffffff8000ebadea: add edi, r12d
		_0xffffff8000ebaded: mov r13d, edi
		_0xffffff8000ebadf0: xor r13d, 0x37fdcfbe
		_0xffffff8000ebadf7: add r13d, edx
		_0xffffff8000ebadfa: and edi, 0x37fdcfbe
		_0xffffff8000ebae00: lea edx, [r13 + rdi*2 - 0x185b52c6]
		_0xffffff8000ebae08: mov edi, edx
		_0xffffff8000ebae0a: shl edi, 0x11
		_0xffffff8000ebae0d: and edi, 0x6f2e0000
		_0xffffff8000ebae13: mov r13d, edx
		_0xffffff8000ebae16: shl r13d, 0x10
		_0xffffff8000ebae1a: xor r13d, 0x3797feef
		_0xffffff8000ebae21: lea edi, [r13 + rdi - 0x3797feef]
		_0xffffff8000ebae29: mov r13d, edx
		_0xffffff8000ebae2c: shr r13d, 0xf
		_0xffffff8000ebae30: and r13d, 0x4fa2
		_0xffffff8000ebae37: shr edx, 0x10
		_0xffffff8000ebae3a: add edx, 0x1daa27d1
		_0xffffff8000ebae40: sub edx, r13d
		_0xffffff8000ebae43: xor edx, 0x1daa27d1
		_0xffffff8000ebae49: or edx, edi
		_0xffffff8000ebae4b: add edx, esi
		_0xffffff8000ebae4d: mov edi, esi
		_0xffffff8000ebae4f: xor edi, ecx
		_0xffffff8000ebae51: xor edi, edx
		_0xffffff8000ebae53: mov r13d, dword ptr [rbp - 0x98]
		_0xffffff8000ebae5a: mov dword ptr [rbp - 0x37c], r13d
		_0xffffff8000ebae61: add edi, r13d
		_0xffffff8000ebae64: mov r13d, edi
		_0xffffff8000ebae67: xor r13d, 0x7a4e89db
		_0xffffff8000ebae6e: add r13d, eax
		_0xffffff8000ebae71: and edi, 0x7a4e89db
		_0xffffff8000ebae77: lea eax, [r13 + rdi*2 + 0x4a5dcc8a]
		_0xffffff8000ebae7f: mov edi, eax
		_0xffffff8000ebae81: shl edi, 0x18
		_0xffffff8000ebae84: and edi, 0xfd000000
		_0xffffff8000ebae8a: mov r13d, eax
		_0xffffff8000ebae8d: shl r13d, 0x17
		_0xffffff8000ebae91: xor r13d, 0x7efbb3fe
		_0xffffff8000ebae98: lea edi, [r13 + rdi - 0x7efbb3fe]
		_0xffffff8000ebaea0: mov r13d, eax
		_0xffffff8000ebaea3: shr r13d, 8
		_0xffffff8000ebaea7: and r13d, 0xb5726e
		_0xffffff8000ebaeae: shr eax, 9
		_0xffffff8000ebaeb1: add eax, 0x46dab937
		_0xffffff8000ebaeb6: sub eax, r13d
		_0xffffff8000ebaeb9: xor eax, 0x46dab937
		_0xffffff8000ebaebe: or eax, edi
		_0xffffff8000ebaec0: add eax, edx
		_0xffffff8000ebaec2: mov edi, esi
		_0xffffff8000ebaec4: not edi
		_0xffffff8000ebaec6: or edi, eax
		_0xffffff8000ebaec8: lea r13d, [rdi + rdi]
		_0xffffff8000ebaecc: and r13d, 0xe4e9c480
		_0xffffff8000ebaed3: neg r13d
		_0xffffff8000ebaed6: lea edi, [rdi + r13 + 0x7274e240]
		_0xffffff8000ebaede: xor edi, edx
		_0xffffff8000ebaee0: xor edi, 0x7274e240
		_0xffffff8000ebaee6: add edi, r9d
		_0xffffff8000ebaee9: mov r9d, edi
		_0xffffff8000ebaeec: xor r9d, 0x67ab7be6
		_0xffffff8000ebaef3: add r9d, ecx
		_0xffffff8000ebaef6: and edi, 0x67ab7be6
		_0xffffff8000ebaefc: lea ecx, [r9 + rdi*2 - 0x738259a2]
		_0xffffff8000ebaf04: mov edi, ecx
		_0xffffff8000ebaf06: shr edi, 0x19
		_0xffffff8000ebaf09: and edi, 0x22
		_0xffffff8000ebaf0c: mov r9d, ecx
		_0xffffff8000ebaf0f: shr r9d, 0x1a
		_0xffffff8000ebaf13: add r9d, 0x6783fb11
		_0xffffff8000ebaf1a: sub r9d, edi
		_0xffffff8000ebaf1d: xor r9d, 0x6783fb11
		_0xffffff8000ebaf24: shl ecx, 6
		_0xffffff8000ebaf27: or ecx, r9d
		_0xffffff8000ebaf2a: add ecx, eax
		_0xffffff8000ebaf2c: mov edi, edx
		_0xffffff8000ebaf2e: not edi
		_0xffffff8000ebaf30: or edi, ecx
		_0xffffff8000ebaf32: lea r9d, [rdi + rdi]
		_0xffffff8000ebaf36: and r9d, 0x1a6604d6
		_0xffffff8000ebaf3d: neg r9d
		_0xffffff8000ebaf40: lea edi, [rdi + r9 + 0xd33026b]
		_0xffffff8000ebaf48: xor edi, eax
		_0xffffff8000ebaf4a: xor edi, 0xd33026b
		_0xffffff8000ebaf50: add edi, r10d
		_0xffffff8000ebaf53: mov r9d, edi
		_0xffffff8000ebaf56: xor r9d, 0x7f6fffeb
		_0xffffff8000ebaf5d: add r9d, esi
		_0xffffff8000ebaf60: and edi, 0x7f6fffeb
		_0xffffff8000ebaf66: lea esi, [r9 + rdi*2 - 0x3c450054]
		_0xffffff8000ebaf6e: mov edi, esi
		_0xffffff8000ebaf70: shl edi, 0xb
		_0xffffff8000ebaf73: and edi, 0xddffa000
		_0xffffff8000ebaf79: mov r9d, esi
		_0xffffff8000ebaf7c: shl r9d, 0xa
		_0xffffff8000ebaf80: xor r9d, 0x6effd1d7
		_0xffffff8000ebaf87: lea edi, [r9 + rdi - 0x6effd1d7]
		_0xffffff8000ebaf8f: mov r9d, esi
		_0xffffff8000ebaf92: shr r9d, 0x15
		_0xffffff8000ebaf96: and r9d, 0x2fa
		_0xffffff8000ebaf9d: shr esi, 0x16
		_0xffffff8000ebafa0: add esi, 0x7faa5d7d
		_0xffffff8000ebafa6: sub esi, r9d
		_0xffffff8000ebafa9: xor esi, 0x7faa5d7d
		_0xffffff8000ebafaf: or esi, edi
		_0xffffff8000ebafb1: add esi, ecx
		_0xffffff8000ebafb3: mov edi, eax
		_0xffffff8000ebafb5: not edi
		_0xffffff8000ebafb7: or edi, esi
		_0xffffff8000ebafb9: lea r9d, [rdi + rdi]
		_0xffffff8000ebafbd: and r9d, 0xdc96938
		_0xffffff8000ebafc4: neg r9d
		_0xffffff8000ebafc7: lea edi, [rdi + r9 + 0x6e4b49c]
		_0xffffff8000ebafcf: xor edi, ecx
		_0xffffff8000ebafd1: xor edi, 0x6e4b49c
		_0xffffff8000ebafd7: add edi, r8d
		_0xffffff8000ebafda: mov r8d, edi
		_0xffffff8000ebafdd: xor r8d, 0x3eed76d5
		_0xffffff8000ebafe4: add r8d, edx
		_0xffffff8000ebafe7: and edi, 0x3eed76d5
		_0xffffff8000ebafed: lea edx, [r8 + rdi*2 + 0x6ca6acd2]
		_0xffffff8000ebaff5: mov edi, edx
		_0xffffff8000ebaff7: shr edi, 0x10
		_0xffffff8000ebaffa: and edi, 0x8764
		_0xffffff8000ebb000: mov r8d, edx
		_0xffffff8000ebb003: shr r8d, 0x11
		_0xffffff8000ebb007: add r8d, 0x32f0c3b2
		_0xffffff8000ebb00e: sub r8d, edi
		_0xffffff8000ebb011: xor r8d, 0x32f0c3b2
		_0xffffff8000ebb018: shl edx, 0xf
		_0xffffff8000ebb01b: or edx, r8d
		_0xffffff8000ebb01e: add edx, esi
		_0xffffff8000ebb020: mov edi, ecx
		_0xffffff8000ebb022: not edi
		_0xffffff8000ebb024: or edi, edx
		_0xffffff8000ebb026: lea r8d, [rdi + rdi]
		_0xffffff8000ebb02a: and r8d, 0x2f04e8a8
		_0xffffff8000ebb031: neg r8d
		_0xffffff8000ebb034: lea edi, [rdi + r8 + 0x17827454]
		_0xffffff8000ebb03c: xor edi, esi
		_0xffffff8000ebb03e: xor edi, 0x17827454
		_0xffffff8000ebb044: add edi, dword ptr [rbp - 0x378]
		_0xffffff8000ebb04a: mov r8d, edi
		_0xffffff8000ebb04d: xor r8d, 0x7737c9df
		_0xffffff8000ebb054: add r8d, eax
		_0xffffff8000ebb057: and edi, 0x7737c9df
		_0xffffff8000ebb05d: lea eax, [r8 + rdi*2 - 0x7aa429a6]
		_0xffffff8000ebb065: mov edi, eax
		_0xffffff8000ebb067: shr edi, 0xb
		_0xffffff8000ebb06a: mov r8d, edi
		_0xffffff8000ebb06d: or r8d, 0x7e77eb1b
		_0xffffff8000ebb074: xor r8d, edi
		_0xffffff8000ebb077: xor r8d, 0x7e77eb1b
		_0xffffff8000ebb07e: add r8d, r8d
		_0xffffff8000ebb081: neg r8d
		_0xffffff8000ebb084: lea edi, [rdi + r8 + 0x3e77eb1b]
		_0xffffff8000ebb08c: xor edi, 0x3e77eb1b
		_0xffffff8000ebb092: shl eax, 0x15
		_0xffffff8000ebb095: or eax, edi
		_0xffffff8000ebb097: add eax, edx
		_0xffffff8000ebb099: mov edi, esi
		_0xffffff8000ebb09b: not edi
		_0xffffff8000ebb09d: or edi, eax
		_0xffffff8000ebb09f: lea r8d, [rdi + rdi]
		_0xffffff8000ebb0a3: and r8d, 0x19ad88c2
		_0xffffff8000ebb0aa: neg r8d
		_0xffffff8000ebb0ad: lea edi, [rdi + r8 + 0xcd6c461]
		_0xffffff8000ebb0b5: xor edi, edx
		_0xffffff8000ebb0b7: xor edi, 0xcd6c461
		_0xffffff8000ebb0bd: add edi, r15d
		_0xffffff8000ebb0c0: mov r8d, edi
		_0xffffff8000ebb0c3: xor r8d, 0x2fd7dacf
		_0xffffff8000ebb0ca: add r8d, ecx
		_0xffffff8000ebb0cd: and edi, 0x2fd7dacf
		_0xffffff8000ebb0d3: lea ecx, [r8 + rdi*2 + 0x35837ef4]
		_0xffffff8000ebb0db: mov edi, ecx
		_0xffffff8000ebb0dd: shr edi, 0x1a
		_0xffffff8000ebb0e0: mov r8d, edi
		_0xffffff8000ebb0e3: or r8d, 0x7fabeefe
		_0xffffff8000ebb0ea: xor r8d, edi
		_0xffffff8000ebb0ed: xor r8d, 0x7fabeefe
		_0xffffff8000ebb0f4: add r8d, r8d
		_0xffffff8000ebb0f7: neg r8d
		_0xffffff8000ebb0fa: lea edi, [rdi + r8 + 0x5fa246fe]
		_0xffffff8000ebb102: xor edi, 0x5fa246fe
		_0xffffff8000ebb108: shl ecx, 6
		_0xffffff8000ebb10b: or ecx, edi
		_0xffffff8000ebb10d: add ecx, eax
		_0xffffff8000ebb10f: mov edi, edx
		_0xffffff8000ebb111: not edi
		_0xffffff8000ebb113: or edi, ecx
		_0xffffff8000ebb115: lea r8d, [rdi + rdi]
		_0xffffff8000ebb119: and r8d, 0x79a5b91c
		_0xffffff8000ebb120: neg r8d
		_0xffffff8000ebb123: lea edi, [rdi + r8 + 0x3cd2dc8e]
		_0xffffff8000ebb12b: xor edi, eax
		_0xffffff8000ebb12d: xor edi, 0x3cd2dc8e
		_0xffffff8000ebb133: add edi, ebx
		_0xffffff8000ebb135: mov r8d, edi
		_0xffffff8000ebb138: xor r8d, 0x5beffff6
		_0xffffff8000ebb13f: add r8d, esi
		_0xffffff8000ebb142: and edi, 0x5beffff6
		_0xffffff8000ebb148: lea esi, [r8 + rdi*2 + 0x331ccc9c]
		_0xffffff8000ebb150: mov edi, esi
		_0xffffff8000ebb152: shl edi, 0xb
		_0xffffff8000ebb155: and edi, 0xe7b9f800
		_0xffffff8000ebb15b: mov r8d, esi
		_0xffffff8000ebb15e: shl r8d, 0xa
		_0xffffff8000ebb162: xor r8d, 0x73dcfe7f
		_0xffffff8000ebb169: lea edi, [r8 + rdi - 0x73dcfe7f]
		_0xffffff8000ebb171: mov r8d, esi
		_0xffffff8000ebb174: shr r8d, 0x15
		_0xffffff8000ebb178: and r8d, 0x5b8
		_0xffffff8000ebb17f: shr esi, 0x16
		_0xffffff8000ebb182: add esi, 0x16fbcadc
		_0xffffff8000ebb188: sub esi, r8d
		_0xffffff8000ebb18b: xor esi, 0x16fbcadc
		_0xffffff8000ebb191: or esi, edi
		_0xffffff8000ebb193: add esi, ecx
		_0xffffff8000ebb195: mov edi, eax
		_0xffffff8000ebb197: not edi
		_0xffffff8000ebb199: or edi, esi
		_0xffffff8000ebb19b: lea r8d, [rdi + rdi]
		_0xffffff8000ebb19f: and r8d, 0x7f6815f8
		_0xffffff8000ebb1a6: neg r8d
		_0xffffff8000ebb1a9: lea edi, [rdi + r8 + 0x3fb40afc]
		_0xffffff8000ebb1b1: xor edi, ecx
		_0xffffff8000ebb1b3: xor edi, 0x3fb40afc
		_0xffffff8000ebb1b9: add edi, r11d
		_0xffffff8000ebb1bc: mov r8d, edi
		_0xffffff8000ebb1bf: xor r8d, 0x7f6f776d
		_0xffffff8000ebb1c6: add r8d, edx
		_0xffffff8000ebb1c9: and edi, 0x7f6f776d
		_0xffffff8000ebb1cf: lea edx, [r8 + rdi*2 - 0x7f7f82f0]
		_0xffffff8000ebb1d7: mov edi, edx
		_0xffffff8000ebb1d9: shl edi, 0x10
		_0xffffff8000ebb1dc: and edi, 0xffa70000
		_0xffffff8000ebb1e2: mov r8d, edx
		_0xffffff8000ebb1e5: shl r8d, 0xf
		_0xffffff8000ebb1e9: xor r8d, 0x7fd3af1e
		_0xffffff8000ebb1f0: lea edi, [r8 + rdi - 0x7fd3af1e]
		_0xffffff8000ebb1f8: mov r8d, edx
		_0xffffff8000ebb1fb: shr r8d, 0x10
		_0xffffff8000ebb1ff: and r8d, 0x71bc
		_0xffffff8000ebb206: shr edx, 0x11
		_0xffffff8000ebb209: add edx, 0x623c38de
		_0xffffff8000ebb20f: sub edx, r8d
		_0xffffff8000ebb212: xor edx, 0x623c38de
		_0xffffff8000ebb218: or edx, edi
		_0xffffff8000ebb21a: add edx, esi
		_0xffffff8000ebb21c: mov edi, ecx
		_0xffffff8000ebb21e: not edi
		_0xffffff8000ebb220: or edi, edx
		_0xffffff8000ebb222: lea r8d, [rdi + rdi]
		_0xffffff8000ebb226: and r8d, 0xb915b0b6
		_0xffffff8000ebb22d: neg r8d
		_0xffffff8000ebb230: lea edi, [rdi + r8 + 0x5c8ad85b]
		_0xffffff8000ebb238: xor edi, esi
		_0xffffff8000ebb23a: xor edi, 0x5c8ad85b
		_0xffffff8000ebb240: add edi, dword ptr [rbp - 0x374]
		_0xffffff8000ebb246: mov r8d, edi
		_0xffffff8000ebb249: xor r8d, 0x223df3ff
		_0xffffff8000ebb250: add r8d, eax
		_0xffffff8000ebb253: and edi, 0x223df3ff
		_0xffffff8000ebb259: lea eax, [r8 + rdi*2 + 0x634669d2]
		_0xffffff8000ebb261: mov edi, eax
		_0xffffff8000ebb263: shr edi, 0xa
		_0xffffff8000ebb266: and edi, 0x396c4
		_0xffffff8000ebb26c: mov r8d, eax
		_0xffffff8000ebb26f: shr r8d, 0xb
		_0xffffff8000ebb273: add r8d, 0x12c1cb62
		_0xffffff8000ebb27a: sub r8d, edi
		_0xffffff8000ebb27d: xor r8d, 0x12c1cb62
		_0xffffff8000ebb284: shl eax, 0x15
		_0xffffff8000ebb287: or eax, r8d
		_0xffffff8000ebb28a: add eax, edx
		_0xffffff8000ebb28c: mov edi, esi
		_0xffffff8000ebb28e: not edi
		_0xffffff8000ebb290: or edi, eax
		_0xffffff8000ebb292: lea r8d, [rdi + rdi]
		_0xffffff8000ebb296: and r8d, 0xf55ed942
		_0xffffff8000ebb29d: neg r8d
		_0xffffff8000ebb2a0: lea edi, [rdi + r8 + 0x7aaf6ca1]
		_0xffffff8000ebb2a8: xor edi, edx
		_0xffffff8000ebb2aa: xor edi, 0x7aaf6ca1
		_0xffffff8000ebb2b0: add edi, dword ptr [rbp - 0x368]
		_0xffffff8000ebb2b6: mov r8d, edi
		_0xffffff8000ebb2b9: xor r8d, 0x7f7f7629
		_0xffffff8000ebb2c0: add r8d, ecx
		_0xffffff8000ebb2c3: and edi, 0x7f7f7629
		_0xffffff8000ebb2c9: lea ecx, [r8 + rdi*2 - 0xfd6f7da]
		_0xffffff8000ebb2d1: mov edi, ecx
		_0xffffff8000ebb2d3: shl edi, 7
		_0xffffff8000ebb2d6: and edi, 0x7effdc80
		_0xffffff8000ebb2dc: mov r8d, ecx
		_0xffffff8000ebb2df: shl r8d, 6
		_0xffffff8000ebb2e3: xor r8d, 0x3f7fee76
		_0xffffff8000ebb2ea: lea edi, [r8 + rdi - 0x3f7fee76]
		_0xffffff8000ebb2f2: mov r8d, ecx
		_0xffffff8000ebb2f5: shr r8d, 0x19
		_0xffffff8000ebb2f9: and r8d, 0x2c
		_0xffffff8000ebb2fd: shr ecx, 0x1a
		_0xffffff8000ebb300: add ecx, 0x4124be96
		_0xffffff8000ebb306: sub ecx, r8d
		_0xffffff8000ebb309: xor ecx, 0x4124be96
		_0xffffff8000ebb30f: or ecx, edi
		_0xffffff8000ebb311: add ecx, eax
		_0xffffff8000ebb313: mov edi, edx
		_0xffffff8000ebb315: not edi
		_0xffffff8000ebb317: or edi, ecx
		_0xffffff8000ebb319: lea r8d, [rdi + rdi]
		_0xffffff8000ebb31d: and r8d, 0x575dca5e
		_0xffffff8000ebb324: neg r8d
		_0xffffff8000ebb327: lea edi, [rdi + r8 + 0x2baee52f]
		_0xffffff8000ebb32f: xor edi, eax
		_0xffffff8000ebb331: xor edi, 0x2baee52f
		_0xffffff8000ebb337: add edi, r12d
		_0xffffff8000ebb33a: mov r8d, edi
		_0xffffff8000ebb33d: xor r8d, 0x7f7cef7f
		_0xffffff8000ebb344: add r8d, esi
		_0xffffff8000ebb347: and edi, 0x7f7cef7f
		_0xffffff8000ebb34d: lea esi, [r8 + rdi*2 + 0x7eaff761]
		_0xffffff8000ebb355: mov edi, esi
		_0xffffff8000ebb357: shl edi, 0xb
		_0xffffff8000ebb35a: and edi, 0xbffef800
		_0xffffff8000ebb360: mov r8d, esi
		_0xffffff8000ebb363: shl r8d, 0xa
		_0xffffff8000ebb367: xor r8d, 0x5fff7efe
		_0xffffff8000ebb36e: lea edi, [r8 + rdi - 0x5fff7efe]
		_0xffffff8000ebb376: mov r8d, esi
		_0xffffff8000ebb379: shr r8d, 0x15
		_0xffffff8000ebb37d: and r8d, 0x3b8
		_0xffffff8000ebb384: shr esi, 0x16
		_0xffffff8000ebb387: add esi, 0x1aa33ddc
		_0xffffff8000ebb38d: sub esi, r8d
		_0xffffff8000ebb390: xor esi, 0x1aa33ddc
		_0xffffff8000ebb396: or esi, edi
		_0xffffff8000ebb398: add esi, ecx
		_0xffffff8000ebb39a: mov edi, eax
		_0xffffff8000ebb39c: not edi
		_0xffffff8000ebb39e: or edi, esi
		_0xffffff8000ebb3a0: lea r8d, [rdi + rdi]
		_0xffffff8000ebb3a4: and r8d, 0x2ccca8c
		_0xffffff8000ebb3ab: neg r8d
		_0xffffff8000ebb3ae: lea edi, [rdi + r8 + 0x1666546]
		_0xffffff8000ebb3b6: xor edi, ecx
		_0xffffff8000ebb3b8: xor edi, 0x1666546
		_0xffffff8000ebb3be: add edi, r14d
		_0xffffff8000ebb3c1: mov r8d, edi
		_0xffffff8000ebb3c4: xor r8d, 0x6ffdfb7e
		_0xffffff8000ebb3cb: add r8d, edx
		_0xffffff8000ebb3ce: and edi, 0x6ffdfb7e
		_0xffffff8000ebb3d4: lea edx, [r8 + rdi*2 + 0x33034796]
		_0xffffff8000ebb3dc: mov edi, edx
		_0xffffff8000ebb3de: shr edi, 0x10
		_0xffffff8000ebb3e1: and edi, 0xaa1e
		_0xffffff8000ebb3e7: mov r8d, edx
		_0xffffff8000ebb3ea: shr r8d, 0x11
		_0xffffff8000ebb3ee: add r8d, 0x577b550f
		_0xffffff8000ebb3f5: sub r8d, edi
		_0xffffff8000ebb3f8: xor r8d, 0x577b550f
		_0xffffff8000ebb3ff: shl edx, 0xf
		_0xffffff8000ebb402: or edx, r8d
		_0xffffff8000ebb405: add edx, esi
		_0xffffff8000ebb407: mov edi, ecx
		_0xffffff8000ebb409: not edi
		_0xffffff8000ebb40b: or edi, edx
		_0xffffff8000ebb40d: lea r8d, [rdi + rdi]
		_0xffffff8000ebb411: and r8d, 0xee777a72
		_0xffffff8000ebb418: neg r8d
		_0xffffff8000ebb41b: lea edi, [rdi + r8 + 0x773bbd39]
		_0xffffff8000ebb423: xor edi, esi
		_0xffffff8000ebb425: xor edi, 0x773bbd39
		_0xffffff8000ebb42b: add edi, dword ptr [rbp - 0x36c]
		_0xffffff8000ebb431: mov r8d, edi
		_0xffffff8000ebb434: xor r8d, 0x76bb7f37
		_0xffffff8000ebb43b: add r8d, eax
		_0xffffff8000ebb43e: and edi, 0x76bb7f37
		_0xffffff8000ebb444: lea eax, [r8 + rdi*2 - 0x28b36d96]
		_0xffffff8000ebb44c: mov edi, eax
		_0xffffff8000ebb44e: shr edi, 0xa
		_0xffffff8000ebb451: and edi, 0x1a7066
		_0xffffff8000ebb457: mov r8d, eax
		_0xffffff8000ebb45a: shr r8d, 0xb
		_0xffffff8000ebb45e: add r8d, 0x6dad3833
		_0xffffff8000ebb465: sub r8d, edi
		_0xffffff8000ebb468: xor r8d, 0x6dad3833
		_0xffffff8000ebb46f: shl eax, 0x15
		_0xffffff8000ebb472: or eax, r8d
		_0xffffff8000ebb475: add eax, edx
		_0xffffff8000ebb477: mov edi, esi
		_0xffffff8000ebb479: not edi
		_0xffffff8000ebb47b: or edi, eax
		_0xffffff8000ebb47d: lea r8d, [rdi + rdi]
		_0xffffff8000ebb481: and r8d, 0x10925bf6
		_0xffffff8000ebb488: neg r8d
		_0xffffff8000ebb48b: lea edi, [rdi + r8 + 0x8492dfb]
		_0xffffff8000ebb493: xor edi, edx
		_0xffffff8000ebb495: xor edi, 0x8492dfb
		_0xffffff8000ebb49b: add edi, dword ptr [rbp - 0x364]
		_0xffffff8000ebb4a1: mov r8d, edi
		_0xffffff8000ebb4a4: xor r8d, 0x5fafd7bf
		_0xffffff8000ebb4ab: add r8d, ecx
		_0xffffff8000ebb4ae: and edi, 0x5fafd7bf
		_0xffffff8000ebb4b4: lea ecx, [r8 + rdi*2 - 0x685c593d]
		_0xffffff8000ebb4bc: mov edi, ecx
		_0xffffff8000ebb4be: shl edi, 7
		_0xffffff8000ebb4c1: and edi, 0xf7ffbb80
		_0xffffff8000ebb4c7: mov r8d, ecx
		_0xffffff8000ebb4ca: shl r8d, 6
		_0xffffff8000ebb4ce: xor r8d, 0x7bffddd7
		_0xffffff8000ebb4d5: lea edi, [r8 + rdi - 0x7bffddd7]
		_0xffffff8000ebb4dd: mov r8d, ecx
		_0xffffff8000ebb4e0: shr r8d, 0x19
		_0xffffff8000ebb4e4: and r8d, 0x18
		_0xffffff8000ebb4e8: shr ecx, 0x1a
		_0xffffff8000ebb4eb: add ecx, 0x22bc3d8c
		_0xffffff8000ebb4f1: sub ecx, r8d
		_0xffffff8000ebb4f4: xor ecx, 0x22bc3d8c
		_0xffffff8000ebb4fa: or ecx, edi
		_0xffffff8000ebb4fc: add ecx, eax
		_0xffffff8000ebb4fe: mov rdi, qword ptr [rbp - 0x60]
		_0xffffff8000ebb502: add dword ptr [rdi], ecx
		_0xffffff8000ebb504: mov edi, edx
		_0xffffff8000ebb506: not edi
		_0xffffff8000ebb508: or edi, ecx
		_0xffffff8000ebb50a: lea r8d, [rdi + rdi]
		_0xffffff8000ebb50e: and r8d, 0xdbedf26
		_0xffffff8000ebb515: neg r8d
		_0xffffff8000ebb518: lea edi, [rdi + r8 + 0x6df6f93]
		_0xffffff8000ebb520: xor edi, eax
		_0xffffff8000ebb522: xor edi, 0x6df6f93
		_0xffffff8000ebb528: add edi, dword ptr [rbp - 0x360]
		_0xffffff8000ebb52e: mov r8d, edi
		_0xffffff8000ebb531: xor r8d, 0x7ddefdb2
		_0xffffff8000ebb538: add r8d, esi
		_0xffffff8000ebb53b: and edi, 0x7ddefdb2
		_0xffffff8000ebb541: lea esi, [r8 + rdi*2 + 0x3f5bf483]
		_0xffffff8000ebb549: mov edi, esi
		_0xffffff8000ebb54b: shl edi, 0xb
		_0xffffff8000ebb54e: and edi, 0x9bdbc800
		_0xffffff8000ebb554: mov r8d, esi
		_0xffffff8000ebb557: shl r8d, 0xa
		_0xffffff8000ebb55b: xor r8d, 0x4dede5ff
		_0xffffff8000ebb562: lea edi, [r8 + rdi - 0x4dede5ff]
		_0xffffff8000ebb56a: mov r8d, esi
		_0xffffff8000ebb56d: shr r8d, 0x15
		_0xffffff8000ebb571: and r8d, 0x1ae
		_0xffffff8000ebb578: shr esi, 0x16
		_0xffffff8000ebb57b: add esi, 0x7091b0d7
		_0xffffff8000ebb581: sub esi, r8d
		_0xffffff8000ebb584: xor esi, 0x7091b0d7
		_0xffffff8000ebb58a: or esi, edi
		_0xffffff8000ebb58c: add esi, ecx
		_0xffffff8000ebb58e: mov edi, eax
		_0xffffff8000ebb590: not edi
		_0xffffff8000ebb592: or edi, esi
		_0xffffff8000ebb594: lea r8d, [rdi + rdi]
		_0xffffff8000ebb598: and r8d, 0xe66a206a
		_0xffffff8000ebb59f: neg r8d
		_0xffffff8000ebb5a2: lea edi, [rdi + r8 + 0x73351035]
		_0xffffff8000ebb5aa: xor edi, ecx
		_0xffffff8000ebb5ac: xor edi, 0x73351035
		_0xffffff8000ebb5b2: add edi, dword ptr [rbp - 0x37c]
		_0xffffff8000ebb5b8: mov r8d, edi
		_0xffffff8000ebb5bb: xor r8d, 0x7af3fcda
		_0xffffff8000ebb5c2: add r8d, edx
		_0xffffff8000ebb5c5: and edi, 0x7af3fcda
		_0xffffff8000ebb5cb: lea edx, [r8 + rdi*2 - 0x501c2a1f]
		_0xffffff8000ebb5d3: mov edi, edx
		_0xffffff8000ebb5d5: shr edi, 0x10
		_0xffffff8000ebb5d8: and edi, 0xb842
		_0xffffff8000ebb5de: mov r8d, edx
		_0xffffff8000ebb5e1: shr r8d, 0x11
		_0xffffff8000ebb5e5: add r8d, 0x2a0adc21
		_0xffffff8000ebb5ec: sub r8d, edi
		_0xffffff8000ebb5ef: xor r8d, 0x2a0adc21
		_0xffffff8000ebb5f6: shl edx, 0xf
		_0xffffff8000ebb5f9: or edx, r8d
		_0xffffff8000ebb5fc: add edx, esi
		_0xffffff8000ebb5fe: not ecx
		_0xffffff8000ebb600: or ecx, edx
		_0xffffff8000ebb602: lea edi, [rcx + rcx]
		_0xffffff8000ebb605: and edi, 0xd7ac14ac
		_0xffffff8000ebb60b: neg edi
		_0xffffff8000ebb60d: lea ecx, [rcx + rdi + 0x6bd60a56]
		_0xffffff8000ebb614: xor ecx, esi
		_0xffffff8000ebb616: xor ecx, 0x6bd60a56
		_0xffffff8000ebb61c: add ecx, dword ptr [rbp - 0x370]
		_0xffffff8000ebb622: mov edi, ecx
		_0xffffff8000ebb624: xor edi, 0x5efdfabd
		_0xffffff8000ebb62a: add edi, eax
		_0xffffff8000ebb62c: and ecx, 0x5efdfabd
		_0xffffff8000ebb632: lea eax, [rdi + rcx*2 - 0x7377272c]
		_0xffffff8000ebb639: mov ecx, eax
		_0xffffff8000ebb63b: shl ecx, 0x16
		_0xffffff8000ebb63e: and ecx, 0xdec00000
		_0xffffff8000ebb644: mov edi, eax
		_0xffffff8000ebb646: shl edi, 0x15
		_0xffffff8000ebb649: xor edi, 0x6f6b6bbf
		_0xffffff8000ebb64f: lea ecx, [rdi + rcx - 0x6f6b6bbf]
		_0xffffff8000ebb656: mov edi, eax
		_0xffffff8000ebb658: shr edi, 0xa
		_0xffffff8000ebb65b: and edi, 0x306ce2
		_0xffffff8000ebb661: shr eax, 0xb
		_0xffffff8000ebb664: add eax, 0x79183671
		_0xffffff8000ebb669: sub eax, edi
		_0xffffff8000ebb66b: xor eax, 0x79183671
		_0xffffff8000ebb670: or eax, ecx
		_0xffffff8000ebb672: mov rcx, qword ptr [rbp - 0x60]
		_0xffffff8000ebb676: mov edi, dword ptr [rcx + 4]
		_0xffffff8000ebb679: add edi, edx
		_0xffffff8000ebb67b: add edi, eax
		_0xffffff8000ebb67d: mov dword ptr [rcx + 4], edi
		_0xffffff8000ebb680: mov rcx, qword ptr [rbp - 0x60]
		_0xffffff8000ebb684: add dword ptr [rcx + 8], edx
		_0xffffff8000ebb687: mov rcx, qword ptr [rbp - 0x60]
		_0xffffff8000ebb68b: add dword ptr [rcx + 0xc], esi
		_0xffffff8000ebb68e: jmp _0xffffff8000ebe494
		_0xffffff8000ebb693: lea rdx, [rip + jumptbl_0xffffff8000ebb693]
		_0xffffff8000ebb69a: movsxd rax, dword ptr [rdx + rax*4]
		_0xffffff8000ebb69e: add rax, rdx
		_0xffffff8000ebb6a1: jmp rax
		_0xffffff8000ebb6a3: cmp eax, 0x50a14890
		_0xffffff8000ebb6a8: jmp _0xffffff8000ebc574
		_0xffffff8000ebb6ad: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb6b3: lea edx, [rax - 0x30389c1a]
		_0xffffff8000ebb6b9: lea eax, [rax - 0x191bcdc7]
		_0xffffff8000ebb6bf: cmp byte ptr [rbp - 0x2c], 4
		_0xffffff8000ebb6c3: jmp _0xffffff8000ebd382
		_0xffffff8000ebb6c8: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb6ce: lea edx, [rax - 0x335afe93]
		_0xffffff8000ebb6d4: lea r14d, [rax - 0x501958d]
		_0xffffff8000ebb6db: lea r15d, [rax + 0x191bcdab]
		_0xffffff8000ebb6e2: lea eax, [rax - 0x171cce65]
		_0xffffff8000ebb6e8: cmp byte ptr [rbp - 0x2b], 9
		_0xffffff8000ebb6ec: jmp _0xffffff8000ebd434
		_0xffffff8000ebb6f1: mov al, byte ptr [rbp - 0xe1]
		_0xffffff8000ebb6f7: mov byte ptr [rbp - 0x1a2], al
		_0xffffff8000ebb6fd: mov rax, qword ptr [rbp - 0x328]
		_0xffffff8000ebb704: mov qword ptr [rax], rax
		_0xffffff8000ebb707: mov qword ptr [rax + 8], rax
		_0xffffff8000ebb70b: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebb712: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb718: lea r14d, [rdx - 0x191bcdb7]
		_0xffffff8000ebb71f: lea r15d, [rdx - 0x4c9a9326]
		_0xffffff8000ebb726: lea r12d, [rdx - 0x191bcdc4]
		_0xffffff8000ebb72d: lea edx, [rdx - 0x184ccdca]
		_0xffffff8000ebb733: mov r13, qword ptr [rax]
		_0xffffff8000ebb736: cmp rax, qword ptr [r13 + 8]
		_0xffffff8000ebb73a: mov rax, rsi
		_0xffffff8000ebb73d: cmove rax, rcx
		_0xffffff8000ebb741: mov eax, dword ptr [rax]
		_0xffffff8000ebb743: cmove edx, r12d
		_0xffffff8000ebb747: mov r12, qword ptr [rbp - 0x358]
		_0xffffff8000ebb74e: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebb755: mov dword ptr [r13], edx
		_0xffffff8000ebb759: cmovne r14d, r15d
		_0xffffff8000ebb75d: mov dword ptr [r12], r14d
		_0xffffff8000ebb761: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebb767: jne _0xffffff8000ebbd8a
		_0xffffff8000ebb76d: jmp _0xffffff8000ebc574
		_0xffffff8000ebb772: mov al, byte ptr [rbp - 0x41]
		_0xffffff8000ebb775: mov byte ptr [rbp - 0x2b], al
		_0xffffff8000ebb778: mov dword ptr [rbp - 0x1ec], 0xffff586f
		_0xffffff8000ebb782: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb788: lea edx, [rax - 0x171cce4c]
		_0xffffff8000ebb78e: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebb795: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebb79c: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebb7a3: mov dword ptr [r12], edx
		_0xffffff8000ebb7a7: add eax, 0xe8e331a1
		_0xffffff8000ebb7ac: mov dword ptr [r15], eax
		_0xffffff8000ebb7af: mov dword ptr [rbp - 0x35c], r14d
		_0xffffff8000ebb7b6: jmp _0xffffff8000ebbd8a
		_0xffffff8000ebb7bb: mov rax, qword ptr [rbp - 0x198]
		_0xffffff8000ebb7c2: movabs rdx, 0x33f4fff6df3fffdf
		_0xffffff8000ebb7cc: xor rdx, rax
		_0xffffff8000ebb7cf: lea r14, [rax + rax]
		_0xffffff8000ebb7d3: movabs r15, 0x1be7fffbe
		_0xffffff8000ebb7dd: and r15, r14
		_0xffffff8000ebb7e0: add r15, rdx
		_0xffffff8000ebb7e3: shl r15, 2
		_0xffffff8000ebb7e7: add r15, qword ptr [rbp - 0x178]
		_0xffffff8000ebb7ee: movabs rdx, 0x302c002483000084
		_0xffffff8000ebb7f8: mov edx, dword ptr [rdx + r15]
		_0xffffff8000ebb7fc: movabs r15, 0x397ef77dfbfeb6fe
		_0xffffff8000ebb806: xor r15, rax
		_0xffffff8000ebb809: movabs r12, 0x1f7fd6dfc
		_0xffffff8000ebb813: and r12, r14
		_0xffffff8000ebb816: add r12, r15
		_0xffffff8000ebb819: lea r14, [rbp + r12*4 - 0xa0]
		_0xffffff8000ebb821: movabs r15, 0x1a04220810052408
		_0xffffff8000ebb82b: mov dword ptr [r15 + r14], edx
		_0xffffff8000ebb82f: inc rax
		_0xffffff8000ebb832: mov qword ptr [rbp - 0x198], rax
		_0xffffff8000ebb839: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb83f: lea r14d, [rdx - 0x26478940]
		_0xffffff8000ebb846: lea r15d, [rdx - 0x36fc16fb]
		_0xffffff8000ebb84d: lea r12d, [rdx - 0xf]
		_0xffffff8000ebb851: cmp rax, 0x10
		_0xffffff8000ebb855: mov rax, rsi
		_0xffffff8000ebb858: cmove rax, rcx
		_0xffffff8000ebb85c: mov eax, dword ptr [rax]
		_0xffffff8000ebb85e: cmove r12d, r15d
		_0xffffff8000ebb862: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebb869: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebb870: mov dword ptr [r13], r12d
		_0xffffff8000ebb874: cmovne r14d, edx
		_0xffffff8000ebb878: mov dword ptr [r15], r14d
		_0xffffff8000ebb87b: jmp _0xffffff8000ebbab6
		_0xffffff8000ebb880: mov al, byte ptr [rbp - 0x2c]
		_0xffffff8000ebb883: mov dl, byte ptr [rbp - 0x2d]
		_0xffffff8000ebb886: mov byte ptr [rbp - 0x41], dl
		_0xffffff8000ebb889: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb88f: lea r14d, [rdx - 0x28785803]
		_0xffffff8000ebb896: lea r15d, [rdx - 0x8b04eed]
		_0xffffff8000ebb89d: lea r12d, [rdx - 0x171cce62]
		_0xffffff8000ebb8a4: lea edx, [rdx - 0x16]
		_0xffffff8000ebb8a7: cmp al, 4
		_0xffffff8000ebb8a9: mov rax, rsi
		_0xffffff8000ebb8ac: cmove rax, rcx
		_0xffffff8000ebb8b0: mov eax, dword ptr [rax]
		_0xffffff8000ebb8b2: cmovne edx, r12d
		_0xffffff8000ebb8b6: mov r12, qword ptr [rbp - 0x358]
		_0xffffff8000ebb8bd: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebb8c4: mov dword ptr [r13], edx
		_0xffffff8000ebb8c8: cmovne r14d, r15d
		_0xffffff8000ebb8cc: mov dword ptr [r12], r14d
		_0xffffff8000ebb8d0: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebb8d6: je _0xffffff8000ebbd8a
		_0xffffff8000ebb8dc: jmp _0xffffff8000ebc574
		_0xffffff8000ebb8e1: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebb8e7: lea edx, [rax + 0x240a5ff0]
		_0xffffff8000ebb8ed: lea r14d, [rax + 0x490804e7]
		_0xffffff8000ebb8f4: lea r15d, [rax + 0x30389c1a]
		_0xffffff8000ebb8fb: lea eax, [rax + 0x30389c17]
		_0xffffff8000ebb901: cmp dword ptr [rbp - 0x34], 3
		_0xffffff8000ebb905: jmp _0xffffff8000ebc976
		_0xffffff8000ebb90a: mov rcx, qword ptr [rdi + 8]
		_0xffffff8000ebb90e: mov dword ptr [rcx], 0xb9f3dcdc
		_0xffffff8000ebb914: mov dword ptr [rcx + 4], 0xfbdc740b
		_0xffffff8000ebb91b: mov dword ptr [rcx + 8], 0x60f77f86
		_0xffffff8000ebb922: mov dword ptr [rcx + 0xc], 0x51907216
		_0xffffff8000ebb929: mov dword ptr [rcx + 0x10], 0
		_0xffffff8000ebb930: mov dword ptr [rcx + 0x14], 0
		_0xffffff8000ebb937: jmp _0xffffff8000ebe494
		_0xffffff8000ebb93c: movsxd rax, dword ptr [r8 + rax*4]
		_0xffffff8000ebb940: add rax, r8
		_0xffffff8000ebb943: jmp rax
		_0xffffff8000ebb945: cmp eax, 0x37857ad5
		_0xffffff8000ebb94a: jmp _0xffffff8000ebbabc
		_0xffffff8000ebb94f: mov rcx, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebb956: mov dword ptr [rcx + 0x14], 0
		_0xffffff8000ebb95d: jmp _0xffffff8000ebe494
		_0xffffff8000ebb962: mov rcx, qword ptr [rbp - 0x180]
		_0xffffff8000ebb969: mov eax, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebb96f: mov dword ptr [rcx + 0x10], eax
		_0xffffff8000ebb972: jmp _0xffffff8000ebe494
		_0xffffff8000ebb977: mov rcx, qword ptr [rbp - 0xd0]
		_0xffffff8000ebb97e: mov eax, dword ptr [rbp - 0x12c]
		_0xffffff8000ebb984: mov dword ptr [rcx + 0x20], eax
		_0xffffff8000ebb987: jmp _0xffffff8000ebe494
		_0xffffff8000ebb98c: mov rcx, qword ptr [rbp - 0x120]
		_0xffffff8000ebb993: mov eax, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebb999: mov dword ptr [rcx + 4], eax
		_0xffffff8000ebb99c: jmp _0xffffff8000ebe494
		_0xffffff8000ebb9a1: mov eax, dword ptr [rdi + 4]
		_0xffffff8000ebb9a4: mov ecx, eax
		_0xffffff8000ebb9a6: shr ecx, 0x17
		_0xffffff8000ebb9a9: and ecx, 0x2a
		_0xffffff8000ebb9ac: mov edx, eax
		_0xffffff8000ebb9ae: shr edx, 0x18
		_0xffffff8000ebb9b1: add edx, 0x95
		_0xffffff8000ebb9b7: sub edx, ecx
		_0xffffff8000ebb9b9: xor edx, 0x94
		_0xffffff8000ebb9bf: xor dl, 1
		_0xffffff8000ebb9c2: mov rcx, qword ptr [rdi + 8]
		_0xffffff8000ebb9c6: mov byte ptr [rcx], dl
		_0xffffff8000ebb9c8: mov edx, eax
		_0xffffff8000ebb9ca: shr edx, 0xf
		_0xffffff8000ebb9cd: and edx, 0x7a
		_0xffffff8000ebb9d0: mov esi, eax
		_0xffffff8000ebb9d2: shr esi, 0x10
		_0xffffff8000ebb9d5: add esi, 0x3d
		_0xffffff8000ebb9d8: sub esi, edx
		_0xffffff8000ebb9da: xor esi, 0x40
		_0xffffff8000ebb9dd: xor sil, 0x7d
		_0xffffff8000ebb9e1: mov byte ptr [rcx + 1], sil
		_0xffffff8000ebb9e5: mov edx, eax
		_0xffffff8000ebb9e7: shr edx, 7
		_0xffffff8000ebb9ea: and edx, 0xc6
		_0xffffff8000ebb9f0: mov esi, eax
		_0xffffff8000ebb9f2: shr esi, 8
		_0xffffff8000ebb9f5: add esi, 0xe3
		_0xffffff8000ebb9fb: sub esi, edx
		_0xffffff8000ebb9fd: xor esi, 0xa0
		_0xffffff8000ebba03: xor sil, 0x43
		_0xffffff8000ebba07: mov byte ptr [rcx + 2], sil
		_0xffffff8000ebba0b: mov dl, al
		_0xffffff8000ebba0d: or dl, 0x59
		_0xffffff8000ebba10: xor dl, al
		_0xffffff8000ebba12: xor dl, 0x59
		_0xffffff8000ebba15: add dl, dl
		_0xffffff8000ebba17: add al, 0x59
		_0xffffff8000ebba19: sub al, dl
		_0xffffff8000ebba1b: xor al, 0x59
		_0xffffff8000ebba1d: mov byte ptr [rcx + 3], al
		_0xffffff8000ebba20: jmp _0xffffff8000ebe494
		_0xffffff8000ebba25: mov rcx, qword ptr [rbp - 0x178]
		_0xffffff8000ebba2c: mov dword ptr [rcx], 0x2fc320a1
		_0xffffff8000ebba32: mov rcx, qword ptr [rbp - 0x120]
		_0xffffff8000ebba39: mov dword ptr [rcx + 4], 0
		_0xffffff8000ebba40: jmp _0xffffff8000ebe494
		_0xffffff8000ebba45: nop dword ptr [rax + rax]
		_0xffffff8000ebba4a: nop word ptr [rax + rax]
		nop
		nop
		_0xffffff8000ebba50: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebba56: lea edx, [rax + 0x21f64f37]
		_0xffffff8000ebba5c: lea r14d, [rax - 0x2611b751]
		_0xffffff8000ebba63: lea r15d, [rax + 0x2ee20b1]
		_0xffffff8000ebba6a: lea eax, [rax - 0x171cce4d]
		_0xffffff8000ebba70: cmp byte ptr [rbp - 0x29], 4
		_0xffffff8000ebba74: jmp _0xffffff8000ebbb97
		_0xffffff8000ebba79: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebba7f: lea edx, [rax + 0x89c32ba]
		_0xffffff8000ebba85: lea r14d, [rax - 0x1722871e]
		_0xffffff8000ebba8c: lea r15d, [rax + 0x1f9d4823]
		_0xffffff8000ebba93: lea eax, [rax + 2]
		_0xffffff8000ebba96: cmp dword ptr [rbp - 0x34], 1
		_0xffffff8000ebba9a: jmp _0xffffff8000ebd434
		_0xffffff8000ebba9f: mov eax, dword ptr [rbp - 0x344]
		_0xffffff8000ebbaa5: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebbaab: jmp _0xffffff8000ebc574
		_0xffffff8000ebbab0: mov eax, dword ptr [rbp - 0x344]
		_0xffffff8000ebbab6: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebbabc: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbac2: mov edx, 0xaf5eb78d
		_0xffffff8000ebbac7: add eax, edx
		_0xffffff8000ebbac9: cmp eax, 0x1d
		_0xffffff8000ebbacc: ja _0xffffff8000ebbd8a
		_0xffffff8000ebbad2: lea rdx, [rip + jumptbl_0xffffff8000ebbad2]
		_0xffffff8000ebbad9: movsxd rax, dword ptr [rdx + rax*4]
		_0xffffff8000ebbadd: add rax, rdx
		_0xffffff8000ebbae0: jmp rax
		_0xffffff8000ebbae2: mov rax, qword ptr [rbp - 0x108]
		_0xffffff8000ebbae9: mov qword ptr [rbp - 0xc0], rax
		_0xffffff8000ebbaf0: movzx edx, byte ptr [rbp - 0xf9]
		_0xffffff8000ebbaf7: mov byte ptr [rbp - 0x1a3], dl
		_0xffffff8000ebbafd: add rax, rax
		_0xffffff8000ebbb00: mov qword ptr [rbp - 0xb8], rax
		_0xffffff8000ebbb07: mov qword ptr [rbp - 0xb0], rdx
		_0xffffff8000ebbb0e: mov qword ptr [rbp - 0xf0], 0
		_0xffffff8000ebbb19: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbb1f: lea edx, [rax + 0x191bcdb6]
		_0xffffff8000ebbb25: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebbb2c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebbb33: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebbb3a: mov dword ptr [r12], edx
		_0xffffff8000ebbb3e: add eax, 0xb
		_0xffffff8000ebbb41: jmp _0xffffff8000ebb7ac
		_0xffffff8000ebbb46: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbb4c: lea rdx, [rip + 0x30ba]
		_0xffffff8000ebbb53: mov rdx, qword ptr [rdx]
		// Inject value
		//mov rdx, 0x8b48c0ff483a0c88
		_0xffffff8000ebbb56: lea edx, [rax + 7]
		_0xffffff8000ebbb59: lea r14d, [rax + 0x52838b1e]
		_0xffffff8000ebbb60: lea r15d, [rax + 5]
		_0xffffff8000ebbb64: lea eax, [rax + 0x30389c10]
		_0xffffff8000ebbb6a: cmp dword ptr [rbp - 0x34], 2
		_0xffffff8000ebbb6e: jmp _0xffffff8000ebd434
		_0xffffff8000ebbb73: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbb79: lea edx, [rax - 0x3aad281c]
		_0xffffff8000ebbb7f: lea r14d, [rax - 0xbc21b6b]
		_0xffffff8000ebbb86: lea r15d, [rax + 0x14cebb60]
		_0xffffff8000ebbb8d: lea eax, [rax - 0x30389c15]
		_0xffffff8000ebbb93: cmp byte ptr [rbp - 0x29], 1
		_0xffffff8000ebbb97: mov r12, rsi
		_0xffffff8000ebbb9a: cmove r12, rcx
		_0xffffff8000ebbb9e: mov r12d, dword ptr [r12]
		_0xffffff8000ebbba2: cmove eax, r15d
		_0xffffff8000ebbba6: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebbbad: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebbbb4: mov dword ptr [r13], eax
		_0xffffff8000ebbbb8: cmovne edx, r14d
		_0xffffff8000ebbbbc: mov dword ptr [r15], edx
		_0xffffff8000ebbbbf: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebbbc6: je _0xffffff8000ebbd8a
		_0xffffff8000ebbbcc: jmp _0xffffff8000ebc574
		_0xffffff8000ebbbd1: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbbd7: lea edx, [rax - 0xb]
		_0xffffff8000ebbbda: lea r14d, [rax + 0x30389c0b]
		_0xffffff8000ebbbe1: lea r15d, [rax + 0x171cce59]
		_0xffffff8000ebbbe8: lea eax, [rax - 0xc]
		_0xffffff8000ebbbeb: cmp dword ptr [rbp - 0x34], 7
		_0xffffff8000ebbbef: jmp _0xffffff8000ebd48c
		_0xffffff8000ebbbf4: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbbfa: lea edx, [rax + 0x171cce54]
		_0xffffff8000ebbc00: lea r14d, [rax + 0x30389c1a]
		_0xffffff8000ebbc07: lea eax, [rax + 0x30389c0b]
		_0xffffff8000ebbc0d: cmp dword ptr [rbp - 0x34], 6
		_0xffffff8000ebbc11: mov r15, rsi
		_0xffffff8000ebbc14: cmovl r15, rcx
		_0xffffff8000ebbc18: mov r15d, dword ptr [r15]
		_0xffffff8000ebbc1b: cmovl eax, r14d
		_0xffffff8000ebbc1f: mov r14, qword ptr [rbp - 0x358]
		_0xffffff8000ebbc26: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebbc2d: mov dword ptr [r12], eax
		_0xffffff8000ebbc31: mov dword ptr [r14], edx
		_0xffffff8000ebbc34: mov dword ptr [rbp - 0x35c], r15d
		_0xffffff8000ebbc3b: jl _0xffffff8000ebbd8a
		_0xffffff8000ebbc41: jmp _0xffffff8000ebc574
		_0xffffff8000ebbc46: mov dword ptr [rbp - 0x1ec], 0xffff586f
		_0xffffff8000ebbc50: mov al, byte ptr [rbp - 0x1a2]
		_0xffffff8000ebbc56: mov byte ptr [rbp - 0x2a], al
		_0xffffff8000ebbc59: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbc5f: lea edx, [rax - 0x171cce59]
		_0xffffff8000ebbc65: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebbc6c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebbc73: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebbc7a: mov dword ptr [r12], edx
		_0xffffff8000ebbc7e: add eax, 7
		_0xffffff8000ebbc81: mov dword ptr [r15], eax
		_0xffffff8000ebbc84: mov dword ptr [rbp - 0x35c], r14d
		_0xffffff8000ebbc8b: jmp _0xffffff8000ebbabc
		_0xffffff8000ebbc90: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbc96: lea edx, [rax - 0x30389c0f]
		_0xffffff8000ebbc9c: lea r14d, [rax - 0x191bcdb5]
		_0xffffff8000ebbca3: cmp dword ptr [rbp - 0x34], 9
		_0xffffff8000ebbca7: mov r15, rsi
		_0xffffff8000ebbcaa: cmovl r15, rcx
		_0xffffff8000ebbcae: mov r15d, dword ptr [r15]
		_0xffffff8000ebbcb1: cmovl r14d, edx
		_0xffffff8000ebbcb5: mov rdx, qword ptr [rbp - 0x358]
		_0xffffff8000ebbcbc: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebbcc3: mov dword ptr [r12], r14d
		_0xffffff8000ebbcc7: add eax, 0xe6e43244
		_0xffffff8000ebbccc: mov dword ptr [rdx], eax
		_0xffffff8000ebbcce: mov dword ptr [rbp - 0x35c], r15d
		_0xffffff8000ebbcd5: jmp _0xffffff8000ebc574
		_0xffffff8000ebbcda: mov al, byte ptr [rbp - 0x2c]
		_0xffffff8000ebbcdd: mov dl, byte ptr [rbp - 0x2d]
		_0xffffff8000ebbce0: mov byte ptr [rbp - 0x41], dl
		_0xffffff8000ebbce3: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbce9: lea r14d, [rdx - 0x12f3d70b]
		_0xffffff8000ebbcf0: lea r15d, [rdx - 0x36c3535e]
		_0xffffff8000ebbcf7: lea r12d, [rdx - 0x191bcdce]
		_0xffffff8000ebbcfe: lea edx, [rdx - 0x30389c1a]
		_0xffffff8000ebbd04: dec al
		_0xffffff8000ebbd06: cmp al, 2
		_0xffffff8000ebbd08: mov rax, rsi
		_0xffffff8000ebbd0b: cmovb rax, rcx
		_0xffffff8000ebbd0f: mov eax, dword ptr [rax]
		_0xffffff8000ebbd11: cmovb edx, r12d
		_0xffffff8000ebbd15: mov r12, qword ptr [rbp - 0x358]
		_0xffffff8000ebbd1c: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebbd23: mov dword ptr [r13], edx
		_0xffffff8000ebbd27: cmovae r14d, r15d
		_0xffffff8000ebbd2b: mov dword ptr [r12], r14d
		_0xffffff8000ebbd2f: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebbd35: jae _0xffffff8000ebc574
		_0xffffff8000ebbd3b: jmp _0xffffff8000ebbd8a
		_0xffffff8000ebbd3d: nop dword ptr [rax]
		nop
		_0xffffff8000ebbd40: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbd46: lea edx, [rax - 8]
		_0xffffff8000ebbd49: lea r14d, [rax + 0x191bcdc8]
		_0xffffff8000ebbd50: lea eax, [rax + 0x191bcdb9]
		_0xffffff8000ebbd56: cmp dword ptr [rbp - 0x34], 4
		_0xffffff8000ebbd5a: mov r15, rsi
		_0xffffff8000ebbd5d: cmovl r15, rcx
		_0xffffff8000ebbd61: mov r15d, dword ptr [r15]
		_0xffffff8000ebbd64: cmovl eax, r14d
		_0xffffff8000ebbd68: mov r14, qword ptr [rbp - 0x358]
		_0xffffff8000ebbd6f: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebbd76: mov dword ptr [r12], eax
		_0xffffff8000ebbd7a: mov dword ptr [r14], edx
		_0xffffff8000ebbd7d: mov dword ptr [rbp - 0x35c], r15d
		_0xffffff8000ebbd84: jl _0xffffff8000ebc574
		_0xffffff8000ebbd8a: lea rax, [rip + 0xb65a]
		_0xffffff8000ebbd91: mov rax, qword ptr [rax]
		// Inject value
		//mov rax, 0xa075894c9865894c
		_0xffffff8000ebbd94: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbd9a: cmp eax, 0x50a1488f
		_0xffffff8000ebbd9f: jg _0xffffff8000ebb6a3
		_0xffffff8000ebbda5: add eax, 0xc87a8548
		_0xffffff8000ebbdaa: cmp eax, 0x1d
		_0xffffff8000ebbdad: ja _0xffffff8000ebc574
		_0xffffff8000ebbdb3: jmp _0xffffff8000ebb693
		_0xffffff8000ebbdb8: movzx eax, byte ptr [rbp - 0xc2]
		_0xffffff8000ebbdbf: mov edx, eax
		_0xffffff8000ebbdc1: and edx, 0x2b
		_0xffffff8000ebbdc4: xor eax, 0x77fbbf2b
		_0xffffff8000ebbdc9: lea eax, [rax + rdx*2 - 0x77fbbf2b]
		_0xffffff8000ebbdd0: movzx edx, byte ptr [rbp - 0xc1]
		_0xffffff8000ebbdd7: mov r14d, edx
		_0xffffff8000ebbdda: and r14d, 0xef
		_0xffffff8000ebbde1: xor edx, 0x697cffef
		_0xffffff8000ebbde7: lea edx, [rdx + r14*2 - 0x697cffef]
		_0xffffff8000ebbdef: imul edx, eax
		_0xffffff8000ebbdf2: lea eax, [rdx*4]
		_0xffffff8000ebbdf9: xor eax, 0x7dbff7bd
		_0xffffff8000ebbdfe: mov dword ptr [rbp - 0x1ec], eax
		_0xffffff8000ebbe04: shl edx, 3
		_0xffffff8000ebbe07: and edx, 0xfb7fef78
		_0xffffff8000ebbe0d: mov dword ptr [rbp - 0x1e0], edx
		_0xffffff8000ebbe13: movzx eax, byte ptr [rbp - 0xc2]
		_0xffffff8000ebbe1a: mov dword ptr [rbp - 0x12c], 0
		_0xffffff8000ebbe24: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbe2a: lea r14d, [rdx - 0x1515310]
		_0xffffff8000ebbe31: lea r15d, [rdx - 0x11aab8b5]
		_0xffffff8000ebbe38: lea r12d, [rdx + 0x26f7146a]
		_0xffffff8000ebbe3f: lea edx, [rdx - 0x191bcdb8]
		_0xffffff8000ebbe45: mov r13d, eax
		_0xffffff8000ebbe48: xor r13d, 0x3dba7edf
		_0xffffff8000ebbe4f: lea eax, [rax + rax]
		_0xffffff8000ebbe52: add r13d, 0xc2458121
		_0xffffff8000ebbe59: and eax, 0x1be
		_0xffffff8000ebbe5e: neg eax
		_0xffffff8000ebbe60: cmp r13d, eax
		_0xffffff8000ebbe63: mov rax, rsi
		_0xffffff8000ebbe66: cmove rax, rcx
		_0xffffff8000ebbe6a: mov eax, dword ptr [rax]
		_0xffffff8000ebbe6c: cmove edx, r12d
		_0xffffff8000ebbe70: jmp _0xffffff8000ebb8b6
		_0xffffff8000ebbe75: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbe7b: lea edx, [rax + 7]
		_0xffffff8000ebbe7e: lea r14d, [rax + 0x19]
		_0xffffff8000ebbe82: lea r15d, [rax + 6]
		_0xffffff8000ebbe86: lea eax, [rax + 0x17]
		_0xffffff8000ebbe89: cmp byte ptr [rbp - 0x2b], 3
		_0xffffff8000ebbe8d: mov r12, rsi
		_0xffffff8000ebbe90: cmovl r12, rcx
		_0xffffff8000ebbe94: mov r12d, dword ptr [r12]
		_0xffffff8000ebbe98: cmovl eax, r15d
		_0xffffff8000ebbe9c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebbea3: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebbeaa: mov dword ptr [r13], eax
		_0xffffff8000ebbeae: cmovge edx, r14d
		_0xffffff8000ebbeb2: mov dword ptr [r15], edx
		_0xffffff8000ebbeb5: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebbebc: jmp _0xffffff8000ebc574
		_0xffffff8000ebbec1: mov qword ptr [rbp - 0x1f8], rdi
		_0xffffff8000ebbec8: mov qword ptr [rbp - 0x120], rdi
		_0xffffff8000ebbecf: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ebbed3: mov qword ptr [rbp - 0x340], rax
		_0xffffff8000ebbeda: mov rax, qword ptr [rdi + 0x18]
		_0xffffff8000ebbede: mov qword ptr [rbp - 0x178], rax
		_0xffffff8000ebbee5: mov rax, qword ptr [rbp - 0x120]
		_0xffffff8000ebbeec: mov rax, qword ptr [rax + 0x10]
		_0xffffff8000ebbef0: mov qword ptr [rbp - 0x170], rax
		_0xffffff8000ebbef7: cmp qword ptr [rbp - 0x178], 0
		_0xffffff8000ebbeff: sete dl
		_0xffffff8000ebbf02: cmp qword ptr [rbp - 0x340], 0
		_0xffffff8000ebbf0a: sete r14b
		_0xffffff8000ebbf0e: or r14b, dl
		_0xffffff8000ebbf11: test rax, rax
		_0xffffff8000ebbf14: sete al
		_0xffffff8000ebbf17: or al, r14b
		_0xffffff8000ebbf1a: mov byte ptr [rbp - 0x1d9], al
		_0xffffff8000ebbf20: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebbf27: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebbf2e: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebbf35: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebbf3c: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebbf43: mov qword ptr [rbp - 0x338], rax
		_0xffffff8000ebbf4a: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebbf51: mov qword ptr [rbp - 0x2a0], rax
		_0xffffff8000ebbf58: lea rax, [rbp - 0x298]
		_0xffffff8000ebbf5f: mov qword ptr [rbp - 0x160], rax
		_0xffffff8000ebbf66: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebbf6d: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebbf74: lea rdx, [rax + 8]
		_0xffffff8000ebbf78: mov qword ptr [rbp - 0x118], rdx
		_0xffffff8000ebbf7f: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebbf83: mov rdx, qword ptr [rbp - 0x160]
		_0xffffff8000ebbf8a: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebbf8e: mov qword ptr [rbp - 0x40], rax
		_0xffffff8000ebbf92: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebbf98: lea edx, [rax - 0x191bcdb2]
		_0xffffff8000ebbf9e: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebbfa5: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebbfac: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebbfb3: mov dword ptr [r12], edx
		_0xffffff8000ebbfb7: add eax, 0xcfc763f8
		_0xffffff8000ebbfbc: jmp _0xffffff8000ebbc81
		_0xffffff8000ebbfc1: mov rax, qword ptr [rbp - 0x178]
		_0xffffff8000ebbfc8: mov dword ptr [rax], 0
		_0xffffff8000ebbfce: mov rax, qword ptr [rbp - 0x340]
		_0xffffff8000ebbfd5: mov dl, byte ptr [rax + 6]
		_0xffffff8000ebbfd8: mov byte ptr [rbp - 0xc2], dl
		_0xffffff8000ebbfde: mov al, byte ptr [rax + 7]
		_0xffffff8000ebbfe1: mov byte ptr [rbp - 0xc1], al
		_0xffffff8000ebbfe7: mov rax, qword ptr [rbp - 0x170]
		_0xffffff8000ebbfee: mov al, byte ptr [rax + 9]
		_0xffffff8000ebbff1: mov dword ptr [rbp - 0x12c], 0xffff586f
		_0xffffff8000ebbffb: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc001: lea r14d, [rdx - 0x171cce74]
		_0xffffff8000ebc008: lea r15d, [rdx + 0x153f0426]
		_0xffffff8000ebc00f: lea r12d, [rdx + 0x3f35f699]
		_0xffffff8000ebc016: lea edx, [rdx - 0x18]
		_0xffffff8000ebc019: cmp al, 1
		_0xffffff8000ebc01b: mov rax, rsi
		_0xffffff8000ebc01e: cmove rax, rcx
		_0xffffff8000ebc022: mov eax, dword ptr [rax]
		_0xffffff8000ebc024: cmovne edx, r12d
		_0xffffff8000ebc028: mov r12, qword ptr [rbp - 0x358]
		_0xffffff8000ebc02f: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc036: mov dword ptr [r13], edx
		_0xffffff8000ebc03a: cmovne r14d, r15d
		_0xffffff8000ebc03e: mov dword ptr [r12], r14d
		_0xffffff8000ebc042: jmp _0xffffff8000ebca2d
		_0xffffff8000ebc047: mov eax, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebc04d: mov edx, eax
		_0xffffff8000ebc04f: shr edx, 0x17
		_0xffffff8000ebc052: and edx, 0x68
		_0xffffff8000ebc055: shr eax, 0x18
		_0xffffff8000ebc058: add eax, 0x34
		_0xffffff8000ebc05b: sub eax, edx
		_0xffffff8000ebc05d: xor eax, 0x34
		_0xffffff8000ebc060: mov byte ptr [rbp - 0x12d], al
		_0xffffff8000ebc066: mov eax, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebc06c: mov edx, eax
		_0xffffff8000ebc06e: shr edx, 0xf
		_0xffffff8000ebc071: and edx, 0xee
		_0xffffff8000ebc077: shr eax, 0x10
		_0xffffff8000ebc07a: add eax, 0xf7
		_0xffffff8000ebc07f: sub eax, edx
		_0xffffff8000ebc081: xor eax, 0xf7
		_0xffffff8000ebc086: mov byte ptr [rbp - 0x12e], al
		_0xffffff8000ebc08c: mov eax, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebc092: mov edx, eax
		_0xffffff8000ebc094: shr edx, 7
		_0xffffff8000ebc097: and edx, 0x40
		_0xffffff8000ebc09a: shr eax, 8
		_0xffffff8000ebc09d: add eax, 0x20
		_0xffffff8000ebc0a0: sub eax, edx
		_0xffffff8000ebc0a2: xor eax, 0x20
		_0xffffff8000ebc0a5: mov byte ptr [rbp - 0x12f], al
		_0xffffff8000ebc0ab: mov al, byte ptr [rbp - 0x1e0]
		_0xffffff8000ebc0b1: mov byte ptr [rbp - 0x130], al
		_0xffffff8000ebc0b7: mov dword ptr [rbp - 0x12c], 0
		_0xffffff8000ebc0c1: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc0c7: lea edx, [rax + 0x191bcdb2]
		_0xffffff8000ebc0cd: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebc0d4: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc0db: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc0e2: mov dword ptr [r12], edx
		_0xffffff8000ebc0e6: add eax, 0xe8e331ae
		_0xffffff8000ebc0eb: mov dword ptr [r15], eax
		_0xffffff8000ebc0ee: mov dword ptr [rbp - 0x35c], r14d
		_0xffffff8000ebc0f5: jmp _0xffffff8000ebc574
		_0xffffff8000ebc0fa: mov r14d, dword ptr [rdi]
		_0xffffff8000ebc0fd: lea r15d, [r14 + 4]
		_0xffffff8000ebc101: mov edx, 0x66666667
		_0xffffff8000ebc106: mov eax, r15d
		_0xffffff8000ebc109: imul edx
		_0xffffff8000ebc10b: mov eax, edx
		_0xffffff8000ebc10d: shr eax, 0x1f
		_0xffffff8000ebc110: sar edx, 2
		_0xffffff8000ebc113: add edx, eax
		_0xffffff8000ebc115: imul eax, edx, 0xa
		_0xffffff8000ebc118: neg eax
		_0xffffff8000ebc11a: lea eax, [r14 + rax + 4]
		_0xffffff8000ebc11f: cmp r15d, 0xa
		_0xffffff8000ebc123: cmovl eax, r15d
		_0xffffff8000ebc127: mov dword ptr [rbp - 0x34], eax
		_0xffffff8000ebc12a: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc130: lea edx, [rax - 0x191bcdcc]
		_0xffffff8000ebc136: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebc13d: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc144: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc14b: mov dword ptr [r12], edx
		_0xffffff8000ebc14f: add eax, 0xcfc763ea
		_0xffffff8000ebc154: jmp _0xffffff8000ebbc81
		_0xffffff8000ebc159: mov qword ptr [rbp - 0x188], rdi
		_0xffffff8000ebc160: mov qword ptr [rbp - 0xd0], rdi
		_0xffffff8000ebc167: mov rax, qword ptr [rdi + 0x10]
		_0xffffff8000ebc16b: mov qword ptr [rbp - 0x1f8], rax
		_0xffffff8000ebc172: mov rax, qword ptr [rdi + 0x28]
		_0xffffff8000ebc176: mov qword ptr [rbp - 0x340], rax
		_0xffffff8000ebc17d: mov rax, qword ptr [rbp - 0xd0]
		_0xffffff8000ebc184: mov rdx, qword ptr [rax + 0x18]
		_0xffffff8000ebc188: mov qword ptr [rbp - 0x178], rdx
		_0xffffff8000ebc18f: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebc193: mov qword ptr [rbp - 0x170], rax
		_0xffffff8000ebc19a: cmp qword ptr [rbp - 0x340], 0
		_0xffffff8000ebc1a2: sete dl
		_0xffffff8000ebc1a5: cmp qword ptr [rbp - 0x1f8], 0
		_0xffffff8000ebc1ad: sete r14b
		_0xffffff8000ebc1b1: or r14b, dl
		_0xffffff8000ebc1b4: cmp qword ptr [rbp - 0x178], 0
		_0xffffff8000ebc1bc: sete dl
		_0xffffff8000ebc1bf: or dl, r14b
		_0xffffff8000ebc1c2: test rax, rax
		_0xffffff8000ebc1c5: sete al
		_0xffffff8000ebc1c8: or al, dl
		_0xffffff8000ebc1ca: mov byte ptr [rbp - 0xc3], al
		_0xffffff8000ebc1d0: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebc1d7: mov qword ptr [rbp - 0x338], rax
		_0xffffff8000ebc1de: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebc1e5: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebc1ec: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebc1f3: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebc1fa: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebc201: mov qword ptr [rbp - 0x2a0], rax
		_0xffffff8000ebc208: lea rax, [rbp - 0x298]
		_0xffffff8000ebc20f: mov qword ptr [rbp - 0x160], rax
		_0xffffff8000ebc216: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebc21d: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebc224: lea rdx, [rax + 8]
		_0xffffff8000ebc228: mov qword ptr [rbp - 0x118], rdx
		_0xffffff8000ebc22f: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebc233: mov rdx, qword ptr [rbp - 0x160]
		_0xffffff8000ebc23a: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebc23e: mov qword ptr [rbp - 0x40], rax
		_0xffffff8000ebc242: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc248: lea edx, [rax - 0xb]
		_0xffffff8000ebc24b: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebc252: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc259: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc260: mov dword ptr [r12], edx
		_0xffffff8000ebc264: add eax, 0xe8e3319f
		_0xffffff8000ebc269: jmp _0xffffff8000ebbc81
		_0xffffff8000ebc26e: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc274: lea edx, [rax - 0x191bcdcf]
		_0xffffff8000ebc27a: lea r14d, [rax - 0x191bcdc2]
		_0xffffff8000ebc281: lea eax, [rax - 0x191bcdbb]
		_0xffffff8000ebc287: cmp dword ptr [rbp - 0x34], 2
		_0xffffff8000ebc28b: mov r15, rsi
		_0xffffff8000ebc28e: cmovl r15, rcx
		_0xffffff8000ebc292: mov r15d, dword ptr [r15]
		_0xffffff8000ebc295: cmovl eax, r14d
		_0xffffff8000ebc299: mov r14, qword ptr [rbp - 0x358]
		_0xffffff8000ebc2a0: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc2a7: mov dword ptr [r12], eax
		_0xffffff8000ebc2ab: mov dword ptr [r14], edx
		_0xffffff8000ebc2ae: mov dword ptr [rbp - 0x35c], r15d
		_0xffffff8000ebc2b5: jl _0xffffff8000ebbabc
		_0xffffff8000ebc2bb: jmp _0xffffff8000ebc574
		_0xffffff8000ebc2c0: mov rax, qword ptr [rbp - 0x170]
		_0xffffff8000ebc2c7: movzx edx, byte ptr [rax]
		_0xffffff8000ebc2ca: cmp edx, 0x32
		_0xffffff8000ebc2cd: sbb r14d, r14d
		_0xffffff8000ebc2d0: and r14d, 0x100
		_0xffffff8000ebc2d7: add r14d, edx
		_0xffffff8000ebc2da: add r14d, -0x32
		_0xffffff8000ebc2de: mov edx, dword ptr [rbp - 0x1ec]
		_0xffffff8000ebc2e4: imul r14d, edx
		_0xffffff8000ebc2e8: mov r15d, r14d
		_0xffffff8000ebc2eb: and r15d, 0x2c
		_0xffffff8000ebc2ef: and r14d, 0x3f
		_0xffffff8000ebc2f3: xor r14d, 0x6fadb56c
		_0xffffff8000ebc2fa: lea r14d, [r14 + r15*2 - 0x3042508]
		_0xffffff8000ebc302: cmp r14d, 0x6ca99064
		_0xffffff8000ebc309: sbb r15, r15
		_0xffffff8000ebc30c: and r15d, 1
		_0xffffff8000ebc310: shl r15, 0x20
		_0xffffff8000ebc314: add r15, r14
		_0xffffff8000ebc317: movabs r14, 0x6f07f3f1f19bc5
		_0xffffff8000ebc321: add r15, r14
		_0xffffff8000ebc324: mov r14, r15
		_0xffffff8000ebc327: shl r14, 8
		_0xffffff8000ebc32b: add r14d, 0x8c2c9c6
		_0xffffff8000ebc332: shl r15, 9
		_0xffffff8000ebc336: add r15d, 0x49a7ae00
		_0xffffff8000ebc33d: and r15d, 0x47dde400
		_0xffffff8000ebc344: sub r14d, r15d
		_0xffffff8000ebc347: mov r15d, r14d
		_0xffffff8000ebc34a: xor r15d, 0xb3910d73
		_0xffffff8000ebc351: xor r14d, 0x6ef284
		_0xffffff8000ebc358: and r14d, 0x107fffb5
		_0xffffff8000ebc35f: lea r14d, [r15 + r14*2 - 0x304201]
		_0xffffff8000ebc367: cmp r14d, 0x104fbdb4
		_0xffffff8000ebc36e: sbb r15, r15
		_0xffffff8000ebc371: and r15d, 1
		_0xffffff8000ebc375: shl r15, 0x20
		_0xffffff8000ebc379: add r15, r14
		_0xffffff8000ebc37c: mov r14, qword ptr [rbp - 0x340]
		_0xffffff8000ebc383: lea r14, [r15 + r14 - 0x104fbdb4]
		_0xffffff8000ebc38b: mov r15d, edx
		_0xffffff8000ebc38e: shr r15d, 3
		_0xffffff8000ebc392: and r15d, 0xe0
		_0xffffff8000ebc399: mov r12d, edx
		_0xffffff8000ebc39c: shr r12d, 4
		_0xffffff8000ebc3a0: add r12d, 0x70
		_0xffffff8000ebc3a4: sub r12d, r15d
		_0xffffff8000ebc3a7: xor r12d, 0x70
		_0xffffff8000ebc3ab: mov r15b, r12b
		_0xffffff8000ebc3ae: add r15b, r15b
		_0xffffff8000ebc3b1: xor r12b, 0x57
		_0xffffff8000ebc3b5: and r15b, 0xae
		_0xffffff8000ebc3b9: add r15b, r12b
		_0xffffff8000ebc3bc: add r15b, 0xfe
		_0xffffff8000ebc3c0: movzx r15d, r15b
		_0xffffff8000ebc3c4: cmp r15b, 0x55
		_0xffffff8000ebc3c8: sbb r12, r12
		_0xffffff8000ebc3cb: and r12d, 0x100
		_0xffffff8000ebc3d2: add r12d, r15d
		_0xffffff8000ebc3d5: add r12d, 0x3e2fd43a
		_0xffffff8000ebc3dc: shl r12, 0x20
		_0xffffff8000ebc3e0: movabs r15, 0xc1d02b7100000000
		_0xffffff8000ebc3ea: add r12, r15
		_0xffffff8000ebc3ed: mov r15, r12
		_0xffffff8000ebc3f0: sar r15, 0x1f
		_0xffffff8000ebc3f4: movabs r13, 0x139d75f5ab7dbfa
		_0xffffff8000ebc3fe: and r15, r13
		_0xffffff8000ebc401: sar r12, 0x20
		_0xffffff8000ebc405: movabs r13, 0x19cebafad5bedfd
		_0xffffff8000ebc40f: xor r12, r13
		_0xffffff8000ebc412: add r12, r15
		_0xffffff8000ebc415: shl r12, 7
		_0xffffff8000ebc419: add r12, rax
		_0xffffff8000ebc41c: mov eax, edx
		_0xffffff8000ebc41e: shr eax, 1
		_0xffffff8000ebc420: and eax, 6
		_0xffffff8000ebc423: mov r15d, edx
		_0xffffff8000ebc426: shr r15d, 2
		_0xffffff8000ebc42a: and r15d, 3
		_0xffffff8000ebc42e: add r15d, 0x23
		_0xffffff8000ebc432: sub r15d, eax
		_0xffffff8000ebc435: xor r15d, 0x23
		_0xffffff8000ebc439: mov al, r15b
		_0xffffff8000ebc43c: add al, al
		_0xffffff8000ebc43e: xor r15b, 0x7f
		_0xffffff8000ebc442: add r15b, al
		_0xffffff8000ebc445: add r15b, 0x8f
		_0xffffff8000ebc449: movzx eax, r15b
		_0xffffff8000ebc44d: cmp al, 0xe
		_0xffffff8000ebc44f: sbb r15, r15
		_0xffffff8000ebc452: and r15d, 0x100
		_0xffffff8000ebc459: add r15d, eax
		_0xffffff8000ebc45c: add r15d, 0x25b99f28
		_0xffffff8000ebc463: shl r15, 0x20
		_0xffffff8000ebc467: movabs rax, 0xda4660ca00000000
		_0xffffff8000ebc471: add r15, rax
		_0xffffff8000ebc474: mov rax, r15
		_0xffffff8000ebc477: sar rax, 0x1f
		_0xffffff8000ebc47b: movabs r13, 0x6dfaf7bff6ffffe
		_0xffffff8000ebc485: and rax, r13
		_0xffffff8000ebc488: sar r15, 0x20
		_0xffffff8000ebc48c: movabs r13, 0x76fd7bdffb7ffff
		_0xffffff8000ebc496: xor r15, r13
		_0xffffff8000ebc499: add r15, rax
		_0xffffff8000ebc49c: shl r15, 5
		_0xffffff8000ebc4a0: add r15, r12
		_0xffffff8000ebc4a3: lea eax, [rdx + rdx]
		_0xffffff8000ebc4a6: and al, 2
		_0xffffff8000ebc4a8: lea r12d, [rdx + 2]
		_0xffffff8000ebc4ac: and r12b, 3
		_0xffffff8000ebc4b0: xor r12b, 0x2f
		_0xffffff8000ebc4b4: add r12b, al
		_0xffffff8000ebc4b7: movzx eax, r12b
		_0xffffff8000ebc4bb: cmp al, 0x2d
		_0xffffff8000ebc4bd: sbb r12, r12
		_0xffffff8000ebc4c0: and r12d, 0x100
		_0xffffff8000ebc4c7: add r12d, eax
		_0xffffff8000ebc4ca: add r12d, 0x1fabbb8e
		_0xffffff8000ebc4d1: shl r12, 0x20
		_0xffffff8000ebc4d5: movabs rax, 0xe054444500000000
		_0xffffff8000ebc4df: add r12, rax
		_0xffffff8000ebc4e2: mov rax, r12
		_0xffffff8000ebc4e5: sar rax, 0x1f
		_0xffffff8000ebc4e9: movabs r13, 0x1aedffdefdffbfb8
		_0xffffff8000ebc4f3: and rax, r13
		_0xffffff8000ebc4f6: sar r12, 0x20
		_0xffffff8000ebc4fa: movabs r13, 0xd76ffef7effdfdc
		_0xffffff8000ebc504: xor r12, r13
		_0xffffff8000ebc507: add r12, rax
		_0xffffff8000ebc50a: lea rax, [r15 + r12*8]
		_0xffffff8000ebc50e: movabs r15, 0xd7d730ed630a02d0
		_0xffffff8000ebc518: mov qword ptr [r15 + rax], r14
		_0xffffff8000ebc51c: inc edx
		_0xffffff8000ebc51e: mov dword ptr [rbp - 0x1ec], edx
		_0xffffff8000ebc524: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc52a: lea r14d, [rax + 0x1dc20e13]
		_0xffffff8000ebc531: lea r15d, [rax + 0x3e6b9fa]
		_0xffffff8000ebc538: lea r12d, [rax + 0x30389bff]
		_0xffffff8000ebc53f: cmp edx, 0x40
		_0xffffff8000ebc542: mov rdx, rsi
		_0xffffff8000ebc545: cmove rdx, rcx
		_0xffffff8000ebc549: mov edx, dword ptr [rdx]
		_0xffffff8000ebc54b: cmove r12d, r15d
		_0xffffff8000ebc54f: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc556: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc55d: mov dword ptr [r13], r12d
		_0xffffff8000ebc561: cmovne r14d, eax
		_0xffffff8000ebc565: mov dword ptr [r15], r14d
		_0xffffff8000ebc568: mov dword ptr [rbp - 0x35c], edx
		_0xffffff8000ebc56e: je _0xffffff8000ebbabc
		_0xffffff8000ebc574: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc57a: cmp eax, 0x37857ad4
		_0xffffff8000ebc57f: jg _0xffffff8000ebb945
		_0xffffff8000ebc585: add eax, 0xdf9753a1
		_0xffffff8000ebc58a: cmp eax, 0x16
		_0xffffff8000ebc58d: ja _0xffffff8000ebbabc
		_0xffffff8000ebc593: jmp _0xffffff8000ebb93c
		_0xffffff8000ebc598: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc59e: lea edx, [rax - 4]
		_0xffffff8000ebc5a1: lea r14d, [rax - 0x2c5d8ee5]
		_0xffffff8000ebc5a8: lea r15d, [rax + 0x191bcdae]
		_0xffffff8000ebc5af: lea eax, [rax + 0x191bcdb1]
		_0xffffff8000ebc5b5: cmp dword ptr [rbp - 0x34], 5
		_0xffffff8000ebc5b9: jmp _0xffffff8000ebc976
		_0xffffff8000ebc5be: mov rax, qword ptr [rbp - 0x198]
		_0xffffff8000ebc5c5: add rax, rax
		_0xffffff8000ebc5c8: mov qword ptr [rbp - 0xf8], rax
		_0xffffff8000ebc5cf: mov qword ptr [rbp - 0x108], 0
		_0xffffff8000ebc5da: mov al, byte ptr [rbp - 0x1a1]
		_0xffffff8000ebc5e0: mov byte ptr [rbp - 0xf9], al
		_0xffffff8000ebc5e6: mov byte ptr [rbp - 0xe1], al
		_0xffffff8000ebc5ec: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc5f2: lea edx, [rax + 0x171cce47]
		_0xffffff8000ebc5f8: lea r14d, [rax - 0x1b0d6282]
		_0xffffff8000ebc5ff: lea r15d, [rax - 2]
		_0xffffff8000ebc603: lea eax, [rax + 0x171cce57]
		_0xffffff8000ebc609: mov r12b, byte ptr [rbp - 0x1d9]
		_0xffffff8000ebc610: test r12b, r12b
		_0xffffff8000ebc613: mov r12, rsi
		_0xffffff8000ebc616: cmovne r12, rcx
		_0xffffff8000ebc61a: mov r12d, dword ptr [r12]
		_0xffffff8000ebc61e: cmovne eax, r15d
		_0xffffff8000ebc622: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc629: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc630: mov dword ptr [r13], eax
		_0xffffff8000ebc634: cmove edx, r14d
		_0xffffff8000ebc638: mov dword ptr [r15], edx
		_0xffffff8000ebc63b: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebc642: je _0xffffff8000ebbd8a
		_0xffffff8000ebc648: jmp _0xffffff8000ebbabc
		_0xffffff8000ebc64d: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc653: lea edx, [rax - 0x1a70dc98]
		_0xffffff8000ebc659: lea r14d, [rax + 0x2e97a6c8]
		_0xffffff8000ebc660: lea r15d, [rax + 0x30389c29]
		_0xffffff8000ebc667: lea eax, [rax + 0x30389c13]
		_0xffffff8000ebc66d: cmp dword ptr [rbp - 0x34], 9
		_0xffffff8000ebc671: jmp _0xffffff8000ebd434
		_0xffffff8000ebc676: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc67c: lea edx, [rax + 0x6f5b8db]
		_0xffffff8000ebc682: lea r14d, [rax - 0x2a7cdda]
		_0xffffff8000ebc689: lea r15d, [rax - 0x191bcdaa]
		_0xffffff8000ebc690: lea eax, [rax - 0x30389c10]
		_0xffffff8000ebc696: cmp byte ptr [rbp - 0x2a], 3
		_0xffffff8000ebc69a: mov r12, rsi
		_0xffffff8000ebc69d: cmovb r12, rcx
		_0xffffff8000ebc6a1: mov r12d, dword ptr [r12]
		_0xffffff8000ebc6a5: cmovb eax, r15d
		_0xffffff8000ebc6a9: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc6b0: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc6b7: mov dword ptr [r13], eax
		_0xffffff8000ebc6bb: cmovae edx, r14d
		_0xffffff8000ebc6bf: mov dword ptr [r15], edx
		_0xffffff8000ebc6c2: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebc6c9: jae _0xffffff8000ebbd8a
		_0xffffff8000ebc6cf: jmp _0xffffff8000ebc574
		_0xffffff8000ebc6d4: cmp byte ptr [rbp - 0x2b], 9
		_0xffffff8000ebc6d8: mov rax, rsi
		_0xffffff8000ebc6db: cmovl rax, rcx
		_0xffffff8000ebc6df: mov eax, dword ptr [rax]
		_0xffffff8000ebc6e1: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc6e7: lea r14d, [rdx + 0x171cce60]
		_0xffffff8000ebc6ee: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc6f5: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc6fc: mov dword ptr [r12], r14d
		_0xffffff8000ebc700: add edx, 0x171cce61
		_0xffffff8000ebc706: mov dword ptr [r15], edx
		_0xffffff8000ebc709: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebc70f: jmp _0xffffff8000ebbd8a
		_0xffffff8000ebc714: mov eax, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebc71a: mov dword ptr [rbp - 0x1ec], 0xffff586d
		_0xffffff8000ebc724: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc72a: lea r14d, [rdx + 0x3eb612df]
		_0xffffff8000ebc731: lea r15d, [rdx + 0x32b5230b]
		_0xffffff8000ebc738: lea r12d, [rdx - 0x18e5d2cb]
		_0xffffff8000ebc73f: lea edx, [rdx + 0x30389c16]
		_0xffffff8000ebc745: cmp eax, 0x1d51bce8
		_0xffffff8000ebc74a: mov rax, rsi
		_0xffffff8000ebc74d: cmove rax, rcx
		_0xffffff8000ebc751: mov eax, dword ptr [rax]
		_0xffffff8000ebc753: cmovne edx, r12d
		_0xffffff8000ebc757: mov r12, qword ptr [rbp - 0x358]
		_0xffffff8000ebc75e: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc765: mov dword ptr [r13], edx
		_0xffffff8000ebc769: cmovne r14d, r15d
		_0xffffff8000ebc76d: mov dword ptr [r12], r14d
		_0xffffff8000ebc771: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebc777: jne _0xffffff8000ebc574
		_0xffffff8000ebc77d: jmp _0xffffff8000ebbabc
		_0xffffff8000ebc782: mov rax, qword ptr [rbp - 0x178]
		_0xffffff8000ebc789: mov dword ptr [rax], 0x2fc2e0a1
		_0xffffff8000ebc78f: mov rax, qword ptr [rbp - 0x170]
		_0xffffff8000ebc796: mov al, byte ptr [rax + 9]
		_0xffffff8000ebc799: mov dword ptr [rbp - 0x1ec], 0
		_0xffffff8000ebc7a3: mov dword ptr [rbp - 0x1e0], 0xffff586f
		_0xffffff8000ebc7ad: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc7b3: lea r14d, [rdx - 0x30389c17]
		_0xffffff8000ebc7ba: lea r15d, [rdx + 0x2d7b6b9c]
		_0xffffff8000ebc7c1: cmp al, 1
		_0xffffff8000ebc7c3: cmove r15d, r14d
		_0xffffff8000ebc7c7: lea r14d, [rdx + 0x2d84c33e]
		_0xffffff8000ebc7ce: lea edx, [rdx - 0x18]
		_0xffffff8000ebc7d1: cmp al, 1
		_0xffffff8000ebc7d3: mov rax, rsi
		_0xffffff8000ebc7d6: cmove rax, rcx
		_0xffffff8000ebc7da: mov eax, dword ptr [rax]
		_0xffffff8000ebc7dc: cmove r14d, edx
		_0xffffff8000ebc7e0: mov rdx, qword ptr [rbp - 0x358]
		_0xffffff8000ebc7e7: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc7ee: mov dword ptr [r12], r14d
		_0xffffff8000ebc7f2: mov dword ptr [rdx], r15d
		_0xffffff8000ebc7f5: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebc7fb: jmp _0xffffff8000ebc574
		_0xffffff8000ebc800: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc806: lea edx, [rax + 0x4ec8007]
		_0xffffff8000ebc80c: lea r14d, [rax + 0x386cfc6a]
		_0xffffff8000ebc813: lea r15d, [rax + 0x30389c19]
		_0xffffff8000ebc81a: lea eax, [rax + 0x30389c15]
		_0xffffff8000ebc820: cmp dword ptr [rbp - 0x34], 6
		_0xffffff8000ebc824: jmp _0xffffff8000ebc976
		_0xffffff8000ebc829: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc82f: lea edx, [rax - 0x191bcdc4]
		_0xffffff8000ebc835: lea r14d, [rax - 1]
		_0xffffff8000ebc839: lea r15d, [rax + 3]
		_0xffffff8000ebc83d: lea eax, [rax - 0x30389c20]
		_0xffffff8000ebc843: cmp dword ptr [rbp - 0x34], 5
		_0xffffff8000ebc847: mov r12, rsi
		_0xffffff8000ebc84a: cmovl r12, rcx
		_0xffffff8000ebc84e: mov r12d, dword ptr [r12]
		_0xffffff8000ebc852: cmovl eax, r15d
		_0xffffff8000ebc856: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc85d: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc864: mov dword ptr [r13], eax
		_0xffffff8000ebc868: cmovge edx, r14d
		_0xffffff8000ebc86c: mov dword ptr [r15], edx
		_0xffffff8000ebc86f: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebc876: jl _0xffffff8000ebbd8a
		_0xffffff8000ebc87c: jmp _0xffffff8000ebc574
		_0xffffff8000ebc881: movzx eax, byte ptr [rbp - 0xc1]
		_0xffffff8000ebc888: mov edx, eax
		_0xffffff8000ebc88a: xor edx, 0x556f3659
		_0xffffff8000ebc890: lea eax, [rax + rax]
		_0xffffff8000ebc893: add edx, 0xaa90c9a7
		_0xffffff8000ebc899: and eax, 0xb2
		_0xffffff8000ebc89e: neg eax
		_0xffffff8000ebc8a0: cmp edx, eax
		_0xffffff8000ebc8a2: movzx eax, byte ptr [rbp - 0xc2]
		_0xffffff8000ebc8a9: sete byte ptr [rbp - 0x1d9]
		_0xffffff8000ebc8b0: movzx edx, byte ptr [rbp - 0xc1]
		_0xffffff8000ebc8b7: mov r14d, edx
		_0xffffff8000ebc8ba: and r14d, 0x59
		_0xffffff8000ebc8be: xor edx, 0x556f3659
		_0xffffff8000ebc8c4: lea r15d, [rdx + r14*2 - 0x556f365a]
		_0xffffff8000ebc8cc: inc r15
		_0xffffff8000ebc8cf: lea edx, [rdx + r14*2 - 0x556f3659]
		_0xffffff8000ebc8d7: cmp edx, 1
		_0xffffff8000ebc8da: mov edx, 1
		_0xffffff8000ebc8df: cmovbe r15, rdx
		_0xffffff8000ebc8e3: mov qword ptr [rbp - 0xa8], r15
		_0xffffff8000ebc8ea: mov r14d, eax
		_0xffffff8000ebc8ed: and r14d, 0xdf
		_0xffffff8000ebc8f4: xor eax, 0x3dba7edf
		_0xffffff8000ebc8f9: lea r15d, [rax + r14*2 - 0x3dba7ee0]
		_0xffffff8000ebc901: inc r15
		_0xffffff8000ebc904: lea eax, [rax + r14*2 - 0x3dba7edf]
		_0xffffff8000ebc90c: cmp eax, 1
		_0xffffff8000ebc90f: cmovbe r15, rdx
		_0xffffff8000ebc913: mov qword ptr [rbp - 0x1a0], r15
		_0xffffff8000ebc91a: mov qword ptr [rbp - 0xe0], 0
		_0xffffff8000ebc925: mov byte ptr [rbp - 0xd1], 0x3a
		_0xffffff8000ebc92c: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc932: lea edx, [rax + 0x15]
		_0xffffff8000ebc935: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebc93c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc943: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebc94a: mov dword ptr [r12], edx
		_0xffffff8000ebc94e: add eax, 0x171cce61
		_0xffffff8000ebc953: jmp _0xffffff8000ebb7ac
		_0xffffff8000ebc958: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc95e: lea edx, [rax + 0xd]
		_0xffffff8000ebc961: lea r14d, [rax - 0x1c9b5ed8]
		_0xffffff8000ebc968: lea r15d, [rax + 0x10]
		_0xffffff8000ebc96c: lea eax, [rax + 0x191bcdbd]
		_0xffffff8000ebc972: cmp dword ptr [rbp - 0x34], 4
		_0xffffff8000ebc976: mov r12, rsi
		_0xffffff8000ebc979: cmove r12, rcx
		_0xffffff8000ebc97d: mov r12d, dword ptr [r12]
		_0xffffff8000ebc981: cmove eax, r15d
		_0xffffff8000ebc985: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebc98c: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebc993: mov dword ptr [r13], eax
		_0xffffff8000ebc997: cmovne edx, r14d
		_0xffffff8000ebc99b: mov dword ptr [r15], edx
		_0xffffff8000ebc99e: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebc9a5: jne _0xffffff8000ebbd8a
		_0xffffff8000ebc9ab: jmp _0xffffff8000ebbabc
		_0xffffff8000ebc9b0: mov rax, qword ptr [rbp - 0xc0]
		_0xffffff8000ebc9b7: inc rax
		_0xffffff8000ebc9ba: mov rdx, qword ptr [rbp - 0xa8]
		_0xffffff8000ebc9c1: mov r14b, byte ptr [rbp - 0x1a3]
		_0xffffff8000ebc9c8: mov qword ptr [rbp - 0x108], rax
		_0xffffff8000ebc9cf: add r14b, 4
		_0xffffff8000ebc9d3: mov byte ptr [rbp - 0xf9], r14b
		_0xffffff8000ebc9da: mov byte ptr [rbp - 0xe1], r14b
		_0xffffff8000ebc9e1: mov r14d, dword ptr [rbp - 0x35c]
		_0xffffff8000ebc9e8: lea r15d, [r14 - 0x191bcdbb]
		_0xffffff8000ebc9ef: lea r12d, [r14 + 0x1eb0cb0c]
		_0xffffff8000ebc9f6: lea r13d, [r14 - 0x191bcdab]
		_0xffffff8000ebc9fd: lea r14d, [r14 - 0x30389c04]
		_0xffffff8000ebca04: cmp rax, rdx
		_0xffffff8000ebca07: mov rax, rsi
		_0xffffff8000ebca0a: cmove rax, rcx
		_0xffffff8000ebca0e: mov eax, dword ptr [rax]
		_0xffffff8000ebca10: cmovne r14d, r13d
		_0xffffff8000ebca14: mov rdx, qword ptr [rbp - 0x358]
		_0xffffff8000ebca1b: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebca22: mov dword ptr [r13], r14d
		_0xffffff8000ebca26: cmovne r15d, r12d
		_0xffffff8000ebca2a: mov dword ptr [rdx], r15d
		_0xffffff8000ebca2d: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebca33: jne _0xffffff8000ebbd8a
		_0xffffff8000ebca39: jmp _0xffffff8000ebbabc
		_0xffffff8000ebca3e: mov qword ptr [rbp - 0x188], rdi
		_0xffffff8000ebca45: mov qword ptr [rbp - 0x180], rdi
		_0xffffff8000ebca4c: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ebca50: mov qword ptr [rbp - 0x340], rax
		_0xffffff8000ebca57: mov rax, qword ptr [rdi + 0x18]
		_0xffffff8000ebca5b: mov qword ptr [rbp - 0x178], rax
		_0xffffff8000ebca62: mov rax, qword ptr [rbp - 0x180]
		_0xffffff8000ebca69: mov rax, qword ptr [rax + 0x20]
		_0xffffff8000ebca6d: mov qword ptr [rbp - 0x170], rax
		_0xffffff8000ebca74: cmp qword ptr [rbp - 0x178], 0
		_0xffffff8000ebca7c: sete dl
		_0xffffff8000ebca7f: cmp qword ptr [rbp - 0x340], 0
		_0xffffff8000ebca87: sete r14b
		_0xffffff8000ebca8b: or r14b, dl
		_0xffffff8000ebca8e: test rax, rax
		_0xffffff8000ebca91: sete al
		_0xffffff8000ebca94: or al, r14b
		_0xffffff8000ebca97: mov byte ptr [rbp - 0x1d9], al
		_0xffffff8000ebca9d: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebcaa4: mov qword ptr [rbp - 0x330], rax
		_0xffffff8000ebcaab: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebcab2: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebcab9: mov rax, qword ptr [rbp - 0x330]
		_0xffffff8000ebcac0: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebcac7: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebcacb: mov qword ptr [rbp - 0x2a0], rdx
		_0xffffff8000ebcad2: lea r14, [rbp - 0x2a8]
		_0xffffff8000ebcad9: mov qword ptr [rdx], r14
		_0xffffff8000ebcadc: mov qword ptr [rax + 8], r14
		_0xffffff8000ebcae0: lea rax, [rbp - 0x298]
		_0xffffff8000ebcae7: mov qword ptr [rbp - 0x168], rax
		_0xffffff8000ebcaee: mov rax, qword ptr [rbp - 0x330]
		_0xffffff8000ebcaf5: mov qword ptr [rbp - 0x160], rax
		_0xffffff8000ebcafc: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebcb03: mov rax, qword ptr [rbp - 0x160]
		_0xffffff8000ebcb0a: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebcb0e: mov r14, qword ptr [rbp - 0x168]
		_0xffffff8000ebcb15: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebcb19: mov r14, qword ptr [rbp - 0x168]
		_0xffffff8000ebcb20: mov qword ptr [rdx], r14
		_0xffffff8000ebcb23: mov rdx, qword ptr [rbp - 0x168]
		_0xffffff8000ebcb2a: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebcb2e: lea rax, [rbp - 0x288]
		_0xffffff8000ebcb35: mov qword ptr [rbp - 0x338], rax
		_0xffffff8000ebcb3c: mov qword ptr [rbp - 0x288], rax
		_0xffffff8000ebcb43: mov qword ptr [rbp - 0x280], rax
		_0xffffff8000ebcb4a: lea rax, [rbp - 0x278]
		_0xffffff8000ebcb51: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebcb58: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ebcb5f: mov qword ptr [rbp - 0x270], rax
		_0xffffff8000ebcb66: lea rax, [rbp - 0x268]
		_0xffffff8000ebcb6d: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebcb74: mov qword ptr [rbp - 0x158], rax
		_0xffffff8000ebcb7b: lea rax, [rbp - 0x338]
		_0xffffff8000ebcb82: mov qword ptr [rbp - 0x150], rax
		_0xffffff8000ebcb89: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebcb90: mov qword ptr [rbp - 0x268], rdx
		_0xffffff8000ebcb97: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebcb9b: mov r15, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebcba2: mov qword ptr [r15 + 8], r14
		_0xffffff8000ebcba6: mov r15, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebcbad: mov qword ptr [r14], r15
		_0xffffff8000ebcbb0: mov r14, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebcbb7: mov qword ptr [rdx + 8], r14
		_0xffffff8000ebcbbb: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebcbc2: mov qword ptr [rbp - 0x258], rdx
		_0xffffff8000ebcbc9: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebcbcd: mov qword ptr [rbp - 0x250], r14
		_0xffffff8000ebcbd4: lea r15, [rbp - 0x258]
		_0xffffff8000ebcbdb: mov qword ptr [r14], r15
		_0xffffff8000ebcbde: mov qword ptr [rdx + 8], r15
		_0xffffff8000ebcbe2: lea rdx, [rbp - 0x248]
		_0xffffff8000ebcbe9: mov qword ptr [rbp - 0x1c0], rdx
		_0xffffff8000ebcbf0: mov qword ptr [rbp - 0x148], rdx
		_0xffffff8000ebcbf7: mov qword ptr [rbp - 0x140], rax
		_0xffffff8000ebcbfe: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebcc05: mov qword ptr [rbp - 0x248], rdx
		_0xffffff8000ebcc0c: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebcc10: mov r15, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebcc17: mov qword ptr [r15 + 8], r14
		_0xffffff8000ebcc1b: mov r15, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebcc22: mov qword ptr [r14], r15
		_0xffffff8000ebcc25: mov r14, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebcc2c: mov qword ptr [rdx + 8], r14
		_0xffffff8000ebcc30: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebcc37: mov qword ptr [rbp - 0x238], rdx
		_0xffffff8000ebcc3e: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebcc42: mov qword ptr [rbp - 0x230], r14
		_0xffffff8000ebcc49: lea r15, [rbp - 0x238]
		_0xffffff8000ebcc50: mov qword ptr [r14], r15
		_0xffffff8000ebcc53: mov qword ptr [rdx + 8], r15
		_0xffffff8000ebcc57: lea rdx, [rbp - 0x228]
		_0xffffff8000ebcc5e: mov qword ptr [rbp - 0x1b8], rdx
		_0xffffff8000ebcc65: mov qword ptr [rbp - 0x138], rdx
		_0xffffff8000ebcc6c: mov qword ptr [rbp - 0x190], rax
		_0xffffff8000ebcc73: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebcc7a: mov qword ptr [rbp - 0x228], rdx
		_0xffffff8000ebcc81: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebcc85: mov r15, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebcc8c: mov qword ptr [r15 + 8], r14
		_0xffffff8000ebcc90: mov r15, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebcc97: mov qword ptr [r14], r15
		_0xffffff8000ebcc9a: mov r14, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebcca1: mov qword ptr [rdx + 8], r14
		_0xffffff8000ebcca5: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebccac: mov qword ptr [rbp - 0x218], rdx
		_0xffffff8000ebccb3: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebccb7: mov qword ptr [rbp - 0x210], r14
		_0xffffff8000ebccbe: lea r15, [rbp - 0x218]
		_0xffffff8000ebccc5: mov qword ptr [r14], r15
		_0xffffff8000ebccc8: mov qword ptr [rdx + 8], r15
		_0xffffff8000ebcccc: lea rdx, [rbp - 0x208]
		_0xffffff8000ebccd3: mov qword ptr [rbp - 0x1b0], rdx
		_0xffffff8000ebccda: mov qword ptr [rbp - 0x1d0], rdx
		_0xffffff8000ebcce1: mov qword ptr [rbp - 0x1c8], rax
		_0xffffff8000ebcce8: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebccef: mov qword ptr [rbp - 0x208], rax
		_0xffffff8000ebccf6: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebccfa: mov r14, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebcd01: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebcd05: mov r14, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebcd0c: mov qword ptr [rdx], r14
		_0xffffff8000ebcd0f: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebcd16: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebcd1a: mov dword ptr [rbp - 0x1e0], 0xffff586c
		_0xffffff8000ebcd24: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebcd2a: lea edx, [rax - 0x1545f05f]
		_0xffffff8000ebcd30: lea r14d, [rax + 0x1212f64e]
		_0xffffff8000ebcd37: lea r15d, [rax + 0x22c7abca]
		_0xffffff8000ebcd3e: lea eax, [rax - 4]
		_0xffffff8000ebcd41: mov r12b, byte ptr [rbp - 0x1d9]
		_0xffffff8000ebcd48: jmp _0xffffff8000ebe358
		_0xffffff8000ebcd4d: mov qword ptr [rbp - 0x1f8], rdi
		_0xffffff8000ebcd54: mov qword ptr [rbp - 0x128], rdi
		_0xffffff8000ebcd5b: mov eax, dword ptr [rdi + 8]
		_0xffffff8000ebcd5e: mov dword ptr [rbp - 0x1e0], eax
		_0xffffff8000ebcd64: mov rax, qword ptr [rdi + 0x10]
		_0xffffff8000ebcd68: mov qword ptr [rbp - 0x340], rax
		_0xffffff8000ebcd6f: test rax, rax
		_0xffffff8000ebcd72: sete byte ptr [rbp - 0x1d9]
		_0xffffff8000ebcd79: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebcd80: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebcd87: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebcd8e: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebcd95: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebcd9c: mov qword ptr [rbp - 0x310], rax
		_0xffffff8000ebcda3: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebcdaa: mov qword ptr [rbp - 0x2a0], rax
		_0xffffff8000ebcdb1: lea rax, [rbp - 0x298]
		_0xffffff8000ebcdb8: mov qword ptr [rbp - 0x320], rax
		_0xffffff8000ebcdbf: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebcdc6: mov qword ptr [rbp - 0x290], rax
		_0xffffff8000ebcdcd: lea rax, [rbp - 0x288]
		_0xffffff8000ebcdd4: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebcddb: mov qword ptr [rbp - 0x330], rax
		_0xffffff8000ebcde2: mov rax, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebcde9: mov qword ptr [rax], rax
		_0xffffff8000ebcdec: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebcdf3: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebcdf7: lea rax, [rbp - 0x278]
		_0xffffff8000ebcdfe: mov qword ptr [rbp - 0x328], rax
		_0xffffff8000ebce05: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ebce0c: mov qword ptr [rbp - 0x270], rax
		_0xffffff8000ebce13: mov rax, qword ptr [rbp - 0x320]
		_0xffffff8000ebce1a: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ebce21: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebce25: mov qword ptr [rbp - 0x260], rdx
		_0xffffff8000ebce2c: lea r14, [rbp - 0x268]
		_0xffffff8000ebce33: mov qword ptr [rdx], r14
		_0xffffff8000ebce36: mov qword ptr [rax + 8], r14
		_0xffffff8000ebce3a: lea rax, [rbp - 0x258]
		_0xffffff8000ebce41: mov qword ptr [rbp - 0x1c0], rax
		_0xffffff8000ebce48: mov rax, qword ptr [rbp - 0x320]
		_0xffffff8000ebce4f: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ebce56: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebce5a: mov r14, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebce61: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebce65: mov r14, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebce6c: mov qword ptr [rdx], r14
		_0xffffff8000ebce6f: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebce76: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebce7a: mov rax, qword ptr [rbp - 0x320]
		_0xffffff8000ebce81: mov qword ptr [rbp - 0x248], rax
		_0xffffff8000ebce88: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebce8c: mov qword ptr [rbp - 0x240], rdx
		_0xffffff8000ebce93: lea r14, [rbp - 0x248]
		_0xffffff8000ebce9a: mov qword ptr [rdx], r14
		_0xffffff8000ebce9d: mov qword ptr [rax + 8], r14
		_0xffffff8000ebcea1: lea rax, [rbp - 0x238]
		_0xffffff8000ebcea8: mov qword ptr [rbp - 0x1b8], rax
		_0xffffff8000ebceaf: mov rax, qword ptr [rbp - 0x330]
		_0xffffff8000ebceb6: mov qword ptr [rbp - 0x238], rax
		_0xffffff8000ebcebd: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebcec1: mov r14, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebcec8: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebcecc: mov r14, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebced3: mov qword ptr [rdx], r14
		_0xffffff8000ebced6: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebcedd: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebcee1: mov rax, qword ptr [rbp - 0x320]
		_0xffffff8000ebcee8: mov qword ptr [rbp - 0x228], rax
		_0xffffff8000ebceef: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebcef3: mov qword ptr [rbp - 0x220], rdx
		_0xffffff8000ebcefa: lea r14, [rbp - 0x228]
		_0xffffff8000ebcf01: mov qword ptr [rdx], r14
		_0xffffff8000ebcf04: mov qword ptr [rax + 8], r14
		_0xffffff8000ebcf08: lea rax, [rbp - 0x218]
		_0xffffff8000ebcf0f: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ebcf16: mov rax, qword ptr [rbp - 0x328]
		_0xffffff8000ebcf1d: mov qword ptr [rbp - 0x218], rax
		_0xffffff8000ebcf24: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebcf28: mov r14, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebcf2f: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebcf33: mov r14, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebcf3a: mov qword ptr [rdx], r14
		_0xffffff8000ebcf3d: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebcf44: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebcf48: mov rax, qword ptr [rbp - 0x328]
		_0xffffff8000ebcf4f: mov qword ptr [rbp - 0x208], rax
		_0xffffff8000ebcf56: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebcf5a: mov qword ptr [rbp - 0x200], rdx
		_0xffffff8000ebcf61: lea r14, [rbp - 0x208]
		_0xffffff8000ebcf68: mov qword ptr [rdx], r14
		_0xffffff8000ebcf6b: mov qword ptr [rax + 8], r14
		_0xffffff8000ebcf6f: mov dword ptr [rbp - 0x1ec], 0xffff586c
		_0xffffff8000ebcf79: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebcf7f: lea edx, [rax + 0x21ba460]
		_0xffffff8000ebcf85: lea r14d, [rax - 0x84af352]
		_0xffffff8000ebcf8c: lea r15d, [rax - 0x504483e4]
		_0xffffff8000ebcf93: lea eax, [rax - 0x30389c12]
		_0xffffff8000ebcf99: jmp _0xffffff8000ebc609
		_0xffffff8000ebcf9e: mov rax, qword ptr [rbp - 0x1a0]
		_0xffffff8000ebcfa5: mov rdx, qword ptr [rbp - 0x198]
		_0xffffff8000ebcfac: mov dword ptr [rbp - 0x12c], 0
		_0xffffff8000ebcfb6: inc rdx
		_0xffffff8000ebcfb9: mov qword ptr [rbp - 0xe0], rdx
		_0xffffff8000ebcfc0: mov r14b, byte ptr [rbp - 0x1a2]
		_0xffffff8000ebcfc7: mov byte ptr [rbp - 0xd1], r14b
		_0xffffff8000ebcfce: mov r14d, dword ptr [rbp - 0x35c]
		_0xffffff8000ebcfd5: lea r15d, [r14 + 0x2883e208]
		_0xffffff8000ebcfdc: lea r12d, [r14 + 0x171cce4e]
		_0xffffff8000ebcfe3: cmp rdx, rax
		_0xffffff8000ebcfe6: cmove r12d, r15d
		_0xffffff8000ebcfea: lea r15d, [r14 + 2]
		_0xffffff8000ebcfee: lea r14d, [r14 + 0x51048958]
		_0xffffff8000ebcff5: cmp rdx, rax
		_0xffffff8000ebcff8: mov rax, rsi
		_0xffffff8000ebcffb: cmove rax, rcx
		_0xffffff8000ebcfff: mov eax, dword ptr [rax]
		_0xffffff8000ebd001: cmove r15d, r14d
		_0xffffff8000ebd005: mov rdx, qword ptr [rbp - 0x358]
		_0xffffff8000ebd00c: mov r14, qword ptr [rbp - 0x350]
		_0xffffff8000ebd013: mov dword ptr [r14], r15d
		_0xffffff8000ebd016: mov dword ptr [rdx], r12d
		_0xffffff8000ebd019: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebd01f: jmp _0xffffff8000ebbd8a
		_0xffffff8000ebd024: mov r14, qword ptr [rbp - 0x170]
		_0xffffff8000ebd02b: movzx eax, byte ptr [r14 + 1]
		_0xffffff8000ebd030: cmp eax, 0x68
		_0xffffff8000ebd033: sbb edx, edx
		_0xffffff8000ebd035: and edx, 0x100
		_0xffffff8000ebd03b: add edx, eax
		_0xffffff8000ebd03d: add edx, -0x68
		_0xffffff8000ebd040: mov r15, qword ptr [rbp - 0xf0]
		_0xffffff8000ebd047: mov rax, qword ptr [rbp - 0xb0]
		_0xffffff8000ebd04e: add rax, r15
		_0xffffff8000ebd051: movzx r12d, al
		_0xffffff8000ebd055: cmp al, 0x3a
		_0xffffff8000ebd057: sbb eax, eax
		_0xffffff8000ebd059: and eax, 0x100
		_0xffffff8000ebd05e: add eax, r12d
		_0xffffff8000ebd061: add eax, -0x3a
		_0xffffff8000ebd064: imul eax, edx
		_0xffffff8000ebd067: mov edx, dword ptr [rbp - 0x1ec]
		_0xffffff8000ebd06d: mov r12d, dword ptr [rbp - 0x1e0]
		_0xffffff8000ebd074: lea r12d, [r12 + rdx - 0x7dbff7bd]
		_0xffffff8000ebd07c: xor edx, edx
		_0xffffff8000ebd07e: div r12d
		_0xffffff8000ebd081: mov eax, edx
		_0xffffff8000ebd083: and eax, 0x6fffffec
		_0xffffff8000ebd088: xor edx, 0x6fffffec
		_0xffffff8000ebd08e: lea eax, [rdx + rax*2 - 0x25101024]
		_0xffffff8000ebd095: cmp eax, 0x4aefefc8
		_0xffffff8000ebd09a: sbb rdx, rdx
		_0xffffff8000ebd09d: and edx, 1
		_0xffffff8000ebd0a0: shl rdx, 0x20
		_0xffffff8000ebd0a4: add rdx, rax
		_0xffffff8000ebd0a7: movabs rax, 0x2a10a6d3cd3a69
		_0xffffff8000ebd0b1: add rax, rdx
		_0xffffff8000ebd0b4: mov rdx, rax
		_0xffffff8000ebd0b7: shl rdx, 0xa
		_0xffffff8000ebd0bb: add edx, 0x2f830ab3
		_0xffffff8000ebd0c1: shl rax, 0xb
		_0xffffff8000ebd0c5: add eax, 0x16ae7800
		_0xffffff8000ebd0ca: and eax, 0x48579800
		_0xffffff8000ebd0cf: sub edx, eax
		_0xffffff8000ebd0d1: mov eax, edx
		_0xffffff8000ebd0d3: xor eax, 0x7dd0707e
		_0xffffff8000ebd0d8: xor edx, 0x2b8e81
		_0xffffff8000ebd0de: and edx, 0x59fbbecd
		_0xffffff8000ebd0e4: lea eax, [rax + rdx*2 - 0xca0000]
		_0xffffff8000ebd0eb: cmp eax, 0x5931becd
		_0xffffff8000ebd0f0: sbb rdx, rdx
		_0xffffff8000ebd0f3: and edx, 1
		_0xffffff8000ebd0f6: shl rdx, 0x20
		_0xffffff8000ebd0fa: add rdx, rax
		_0xffffff8000ebd0fd: mov rax, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebd104: lea rax, [rdx + rax - 0x5931becd]
		_0xffffff8000ebd10c: movabs rdx, 0x15f7f5bfc
		_0xffffff8000ebd116: and rdx, qword ptr [rbp - 0xf8]
		_0xffffff8000ebd11d: movabs r12, 0x1ff7f7dafbfadfe
		_0xffffff8000ebd127: xor r12, qword ptr [rbp - 0x198]
		_0xffffff8000ebd12e: add r12, rdx
		_0xffffff8000ebd131: shl r12, 7
		_0xffffff8000ebd135: add r12, r14
		_0xffffff8000ebd138: mov edx, 0xd5f7f5fe
		_0xffffff8000ebd13d: and rdx, qword ptr [rbp - 0xb8]
		_0xffffff8000ebd144: movabs r14, 0x6faeb456afbfaff
		_0xffffff8000ebd14e: xor r14, qword ptr [rbp - 0xc0]
		_0xffffff8000ebd155: add r14, rdx
		_0xffffff8000ebd158: shl r14, 5
		_0xffffff8000ebd15c: add r14, r12
		_0xffffff8000ebd15f: movabs rdx, 0x1ffe13f7fedffa7c
		_0xffffff8000ebd169: xor rdx, r15
		_0xffffff8000ebd16c: mov r12d, r15d
		_0xffffff8000ebd16f: and r12d, 0xfedffa7c
		_0xffffff8000ebd176: lea rdx, [rdx + r12*2]
		_0xffffff8000ebd17a: lea rdx, [r14 + rdx*8]
		_0xffffff8000ebd17e: movabs r14, 0x20f238bac9a9cf50
		_0xffffff8000ebd188: mov qword ptr [r14 + rdx], rax
		_0xffffff8000ebd18c: mov rax, qword ptr [rbp - 0x178]
		_0xffffff8000ebd193: add dword ptr [rax], 0x400
		_0xffffff8000ebd199: inc r15
		_0xffffff8000ebd19c: mov qword ptr [rbp - 0xf0], r15
		_0xffffff8000ebd1a3: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd1a9: lea edx, [rax - 0xb]
		_0xffffff8000ebd1ac: lea r14d, [rax + 0x191bcdb4]
		_0xffffff8000ebd1b3: lea r12d, [rax + 0x191bcdab]
		_0xffffff8000ebd1ba: cmp r15, 4
		_0xffffff8000ebd1be: mov r15, rsi
		_0xffffff8000ebd1c1: cmove r15, rcx
		_0xffffff8000ebd1c5: mov r15d, dword ptr [r15]
		_0xffffff8000ebd1c8: cmove r12d, r14d
		_0xffffff8000ebd1cc: mov r14, qword ptr [rbp - 0x358]
		_0xffffff8000ebd1d3: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebd1da: mov dword ptr [r13], r12d
		_0xffffff8000ebd1de: cmovne edx, eax
		_0xffffff8000ebd1e1: mov dword ptr [r14], edx
		_0xffffff8000ebd1e4: mov dword ptr [rbp - 0x35c], r15d
		_0xffffff8000ebd1eb: jne _0xffffff8000ebbd8a
		_0xffffff8000ebd1f1: jmp _0xffffff8000ebbabc
		_0xffffff8000ebd1f6: mov dword ptr [rbp - 0x1ec], 0xffff586f
		_0xffffff8000ebd200: mov al, byte ptr [rbp - 0x1a3]
		_0xffffff8000ebd206: mov byte ptr [rbp - 0x29], al
		_0xffffff8000ebd209: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd20f: lea edx, [rax + 0x30389c1c]
		_0xffffff8000ebd215: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebd21c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd223: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebd22a: mov dword ptr [r12], edx
		_0xffffff8000ebd22e: add eax, 0x171cce54
		_0xffffff8000ebd233: jmp _0xffffff8000ebb7ac
		_0xffffff8000ebd238: mov rax, qword ptr [rbp - 0x198]
		_0xffffff8000ebd23f: movabs rdx, 0x3f6f7bdaf5b5fda
		_0xffffff8000ebd249: xor rdx, rax
		_0xffffff8000ebd24c: mov r14d, eax
		_0xffffff8000ebd24f: and r14d, 0xaf5b5fda
		_0xffffff8000ebd256: lea rdx, [rdx + r14*2]
		_0xffffff8000ebd25a: movabs r14, 0x9c09084250a4a026
		_0xffffff8000ebd264: add r14, rdx
		_0xffffff8000ebd267: shl r14, 5
		_0xffffff8000ebd26b: mov rdx, qword ptr [rbp - 0x170]
		_0xffffff8000ebd272: mov r15, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebd279: mov qword ptr [rdx + r14 + 0x410], r15
		_0xffffff8000ebd281: mov rdx, qword ptr [rbp - 0x178]
		_0xffffff8000ebd288: add dword ptr [rdx], 0x100
		_0xffffff8000ebd28e: lea rdx, [r15 + 0x100]
		_0xffffff8000ebd295: mov r12, qword ptr [rbp - 0x170]
		_0xffffff8000ebd29c: mov qword ptr [r12 + r14 + 0x418], rdx
		_0xffffff8000ebd2a4: mov rdx, qword ptr [rbp - 0x178]
		_0xffffff8000ebd2ab: add dword ptr [rdx], 0x100
		_0xffffff8000ebd2b1: lea rdx, [r15 + 0x200]
		_0xffffff8000ebd2b8: mov r12, qword ptr [rbp - 0x170]
		_0xffffff8000ebd2bf: mov qword ptr [r12 + r14 + 0x420], rdx
		_0xffffff8000ebd2c7: mov rdx, qword ptr [rbp - 0x178]
		_0xffffff8000ebd2ce: add dword ptr [rdx], 0x100
		_0xffffff8000ebd2d4: lea rdx, [r15 + 0x300]
		_0xffffff8000ebd2db: mov r12, qword ptr [rbp - 0x170]
		_0xffffff8000ebd2e2: mov qword ptr [r12 + r14 + 0x428], rdx
		_0xffffff8000ebd2ea: mov rdx, qword ptr [rbp - 0x178]
		_0xffffff8000ebd2f1: add dword ptr [rdx], 0x100
		_0xffffff8000ebd2f7: inc rax
		_0xffffff8000ebd2fa: mov qword ptr [rbp - 0x198], rax
		_0xffffff8000ebd301: add r15, 0x400
		_0xffffff8000ebd308: mov qword ptr [rbp - 0x1f8], r15
		_0xffffff8000ebd30f: mov dword ptr [rbp - 0x1e0], 0
		_0xffffff8000ebd319: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd31f: lea r14d, [rdx + 0x291f716a]
		_0xffffff8000ebd326: lea r15d, [rdx + 0x5835bed]
		_0xffffff8000ebd32d: lea r12d, [rdx - 0x191bcdaf]
		_0xffffff8000ebd334: cmp rax, 4
		_0xffffff8000ebd338: mov rax, rsi
		_0xffffff8000ebd33b: cmove rax, rcx
		_0xffffff8000ebd33f: mov eax, dword ptr [rax]
		_0xffffff8000ebd341: cmove r12d, r15d
		_0xffffff8000ebd345: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd34c: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebd353: mov dword ptr [r13], r12d
		_0xffffff8000ebd357: cmovne r14d, edx
		_0xffffff8000ebd35b: mov dword ptr [r15], r14d
		_0xffffff8000ebd35e: mov dword ptr [rbp - 0x35c], eax
		_0xffffff8000ebd364: je _0xffffff8000ebbd8a
		_0xffffff8000ebd36a: jmp _0xffffff8000ebbabc
		_0xffffff8000ebd36f: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd375: lea edx, [rax - 0x171cce6f]
		_0xffffff8000ebd37b: lea eax, [rax - 5]
		_0xffffff8000ebd37e: cmp byte ptr [rbp - 0x29], 4
		_0xffffff8000ebd382: mov r14, rsi
		_0xffffff8000ebd385: cmovl r14, rcx
		_0xffffff8000ebd389: mov r14d, dword ptr [r14]
		_0xffffff8000ebd38c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd393: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebd39a: mov dword ptr [r12], eax
		_0xffffff8000ebd39e: mov dword ptr [r15], edx
		_0xffffff8000ebd3a1: mov dword ptr [rbp - 0x35c], r14d
		_0xffffff8000ebd3a8: jge _0xffffff8000ebbd8a
		_0xffffff8000ebd3ae: jmp _0xffffff8000ebbabc
		_0xffffff8000ebd3b3: mov rax, qword ptr [rbp - 0xe0]
		_0xffffff8000ebd3ba: mov qword ptr [rbp - 0x198], rax
		_0xffffff8000ebd3c1: mov al, byte ptr [rbp - 0xd1]
		_0xffffff8000ebd3c7: mov byte ptr [rbp - 0x1a1], al
		_0xffffff8000ebd3cd: mov rax, qword ptr [rbp - 0x2c0]
		_0xffffff8000ebd3d4: mov qword ptr [rax], rax
		_0xffffff8000ebd3d7: mov qword ptr [rax + 8], rax
		_0xffffff8000ebd3db: mov qword ptr [rbp - 0x328], rax
		_0xffffff8000ebd3e2: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd3e8: lea edx, [rax - 8]
		_0xffffff8000ebd3eb: lea r14d, [rax + 0x76e5dda]
		_0xffffff8000ebd3f2: lea r15d, [rax + 0x191bcdb7]
		_0xffffff8000ebd3f9: lea eax, [rax + 3]
		_0xffffff8000ebd3fc: mov r12, qword ptr [rbp - 0x338]
		_0xffffff8000ebd403: mov r13, qword ptr [r12]
		_0xffffff8000ebd407: cmp r12, qword ptr [r13 + 8]
		_0xffffff8000ebd40b: jmp _0xffffff8000ebe44a
		_0xffffff8000ebd410: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd416: lea edx, [rax + 0x2e44433]
		_0xffffff8000ebd41c: lea r14d, [rax + 0xbba3fdf]
		_0xffffff8000ebd423: lea r15d, [rax + 0x30389c1a]
		_0xffffff8000ebd42a: lea eax, [rax + 0x30389c16]
		_0xffffff8000ebd430: cmp dword ptr [rbp - 0x34], 7
		_0xffffff8000ebd434: mov r12, rsi
		_0xffffff8000ebd437: cmove r12, rcx
		_0xffffff8000ebd43b: mov r12d, dword ptr [r12]
		_0xffffff8000ebd43f: cmove eax, r15d
		_0xffffff8000ebd443: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd44a: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebd451: mov dword ptr [r13], eax
		_0xffffff8000ebd455: cmovne edx, r14d
		_0xffffff8000ebd459: mov dword ptr [r15], edx
		_0xffffff8000ebd45c: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebd463: jmp _0xffffff8000ebbd8a
		_0xffffff8000ebd468: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd46e: lea edx, [rax - 0x191bcdcb]
		_0xffffff8000ebd474: lea r14d, [rax - 0x30389c23]
		_0xffffff8000ebd47b: lea r15d, [rax - 0x191bcdbb]
		_0xffffff8000ebd482: lea eax, [rax - 0x30389c18]
		_0xffffff8000ebd488: cmp dword ptr [rbp - 0x34], 8
		_0xffffff8000ebd48c: mov r12, rsi
		_0xffffff8000ebd48f: cmovl r12, rcx
		_0xffffff8000ebd493: mov r12d, dword ptr [r12]
		_0xffffff8000ebd497: cmovl eax, r15d
		_0xffffff8000ebd49b: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd4a2: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebd4a9: mov dword ptr [r13], eax
		_0xffffff8000ebd4ad: cmovge edx, r14d
		_0xffffff8000ebd4b1: mov dword ptr [r15], edx
		_0xffffff8000ebd4b4: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebd4bb: jl _0xffffff8000ebc574
		_0xffffff8000ebd4c1: jmp _0xffffff8000ebbabc
		_0xffffff8000ebd4c6: mov dword ptr [rbp - 0x1e0], 0xffff586c
		_0xffffff8000ebd4d0: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd4d6: lea edx, [rax + 0x3a33e243]
		_0xffffff8000ebd4dc: lea r14d, [rax - 5]
		_0xffffff8000ebd4e0: lea r15d, [rax + 0x5160a03d]
		_0xffffff8000ebd4e7: lea eax, [rax + 8]
		_0xffffff8000ebd4ea: mov r12b, byte ptr [rbp - 0x1d9]
		_0xffffff8000ebd4f1: test r12b, r12b
		_0xffffff8000ebd4f4: mov r12, rsi
		_0xffffff8000ebd4f7: cmovne r12, rcx
		_0xffffff8000ebd4fb: mov r12d, dword ptr [r12]
		_0xffffff8000ebd4ff: cmovne eax, r15d
		_0xffffff8000ebd503: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd50a: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebd511: mov dword ptr [r13], eax
		_0xffffff8000ebd515: cmove edx, r14d
		_0xffffff8000ebd519: mov dword ptr [r15], edx
		_0xffffff8000ebd51c: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebd523: jne _0xffffff8000ebc574
		_0xffffff8000ebd529: jmp _0xffffff8000ebbabc
		_0xffffff8000ebd52e: mov rax, qword ptr [rbp - 0x1a0]
		_0xffffff8000ebd535: mov rdx, qword ptr [rbp - 0x340]
		_0xffffff8000ebd53c: mov r14b, byte ptr [rdx + rax*4]
		_0xffffff8000ebd540: mov r15b, byte ptr [rdx + rax*4 + 3]
		_0xffffff8000ebd545: mov byte ptr [rdx + rax*4], r15b
		_0xffffff8000ebd549: mov r15b, r14b
		_0xffffff8000ebd54c: add r15b, r15b
		_0xffffff8000ebd54f: xor r14b, 0x6c
		_0xffffff8000ebd553: and r15b, 0xd8
		_0xffffff8000ebd557: add r15b, r14b
		_0xffffff8000ebd55a: add r15b, 0x94
		_0xffffff8000ebd55e: mov byte ptr [rdx + rax*4 + 3], r15b
		_0xffffff8000ebd563: mov r14b, byte ptr [rdx + rax*4 + 1]
		_0xffffff8000ebd568: mov r15b, byte ptr [rdx + rax*4 + 2]
		_0xffffff8000ebd56d: mov byte ptr [rdx + rax*4 + 1], r15b
		_0xffffff8000ebd572: mov r15b, r14b
		_0xffffff8000ebd575: add r15b, r15b
		_0xffffff8000ebd578: xor r14b, 0x6c
		_0xffffff8000ebd57c: and r15b, 0xd8
		_0xffffff8000ebd580: add r15b, r14b
		_0xffffff8000ebd583: add r15b, 0x94
		_0xffffff8000ebd587: mov byte ptr [rdx + rax*4 + 2], r15b
		_0xffffff8000ebd58c: inc rax
		_0xffffff8000ebd58f: mov rdx, qword ptr [rbp - 0x198]
		_0xffffff8000ebd596: mov qword ptr [rbp - 0x1a0], rax
		_0xffffff8000ebd59d: mov r14d, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd5a4: lea r15d, [r14 + 0x29f95eb2]
		_0xffffff8000ebd5ab: cmp rax, rdx
		_0xffffff8000ebd5ae: cmovne r15d, r14d
		_0xffffff8000ebd5b2: lea r12d, [r14 + 0xb]
		_0xffffff8000ebd5b6: lea r14d, [r14 + 0x15c31855]
		_0xffffff8000ebd5bd: cmp rax, rdx
		_0xffffff8000ebd5c0: mov rax, rsi
		_0xffffff8000ebd5c3: cmove rax, rcx
		_0xffffff8000ebd5c7: mov eax, dword ptr [rax]
		_0xffffff8000ebd5c9: cmove r12d, r14d
		_0xffffff8000ebd5cd: mov rdx, qword ptr [rbp - 0x358]
		_0xffffff8000ebd5d4: mov r14, qword ptr [rbp - 0x350]
		_0xffffff8000ebd5db: mov dword ptr [r14], r12d
		_0xffffff8000ebd5de: mov dword ptr [rdx], r15d
		_0xffffff8000ebd5e1: jmp _0xffffff8000ebbab6
		_0xffffff8000ebd5e6: mov rax, qword ptr [rbp - 0x340]
		_0xffffff8000ebd5ed: mov dl, byte ptr [rax + 4]
		_0xffffff8000ebd5f0: mov byte ptr [rbp - 0x1a3], dl
		_0xffffff8000ebd5f6: mov al, byte ptr [rax + 5]
		_0xffffff8000ebd5f9: mov byte ptr [rbp - 0x1a2], al
		_0xffffff8000ebd5ff: mov rax, qword ptr [rbp - 0x340]
		_0xffffff8000ebd606: mov dl, byte ptr [rax + 6]
		_0xffffff8000ebd609: mov byte ptr [rbp - 0x2d], dl
		_0xffffff8000ebd60c: mov byte ptr [rbp - 0x1a1], dl
		_0xffffff8000ebd612: mov al, byte ptr [rax + 7]
		_0xffffff8000ebd615: mov byte ptr [rbp - 0x2c], al
		_0xffffff8000ebd618: mov dword ptr [rbp - 0x1ec], 0xffff586f
		_0xffffff8000ebd622: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd628: lea edx, [rax - 3]
		_0xffffff8000ebd62b: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebd632: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd639: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebd640: mov dword ptr [r12], edx
		_0xffffff8000ebd644: add eax, 0xe6e43245
		_0xffffff8000ebd649: jmp _0xffffff8000ebbc81
		_0xffffff8000ebd64e: mov rax, qword ptr [rbp - 0x40]
		_0xffffff8000ebd652: mov qword ptr [rbp - 0x110], rax
		_0xffffff8000ebd659: mov rdx, qword ptr [rbp - 0x160]
		_0xffffff8000ebd660: mov qword ptr [rax], rdx
		_0xffffff8000ebd663: mov rax, qword ptr [rbp - 0x118]
		_0xffffff8000ebd66a: mov rdx, qword ptr [rbp - 0x160]
		_0xffffff8000ebd671: mov qword ptr [rax], rdx
		_0xffffff8000ebd674: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd67b: mov qword ptr [rbp - 0x288], rax
		_0xffffff8000ebd682: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebd686: mov qword ptr [rbp - 0x280], rdx
		_0xffffff8000ebd68d: lea r14, [rbp - 0x288]
		_0xffffff8000ebd694: mov qword ptr [rdx], r14
		_0xffffff8000ebd697: mov qword ptr [rax + 8], r14
		_0xffffff8000ebd69b: lea rax, [rbp - 0x278]
		_0xffffff8000ebd6a2: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebd6a9: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd6b0: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ebd6b7: lea rdx, [rax + 8]
		_0xffffff8000ebd6bb: mov qword ptr [rbp - 0x158], rdx
		_0xffffff8000ebd6c2: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebd6c6: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebd6cd: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebd6d1: mov qword ptr [rbp - 0x150], rax
		_0xffffff8000ebd6d8: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebd6df: mov qword ptr [rax], rdx
		_0xffffff8000ebd6e2: mov rax, qword ptr [rbp - 0x158]
		_0xffffff8000ebd6e9: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebd6f0: mov qword ptr [rax], rdx
		_0xffffff8000ebd6f3: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd6fa: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ebd701: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebd705: mov qword ptr [rbp - 0x260], rdx
		_0xffffff8000ebd70c: lea r14, [rbp - 0x268]
		_0xffffff8000ebd713: mov qword ptr [rdx], r14
		_0xffffff8000ebd716: mov qword ptr [rax + 8], r14
		_0xffffff8000ebd71a: lea rax, [rbp - 0x258]
		_0xffffff8000ebd721: mov qword ptr [rbp - 0x1c0], rax
		_0xffffff8000ebd728: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd72f: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ebd736: lea rdx, [rax + 8]
		_0xffffff8000ebd73a: mov qword ptr [rbp - 0x148], rdx
		_0xffffff8000ebd741: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebd745: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebd74c: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebd750: mov qword ptr [rbp - 0x140], rax
		_0xffffff8000ebd757: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebd75e: mov qword ptr [rax], rdx
		_0xffffff8000ebd761: mov rax, qword ptr [rbp - 0x148]
		_0xffffff8000ebd768: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebd76f: mov qword ptr [rax], rdx
		_0xffffff8000ebd772: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd779: mov qword ptr [rbp - 0x248], rax
		_0xffffff8000ebd780: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebd784: mov qword ptr [rbp - 0x240], rdx
		_0xffffff8000ebd78b: lea r14, [rbp - 0x248]
		_0xffffff8000ebd792: mov qword ptr [rdx], r14
		_0xffffff8000ebd795: mov qword ptr [rax + 8], r14
		_0xffffff8000ebd799: lea rax, [rbp - 0x238]
		_0xffffff8000ebd7a0: mov qword ptr [rbp - 0x1b8], rax
		// Unused
		_0xffffff8000ebd7a7: lea rax, [rip + 0x9ba5]
		_0xffffff8000ebd7ae: mov rax, qword ptr [rax]
		_0xffffff8000ebd7b1: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd7b8: mov qword ptr [rbp - 0x238], rax
		_0xffffff8000ebd7bf: lea rdx, [rax + 8]
		_0xffffff8000ebd7c3: mov qword ptr [rbp - 0x138], rdx
		_0xffffff8000ebd7ca: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebd7ce: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebd7d5: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebd7d9: mov qword ptr [rbp - 0x190], rax
		_0xffffff8000ebd7e0: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebd7e7: mov qword ptr [rax], rdx
		_0xffffff8000ebd7ea: mov rax, qword ptr [rbp - 0x138]
		_0xffffff8000ebd7f1: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebd7f8: mov qword ptr [rax], rdx
		_0xffffff8000ebd7fb: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd802: mov qword ptr [rbp - 0x228], rax
		_0xffffff8000ebd809: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebd80d: mov qword ptr [rbp - 0x220], rdx
		_0xffffff8000ebd814: lea r14, [rbp - 0x228]
		_0xffffff8000ebd81b: mov qword ptr [rdx], r14
		_0xffffff8000ebd81e: mov qword ptr [rax + 8], r14
		_0xffffff8000ebd822: lea rax, [rbp - 0x218]
		_0xffffff8000ebd829: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ebd830: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd837: mov qword ptr [rbp - 0x218], rax
		_0xffffff8000ebd83e: lea rdx, [rax + 8]
		_0xffffff8000ebd842: mov qword ptr [rbp - 0x1d0], rdx
		_0xffffff8000ebd849: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebd84d: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebd854: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebd858: mov qword ptr [rbp - 0x1c8], rax
		_0xffffff8000ebd85f: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebd866: mov qword ptr [rax], rdx
		_0xffffff8000ebd869: mov rax, qword ptr [rbp - 0x1d0]
		_0xffffff8000ebd870: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebd877: mov qword ptr [rax], rdx
		_0xffffff8000ebd87a: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebd881: mov qword ptr [rbp - 0x208], rax
		_0xffffff8000ebd888: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebd88c: mov qword ptr [rbp - 0x200], rdx
		_0xffffff8000ebd893: lea r14, [rbp - 0x208]
		_0xffffff8000ebd89a: mov qword ptr [rdx], r14
		_0xffffff8000ebd89d: mov qword ptr [rax + 8], r14
		_0xffffff8000ebd8a1: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebd8a7: lea edx, [rax - 0x191bcda8]
		_0xffffff8000ebd8ad: lea r14d, [rax + 0xf]
		_0xffffff8000ebd8b1: lea r15d, [rax - 0x191bcdc0]
		_0xffffff8000ebd8b8: lea eax, [rax - 0x30389c15]
		_0xffffff8000ebd8be: cmp dword ptr [rbp - 0x34], 7
		_0xffffff8000ebd8c2: mov r12, rsi
		_0xffffff8000ebd8c5: cmove r12, rcx
		_0xffffff8000ebd8c9: mov r12d, dword ptr [r12]
		_0xffffff8000ebd8cd: cmove eax, r15d
		_0xffffff8000ebd8d1: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebd8d8: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebd8df: mov dword ptr [r13], eax
		_0xffffff8000ebd8e3: cmove r14d, edx
		_0xffffff8000ebd8e7: mov dword ptr [r15], r14d
		_0xffffff8000ebd8ea: jmp _0xffffff8000ebbbbf
		_0xffffff8000ebd8ef: mov eax, dword ptr [rbp - 0x12c]
		_0xffffff8000ebd8f5: lea edx, [rax + rax]
		_0xffffff8000ebd8f8: mov r14d, eax
		_0xffffff8000ebd8fb: xor r14d, 0x37ffe43f
		_0xffffff8000ebd902: mov r15d, edx
		_0xffffff8000ebd905: and r15d, 0x6fffc87e
		_0xffffff8000ebd90c: add r15d, r14d
		_0xffffff8000ebd90f: lea r14d, [r15 + r15 - 0x6fffc87e]
		_0xffffff8000ebd917: mov r15d, r14d
		_0xffffff8000ebd91a: and r15d, 0x4fbffbfa
		_0xffffff8000ebd921: xor r14d, 0x4fbffbfb
		_0xffffff8000ebd928: lea r14d, [r14 + r15*2 - 0x4fbffbfb]
		_0xffffff8000ebd930: movsxd r14, r14d
		_0xffffff8000ebd933: mov r15, r14
		_0xffffff8000ebd936: and r15, r9
		_0xffffff8000ebd939: xor r14, r9
		_0xffffff8000ebd93c: lea r14, [r14 + r15*2]
		_0xffffff8000ebd940: add r14, qword ptr [rbp - 0x340]
		_0xffffff8000ebd947: mov r15d, eax
		_0xffffff8000ebd94a: xor r15d, 0x7af5dfdd
		_0xffffff8000ebd951: mov r12d, edx
		_0xffffff8000ebd954: and r12d, 0xf5ebbfba
		_0xffffff8000ebd95b: lea r15d, [r15 + r12 - 0x7af5dfdd]
		_0xffffff8000ebd963: movsxd r15, r15d
		_0xffffff8000ebd966: mov r12, r15
		_0xffffff8000ebd969: and r12, r10
		_0xffffff8000ebd96c: xor r15, r10
		_0xffffff8000ebd96f: lea r15, [r15 + r12*2]
		_0xffffff8000ebd973: lea r15, [rbp + r15 - 0x130]
		_0xffffff8000ebd97b: movabs r12, 0xc04011203ae40811
		_0xffffff8000ebd985: mov r15b, byte ptr [r12 + r15]
		_0xffffff8000ebd989: and r15b, 0xf
		_0xffffff8000ebd98d: movabs r12, 0xd000a40418680042
		_0xffffff8000ebd997: mov byte ptr [r12 + r14], r15b
		_0xffffff8000ebd99b: mov r14d, eax
		_0xffffff8000ebd99e: xor r14d, 0x4dbbbdff
		_0xffffff8000ebd9a5: mov r15d, edx
		_0xffffff8000ebd9a8: and r15d, 0x1b777bfe
		_0xffffff8000ebd9af: add r15d, r14d
		_0xffffff8000ebd9b2: lea r14d, [r15 + r15 + 0x64888402]
		_0xffffff8000ebd9ba: mov r15d, r14d
		_0xffffff8000ebd9bd: and r15d, 0x7efff97e
		_0xffffff8000ebd9c4: xor r14d, 0x7efff97f
		_0xffffff8000ebd9cb: lea r14d, [r14 + r15*2 - 0x7efff97e]
		_0xffffff8000ebd9d3: movsxd r14, r14d
		_0xffffff8000ebd9d6: mov r15, r14
		_0xffffff8000ebd9d9: and r15, r11
		_0xffffff8000ebd9dc: xor r14, r11
		_0xffffff8000ebd9df: lea r14, [r14 + r15*2]
		_0xffffff8000ebd9e3: add r14, qword ptr [rbp - 0x340]
		_0xffffff8000ebd9ea: mov r15d, eax
		_0xffffff8000ebd9ed: xor r15d, 0x3ffcddbf
		_0xffffff8000ebd9f4: and edx, 0x7ff9bb7e
		_0xffffff8000ebd9fa: lea edx, [r15 + rdx - 0x3ffcddbf]
		_0xffffff8000ebda02: movsxd rdx, edx
		_0xffffff8000ebda05: mov r15, rdx
		_0xffffff8000ebda08: and r15, rbx
		_0xffffff8000ebda0b: xor rdx, rbx
		_0xffffff8000ebda0e: lea rdx, [rdx + r15*2]
		_0xffffff8000ebda12: lea rdx, [rbp + rdx - 0x130]
		_0xffffff8000ebda1a: movabs r15, 0xa000489060880081
		_0xffffff8000ebda24: mov dl, byte ptr [r15 + rdx]
		_0xffffff8000ebda28: mov r15b, dl
		_0xffffff8000ebda2b: shr r15b, 3
		_0xffffff8000ebda2f: and r15b, 0xc
		_0xffffff8000ebda33: shr dl, 4
		_0xffffff8000ebda36: add dl, 0xe
		_0xffffff8000ebda39: sub dl, r15b
		_0xffffff8000ebda3c: and dl, 0xf
		_0xffffff8000ebda3f: xor dl, 0xe
		_0xffffff8000ebda42: movabs r15, 0xd03a060121852019
		_0xffffff8000ebda4c: mov byte ptr [r15 + r14], dl
		_0xffffff8000ebda50: inc eax
		_0xffffff8000ebda52: mov dword ptr [rbp - 0x12c], eax
		_0xffffff8000ebda58: mov dword ptr [rbp - 0x1ec], 0
		_0xffffff8000ebda62: mov edx, dword ptr [rbp - 0x35c]
		_0xffffff8000ebda68: lea r14d, [rdx + 0x5f93f672]
		_0xffffff8000ebda6f: lea r15d, [rdx + 0xe077de]
		_0xffffff8000ebda76: lea r12d, [rdx + 0x30389c04]
		_0xffffff8000ebda7d: cmp eax, 4
		_0xffffff8000ebda80: mov rax, rsi
		_0xffffff8000ebda83: cmove rax, rcx
		_0xffffff8000ebda87: mov eax, dword ptr [rax]
		_0xffffff8000ebda89: cmove r12d, r15d
		_0xffffff8000ebda8d: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebda94: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebda9b: mov dword ptr [r13], r12d
		_0xffffff8000ebda9f: cmovne r14d, edx
		_0xffffff8000ebdaa3: mov dword ptr [r15], r14d
		_0xffffff8000ebdaa6: jmp _0xffffff8000ebc771
		_0xffffff8000ebdaab: mov qword ptr [rbp - 0x1f8], rdi
		_0xffffff8000ebdab2: mov qword ptr [rbp - 0x1e8], rdi
		_0xffffff8000ebdab9: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ebdabd: mov qword ptr [rbp - 0x340], rax
		_0xffffff8000ebdac4: mov edx, dword ptr [rdi + 0x10]
		_0xffffff8000ebdac7: mov dword ptr [rbp - 0x1e0], edx
		_0xffffff8000ebdacd: test rax, rax
		_0xffffff8000ebdad0: sete byte ptr [rbp - 0x1d9]
		_0xffffff8000ebdad7: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebdade: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebdae5: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebdaec: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebdaf3: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebdafa: mov qword ptr [rbp - 0x330], rax
		_0xffffff8000ebdb01: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebdb08: mov qword ptr [rbp - 0x2a0], rax
		_0xffffff8000ebdb0f: lea rax, [rbp - 0x298]
		_0xffffff8000ebdb16: mov qword ptr [rbp - 0x328], rax
		_0xffffff8000ebdb1d: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebdb24: mov qword ptr [rbp - 0x290], rax
		_0xffffff8000ebdb2b: lea rax, [rbp - 0x288]
		_0xffffff8000ebdb32: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebdb39: mov qword ptr [rbp - 0x1d0], rax
		_0xffffff8000ebdb40: lea rax, [rbp - 0x330]
		_0xffffff8000ebdb47: mov qword ptr [rbp - 0x1c8], rax
		_0xffffff8000ebdb4e: mov rax, qword ptr [rbp - 0x330]
		_0xffffff8000ebdb55: mov qword ptr [rbp - 0x288], rax
		_0xffffff8000ebdb5c: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdb60: mov r14, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebdb67: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebdb6b: mov r14, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebdb72: mov qword ptr [rdx], r14
		_0xffffff8000ebdb75: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebdb7c: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebdb80: lea rax, [rbp - 0x278]
		_0xffffff8000ebdb87: mov qword ptr [rbp - 0x338], rax
		_0xffffff8000ebdb8e: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ebdb95: mov qword ptr [rbp - 0x270], rax
		_0xffffff8000ebdb9c: lea rax, [rbp - 0x268]
		_0xffffff8000ebdba3: mov qword ptr [rbp - 0x320], rax
		_0xffffff8000ebdbaa: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ebdbb1: mov qword ptr [rbp - 0x260], rax
		_0xffffff8000ebdbb8: lea rax, [rbp - 0x258]
		_0xffffff8000ebdbbf: mov qword ptr [rbp - 0x1c0], rax
		_0xffffff8000ebdbc6: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdbcd: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ebdbd4: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdbd8: mov r14, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebdbdf: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebdbe3: mov r14, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebdbea: mov qword ptr [rdx], r14
		_0xffffff8000ebdbed: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebdbf4: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebdbf8: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdbff: mov qword ptr [rbp - 0x248], rax
		_0xffffff8000ebdc06: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdc0a: mov qword ptr [rbp - 0x240], rdx
		_0xffffff8000ebdc11: lea r14, [rbp - 0x248]
		_0xffffff8000ebdc18: mov qword ptr [rdx], r14
		_0xffffff8000ebdc1b: mov qword ptr [rax + 8], r14
		_0xffffff8000ebdc1f: lea rax, [rbp - 0x238]
		_0xffffff8000ebdc26: mov qword ptr [rbp - 0x1b8], rax
		_0xffffff8000ebdc2d: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdc34: mov qword ptr [rbp - 0x238], rax
		_0xffffff8000ebdc3b: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdc3f: mov r14, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebdc46: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebdc4a: mov r14, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebdc51: mov qword ptr [rdx], r14
		_0xffffff8000ebdc54: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebdc5b: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebdc5f: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdc66: mov qword ptr [rbp - 0x228], rax
		_0xffffff8000ebdc6d: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdc71: mov qword ptr [rbp - 0x220], rdx
		_0xffffff8000ebdc78: lea r14, [rbp - 0x228]
		_0xffffff8000ebdc7f: mov qword ptr [rdx], r14
		_0xffffff8000ebdc82: mov qword ptr [rax + 8], r14
		_0xffffff8000ebdc86: lea rax, [rbp - 0x218]
		_0xffffff8000ebdc8d: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ebdc94: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdc9b: mov qword ptr [rbp - 0x218], rax
		_0xffffff8000ebdca2: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdca6: mov r14, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebdcad: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebdcb1: mov r14, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebdcb8: mov qword ptr [rdx], r14
		_0xffffff8000ebdcbb: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebdcc2: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebdcc6: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdccd: mov qword ptr [rbp - 0x208], rax
		_0xffffff8000ebdcd4: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdcd8: mov qword ptr [rbp - 0x200], rdx
		_0xffffff8000ebdcdf: lea r14, [rbp - 0x208]
		_0xffffff8000ebdce6: mov qword ptr [rdx], r14
		_0xffffff8000ebdce9: mov qword ptr [rax + 8], r14
		_0xffffff8000ebdced: mov dword ptr [rbp - 0x1ec], 0xffff586c
		_0xffffff8000ebdcf7: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebdcfd: lea edx, [rax + 0x44047cac]
		_0xffffff8000ebdd03: lea r14d, [rax - 0x171cce64]
		_0xffffff8000ebdd0a: lea r15d, [rax + 0x47a3a846]
		_0xffffff8000ebdd11: lea eax, [rax + 0x191bcdb9]
		_0xffffff8000ebdd17: mov r12b, byte ptr [rbp - 0x1d9]
		_0xffffff8000ebdd1e: test r12b, r12b
		_0xffffff8000ebdd21: mov r12, rsi
		_0xffffff8000ebdd24: cmovne r12, rcx
		_0xffffff8000ebdd28: mov r12d, dword ptr [r12]
		_0xffffff8000ebdd2c: cmovne eax, r15d
		_0xffffff8000ebdd30: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebdd37: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebdd3e: mov dword ptr [r13], eax
		_0xffffff8000ebdd42: cmove edx, r14d
		_0xffffff8000ebdd46: jmp _0xffffff8000ebbeb2
		_0xffffff8000ebdd4b: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebdd51: lea edx, [rax - 0x171cce50]
		_0xffffff8000ebdd57: lea r14d, [rax + 3]
		_0xffffff8000ebdd5b: lea r15d, [rax + 0x191bcdbe]
		_0xffffff8000ebdd62: lea eax, [rax - 0x171cce57]
		_0xffffff8000ebdd68: cmp dword ptr [rbp - 0x34], 3
		_0xffffff8000ebdd6c: mov r12, rsi
		_0xffffff8000ebdd6f: cmovl r12, rcx
		_0xffffff8000ebdd73: mov r12d, dword ptr [r12]
		_0xffffff8000ebdd77: cmovl eax, r15d
		_0xffffff8000ebdd7b: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebdd82: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebdd89: mov dword ptr [r13], eax
		_0xffffff8000ebdd8d: cmovge edx, r14d
		_0xffffff8000ebdd91: mov dword ptr [r15], edx
		_0xffffff8000ebdd94: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebdd9b: jge _0xffffff8000ebbd8a
		_0xffffff8000ebdda1: jmp _0xffffff8000ebbabc
		_0xffffff8000ebdda6: mov qword ptr [rbp - 0x340], rdi
		_0xffffff8000ebddad: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ebddb1: mov qword ptr [rbp - 0x60], rax
		_0xffffff8000ebddb5: mov rax, qword ptr [rdi + 0x10]
		_0xffffff8000ebddb9: mov qword ptr [rbp - 0x178], rax
		_0xffffff8000ebddc0: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebddc7: mov qword ptr [rbp - 0x338], rax
		_0xffffff8000ebddce: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebddd5: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebdddc: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebdde3: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebddea: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebddf1: mov qword ptr [rbp - 0x2a0], rax
		_0xffffff8000ebddf8: lea rax, [rbp - 0x298]
		_0xffffff8000ebddff: mov qword ptr [rbp - 0x328], rax
		_0xffffff8000ebde06: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebde0d: mov qword ptr [rbp - 0x290], rax
		_0xffffff8000ebde14: lea rax, [rbp - 0x288]
		_0xffffff8000ebde1b: mov qword ptr [rbp - 0x58], rax
		_0xffffff8000ebde1f: mov qword ptr [rbp - 0x118], rax
		_0xffffff8000ebde26: lea rax, [rbp - 0x338]
		_0xffffff8000ebde2d: mov qword ptr [rbp - 0x110], rax
		_0xffffff8000ebde34: mov rdx, qword ptr [rbp - 0x338]
		_0xffffff8000ebde3b: mov qword ptr [rbp - 0x288], rdx
		_0xffffff8000ebde42: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebde46: mov r15, qword ptr [rbp - 0x58]
		_0xffffff8000ebde4a: mov qword ptr [r15 + 8], r14
		_0xffffff8000ebde4e: mov r15, qword ptr [rbp - 0x58]
		_0xffffff8000ebde52: mov qword ptr [r14], r15
		_0xffffff8000ebde55: mov r14, qword ptr [rbp - 0x58]
		_0xffffff8000ebde59: mov qword ptr [rdx + 8], r14
		_0xffffff8000ebde5d: mov rdx, qword ptr [rbp - 0x328]
		_0xffffff8000ebde64: mov qword ptr [rbp - 0x278], rdx
		_0xffffff8000ebde6b: mov r14, qword ptr [rdx + 8]
		_0xffffff8000ebde6f: mov qword ptr [rbp - 0x270], r14
		_0xffffff8000ebde76: lea r15, [rbp - 0x278]
		_0xffffff8000ebde7d: mov qword ptr [r14], r15
		_0xffffff8000ebde80: mov qword ptr [rdx + 8], r15
		_0xffffff8000ebde84: lea rdx, [rbp - 0x268]
		_0xffffff8000ebde8b: mov qword ptr [rbp - 0x50], rdx
		_0xffffff8000ebde8f: mov qword ptr [rbp - 0x158], rdx
		_0xffffff8000ebde96: mov qword ptr [rbp - 0x150], rax
		_0xffffff8000ebde9d: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdea4: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ebdeab: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdeaf: mov r14, qword ptr [rbp - 0x50]
		_0xffffff8000ebdeb3: mov qword ptr [r14 + 8], rdx
		_0xffffff8000ebdeb7: mov r14, qword ptr [rbp - 0x50]
		_0xffffff8000ebdebb: mov qword ptr [rdx], r14
		_0xffffff8000ebdebe: mov rdx, qword ptr [rbp - 0x50]
		_0xffffff8000ebdec2: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebdec6: lea rax, [rbp - 0x258]
		_0xffffff8000ebdecd: mov qword ptr [rbp - 0x318], rax
		_0xffffff8000ebded4: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ebdedb: mov qword ptr [rbp - 0x250], rax
		_0xffffff8000ebdee2: lea rax, [rbp - 0x248]
		_0xffffff8000ebdee9: mov qword ptr [rbp - 0x168], rax
		_0xffffff8000ebdef0: mov rax, qword ptr [rbp - 0x318]
		_0xffffff8000ebdef7: mov qword ptr [rbp - 0x248], rax
		_0xffffff8000ebdefe: lea rdx, [rax + 8]
		_0xffffff8000ebdf02: mov qword ptr [rbp - 0x148], rdx
		_0xffffff8000ebdf09: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebdf0d: mov qword ptr [rbp - 0x160], rax
		_0xffffff8000ebdf14: mov rdx, qword ptr [rbp - 0x168]
		_0xffffff8000ebdf1b: lea r14, [rdx + 8]
		_0xffffff8000ebdf1f: mov qword ptr [rbp - 0x140], r14
		_0xffffff8000ebdf26: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebdf2a: mov rax, qword ptr [rbp - 0x168]
		_0xffffff8000ebdf31: mov rdx, qword ptr [rbp - 0x160]
		_0xffffff8000ebdf38: mov qword ptr [rdx], rax
		_0xffffff8000ebdf3b: mov rax, qword ptr [rbp - 0x148]
		_0xffffff8000ebdf42: mov rdx, qword ptr [rbp - 0x168]
		_0xffffff8000ebdf49: mov qword ptr [rax], rdx
		_0xffffff8000ebdf4c: mov rax, qword ptr [rbp - 0x328]
		_0xffffff8000ebdf53: mov qword ptr [rbp - 0x238], rax
		_0xffffff8000ebdf5a: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdf5e: mov qword ptr [rbp - 0x230], rdx
		_0xffffff8000ebdf65: lea r14, [rbp - 0x238]
		_0xffffff8000ebdf6c: mov qword ptr [rdx], r14
		_0xffffff8000ebdf6f: mov qword ptr [rax + 8], r14
		_0xffffff8000ebdf73: lea rax, [rbp - 0x228]
		_0xffffff8000ebdf7a: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebdf81: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdf88: mov qword ptr [rbp - 0x228], rax
		_0xffffff8000ebdf8f: lea rdx, [rax + 8]
		_0xffffff8000ebdf93: mov qword ptr [rbp - 0x138], rdx
		_0xffffff8000ebdf9a: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebdf9e: mov qword ptr [rbp - 0x1c0], rax
		_0xffffff8000ebdfa5: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebdfac: lea r14, [rdx + 8]
		_0xffffff8000ebdfb0: mov qword ptr [rbp - 0x190], r14
		_0xffffff8000ebdfb7: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebdfbb: mov rax, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebdfc2: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebdfc9: mov qword ptr [rdx], rax
		_0xffffff8000ebdfcc: mov rax, qword ptr [rbp - 0x138]
		_0xffffff8000ebdfd3: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebdfda: mov qword ptr [rax], rdx
		_0xffffff8000ebdfdd: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebdfe4: mov qword ptr [rbp - 0x218], rax
		_0xffffff8000ebdfeb: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebdfef: mov qword ptr [rbp - 0x210], rdx
		_0xffffff8000ebdff6: lea r14, [rbp - 0x218]
		_0xffffff8000ebdffd: mov qword ptr [rdx], r14
		_0xffffff8000ebe000: mov qword ptr [rax + 8], r14
		_0xffffff8000ebe004: lea rax, [rbp - 0x208]
		_0xffffff8000ebe00b: mov qword ptr [rbp - 0x1b8], rax
		_0xffffff8000ebe012: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebe019: mov qword ptr [rbp - 0x208], rax
		_0xffffff8000ebe020: lea rdx, [rax + 8]
		_0xffffff8000ebe024: mov qword ptr [rbp - 0x1d0], rdx
		_0xffffff8000ebe02b: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebe02f: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ebe036: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebe03d: lea r14, [rdx + 8]
		_0xffffff8000ebe041: mov qword ptr [rbp - 0x1c8], r14
		_0xffffff8000ebe048: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebe04c: mov rax, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebe053: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebe05a: mov qword ptr [rdx], rax
		_0xffffff8000ebe05d: mov rax, qword ptr [rbp - 0x1d0]
		_0xffffff8000ebe064: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebe06b: mov qword ptr [rax], rdx
		_0xffffff8000ebe06e: mov qword ptr [rbp - 0x198], 0
		_0xffffff8000ebe079: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe07f: lea edx, [rax + 0x191bcdbb]
		_0xffffff8000ebe085: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebe08c: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebe093: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebe09a: mov dword ptr [r12], edx
		_0xffffff8000ebe09e: add eax, 0x191bcdca
		_0xffffff8000ebe0a3: jmp _0xffffff8000ebbc81
		_0xffffff8000ebe0a8: mov qword ptr [rbp - 0x1f8], rdi
		_0xffffff8000ebe0af: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ebe0b3: mov qword ptr [rbp - 0x340], rax
		_0xffffff8000ebe0ba: mov eax, dword ptr [rdi + 4]
		_0xffffff8000ebe0bd: dec eax
		_0xffffff8000ebe0bf: inc rax
		_0xffffff8000ebe0c2: mov qword ptr [rbp - 0x198], rax
		// Unused
		_0xffffff8000ebe0c9: lea rax, [rip]
		_0xffffff8000ebe0d0: mov rax, qword ptr [rax - 0x1345]
		_0xffffff8000ebe0d7: lea rax, [rbp - 0x2b8]
		_0xffffff8000ebe0de: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ebe0e5: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebe0ec: mov qword ptr [rbp - 0x2b0], rax
		_0xffffff8000ebe0f3: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebe0fa: mov qword ptr [rbp - 0x338], rax
		_0xffffff8000ebe101: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebe108: mov qword ptr [rbp - 0x2a0], rax
		_0xffffff8000ebe10f: lea rax, [rbp - 0x298]
		_0xffffff8000ebe116: mov qword ptr [rbp - 0x328], rax
		_0xffffff8000ebe11d: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebe124: mov qword ptr [rbp - 0x290], rax
		_0xffffff8000ebe12b: lea rax, [rbp - 0x288]
		_0xffffff8000ebe132: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebe139: mov qword ptr [rbp - 0x318], rax
		_0xffffff8000ebe140: mov rax, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebe147: mov qword ptr [rax], rax
		_0xffffff8000ebe14a: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebe151: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebe155: lea rax, [rbp - 0x278]
		_0xffffff8000ebe15c: mov qword ptr [rbp - 0x330], rax
		_0xffffff8000ebe163: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ebe16a: mov qword ptr [rbp - 0x270], rax
		_0xffffff8000ebe171: lea rax, [rbp - 0x268]
		_0xffffff8000ebe178: mov qword ptr [rbp - 0x320], rax
		_0xffffff8000ebe17f: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ebe186: mov qword ptr [rbp - 0x260], rax
		_0xffffff8000ebe18d: lea rax, [rbp - 0x258]
		_0xffffff8000ebe194: mov qword ptr [rbp - 0x1c0], rax
		_0xffffff8000ebe19b: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebe1a2: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ebe1a9: lea rdx, [rax + 8]
		_0xffffff8000ebe1ad: mov qword ptr [rbp - 0x190], rdx
		_0xffffff8000ebe1b4: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebe1b8: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebe1bf: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebe1c3: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebe1ca: mov qword ptr [rax], rdx
		_0xffffff8000ebe1cd: mov rax, qword ptr [rbp - 0x190]
		_0xffffff8000ebe1d4: mov rdx, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebe1db: mov qword ptr [rax], rdx
		_0xffffff8000ebe1de: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebe1e5: mov qword ptr [rbp - 0x248], rax
		_0xffffff8000ebe1ec: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebe1f0: mov qword ptr [rbp - 0x240], rdx
		_0xffffff8000ebe1f7: lea r14, [rbp - 0x248]
		_0xffffff8000ebe1fe: mov qword ptr [rdx], r14
		_0xffffff8000ebe201: mov qword ptr [rax + 8], r14
		_0xffffff8000ebe205: lea rax, [rbp - 0x238]
		_0xffffff8000ebe20c: mov qword ptr [rbp - 0x1b8], rax
		_0xffffff8000ebe213: mov rax, qword ptr [rbp - 0x328]
		_0xffffff8000ebe21a: mov qword ptr [rbp - 0x238], rax
		_0xffffff8000ebe221: lea rdx, [rax + 8]
		_0xffffff8000ebe225: mov qword ptr [rbp - 0x1d0], rdx
		_0xffffff8000ebe22c: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebe230: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebe237: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebe23b: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebe242: mov qword ptr [rax], rdx
		_0xffffff8000ebe245: mov rax, qword ptr [rbp - 0x1d0]
		_0xffffff8000ebe24c: mov rdx, qword ptr [rbp - 0x1b8]
		_0xffffff8000ebe253: mov qword ptr [rax], rdx
		_0xffffff8000ebe256: mov rax, qword ptr [rbp - 0x330]
		_0xffffff8000ebe25d: mov qword ptr [rbp - 0x228], rax
		_0xffffff8000ebe264: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebe268: mov qword ptr [rbp - 0x220], rdx
		_0xffffff8000ebe26f: lea r14, [rbp - 0x228]
		_0xffffff8000ebe276: mov qword ptr [rdx], r14
		_0xffffff8000ebe279: mov qword ptr [rax + 8], r14
		_0xffffff8000ebe27d: lea rax, [rbp - 0x218]
		_0xffffff8000ebe284: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ebe28b: mov rax, qword ptr [rbp - 0x338]
		_0xffffff8000ebe292: mov qword ptr [rbp - 0x218], rax
		_0xffffff8000ebe299: lea rdx, [rax + 8]
		_0xffffff8000ebe29d: mov qword ptr [rbp - 0x1c8], rdx
		_0xffffff8000ebe2a4: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebe2a8: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebe2af: mov qword ptr [rdx + 8], rax
		_0xffffff8000ebe2b3: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebe2ba: mov qword ptr [rax], rdx
		_0xffffff8000ebe2bd: mov rax, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebe2c4: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebe2cb: mov qword ptr [rax], rdx
		_0xffffff8000ebe2ce: mov rax, qword ptr [rbp - 0x330]
		_0xffffff8000ebe2d5: mov qword ptr [rbp - 0x208], rax
		_0xffffff8000ebe2dc: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebe2e0: mov qword ptr [rbp - 0x200], rdx
		_0xffffff8000ebe2e7: lea r14, [rbp - 0x208]
		_0xffffff8000ebe2ee: mov qword ptr [rdx], r14
		_0xffffff8000ebe2f1: mov qword ptr [rax + 8], r14
		_0xffffff8000ebe2f5: mov qword ptr [rbp - 0x1a0], 0
		_0xffffff8000ebe300: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe306: lea edx, [rax - 7]
		_0xffffff8000ebe309: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebe310: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebe317: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebe31e: mov dword ptr [r12], edx
		_0xffffff8000ebe322: add eax, -0x12
		_0xffffff8000ebe325: jmp _0xffffff8000ebbc81
		_0xffffff8000ebe32a: mov dword ptr [rbp - 0x12c], 0xffff586c
		_0xffffff8000ebe334: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe33a: lea edx, [rax - 0x43b0826]
		_0xffffff8000ebe340: lea r14d, [rax - 6]
		_0xffffff8000ebe344: lea r15d, [rax - 0x251c01b8]
		_0xffffff8000ebe34b: lea eax, [rax + 0x191bcdbf]
		_0xffffff8000ebe351: mov r12b, byte ptr [rbp - 0xc3]
		_0xffffff8000ebe358: test r12b, r12b
		_0xffffff8000ebe35b: mov r12, rsi
		_0xffffff8000ebe35e: cmovne r12, rcx
		_0xffffff8000ebe362: mov r12d, dword ptr [r12]
		_0xffffff8000ebe366: cmovne eax, r15d
		_0xffffff8000ebe36a: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebe371: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebe378: mov dword ptr [r13], eax
		_0xffffff8000ebe37c: cmove edx, r14d
		_0xffffff8000ebe380: jmp _0xffffff8000ebd459
		_0xffffff8000ebe385: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe38b: lea edx, [rax + 0x311d827]
		_0xffffff8000ebe391: lea r14d, [rax - 0x2e732ed]
		_0xffffff8000ebe398: lea r15d, [rax + 0x191bcdad]
		_0xffffff8000ebe39f: lea eax, [rax - 0x171cce63]
		_0xffffff8000ebe3a5: cmp byte ptr [rbp - 0x2b], 3
		_0xffffff8000ebe3a9: jmp _0xffffff8000ebd434
		_0xffffff8000ebe3ae: mov rax, qword ptr [rbp - 0x178]
		_0xffffff8000ebe3b5: mov dword ptr [rax], 0x792bf512
		_0xffffff8000ebe3bb: mov qword ptr [rbp - 0x198], 0
		_0xffffff8000ebe3c6: mov rax, qword ptr [rbp - 0x340]
		_0xffffff8000ebe3cd: mov qword ptr [rbp - 0x1f8], rax
		_0xffffff8000ebe3d4: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe3da: lea edx, [rax + 3]
		_0xffffff8000ebe3dd: mov r14d, dword ptr [rbp - 0x344]
		_0xffffff8000ebe3e4: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebe3eb: mov r12, qword ptr [rbp - 0x350]
		_0xffffff8000ebe3f2: mov dword ptr [r12], edx
		_0xffffff8000ebe3f6: add eax, 0x191bcdb2
		_0xffffff8000ebe3fb: jmp _0xffffff8000ebbc81
		_0xffffff8000ebe400: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe406: lea edx, [rax - 0xc158115]
		_0xffffff8000ebe40c: lea r14d, [rax + 0x19a3018f]
		_0xffffff8000ebe413: lea r15d, [rax + 0x30389c0b]
		_0xffffff8000ebe41a: lea eax, [rax - 5]
		_0xffffff8000ebe41d: cmp byte ptr [rbp - 0x2b], 1
		_0xffffff8000ebe421: jmp _0xffffff8000ebd434
		_0xffffff8000ebe426: mov eax, dword ptr [rbp - 0x35c]
		_0xffffff8000ebe42c: lea edx, [rax - 0x576cdeb]
		_0xffffff8000ebe432: lea r14d, [rax + 0x2ff18316]
		_0xffffff8000ebe439: lea r15d, [rax + 0x54f1e316]
		_0xffffff8000ebe440: lea eax, [rax + 0x30389c08]
		_0xffffff8000ebe446: cmp dword ptr [rbp - 0x34], 8
		_0xffffff8000ebe44a: mov r12, rsi
		_0xffffff8000ebe44d: cmove r12, rcx
		_0xffffff8000ebe451: mov r12d, dword ptr [r12]
		_0xffffff8000ebe455: cmove eax, r15d
		_0xffffff8000ebe459: mov r15, qword ptr [rbp - 0x358]
		_0xffffff8000ebe460: mov r13, qword ptr [rbp - 0x350]
		_0xffffff8000ebe467: mov dword ptr [r13], eax
		_0xffffff8000ebe46b: cmovne edx, r14d
		_0xffffff8000ebe46f: mov dword ptr [r15], edx
		_0xffffff8000ebe472: mov dword ptr [rbp - 0x35c], r12d
		_0xffffff8000ebe479: jne _0xffffff8000ebbd8a
		_0xffffff8000ebe47f: jmp _0xffffff8000ebc574
		_0xffffff8000ebe484: mov rcx, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebe48b: mov eax, dword ptr [rbp - 0x1ec]
		_0xffffff8000ebe491: mov dword ptr [rcx + 0x14], eax
		_0xffffff8000ebe494: add rsp, 0x358
		_0xffffff8000ebe49b: pop rbx
		_0xffffff8000ebe49c: pop r12
		_0xffffff8000ebe49e: pop r13
		_0xffffff8000ebe4a0: pop r14
		_0xffffff8000ebe4a2: pop r15
		_0xffffff8000ebe4a4: pop rbp
		_0xffffff8000ebe4a5: ret 

	.align 0x100
	sub_0xffffff8000ebe600:
		_0xffffff8000ebe600: push rbp
		_0xffffff8000ebe601: mov rbp, rsp
		_0xffffff8000ebe604: push r15
		_0xffffff8000ebe606: push r14
		_0xffffff8000ebe608: push r13
		_0xffffff8000ebe60a: push r12
		_0xffffff8000ebe60c: push rbx
		_0xffffff8000ebe60d: sub rsp, 0x3d8
		_0xffffff8000ebe614: lea rbx, [rbp - 0x38c]
		_0xffffff8000ebe61b: mov dword ptr [rbp - 0x38c], ebx
		_0xffffff8000ebe621: lea r14, [rbp - 0x390]
		_0xffffff8000ebe628: mov dword ptr [rbp - 0x390], r14d
		_0xffffff8000ebe62f: lea rax, [rbp - 0x398]
		_0xffffff8000ebe636: mov qword ptr [rbp - 0x398], rax
		_0xffffff8000ebe63d: lea rax, [rbp - 0x3a0]
		_0xffffff8000ebe644: mov qword ptr [rbp - 0x3a0], rax
		_0xffffff8000ebe64b: mov dword ptr [rbp - 0x3a4], 0x465c2aa6
		_0xffffff8000ebe655: mov qword ptr [rbp - 0x398], rbx
		_0xffffff8000ebe65c: mov qword ptr [rbp - 0x3a0], r14
		_0xffffff8000ebe663: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe669: lea ecx, [rax - 0x2109fba9]
		_0xffffff8000ebe66f: mov rdx, qword ptr [rbp - 0x398]
		_0xffffff8000ebe676: mov dword ptr [rdx], ecx
		_0xffffff8000ebe678: add eax, 0x19a4c6a6
		_0xffffff8000ebe67d: mov dword ptr [rbp - 0x390], eax
		_0xffffff8000ebe683: mov dword ptr [rbp - 0x3a4], 0x535c784f
		_0xffffff8000ebe68d: mov qword ptr [rbp - 0x3b0], rdi
		_0xffffff8000ebe694: lea r15, [rbp - 0x308]
		_0xffffff8000ebe69b: lea r12, [rbp - 0x2f8]
		_0xffffff8000ebe6a2: lea r13, [rbp - 0x388]
		_0xffffff8000ebe6a9: jmp _0xffffff8000ebe6bb
		_0xffffff8000ebe6ab: nop dword ptr [rax + rax]
		nop
		_0xffffff8000ebe6b0: cmp eax, 0x45a75f7b
		_0xffffff8000ebe6b5: je _0xffffff8000ebee14
		_0xffffff8000ebe6bb: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe6c1: cmp eax, 0x45a75f7a
		_0xffffff8000ebe6c6: jg _0xffffff8000ebe7e3
		_0xffffff8000ebe6cc: cmp eax, 0x25522f03
		_0xffffff8000ebe6d1: jne _0xffffff8000ebe6bb
		_0xffffff8000ebe6d3: jmp _0xffffff8000ebea0e
		_0xffffff8000ebe6d8: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe6de: lea ecx, [rax + 0x2e0a4956]
		_0xffffff8000ebe6e4: lea edx, [rax - 0x22f64fa8]
		_0xffffff8000ebe6ea: lea esi, [rax + 8]
		_0xffffff8000ebe6ed: lea eax, [rax + 0x20553074]
		_0xffffff8000ebe6f3: cmp dword ptr [rbp - 0x2c], 1
		_0xffffff8000ebe6f7: mov rdi, r14
		_0xffffff8000ebe6fa: cmove rdi, rbx
		_0xffffff8000ebe6fe: mov edi, dword ptr [rdi]
		_0xffffff8000ebe700: cmove eax, esi
		_0xffffff8000ebe703: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebe70a: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebe711: mov dword ptr [r8], eax
		_0xffffff8000ebe714: cmovne ecx, edx
		_0xffffff8000ebe717: mov dword ptr [rsi], ecx
		_0xffffff8000ebe719: mov dword ptr [rbp - 0x3a4], edi
		_0xffffff8000ebe71f: je _0xffffff8000ebea0e
		_0xffffff8000ebe725: jmp _0xffffff8000ebee14
		_0xffffff8000ebe72a: mov rax, qword ptr [rbp - 0x130]
		_0xffffff8000ebe731: mov rcx, rax
		_0xffffff8000ebe734: movabs rdx, 0x2ebfaeb5daff5ba3
		_0xffffff8000ebe73e: xor rcx, rdx
		_0xffffff8000ebe741: add rcx, qword ptr [rbp - 0x138]
		_0xffffff8000ebe748: and eax, 0xdaff5ba3
		_0xffffff8000ebe74d: lea rax, [rcx + rax*2]
		_0xffffff8000ebe751: add rax, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebe758: movabs rcx, 0xd140514a2500a45d
		_0xffffff8000ebe762: add rax, rcx
		_0xffffff8000ebe765: mov rcx, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebe76c: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebe770: mov rax, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebe777: lea rcx, [rbp - 0x238]
		_0xffffff8000ebe77e: mov qword ptr [rax + 0x18], rcx
		_0xffffff8000ebe782: mov rax, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebe789: mov rcx, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebe790: mov qword ptr [rcx + 0x20], rax
		_0xffffff8000ebe794: mov rdi, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebe79b: mov dword ptr [rbp - 0x200], 0
		_0xffffff8000ebe7a5: mov dword ptr [rdi], 0x28
		_0xffffff8000ebe7ab: call sub_0xffffff8000eb7d00
		_0xffffff8000ebe7b0: mov rax, qword ptr [rbp - 0x1f8]
		_0xffffff8000ebe7b7: mov eax, dword ptr [rax + 0x10]
		_0xffffff8000ebe7ba: mov dword ptr [rbp - 0x1fc], eax
		_0xffffff8000ebe7c0: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe7c6: lea edx, [rcx - 0x35b97d2c]
		_0xffffff8000ebe7cc: lea esi, [rcx - 0x2bb38d2f]
		_0xffffff8000ebe7d2: lea edi, [rcx - 0x2018fb7b]
		_0xffffff8000ebe7d8: lea ecx, [rcx + 0x1c0fe88c]
		_0xffffff8000ebe7de: jmp _0xffffff8000ebeef3
		_0xffffff8000ebe7e3: cmp eax, 0x535c784b
		_0xffffff8000ebe7e8: jle _0xffffff8000ebe6b0
		_0xffffff8000ebe7ee: add eax, 0xaca387b4
		_0xffffff8000ebe7f3: cmp eax, 9
		_0xffffff8000ebe7f6: ja _0xffffff8000ebe6bb
		_0xffffff8000ebe7fc: lea rcx, [rip + jumptbl_0xffffff8000ebe7fc]
		_0xffffff8000ebe803: movsxd rax, dword ptr [rcx + rax*4]
		_0xffffff8000ebe807: add rax, rcx
		_0xffffff8000ebe80a: jmp rax
		_0xffffff8000ebe80c: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebe813: inc dword ptr [rax + 0x14]
		_0xffffff8000ebe816: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe81c: lea ecx, [rax + 0x2e0a4950]
		_0xffffff8000ebe822: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebe828: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebe82f: lea rdi, [rip]
		_0xffffff8000ebe836: mov rdi, qword ptr [rdi - 0x2f]
		_0xffffff8000ebe83a: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebe841: mov dword ptr [rdi], ecx
		_0xffffff8000ebe843: add eax, 0x20553070
		_0xffffff8000ebe848: mov dword ptr [rsi], eax
		_0xffffff8000ebe84a: mov dword ptr [rbp - 0x3a4], edx
		_0xffffff8000ebe850: jmp _0xffffff8000ebe6bb
		_0xffffff8000ebe855: mov eax, dword ptr [rbp - 0x23c]
		_0xffffff8000ebe85b: mov ecx, 0x3f
		_0xffffff8000ebe860: sub ecx, eax
		_0xffffff8000ebe862: inc rcx
		_0xffffff8000ebe865: mov edx, 0x40
		_0xffffff8000ebe86a: sub edx, eax
		_0xffffff8000ebe86c: cmp edx, 1
		_0xffffff8000ebe86f: mov eax, 1
		_0xffffff8000ebe874: cmova rax, rcx
		_0xffffff8000ebe878: mov qword ptr [rbp - 0x68], rax
		_0xffffff8000ebe87c: mov qword ptr [rbp - 0xe0], 0
		_0xffffff8000ebe887: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe88d: lea ecx, [rax - 0xa]
		_0xffffff8000ebe890: jmp _0xffffff8000ebf4a3
		_0xffffff8000ebe895: mov eax, dword ptr [rbp - 0x90]
		_0xffffff8000ebe89b: mov ecx, eax
		_0xffffff8000ebe89d: shr ecx, 0x1d
		_0xffffff8000ebe8a0: xor ecx, 0x647fdfba
		_0xffffff8000ebe8a6: mov rdx, qword ptr [rbp - 0x98]
		_0xffffff8000ebe8ad: add ecx, dword ptr [rdx + 0x14]
		_0xffffff8000ebe8b0: shr eax, 0x1c
		_0xffffff8000ebe8b3: and eax, 4
		_0xffffff8000ebe8b6: lea eax, [rax + rcx - 0x647fdfba]
		_0xffffff8000ebe8bd: mov dword ptr [rdx + 0x14], eax
		_0xffffff8000ebe8c0: mov eax, dword ptr [rbp - 0x8c]
		_0xffffff8000ebe8c6: mov ecx, eax
		_0xffffff8000ebe8c8: shr ecx, 2
		_0xffffff8000ebe8cb: and ecx, 0x12
		_0xffffff8000ebe8ce: shr eax, 3
		_0xffffff8000ebe8d1: add eax, 9
		_0xffffff8000ebe8d4: sub eax, ecx
		_0xffffff8000ebe8d6: and eax, 0x3f
		_0xffffff8000ebe8d9: mov ecx, eax
		_0xffffff8000ebe8db: xor ecx, 9
		_0xffffff8000ebe8de: mov dword ptr [rbp - 0x23c], ecx
		_0xffffff8000ebe8e4: mov rcx, qword ptr [rbp - 0x248]
		_0xffffff8000ebe8eb: mov qword ptr [rbp - 0xd8], rcx
		_0xffffff8000ebe8f2: mov ecx, dword ptr [rbp - 0x90]
		_0xffffff8000ebe8f8: mov dword ptr [rbp - 0xd0], ecx
		_0xffffff8000ebe8fe: mov dword ptr [rbp - 0x34], ecx
		_0xffffff8000ebe901: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe907: lea edx, [rcx - 0x2e0a4950]
		_0xffffff8000ebe90d: lea esi, [rcx - 0x2e0a4954]
		_0xffffff8000ebe913: lea edi, [rcx + 3]
		_0xffffff8000ebe916: lea ecx, [rcx - 2]
		_0xffffff8000ebe919: cmp eax, 9
		_0xffffff8000ebe91c: mov rax, r14
		_0xffffff8000ebe91f: cmove rax, rbx
		_0xffffff8000ebe923: mov eax, dword ptr [rax]
		_0xffffff8000ebe925: cmove ecx, edi
		_0xffffff8000ebe928: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebe92f: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebe936: mov dword ptr [r8], ecx
		_0xffffff8000ebe939: cmovne edx, esi
		_0xffffff8000ebe93c: mov dword ptr [rdi], edx
		_0xffffff8000ebe93e: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebe944: je _0xffffff8000ebe6bb
		_0xffffff8000ebe94a: jmp _0xffffff8000ebea0e
		_0xffffff8000ebe94f: nop 
		_0xffffff8000ebe950: mov rax, qword ptr [rbp - 0xb0]
		_0xffffff8000ebe957: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebe95e: mov qword ptr [rax + 8], rcx
		_0xffffff8000ebe962: mov rax, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebe969: mov rcx, qword ptr [rbp - 0xb0]
		_0xffffff8000ebe970: mov qword ptr [rcx + 0x10], rax
		_0xffffff8000ebe974: mov rdi, qword ptr [rbp - 0xb0]
		_0xffffff8000ebe97b: mov dword ptr [rbp - 0xec], 0
		_0xffffff8000ebe985: mov dword ptr [rdi], 0xf
		_0xffffff8000ebe98b: call sub_0xffffff8000eb7d00
		_0xffffff8000ebe990: mov rax, qword ptr [rbp - 0x58]
		_0xffffff8000ebe994: inc rax
		_0xffffff8000ebe997: mov ecx, dword ptr [rbp - 0x200]
		_0xffffff8000ebe99d: mov qword ptr [rbp - 0x128], rax
		_0xffffff8000ebe9a4: mov rax, qword ptr [rbp - 0x110]
		_0xffffff8000ebe9ab: mov dword ptr [rbp - 0xcc], ecx
		_0xffffff8000ebe9b1: mov qword ptr [rbp - 0xc8], rax
		_0xffffff8000ebe9b8: mov dword ptr [rbp - 0x30], ecx
		_0xffffff8000ebe9bb: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebe9c1: lea edx, [rax + 0xe]
		_0xffffff8000ebe9c4: lea rsi, [rip - 0x5ec6]
		_0xffffff8000ebe9cb: mov rsi, qword ptr [rsi]
		_0xffffff8000ebe9ce: lea esi, [rax - 0x2055306f]
		_0xffffff8000ebe9d4: lea edi, [rax + 0xdb518e7]
		_0xffffff8000ebe9da: lea eax, [rax + 3]
		_0xffffff8000ebe9dd: cmp ecx, 0x3f
		_0xffffff8000ebe9e0: mov rcx, r14
		_0xffffff8000ebe9e3: cmova rcx, rbx
		_0xffffff8000ebe9e7: mov ecx, dword ptr [rcx]
		_0xffffff8000ebe9e9: cmova eax, edi
		_0xffffff8000ebe9ec: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebe9f3: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebe9fa: mov dword ptr [r8], eax
		_0xffffff8000ebe9fd: cmovbe edx, esi
		_0xffffff8000ebea00: mov dword ptr [rdi], edx
		_0xffffff8000ebea02: mov dword ptr [rbp - 0x3a4], ecx
		_0xffffff8000ebea08: jbe _0xffffff8000ebee14
		_0xffffff8000ebea0e: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebea14: mov ecx, 0xba58a097
		_0xffffff8000ebea19: add eax, ecx
		_0xffffff8000ebea1b: cmp eax, 0x12
		_0xffffff8000ebea1e: ja _0xffffff8000ebea0e
		_0xffffff8000ebea20: lea rcx, [rip + jumptbl_0xffffff8000ebea20]
		_0xffffff8000ebea27: movsxd rax, dword ptr [rcx + rax*4]
		_0xffffff8000ebea2b: add rax, rcx
		_0xffffff8000ebea2e: jmp rax
		_0xffffff8000ebea30: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebea36: lea ecx, [rax + 0x296065fa]
		_0xffffff8000ebea3c: lea edx, [rax + 0x59f586db]
		_0xffffff8000ebea42: lea esi, [rax + 7]
		_0xffffff8000ebea45: lea eax, [rax + 2]
		_0xffffff8000ebea48: cmp dword ptr [rbp - 0x234], 0x18
		_0xffffff8000ebea4f: mov rdi, r14
		_0xffffff8000ebea52: cmove rdi, rbx
		_0xffffff8000ebea56: mov edi, dword ptr [rdi]
		_0xffffff8000ebea58: cmove eax, esi
		_0xffffff8000ebea5b: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebea62: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebea69: mov dword ptr [r8], eax
		_0xffffff8000ebea6c: cmovne ecx, edx
		_0xffffff8000ebea6f: mov dword ptr [rsi], ecx
		_0xffffff8000ebea71: jmp _0xffffff8000ec6a4b
		_0xffffff8000ebea76: mov rax, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebea7d: mov dword ptr [rax], 0
		_0xffffff8000ebea83: lea rax, [rip - 0x7480]
		_0xffffff8000ebea8a: mov rax, qword ptr [rax]
		_0xffffff8000ebea8d: mov rax, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebea94: mov rcx, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebea9b: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebea9f: mov rax, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebeaa6: lea rcx, [rbp - 0x234]
		_0xffffff8000ebeaad: mov qword ptr [rax + 0x18], rcx
		_0xffffff8000ebeab1: mov rax, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebeab8: mov rcx, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebeabf: mov qword ptr [rcx + 0x10], rax
		_0xffffff8000ebeac3: mov rdi, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebeaca: mov dword ptr [rbp - 0x200], 0
		_0xffffff8000ebead4: mov dword ptr [rdi], 0x20
		_0xffffff8000ebeada: call sub_0xffffff8000eb7d00
		_0xffffff8000ebeadf: mov rax, qword ptr [rbp - 0x1e8]
		_0xffffff8000ebeae6: mov eax, dword ptr [rax + 4]
		_0xffffff8000ebeae9: mov dword ptr [rbp - 0x1fc], eax
		_0xffffff8000ebeaef: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebeaf5: lea edx, [rcx - 0x2055306f]
		_0xffffff8000ebeafb: lea esi, [rcx - 0x7e84934]
		_0xffffff8000ebeb01: lea edi, [rcx - 0x2055307b]
		_0xffffff8000ebeb07: lea ecx, [rcx + 0x34508cde]
		_0xffffff8000ebeb0d: test eax, eax
		_0xffffff8000ebeb0f: mov rax, r14
		_0xffffff8000ebeb12: cmove rax, rbx
		_0xffffff8000ebeb16: mov eax, dword ptr [rax]
		_0xffffff8000ebeb18: cmove ecx, edi
		_0xffffff8000ebeb1b: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebeb22: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebeb29: mov dword ptr [r8], ecx
		_0xffffff8000ebeb2c: cmovne edx, esi
		_0xffffff8000ebeb2f: mov dword ptr [rdi], edx
		_0xffffff8000ebeb31: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebeb37: jmp _0xffffff8000ebee14
		_0xffffff8000ebeb3c: mov eax, dword ptr [rbp - 0x23c]
		_0xffffff8000ebeb42: mov rcx, rax
		_0xffffff8000ebeb45: movabs rdx, 0x77ffcfd57eafad96
		_0xffffff8000ebeb4f: xor rcx, rdx
		_0xffffff8000ebeb52: and rax, 0x16
		_0xffffff8000ebeb56: lea rax, [rcx + rax*2]
		_0xffffff8000ebeb5a: movabs rcx, 0x8800302a8150526a
		_0xffffff8000ebeb64: add rax, rcx
		_0xffffff8000ebeb67: mov qword ptr [rbp - 0x78], rax
		_0xffffff8000ebeb6b: mov eax, 0x40
		_0xffffff8000ebeb70: sub eax, dword ptr [rbp - 0x23c]
		_0xffffff8000ebeb76: mov dword ptr [rbp - 0x238], eax
		_0xffffff8000ebeb7c: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebeb82: lea edx, [rcx - 0x2055306e]
		_0xffffff8000ebeb88: lea esi, [rcx + 0x22e1969b]
		_0xffffff8000ebeb8e: lea edi, [rcx - 2]
		_0xffffff8000ebeb91: lea ecx, [rcx - 0x2055307f]
		_0xffffff8000ebeb97: cmp eax, dword ptr [rbp - 0x90]
		_0xffffff8000ebeb9d: jmp _0xffffff8000ebfac9
		_0xffffff8000ebeba2: mov rax, qword ptr [rbp - 0xc0]
		_0xffffff8000ebeba9: movabs rcx, 0x7b6af56be72effff
		_0xffffff8000ebebb3: xor rcx, rax
		_0xffffff8000ebebb6: lea rdx, [rax + rax]
		_0xffffff8000ebebba: movabs rsi, 0x1ce5dfffe
		_0xffffff8000ebebc4: and rsi, rdx
		_0xffffff8000ebebc7: add rsi, rcx
		_0xffffff8000ebebca: add rsi, qword ptr [rbp - 0x1d0]
		_0xffffff8000ebebd1: movabs rcx, 0x84950a9418d10001
		_0xffffff8000ebebdb: mov cl, byte ptr [rcx + rsi]
		_0xffffff8000ebebde: movabs rsi, 0x6effc5ebf5fef7f3
		_0xffffff8000ebebe8: xor rsi, rax
		_0xffffff8000ebebeb: movabs rdi, 0x1ebfdefe6
		_0xffffff8000ebebf5: and rdi, rdx
		_0xffffff8000ebebf8: add rdi, rsi
		_0xffffff8000ebebfb: add rdi, qword ptr [rbp - 0x98]
		_0xffffff8000ebec02: movabs rdx, 0x91003a140a010825
		_0xffffff8000ebec0c: mov byte ptr [rdx + rdi], cl
		_0xffffff8000ebec0f: inc rax
		_0xffffff8000ebec12: mov rcx, qword ptr [rbp - 0x130]
		_0xffffff8000ebec19: mov qword ptr [rbp - 0xc0], rax
		_0xffffff8000ebec20: mov edx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebec26: lea esi, [rdx + 0x57459369]
		_0xffffff8000ebec2c: lea edi, [rdx + 0x2055307b]
		_0xffffff8000ebec32: lea r8d, [rdx + 0x2fbae764]
		_0xffffff8000ebec39: cmp rax, rcx
		_0xffffff8000ebec3c: mov rax, r14
		_0xffffff8000ebec3f: cmove rax, rbx
		_0xffffff8000ebec43: mov eax, dword ptr [rax]
		_0xffffff8000ebec45: cmovne r8d, edi
		_0xffffff8000ebec49: mov rcx, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebec50: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebec57: mov dword ptr [rdi], r8d
		_0xffffff8000ebec5a: cmovne esi, edx
		_0xffffff8000ebec5d: mov dword ptr [rcx], esi
		_0xffffff8000ebec5f: jmp _0xffffff8000ebef17
		_0xffffff8000ebec64: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebec6b: add rax, 0x18
		_0xffffff8000ebec6f: mov rcx, qword ptr [rbp - 0xa8]
		_0xffffff8000ebec76: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebec7a: mov rax, qword ptr [rbp - 0xa8]
		_0xffffff8000ebec81: mov dword ptr [rax + 4], 0x10
		_0xffffff8000ebec88: mov rdi, qword ptr [rbp - 0xa8]
		_0xffffff8000ebec8f: mov dword ptr [rdi], 0x13
		_0xffffff8000ebec95: call sub_0xffffff8000eb7d00
		_0xffffff8000ebec9a: mov rax, qword ptr [rbp - 0xb8]
		_0xffffff8000ebeca1: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebeca8: mov qword ptr [rax + 8], rcx
		_0xffffff8000ebecac: add rcx, 0x18
		_0xffffff8000ebecb0: mov rax, qword ptr [rbp - 0xb8]
		_0xffffff8000ebecb7: mov qword ptr [rax + 0x10], rcx
		_0xffffff8000ebecbb: mov rdi, qword ptr [rbp - 0xb8]
		_0xffffff8000ebecc2: mov dword ptr [rbp - 0xec], 0
		_0xffffff8000ebeccc: mov dword ptr [rdi], 0x23
		_0xffffff8000ebecd2: call sub_0xffffff8000eb7d00
		_0xffffff8000ebecd7: mov eax, dword ptr [rbp - 0x238]
		_0xffffff8000ebecdd: movabs rcx, 0x7677cf71acbeff3f
		_0xffffff8000ebece7: xor rcx, rax
		_0xffffff8000ebecea: mov rdx, rax
		_0xffffff8000ebeced: and rdx, 0x3f
		_0xffffff8000ebecf1: lea rcx, [rcx + rdx*2]
		_0xffffff8000ebecf5: add rcx, qword ptr [rbp - 0x248]
		_0xffffff8000ebecfc: movabs rdx, 0x8988308e534100c1
		_0xffffff8000ebed06: add rdx, rcx
		_0xffffff8000ebed09: mov ecx, dword ptr [rbp - 0x90]
		_0xffffff8000ebed0f: mov qword ptr [rbp - 0xd8], rdx
		_0xffffff8000ebed16: sub ecx, eax
		_0xffffff8000ebed18: mov dword ptr [rbp - 0xd0], ecx
		_0xffffff8000ebed1e: mov dword ptr [rbp - 0x34], ecx
		_0xffffff8000ebed21: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebed27: lea ecx, [rax + 0x2e0a4961]
		_0xffffff8000ebed2d: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebed33: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebed3a: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebed41: mov dword ptr [rdi], ecx
		_0xffffff8000ebed43: add eax, 0xe
		_0xffffff8000ebed46: jmp _0xffffff8000ebe848
		_0xffffff8000ebed4b: nop dword ptr [rax + rax]
		nop
		_0xffffff8000ebed50: mov rax, qword ptr [rbp - 0xe0]
		_0xffffff8000ebed57: movabs rcx, 0x5ffddaffffff5ecf
		_0xffffff8000ebed61: xor rcx, rax
		_0xffffff8000ebed64: lea rdx, [rip + 0x9c1]
		_0xffffff8000ebed6b: mov rdx, qword ptr [rdx]
		_0xffffff8000ebed6e: lea rdx, [rax + rax]
		_0xffffff8000ebed72: movabs rsi, 0x1fffebd9e
		_0xffffff8000ebed7c: and rsi, rdx
		_0xffffff8000ebed7f: add rsi, rcx
		_0xffffff8000ebed82: add rsi, qword ptr [rbp - 0x248]
		_0xffffff8000ebed89: movabs rcx, 0xa00225000000a131
		_0xffffff8000ebed93: mov cl, byte ptr [rcx + rsi]
		_0xffffff8000ebed96: movabs rsi, 0x35dcfe4477f71fff
		_0xffffff8000ebeda0: xor rsi, rax
		_0xffffff8000ebeda3: and edx, 0xefee3ffe
		_0xffffff8000ebeda9: add rdx, rsi
		_0xffffff8000ebedac: add rdx, qword ptr [rbp - 0x78]
		_0xffffff8000ebedb0: add rdx, qword ptr [rbp - 0x98]
		_0xffffff8000ebedb7: movabs rsi, 0xca2301bb8808e019
		_0xffffff8000ebedc1: mov byte ptr [rsi + rdx], cl
		_0xffffff8000ebedc4: inc rax
		_0xffffff8000ebedc7: mov rcx, qword ptr [rbp - 0x68]
		_0xffffff8000ebedcb: mov qword ptr [rbp - 0xe0], rax
		_0xffffff8000ebedd2: mov edx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebedd8: lea esi, [rdx + 0x3ad2aeb1]
		_0xffffff8000ebedde: cmp rax, rcx
		_0xffffff8000ebede1: cmovne esi, edx
		_0xffffff8000ebede4: lea edi, [rdx - 1]
		_0xffffff8000ebede7: lea edx, [rdx + 0x2e0a495f]
		_0xffffff8000ebeded: cmp rax, rcx
		_0xffffff8000ebedf0: mov rax, r14
		_0xffffff8000ebedf3: cmove rax, rbx
		_0xffffff8000ebedf7: mov eax, dword ptr [rax]
		_0xffffff8000ebedf9: cmove edi, edx
		_0xffffff8000ebedfc: mov rcx, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebee03: mov rdx, qword ptr [rbp - 0x398]
		_0xffffff8000ebee0a: mov dword ptr [rdx], edi
		_0xffffff8000ebee0c: mov dword ptr [rcx], esi
		_0xffffff8000ebee0e: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebee14: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebee1a: mov ecx, 0xdaadd114
		_0xffffff8000ebee1f: add eax, ecx
		_0xffffff8000ebee21: cmp eax, 0x18
		_0xffffff8000ebee24: ja _0xffffff8000ebee14
		_0xffffff8000ebee26: jmp _0xffffff8000ec6610
		_0xffffff8000ebee2b: mov eax, dword ptr [rbp - 0x90]
		_0xffffff8000ebee31: mov qword ptr [rbp - 0x70], rax
		_0xffffff8000ebee35: mov qword ptr [rbp - 0xe8], 0
		_0xffffff8000ebee40: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebee46: lea ecx, [rax + 0x2055306c]
		_0xffffff8000ebee4c: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebee52: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebee59: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebee60: mov dword ptr [rdi], ecx
		_0xffffff8000ebee62: add eax, 0x20553078
		_0xffffff8000ebee67: jmp _0xffffff8000ebf608
		_0xffffff8000ebee6c: mov eax, dword ptr [rbp - 0x23c]
		_0xffffff8000ebee72: mov qword ptr [rbp - 0x130], rax
		_0xffffff8000ebee79: mov rcx, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebee80: add dword ptr [rcx], eax
		_0xffffff8000ebee82: mov rax, qword ptr [rbp - 0x1d0]
		_0xffffff8000ebee89: mov al, byte ptr [rax + 4]
		_0xffffff8000ebee8c: mov dword ptr [rbp - 0x1fc], 0xffff586f
		_0xffffff8000ebee96: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebee9c: lea edx, [rcx + 0xc]
		_0xffffff8000ebee9f: lea esi, [rcx + 0x14c179d4]
		_0xffffff8000ebeea5: lea edi, [rcx + 0x4a52f2ba]
		_0xffffff8000ebeeab: lea ecx, [rcx + 0x2055307a]
		_0xffffff8000ebeeb1: cmp al, 1
		_0xffffff8000ebeeb3: mov rax, r14
		_0xffffff8000ebeeb6: cmove rax, rbx
		_0xffffff8000ebeeba: mov eax, dword ptr [rax]
		_0xffffff8000ebeebc: cmovne ecx, edi
		_0xffffff8000ebeebf: jmp _0xffffff8000ebef01
		_0xffffff8000ebeec1: mov eax, dword ptr [rbp - 0x30]
		_0xffffff8000ebeec4: mov dword ptr [rbp - 0x1fc], eax
		_0xffffff8000ebeeca: mov rcx, qword ptr [rbp - 0xc8]
		_0xffffff8000ebeed1: mov qword ptr [rbp - 0x1d0], rcx
		_0xffffff8000ebeed8: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebeede: lea edx, [rcx + 0x5647c469]
		_0xffffff8000ebeee4: lea esi, [rcx + 0x20e6cd0d]
		_0xffffff8000ebeeea: lea edi, [rcx + 0x3c48292b]
		_0xffffff8000ebeef0: lea ecx, [rcx - 0xb]
		_0xffffff8000ebeef3: test eax, eax
		_0xffffff8000ebeef5: mov rax, r14
		_0xffffff8000ebeef8: cmove rax, rbx
		_0xffffff8000ebeefc: mov eax, dword ptr [rax]
		_0xffffff8000ebeefe: cmove ecx, edi
		_0xffffff8000ebef01: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebef08: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebef0f: mov dword ptr [r8], ecx
		_0xffffff8000ebef12: cmovne edx, esi
		_0xffffff8000ebef15: mov dword ptr [rdi], edx
		_0xffffff8000ebef17: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebef1d: je _0xffffff8000ebea0e
		_0xffffff8000ebef23: jmp _0xffffff8000ebee14
		_0xffffff8000ebef28: mov eax, dword ptr [rbp - 0x200]
		_0xffffff8000ebef2e: mov ecx, 0x3e
		_0xffffff8000ebef33: sub ecx, eax
		_0xffffff8000ebef35: inc rcx
		_0xffffff8000ebef38: mov edx, 0x3f
		_0xffffff8000ebef3d: sub edx, eax
		_0xffffff8000ebef3f: cmp edx, 1
		_0xffffff8000ebef42: mov eax, 1
		_0xffffff8000ebef47: cmova rax, rcx
		_0xffffff8000ebef4b: mov qword ptr [rbp - 0x138], rax
		_0xffffff8000ebef52: mov qword ptr [rbp - 0x70], 0
		_0xffffff8000ebef5a: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebef60: lea ecx, [rax + 0x2e0a4952]
		_0xffffff8000ebef66: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebef6c: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebef73: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebef7a: mov dword ptr [rdi], ecx
		_0xffffff8000ebef7c: add eax, -0xd
		_0xffffff8000ebef7f: jmp _0xffffff8000ebf4bc
		_0xffffff8000ebef84: mov rdi, qword ptr [rbp - 0x3b0]
		_0xffffff8000ebef8b: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ebef8f: lea rcx, [rbp - 0x108]
		_0xffffff8000ebef96: mov qword ptr [rbp - 0xb8], rcx
		_0xffffff8000ebef9d: mov qword ptr [rbp - 0xb0], rcx
		_0xffffff8000ebefa4: mov qword ptr [rbp - 0x50], rcx
		_0xffffff8000ebefa8: mov qword ptr [rbp - 0x48], rcx
		_0xffffff8000ebefac: mov qword ptr [rbp - 0x40], rcx
		_0xffffff8000ebefb0: mov qword ptr [rbp - 0xa8], rcx
		_0xffffff8000ebefb7: mov qword ptr [rbp - 0xa0], rcx
		_0xffffff8000ebefbe: mov qword ptr [rbp - 0x1d8], rax
		_0xffffff8000ebefc5: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ebefc9: mov qword ptr [rbp - 0x98], rcx
		_0xffffff8000ebefd0: mov rax, qword ptr [rax + 0x10]
		_0xffffff8000ebefd4: mov qword ptr [rbp - 0x1d0], rax
		_0xffffff8000ebefdb: mov eax, dword ptr [rcx + 0x10]
		_0xffffff8000ebefde: mov ecx, eax
		_0xffffff8000ebefe0: shr ecx, 2
		_0xffffff8000ebefe3: and ecx, 0xe
		_0xffffff8000ebefe6: shr eax, 3
		_0xffffff8000ebefe9: add eax, 0x27
		_0xffffff8000ebefec: sub eax, ecx
		_0xffffff8000ebefee: and eax, 0x3f
		_0xffffff8000ebeff1: mov dword ptr [rbp - 0x234], eax
		_0xffffff8000ebeff7: xor eax, 0x27
		_0xffffff8000ebeffa: mov dword ptr [rbp - 0x200], eax
		_0xffffff8000ebf000: mov rcx, rax
		_0xffffff8000ebf003: movabs rdx, 0x260dff6fddc56f5f
		_0xffffff8000ebf00d: xor rcx, rdx
		_0xffffff8000ebf010: and rax, 0x1f
		_0xffffff8000ebf014: lea rax, [rcx + rax*2]
		_0xffffff8000ebf018: mov qword ptr [rbp - 0x58], rax
		_0xffffff8000ebf01c: add rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebf023: movabs rcx, 0xd9f20090223a90b9
		_0xffffff8000ebf02d: mov byte ptr [rcx + rax], 0x80
		_0xffffff8000ebf031: mov eax, 0x3f
		_0xffffff8000ebf036: sub eax, dword ptr [rbp - 0x200]
		_0xffffff8000ebf03c: mov dword ptr [rbp - 0x1fc], eax
		_0xffffff8000ebf042: cmp eax, 8
		_0xffffff8000ebf045: sbb al, al
		_0xffffff8000ebf047: and al, 1
		_0xffffff8000ebf049: mov byte ptr [rbp - 0x1b1], al
		_0xffffff8000ebf04f: mov qword ptr [rbp - 0x310], r15
		_0xffffff8000ebf056: mov qword ptr [rbp - 0x308], r15
		_0xffffff8000ebf05d: mov qword ptr [rbp - 0x300], r15
		_0xffffff8000ebf064: mov qword ptr [rbp - 0x388], r12
		_0xffffff8000ebf06b: mov qword ptr [rbp - 0x2f8], r12
		_0xffffff8000ebf072: mov qword ptr [rbp - 0x2f0], r12
		_0xffffff8000ebf079: lea rax, [rbp - 0x2e8]
		_0xffffff8000ebf080: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ebf087: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf08e: mov qword ptr [rbp - 0x2e8], rax
		_0xffffff8000ebf095: lea rcx, [rax + 8]
		_0xffffff8000ebf099: mov qword ptr [rbp - 0x1a8], rcx
		_0xffffff8000ebf0a0: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebf0a4: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebf0ab: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf0af: mov qword ptr [rbp - 0x1a0], rax
		_0xffffff8000ebf0b6: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebf0bd: mov qword ptr [rax], rcx
		_0xffffff8000ebf0c0: mov rax, qword ptr [rbp - 0x1a8]
		_0xffffff8000ebf0c7: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ebf0ce: mov qword ptr [rax], rcx
		_0xffffff8000ebf0d1: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf0d8: mov qword ptr [rbp - 0x2d8], rax
		_0xffffff8000ebf0df: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ebf0e3: mov qword ptr [rbp - 0x2d0], rcx
		_0xffffff8000ebf0ea: lea rdx, [rbp - 0x2d8]
		_0xffffff8000ebf0f1: mov qword ptr [rcx], rdx
		_0xffffff8000ebf0f4: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebf0f8: lea rax, [rbp - 0x2c8]
		_0xffffff8000ebf0ff: mov qword ptr [rbp - 0x198], rax
		_0xffffff8000ebf106: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf10d: mov qword ptr [rbp - 0x2c8], rax
		_0xffffff8000ebf114: lea rcx, [rax + 8]
		_0xffffff8000ebf118: mov qword ptr [rbp - 0x190], rcx
		_0xffffff8000ebf11f: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebf123: mov rcx, qword ptr [rbp - 0x198]
		_0xffffff8000ebf12a: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf12e: mov qword ptr [rbp - 0x188], rax
		_0xffffff8000ebf135: mov rcx, qword ptr [rbp - 0x198]
		_0xffffff8000ebf13c: mov qword ptr [rax], rcx
		_0xffffff8000ebf13f: mov rax, qword ptr [rbp - 0x190]
		_0xffffff8000ebf146: mov rcx, qword ptr [rbp - 0x198]
		_0xffffff8000ebf14d: mov qword ptr [rax], rcx
		_0xffffff8000ebf150: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf157: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ebf15e: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ebf162: mov qword ptr [rbp - 0x2b0], rcx
		_0xffffff8000ebf169: lea rdx, [rbp - 0x2b8]
		_0xffffff8000ebf170: mov qword ptr [rcx], rdx
		_0xffffff8000ebf173: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebf177: lea rax, [rbp - 0x2a8]
		_0xffffff8000ebf17e: mov qword ptr [rbp - 0x180], rax
		_0xffffff8000ebf185: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf18c: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ebf193: lea rcx, [rax + 8]
		_0xffffff8000ebf197: mov qword ptr [rbp - 0x178], rcx
		_0xffffff8000ebf19e: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebf1a2: mov rcx, qword ptr [rbp - 0x180]
		_0xffffff8000ebf1a9: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf1ad: mov qword ptr [rbp - 0x170], rax
		_0xffffff8000ebf1b4: mov rcx, qword ptr [rbp - 0x180]
		_0xffffff8000ebf1bb: mov qword ptr [rax], rcx
		_0xffffff8000ebf1be: mov rax, qword ptr [rbp - 0x178]
		_0xffffff8000ebf1c5: mov rcx, qword ptr [rbp - 0x180]
		_0xffffff8000ebf1cc: mov qword ptr [rax], rcx
		_0xffffff8000ebf1cf: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf1d6: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ebf1dd: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ebf1e1: mov qword ptr [rbp - 0x290], rcx
		_0xffffff8000ebf1e8: lea rdx, [rbp - 0x298]
		_0xffffff8000ebf1ef: mov qword ptr [rcx], rdx
		_0xffffff8000ebf1f2: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebf1f6: lea rax, [rbp - 0x288]
		_0xffffff8000ebf1fd: mov qword ptr [rbp - 0x168], rax
		_0xffffff8000ebf204: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf20b: mov qword ptr [rbp - 0x288], rax
		_0xffffff8000ebf212: lea rcx, [rax + 8]
		_0xffffff8000ebf216: mov qword ptr [rbp - 0x160], rcx
		_0xffffff8000ebf21d: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebf221: mov rcx, qword ptr [rbp - 0x168]
		_0xffffff8000ebf228: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf22c: mov qword ptr [rbp - 0x158], rax
		_0xffffff8000ebf233: mov rcx, qword ptr [rbp - 0x168]
		_0xffffff8000ebf23a: mov qword ptr [rax], rcx
		_0xffffff8000ebf23d: mov rax, qword ptr [rbp - 0x160]
		_0xffffff8000ebf244: mov rcx, qword ptr [rbp - 0x168]
		_0xffffff8000ebf24b: mov qword ptr [rax], rcx
		_0xffffff8000ebf24e: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf255: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ebf25c: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ebf260: mov qword ptr [rbp - 0x270], rcx
		_0xffffff8000ebf267: lea rdx, [rbp - 0x278]
		_0xffffff8000ebf26e: mov qword ptr [rcx], rdx
		_0xffffff8000ebf271: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebf275: lea rax, [rbp - 0x268]
		_0xffffff8000ebf27c: mov qword ptr [rbp - 0x150], rax
		_0xffffff8000ebf283: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf28a: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ebf291: lea rcx, [rax + 8]
		_0xffffff8000ebf295: mov qword ptr [rbp - 0x148], rcx
		_0xffffff8000ebf29c: mov rax, qword ptr [rax + 8]
		_0xffffff8000ebf2a0: mov rcx, qword ptr [rbp - 0x150]
		_0xffffff8000ebf2a7: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf2ab: mov qword ptr [rbp - 0x140], rax
		_0xffffff8000ebf2b2: mov rcx, qword ptr [rbp - 0x150]
		_0xffffff8000ebf2b9: mov qword ptr [rax], rcx
		_0xffffff8000ebf2bc: mov rax, qword ptr [rbp - 0x148]
		_0xffffff8000ebf2c3: mov rcx, qword ptr [rbp - 0x150]
		_0xffffff8000ebf2ca: mov qword ptr [rax], rcx
		_0xffffff8000ebf2cd: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ebf2d4: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ebf2db: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ebf2df: mov qword ptr [rbp - 0x250], rcx
		_0xffffff8000ebf2e6: lea rdx, [rbp - 0x258]
		_0xffffff8000ebf2ed: mov qword ptr [rcx], rdx
		_0xffffff8000ebf2f0: mov qword ptr [rax + 8], rdx
		_0xffffff8000ebf2f4: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf2fa: lea ecx, [rax - 0x20553070]
		_0xffffff8000ebf300: lea edx, [rax - 0x2055307b]
		_0xffffff8000ebf306: lea esi, [rax + 0xdb518e2]
		_0xffffff8000ebf30c: lea eax, [rax - 0x20553072]
		_0xffffff8000ebf312: jmp _0xffffff8000ec6a1f
		_0xffffff8000ebf317: mov rax, qword ptr [rbp - 0xe8]
		_0xffffff8000ebf31e: mov rcx, rax
		_0xffffff8000ebf321: movabs rdx, 0x6b5ff3f7eacff6ff
		_0xffffff8000ebf32b: xor rcx, rdx
		_0xffffff8000ebf32e: lea rdx, [rax + rax]
		_0xffffff8000ebf332: mov rsi, rdx
		_0xffffff8000ebf335: movabs rdi, 0x1d59fedfe
		_0xffffff8000ebf33f: and rsi, rdi
		_0xffffff8000ebf342: add rsi, rcx
		_0xffffff8000ebf345: add rsi, qword ptr [rbp - 0x78]
		_0xffffff8000ebf349: add rsi, qword ptr [rbp - 0x98]
		_0xffffff8000ebf350: mov rcx, rax
		_0xffffff8000ebf353: lea rdi, [rip + 0x43f]
		_0xffffff8000ebf35a: mov rdi, qword ptr [rdi]
		_0xffffff8000ebf35d: movabs rdi, 0x1bff25516ffe5d57
		_0xffffff8000ebf367: xor rcx, rdi
		_0xffffff8000ebf36a: and edx, 0xdffcbaae
		_0xffffff8000ebf370: add rdx, rcx
		_0xffffff8000ebf373: add rdx, qword ptr [rbp - 0x248]
		_0xffffff8000ebf37a: movabs rcx, 0xe400daae9001a2a9
		_0xffffff8000ebf384: mov cl, byte ptr [rcx + rdx]
		_0xffffff8000ebf387: movabs rdx, 0x94a00c0815300919
		_0xffffff8000ebf391: mov byte ptr [rdx + rsi], cl
		_0xffffff8000ebf394: inc rax
		_0xffffff8000ebf397: mov rcx, qword ptr [rbp - 0x70]
		_0xffffff8000ebf39b: mov qword ptr [rbp - 0xe8], rax
		_0xffffff8000ebf3a2: mov edx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf3a8: lea esi, [rdx - 0x42443150]
		_0xffffff8000ebf3ae: cmp rax, rcx
		_0xffffff8000ebf3b1: cmovne esi, edx
		_0xffffff8000ebf3b4: lea edi, [rdx - 0xc]
		_0xffffff8000ebf3b7: lea edx, [rdx - 0x1ab796f5]
		_0xffffff8000ebf3bd: cmp rax, rcx
		_0xffffff8000ebf3c0: mov rax, r14
		_0xffffff8000ebf3c3: cmove rax, rbx
		_0xffffff8000ebf3c7: mov eax, dword ptr [rax]
		_0xffffff8000ebf3c9: cmove edi, edx
		_0xffffff8000ebf3cc: mov rcx, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf3d3: mov rdx, qword ptr [rbp - 0x398]
		_0xffffff8000ebf3da: mov dword ptr [rdx], edi
		_0xffffff8000ebf3dc: mov dword ptr [rcx], esi
		_0xffffff8000ebf3de: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebf3e4: jmp _0xffffff8000ebea0e
		_0xffffff8000ebf3e9: mov rax, qword ptr [rbp - 0x60]
		_0xffffff8000ebf3ed: mov rcx, rax
		_0xffffff8000ebf3f0: movabs rdx, 0x7fdfffdd7dfbe4fc
		_0xffffff8000ebf3fa: xor rcx, rdx
		_0xffffff8000ebf3fd: add rcx, qword ptr [rbp - 0x58]
		_0xffffff8000ebf401: mov rdx, rax
		_0xffffff8000ebf404: and rdx, 0x7dfbe4fc
		_0xffffff8000ebf40b: lea rcx, [rcx + rdx*2]
		_0xffffff8000ebf40f: add rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebf416: movabs rdx, 0x5a1200b2a43eabbe
		_0xffffff8000ebf420: mov byte ptr [rdx + rcx], 0
		_0xffffff8000ebf424: inc rax
		_0xffffff8000ebf427: mov rcx, qword ptr [rbp - 0x130]
		_0xffffff8000ebf42e: mov qword ptr [rbp - 0x60], rax
		_0xffffff8000ebf432: mov edx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf438: lea esi, [rdx - 0xdb518e0]
		_0xffffff8000ebf43e: lea edi, [rdx - 0x2e0a494e]
		_0xffffff8000ebf444: lea r8d, [rdx + 8]
		_0xffffff8000ebf448: cmp rax, rcx
		_0xffffff8000ebf44b: mov rax, r14
		_0xffffff8000ebf44e: cmove rax, rbx
		_0xffffff8000ebf452: mov eax, dword ptr [rax]
		_0xffffff8000ebf454: cmovne r8d, edi
		_0xffffff8000ebf458: mov rcx, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf45f: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf466: mov dword ptr [rdi], r8d
		_0xffffff8000ebf469: cmovne esi, edx
		_0xffffff8000ebf46c: mov dword ptr [rcx], esi
		_0xffffff8000ebf46e: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebf474: jne _0xffffff8000ebe6bb
		_0xffffff8000ebf47a: jmp _0xffffff8000ebee14
		_0xffffff8000ebf47f: mov eax, dword ptr [rbp - 0x1fc]
		_0xffffff8000ebf485: mov qword ptr [rbp - 0x130], rax
		_0xffffff8000ebf48c: mov qword ptr [rbp - 0xc0], 0
		_0xffffff8000ebf497: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf49d: lea ecx, [rax + 0x20553072]
		_0xffffff8000ebf4a3: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf4a9: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf4b0: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf4b7: mov dword ptr [rdi], ecx
		_0xffffff8000ebf4b9: add eax, -9
		_0xffffff8000ebf4bc: mov dword ptr [rsi], eax
		_0xffffff8000ebf4be: mov dword ptr [rbp - 0x3a4], edx
		_0xffffff8000ebf4c4: jmp _0xffffff8000ebee14
		_0xffffff8000ebf4c9: mov rax, qword ptr [rbp - 0x138]
		_0xffffff8000ebf4d0: movabs rcx, 0x8540c0080e000011
		_0xffffff8000ebf4da: lea rcx, [rax + rcx]
		_0xffffff8000ebf4de: mov qword ptr [rbp - 0x118], rcx
		_0xffffff8000ebf4e5: mov rcx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebf4ec: lea rax, [rax + rcx + 0x40]
		_0xffffff8000ebf4f1: mov qword ptr [rbp - 0x110], rax
		_0xffffff8000ebf4f8: mov qword ptr [rbp - 0x120], 0
		_0xffffff8000ebf503: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf509: lea ecx, [rax - 1]
		_0xffffff8000ebf50c: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf512: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf519: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf520: mov dword ptr [rdi], ecx
		_0xffffff8000ebf522: add eax, 0xdb518d9
		_0xffffff8000ebf527: jmp _0xffffff8000ebe848
		_0xffffff8000ebf52c: mov rax, qword ptr [rbp - 0xb0]
		_0xffffff8000ebf533: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebf53a: mov qword ptr [rax + 8], rcx
		_0xffffff8000ebf53e: mov rax, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebf545: mov rcx, qword ptr [rbp - 0xb0]
		_0xffffff8000ebf54c: mov qword ptr [rcx + 0x10], rax
		_0xffffff8000ebf550: mov rdi, qword ptr [rbp - 0xb0]
		_0xffffff8000ebf557: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ebf561: mov dword ptr [rdi], 5
		_0xffffff8000ebf567: call sub_0xffffff8000eb7d00
		_0xffffff8000ebf56c: mov rax, qword ptr [rbp - 0x40]
		_0xffffff8000ebf570: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebf577: mov qword ptr [rax + 8], rcx
		_0xffffff8000ebf57b: mov rax, qword ptr [rbp - 0x40]
		_0xffffff8000ebf57f: mov dword ptr [rax + 4], 4
		_0xffffff8000ebf586: mov rdi, qword ptr [rbp - 0x40]
		_0xffffff8000ebf58a: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ebf594: mov dword ptr [rdi], 0x27
		_0xffffff8000ebf59a: call sub_0xffffff8000eb7d00
		_0xffffff8000ebf59f: mov qword ptr [rbp - 0xc0], 0
		_0xffffff8000ebf5aa: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf5b0: lea ecx, [rax - 0x20553078]
		_0xffffff8000ebf5b6: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf5bc: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf5c3: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf5ca: mov dword ptr [rdi], ecx
		_0xffffff8000ebf5cc: add eax, 0xdb518e8
		_0xffffff8000ebf5d1: jmp _0xffffff8000ebe848
		_0xffffff8000ebf5d6: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf5dc: lea ecx, [rax + 0xd]
		_0xffffff8000ebf5df: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf5e5: lea rsi, [rip]
		_0xffffff8000ebf5ec: mov rsi, qword ptr [rsi + 0x1688]
		_0xffffff8000ebf5f3: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf5fa: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf601: mov dword ptr [rdi], ecx
		_0xffffff8000ebf603: add eax, 0x2055307c
		_0xffffff8000ebf608: mov dword ptr [rsi], eax
		_0xffffff8000ebf60a: mov dword ptr [rbp - 0x3a4], edx
		_0xffffff8000ebf610: jmp _0xffffff8000ebea0e
		_0xffffff8000ebf615: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebf61c: add rax, 0x18
		_0xffffff8000ebf620: mov rcx, qword ptr [rbp - 0x50]
		_0xffffff8000ebf624: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf628: mov rax, qword ptr [rbp - 0x50]
		_0xffffff8000ebf62c: mov dword ptr [rax + 4], 0x10
		_0xffffff8000ebf633: mov rdi, qword ptr [rbp - 0x50]
		_0xffffff8000ebf637: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ebf641: mov dword ptr [rdi], 0x27
		_0xffffff8000ebf647: call sub_0xffffff8000eb7d00
		_0xffffff8000ebf64c: mov rax, qword ptr [rbp - 0xb8]
		_0xffffff8000ebf653: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebf65a: mov qword ptr [rax + 8], rcx
		_0xffffff8000ebf65e: add rcx, 0x18
		_0xffffff8000ebf662: mov rax, qword ptr [rbp - 0xb8]
		_0xffffff8000ebf669: mov qword ptr [rax + 0x10], rcx
		_0xffffff8000ebf66d: mov rdi, qword ptr [rbp - 0xb8]
		_0xffffff8000ebf674: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ebf67e: mov dword ptr [rdi], 0x2d
		_0xffffff8000ebf684: call sub_0xffffff8000eb7d00
		_0xffffff8000ebf689: mov qword ptr [rbp - 0x68], 0
		_0xffffff8000ebf691: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf697: lea ecx, [rax - 0x2e0a4954]
		_0xffffff8000ebf69d: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf6a3: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf6aa: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf6b1: mov dword ptr [rdi], ecx
		_0xffffff8000ebf6b3: add eax, 0xd1f5b6a6
		_0xffffff8000ebf6b8: jmp _0xffffff8000ebf4bc
		_0xffffff8000ebf6bd: mov eax, dword ptr [rbp - 0x234]
		_0xffffff8000ebf6c3: cmp rax, 0x2fc2e0a1
		_0xffffff8000ebf6c9: sbb rcx, rcx
		_0xffffff8000ebf6cc: and ecx, 1
		_0xffffff8000ebf6cf: shl rcx, 0x20
		_0xffffff8000ebf6d3: add rcx, rax
		_0xffffff8000ebf6d6: add rcx, -0x2fc2e0a1
		_0xffffff8000ebf6dd: mov qword ptr [rbp - 0x138], rcx
		_0xffffff8000ebf6e4: add rcx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebf6eb: mov rax, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebf6f2: mov edx, dword ptr [rax]
		_0xffffff8000ebf6f4: mov esi, dword ptr [rbp - 0x234]
		_0xffffff8000ebf6fa: lea edx, [rdx + rsi - 0x2fc2e0a1]
		_0xffffff8000ebf701: mov dword ptr [rax], edx
		_0xffffff8000ebf703: mov rax, qword ptr [rbp - 0x1f0]
		_0xffffff8000ebf70a: mov qword ptr [rax + 0x10], rcx
		_0xffffff8000ebf70e: mov rax, qword ptr [rbp - 0x1d0]
		_0xffffff8000ebf715: mov rcx, qword ptr [rbp - 0x1f0]
		_0xffffff8000ebf71c: mov qword ptr [rcx + 0x28], rax
		_0xffffff8000ebf720: lea rax, [rbp - 0x23c]
		_0xffffff8000ebf727: mov rcx, qword ptr [rbp - 0x1f0]
		_0xffffff8000ebf72e: mov qword ptr [rcx + 0x18], rax
		_0xffffff8000ebf732: mov rax, qword ptr [rbp - 0x1c0]
		_0xffffff8000ebf739: mov rcx, qword ptr [rbp - 0x1f0]
		_0xffffff8000ebf740: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf744: mov rdi, qword ptr [rbp - 0x1f0]
		_0xffffff8000ebf74b: mov dword ptr [rbp - 0x200], 0
		_0xffffff8000ebf755: mov dword ptr [rdi], 3
		_0xffffff8000ebf75b: call sub_0xffffff8000eb7d00
		_0xffffff8000ebf760: mov rax, qword ptr [rbp - 0x1f0]
		_0xffffff8000ebf767: mov eax, dword ptr [rax + 0x20]
		_0xffffff8000ebf76a: mov dword ptr [rbp - 0x1fc], eax
		_0xffffff8000ebf770: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf776: lea edx, [rcx + 0xf]
		_0xffffff8000ebf779: lea esi, [rcx + 0x294f9b07]
		_0xffffff8000ebf77f: lea edi, [rcx + 0x20553083]
		_0xffffff8000ebf785: lea ecx, [rcx + 0x13b1329a]
		_0xffffff8000ebf78b: jmp _0xffffff8000ebeb0d
		_0xffffff8000ebf790: mov rax, qword ptr [rbp - 0x120]
		_0xffffff8000ebf797: lea rcx, [rax + rax]
		_0xffffff8000ebf79b: mov rdx, rcx
		_0xffffff8000ebf79e: movabs rsi, 0x1e3ffffde
		_0xffffff8000ebf7a8: and rdx, rsi
		_0xffffff8000ebf7ab: mov rsi, rax
		_0xffffff8000ebf7ae: movabs rdi, 0x7abf3ff7f1ffffef
		_0xffffff8000ebf7b8: xor rsi, rdi
		_0xffffff8000ebf7bb: add rsi, qword ptr [rbp - 0x118]
		_0xffffff8000ebf7c2: add rsi, rdx
		_0xffffff8000ebf7c5: mov rdx, qword ptr [rbp - 0x1d8]
		_0xffffff8000ebf7cc: mov dl, byte ptr [rdx + rsi]
		_0xffffff8000ebf7cf: mov rsi, rax
		_0xffffff8000ebf7d2: movabs rdi, 0x6bf6f7e45f7fdfff
		_0xffffff8000ebf7dc: xor rsi, rdi
		_0xffffff8000ebf7df: and ecx, 0xbeffbffe
		_0xffffff8000ebf7e5: add rcx, rsi
		_0xffffff8000ebf7e8: add rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebf7ef: movabs rsi, 0x9409081ba0802019
		_0xffffff8000ebf7f9: mov byte ptr [rsi + rcx], dl
		_0xffffff8000ebf7fc: inc rax
		_0xffffff8000ebf7ff: mov qword ptr [rbp - 0x120], rax
		_0xffffff8000ebf806: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf80c: lea edx, [rcx - 0xdb518de]
		_0xffffff8000ebf812: lea esi, [rcx - 0xdb518e7]
		_0xffffff8000ebf818: lea edi, [rcx - 0xdb518da]
		_0xffffff8000ebf81e: cmp rax, 0x40
		_0xffffff8000ebf822: mov rax, r14
		_0xffffff8000ebf825: cmove rax, rbx
		_0xffffff8000ebf829: mov eax, dword ptr [rax]
		_0xffffff8000ebf82b: cmove edi, esi
		_0xffffff8000ebf82e: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf835: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebf83c: mov dword ptr [r8], edi
		_0xffffff8000ebf83f: cmovne edx, ecx
		_0xffffff8000ebf842: mov dword ptr [rsi], edx
		_0xffffff8000ebf844: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebf84a: jne _0xffffff8000ebe6bb
		_0xffffff8000ebf850: jmp _0xffffff8000ebea0e
		_0xffffff8000ebf855: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebf85c: add rax, 0x18
		_0xffffff8000ebf860: mov rcx, qword ptr [rbp - 0xa0]
		_0xffffff8000ebf867: mov qword ptr [rcx + 8], rax
		_0xffffff8000ebf86b: mov rax, qword ptr [rbp - 0xa0]
		_0xffffff8000ebf872: mov dword ptr [rax + 4], 0x10
		_0xffffff8000ebf879: mov rdi, qword ptr [rbp - 0xa0]
		_0xffffff8000ebf880: mov dword ptr [rbp - 0xec], 0
		_0xffffff8000ebf88a: mov dword ptr [rdi], 0x13
		_0xffffff8000ebf890: call sub_0xffffff8000eb7d00
		_0xffffff8000ebf895: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebf89c: add rax, 0x18
		_0xffffff8000ebf8a0: mov qword ptr [rbp - 0x1c8], rax
		_0xffffff8000ebf8a7: mov rax, qword ptr [rbp - 0x378]
		_0xffffff8000ebf8ae: mov rcx, qword ptr [rax]
		_0xffffff8000ebf8b1: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ebf8b5: mov qword ptr [rcx + 8], rdx
		_0xffffff8000ebf8b9: mov qword ptr [rdx], rcx
		_0xffffff8000ebf8bc: mov qword ptr [rbp - 0x378], rdx
		_0xffffff8000ebf8c3: mov qword ptr [rax], rax
		_0xffffff8000ebf8c6: mov qword ptr [rax + 8], rax
		_0xffffff8000ebf8ca: mov qword ptr [rbp - 0x310], rax
		_0xffffff8000ebf8d1: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf8d7: lea edx, [rcx - 0x2055307a]
		_0xffffff8000ebf8dd: lea esi, [rcx + 1]
		_0xffffff8000ebf8e0: lea edi, [rcx - 4]
		_0xffffff8000ebf8e3: lea ecx, [rcx + 0xdb518da]
		_0xffffff8000ebf8e9: mov r8, qword ptr [rax]
		_0xffffff8000ebf8ec: cmp rax, qword ptr [r8 + 8]
		_0xffffff8000ebf8f0: mov rax, r14
		_0xffffff8000ebf8f3: cmove rax, rbx
		_0xffffff8000ebf8f7: mov eax, dword ptr [rax]
		_0xffffff8000ebf8f9: cmove ecx, edi
		_0xffffff8000ebf8fc: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf903: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebf90a: mov dword ptr [r8], ecx
		_0xffffff8000ebf90d: cmovne edx, esi
		_0xffffff8000ebf910: mov dword ptr [rdi], edx
		_0xffffff8000ebf912: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebf918: jmp _0xffffff8000ebea0e
		_0xffffff8000ebf91d: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf923: lea ecx, [rax - 0x591274c]
		_0xffffff8000ebf929: lea edx, [rax + 0xa477722]
		_0xffffff8000ebf92f: lea esi, [rax - 0x3c1b47d9]
		_0xffffff8000ebf935: lea eax, [rax - 0xdb518d2]
		_0xffffff8000ebf93b: cmp dword ptr [rbp - 0x90], 0
		_0xffffff8000ebf942: jmp _0xffffff8000ebe6f7
		_0xffffff8000ebf947: mov rdi, qword ptr [rbp - 0x3b0]
		_0xffffff8000ebf94e: mov eax, dword ptr [rdi]
		_0xffffff8000ebf950: lea ecx, [rax + 2]
		_0xffffff8000ebf953: mov edx, ecx
		_0xffffff8000ebf955: sar edx, 0x1f
		_0xffffff8000ebf958: shr edx, 0x1e
		_0xffffff8000ebf95b: lea edx, [rax + rdx + 2]
		_0xffffff8000ebf95f: and edx, 0xfffffffc
		_0xffffff8000ebf962: neg edx
		_0xffffff8000ebf964: lea eax, [rax + rdx + 2]
		_0xffffff8000ebf968: cmp ecx, 4
		_0xffffff8000ebf96b: cmovl eax, ecx
		_0xffffff8000ebf96e: mov dword ptr [rbp - 0x2c], eax
		_0xffffff8000ebf971: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf977: lea ecx, [rax - 0x2e0a4957]
		_0xffffff8000ebf97d: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf983: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf98a: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf991: mov dword ptr [rdi], ecx
		_0xffffff8000ebf993: add eax, 0xd1f5b6a8
		_0xffffff8000ebf998: jmp _0xffffff8000ebf4bc
		_0xffffff8000ebf99d: mov eax, dword ptr [rbp - 0x234]
		_0xffffff8000ebf9a3: add eax, -0x40
		_0xffffff8000ebf9a6: mov qword ptr [rbp - 0x60], rax
		_0xffffff8000ebf9aa: mov qword ptr [rbp - 0x128], 0
		_0xffffff8000ebf9b5: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf9bb: lea ecx, [rax + 1]
		_0xffffff8000ebf9be: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebf9c4: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebf9cb: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebf9d2: mov dword ptr [rdi], ecx
		_0xffffff8000ebf9d4: add eax, 0xf24ae728
		_0xffffff8000ebf9d9: jmp _0xffffff8000ebf608
		_0xffffff8000ebf9de: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebf9e4: lea ecx, [rax + 0xdb518de]
		_0xffffff8000ebf9ea: lea edx, [rax + 0x28c539db]
		_0xffffff8000ebf9f0: lea esi, [rax - 0x20553084]
		_0xffffff8000ebf9f6: lea eax, [rax - 0xa]
		_0xffffff8000ebf9f9: cmp dword ptr [rbp - 0x2c], 2
		_0xffffff8000ebf9fd: jmp _0xffffff8000ebe6f7
		_0xffffff8000ebfa02: mov rax, qword ptr [rbp - 0x68]
		_0xffffff8000ebfa06: movabs rcx, 0x7d73bbf782bf7fb7
		_0xffffff8000ebfa10: xor rcx, rax
		_0xffffff8000ebfa13: mov edx, eax
		_0xffffff8000ebfa15: and edx, 0x82bf7fb7
		_0xffffff8000ebfa1b: lea rcx, [rcx + rdx*2]
		_0xffffff8000ebfa1f: add rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ebfa26: movabs rdx, 0x828c44087d408061
		_0xffffff8000ebfa30: mov byte ptr [rdx + rcx], 0
		_0xffffff8000ebfa34: inc rax
		_0xffffff8000ebfa37: mov qword ptr [rbp - 0x68], rax
		_0xffffff8000ebfa3b: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebfa41: lea edx, [rcx + 0x20553074]
		_0xffffff8000ebfa47: lea esi, [rcx + 0x2e0a495c]
		_0xffffff8000ebfa4d: lea edi, [rcx + 6]
		_0xffffff8000ebfa50: cmp rax, 0x38
		_0xffffff8000ebfa54: mov rax, r14
		_0xffffff8000ebfa57: cmove rax, rbx
		_0xffffff8000ebfa5b: mov eax, dword ptr [rax]
		_0xffffff8000ebfa5d: cmove edi, esi
		_0xffffff8000ebfa60: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebfa67: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebfa6e: mov dword ptr [r8], edi
		_0xffffff8000ebfa71: cmovne edx, ecx
		_0xffffff8000ebfa74: mov dword ptr [rsi], edx
		_0xffffff8000ebfa76: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebfa7c: jmp _0xffffff8000ebee14
		_0xffffff8000ebfa81: mov eax, dword ptr [rbp - 0x34]
		_0xffffff8000ebfa84: mov rcx, qword ptr [rbp - 0xd8]
		_0xffffff8000ebfa8b: mov qword ptr [rbp - 0x1d8], rcx
		_0xffffff8000ebfa92: mov dword ptr [rbp - 0x234], eax
		_0xffffff8000ebfa98: mov dword ptr [rbp - 0xcc], eax
		_0xffffff8000ebfa9e: mov qword ptr [rbp - 0xc8], rcx
		_0xffffff8000ebfaa5: mov dword ptr [rbp - 0x30], eax
		_0xffffff8000ebfaa8: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebfaae: lea edx, [rcx - 0x41df1e8d]
		_0xffffff8000ebfab4: lea esi, [rcx - 0x2e0a4954]
		_0xffffff8000ebfaba: lea edi, [rcx - 0xdb518dc]
		_0xffffff8000ebfac0: lea ecx, [rcx - 0xdb518e2]
		_0xffffff8000ebfac6: cmp eax, 0x3f
		_0xffffff8000ebfac9: mov rax, r14
		_0xffffff8000ebfacc: cmova rax, rbx
		_0xffffff8000ebfad0: mov eax, dword ptr [rax]
		_0xffffff8000ebfad2: cmova ecx, edi
		_0xffffff8000ebfad5: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebfadc: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ebfae3: mov dword ptr [r8], ecx
		_0xffffff8000ebfae6: cmovbe edx, esi
		_0xffffff8000ebfae9: mov dword ptr [rdi], edx
		_0xffffff8000ebfaeb: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ebfaf1: ja _0xffffff8000ebe6bb
		_0xffffff8000ebfaf7: jmp _0xffffff8000ebee14
		_0xffffff8000ebfafc: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebfb03: mov dword ptr [rax], 0
		_0xffffff8000ebfb09: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebfb10: mov dword ptr [rax + 4], 0
		_0xffffff8000ebfb17: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebfb1e: mov dword ptr [rax + 8], 0
		_0xffffff8000ebfb25: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebfb2c: mov dword ptr [rax + 0xc], 0
		_0xffffff8000ebfb33: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebfb3a: mov dword ptr [rax + 0x10], 0
		_0xffffff8000ebfb41: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ebfb48: mov dword ptr [rax + 0x14], 0
		_0xffffff8000ebfb4f: mov qword ptr [rbp - 0x78], 0
		_0xffffff8000ebfb57: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebfb5d: lea ecx, [rax - 4]
		_0xffffff8000ebfb60: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ebfb66: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ebfb6d: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ebfb74: mov dword ptr [rdi], ecx
		_0xffffff8000ebfb76: add eax, 5
		_0xffffff8000ebfb79: jmp _0xffffff8000ebf608
		_0xffffff8000ebfb7e: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ebfb84: lea ecx, [rax - 0xdb518e7]
		_0xffffff8000ebfb8a: lea edx, [rax + 0xd275c9b]
		_0xffffff8000ebfb90: lea esi, [rax + 1]
		_0xffffff8000ebfb93: lea eax, [rax - 7]
		_0xffffff8000ebfb96: mov edi, dword ptr [rbp - 0x1fc]
		_0xffffff8000ebfb9c: lea r8d, [rdi + rdi - 0x10]
		_0xffffff8000ebfba1: and r8d, 0xedff7fbc
		_0xffffff8000ebfba8: neg r8d
		_0xffffff8000ebfbab: add edi, -8
		_0xffffff8000ebfbae: xor edi, 0x76ffbfde
		_0xffffff8000ebfbb4: add edi, 0x89004022
		_0xffffff8000ebfbba: cmp edi, r8d
		_0xffffff8000ebfbbd: jmp _0xffffff8000ec6b3e
		_0xffffff8000ebfbc2: mov rbx, qword ptr [rbp - 0x1e0]
		_0xffffff8000ebfbc9: mov eax, dword ptr [rbp - 0x1fc]
		_0xffffff8000ebfbcf: mov dword ptr [rbx + 0x28], eax
		_0xffffff8000ebfbd2: jmp _0xffffff8000ebfbfa
		_0xffffff8000ebfbd4: mov rbx, qword ptr [rbp - 0x1c8]
		_0xffffff8000ebfbdb: mov eax, dword ptr [rbx]
		_0xffffff8000ebfbdd: mov ecx, dword ptr [rbp - 0x238]
		_0xffffff8000ebfbe3: lea eax, [rax + rcx - 0x792bf512]
		_0xffffff8000ebfbea: mov dword ptr [rbx], eax
		_0xffffff8000ebfbec: mov rbx, qword ptr [rbp - 0x1e0]
		_0xffffff8000ebfbf3: mov dword ptr [rbx + 0x28], 0
		_0xffffff8000ebfbfa: add rsp, 0x3d8
		_0xffffff8000ebfc01: pop rbx
		_0xffffff8000ebfc02: pop r12
		_0xffffff8000ebfc04: pop r13
		_0xffffff8000ebfc06: pop r14
		_0xffffff8000ebfc08: pop r15
		_0xffffff8000ebfc0a: pop rbp
		_0xffffff8000ebfc0b: ret 
		_0xffffff8000ebfc0c: mov rdi, qword ptr [rbp - 0x3b0]
		_0xffffff8000ebfc13: mov rbx, qword ptr [rdi + 8]
		_0xffffff8000ebfc17: mov qword ptr [rbp - 0x3f0], rbx
		_0xffffff8000ebfc1e: mov rbx, qword ptr [rbx + 8]
		_0xffffff8000ebfc22: mov qword ptr [rbp - 0x3e0], rbx
		_0xffffff8000ebfc29: mov rbx, qword ptr [rbp - 0x3f0]
		_0xffffff8000ebfc30: mov r14, qword ptr [rbx + 0x10]
		_0xffffff8000ebfc34: mov rbx, qword ptr [rbp - 0x3e0]
		_0xffffff8000ebfc3b: movzx eax, byte ptr [rbx + 3]
		_0xffffff8000ebfc3f: mov ecx, eax
		_0xffffff8000ebfc41: and ecx, 0x5f
		_0xffffff8000ebfc44: xor eax, 0x4fbf525f
		_0xffffff8000ebfc49: lea eax, [rax + rcx*2 - 0x4fbf525f]
		_0xffffff8000ebfc50: movsxd r15, eax
		_0xffffff8000ebfc53: movabs r12, 0x3f2bbfedbe7cfbf7
		_0xffffff8000ebfc5d: mov r13, r15
		_0xffffff8000ebfc60: and r13, r12
		_0xffffff8000ebfc63: xor r15, r12
		_0xffffff8000ebfc66: lea r15, [r15 + r13*2]
		_0xffffff8000ebfc6a: add r15, qword ptr [r14 + 0x28]
		_0xffffff8000ebfc6e: movabs r12, 0xc0d4401241830409
		_0xffffff8000ebfc78: mov al, byte ptr [r12 + r15]
		_0xffffff8000ebfc7c: mov cl, al
		_0xffffff8000ebfc7e: add cl, cl
		_0xffffff8000ebfc80: xor al, 0xd
		_0xffffff8000ebfc82: and cl, 0x1a
		_0xffffff8000ebfc85: add cl, al
		_0xffffff8000ebfc87: movzx r15d, cl
		_0xffffff8000ebfc8b: lea r12, [r15 - 0xd]
		_0xffffff8000ebfc8f: cmp r15b, 0xd
		_0xffffff8000ebfc93: sbb r15, r15
		_0xffffff8000ebfc96: and r15, 0x100
		_0xffffff8000ebfc9d: mov r13, r12
		_0xffffff8000ebfca0: and r13, r15
		_0xffffff8000ebfca3: movabs rax, 0x25224912a2849514
		_0xffffff8000ebfcad: mov rcx, r12
		_0xffffff8000ebfcb0: and rcx, rax
		_0xffffff8000ebfcb3: movabs rdx, 0xa44922545092a28
		_0xffffff8000ebfcbd: add rdx, r15
		_0xffffff8000ebfcc0: sub rdx, rcx
		_0xffffff8000ebfcc3: and rdx, rax
		_0xffffff8000ebfcc6: add r13, r13
		_0xffffff8000ebfcc9: add r13, rdx
		_0xffffff8000ebfccc: movabs r15, 0x484924a51452484a
		_0xffffff8000ebfcd6: mov rax, r12
		_0xffffff8000ebfcd9: and rax, r15
		_0xffffff8000ebfcdc: movabs rcx, 0x9092494a28a49094
		_0xffffff8000ebfce6: sub rcx, rax
		_0xffffff8000ebfce9: and rcx, r15
		_0xffffff8000ebfcec: movabs r15, 0x92949248492922a1
		_0xffffff8000ebfcf6: and r12, r15
		_0xffffff8000ebfcf9: movabs rax, 0x2529249092524542
		_0xffffff8000ebfd03: sub rax, r12
		_0xffffff8000ebfd06: and rax, r15
		_0xffffff8000ebfd09: add rax, rcx
		_0xffffff8000ebfd0c: lea r15, [rax + r13]
		_0xffffff8000ebfd10: mov ecx, 1
		_0xffffff8000ebfd15: sub ecx, r15d
		_0xffffff8000ebfd18: mov edx, ecx
		_0xffffff8000ebfd1a: and edx, r15d
		_0xffffff8000ebfd1d: xor ecx, r15d
		_0xffffff8000ebfd20: lea ecx, [rcx + rdx*2]
		_0xffffff8000ebfd23: and ecx, 0x3f
		_0xffffff8000ebfd26: mov r12, 0xffffffff81ecd709
		_0xffffff8000ebfd2d: shl r12, cl
		_0xffffff8000ebfd30: mov esi, 0x15
		_0xffffff8000ebfd35: shl rsi, cl
		_0xffffff8000ebfd38: mov rdi, rsi
		_0xffffff8000ebfd3b: sar rdi, 1
		_0xffffff8000ebfd3e: mov rdx, rdi
		_0xffffff8000ebfd41: imul rdx, rdx
		_0xffffff8000ebfd45: sub r12, rdx
		_0xffffff8000ebfd48: lea r13, [rax + r13 + 0x7e1328f7]
		_0xffffff8000ebfd50: movabs rdx, 0x8618618618618619
		_0xffffff8000ebfd5a: mov rax, r13
		_0xffffff8000ebfd5d: mul rdx
		_0xffffff8000ebfd60: mov rax, r13
		_0xffffff8000ebfd63: sub rax, rdx
		_0xffffff8000ebfd66: shr rax, 1
		_0xffffff8000ebfd69: add rax, rdx
		_0xffffff8000ebfd6c: shr rax, 4
		_0xffffff8000ebfd70: imul rdx, rax, 0x15
		_0xffffff8000ebfd74: mov r8, rax
		_0xffffff8000ebfd77: imul r8, r8
		_0xffffff8000ebfd7b: sub r12, r8
		_0xffffff8000ebfd7e: and rsi, 1
		_0xffffff8000ebfd82: neg rsi
		_0xffffff8000ebfd85: and rsi, rax
		_0xffffff8000ebfd88: add rsi, r12
		_0xffffff8000ebfd8b: sub r13, rdx
		_0xffffff8000ebfd8e: shl r13, cl
		_0xffffff8000ebfd91: add r13, rsi
		_0xffffff8000ebfd94: add rax, rdi
		_0xffffff8000ebfd97: imul rax, rax
		_0xffffff8000ebfd9b: add rax, r13
		_0xffffff8000ebfd9e: movabs r12, 0x2a2820449509494
		_0xffffff8000ebfda8: and r12, rax
		_0xffffff8000ebfdab: mov r13d, 0xe0240d6d
		_0xffffff8000ebfdb1: xor r13, r15
		_0xffffff8000ebfdb4: movabs r15, 0x27f1f7ef9f8a72b2
		_0xffffff8000ebfdbe: add r15, r13
		_0xffffff8000ebfdc1: add r13, r13
		_0xffffff8000ebfdc4: movabs rcx, 0x4fe3efdf3f14e564
		_0xffffff8000ebfdce: and rcx, r13
		_0xffffff8000ebfdd1: sub r15, rcx
		_0xffffff8000ebfdd4: movabs r13, 0x580e081080518021
		_0xffffff8000ebfdde: and r13, r15
		_0xffffff8000ebfde1: movabs rcx, 0xd80e081080518021
		_0xffffff8000ebfdeb: xor rcx, r15
		_0xffffff8000ebfdee: lea r15, [rcx + r13*2]
		_0xffffff8000ebfdf2: movabs r13, 0x22a2922449509494
		_0xffffff8000ebfdfc: mov rcx, r15
		_0xffffff8000ebfdff: and rcx, r13
		_0xffffff8000ebfe02: movabs rdx, 0x545244892a12928
		_0xffffff8000ebfe0c: add rdx, rcx
		_0xffffff8000ebfe0f: sub rdx, r12
		_0xffffff8000ebfe12: and rdx, r13
		_0xffffff8000ebfe15: and r12, r15
		_0xffffff8000ebfe18: add r12, r12
		_0xffffff8000ebfe1b: add r12, rdx
		_0xffffff8000ebfe1e: movabs r13, 0x440454814082920
		_0xffffff8000ebfe28: and r13, rax
		_0xffffff8000ebfe2b: movabs rcx, 0x14544549148a2921
		_0xffffff8000ebfe35: mov rdx, r15
		_0xffffff8000ebfe38: and rdx, rcx
		_0xffffff8000ebfe3b: movabs rsi, 0x8a88a9229145242
		_0xffffff8000ebfe45: add rsi, rdx
		_0xffffff8000ebfe48: sub rsi, r13
		_0xffffff8000ebfe4b: and rsi, rcx
		_0xffffff8000ebfe4e: and r13, r15
		_0xffffff8000ebfe51: add r13, r13
		_0xffffff8000ebfe54: add r13, rsi
		_0xffffff8000ebfe57: add r13, r12
		_0xffffff8000ebfe5a: movabs r12, 0x49012892a204420a
		_0xffffff8000ebfe64: and r12, rax
		_0xffffff8000ebfe67: mov rax, r12
		_0xffffff8000ebfe6a: and rax, r15
		_0xffffff8000ebfe6d: movabs rcx, 0x9092892a225424a
		_0xffffff8000ebfe77: and rcx, r15
		_0xffffff8000ebfe7a: xor rcx, r12
		_0xffffff8000ebfe7d: add rax, rax
		_0xffffff8000ebfe80: add rax, rcx
		_0xffffff8000ebfe83: add rax, r13
		_0xffffff8000ebfe86: mov r15, qword ptr [r14 + 0x228]
		_0xffffff8000ebfe8d: mov qword ptr [rbp - 0x3b8], r15
		_0xffffff8000ebfe94: mov ecx, 0xa0553d0f
		_0xffffff8000ebfe99: mov eax, dword ptr [r15 + rax*4]
		_0xffffff8000ebfe9d: xor eax, ecx
		_0xffffff8000ebfe9f: movzx edx, byte ptr [rbx + 4]
		_0xffffff8000ebfea3: mov esi, edx
		_0xffffff8000ebfea5: and esi, 0xef
		_0xffffff8000ebfeab: xor edx, 0x7efffdef
		_0xffffff8000ebfeb1: lea edx, [rdx + rsi*2 - 0x7efffdef]
		_0xffffff8000ebfeb8: movsxd r12, edx
		_0xffffff8000ebfebb: movabs r13, 0x558dfd5bee73fdbe
		_0xffffff8000ebfec5: mov rdx, r12
		_0xffffff8000ebfec8: and rdx, r13
		_0xffffff8000ebfecb: xor r12, r13
		_0xffffff8000ebfece: lea r12, [r12 + rdx*2]
		_0xffffff8000ebfed2: add r12, qword ptr [r14 + 0x30]
		_0xffffff8000ebfed6: movabs r13, 0xaa7202a4118c0242
		_0xffffff8000ebfee0: mov dl, byte ptr [r13 + r12]
		_0xffffff8000ebfee5: mov sil, dl
		_0xffffff8000ebfee8: add sil, sil
		_0xffffff8000ebfeeb: xor dl, 0x7f
		_0xffffff8000ebfeee: add dl, sil
		_0xffffff8000ebfef1: movzx r12d, dl
		_0xffffff8000ebfef5: mov r13, 0xffffffffd68eb4cd
		_0xffffff8000ebfefc: sub r13, r12
		_0xffffff8000ebfeff: lea rdx, [r12 + 0x29714ab4]
		_0xffffff8000ebff07: mov rsi, r13
		_0xffffff8000ebff0a: and rsi, rdx
		_0xffffff8000ebff0d: xor r13, rdx
		_0xffffff8000ebff10: lea r13, [r13 + rsi*2]
		_0xffffff8000ebff15: mov rdx, r13
		_0xffffff8000ebff18: and rdx, r12
		_0xffffff8000ebff1b: xor r13, r12
		_0xffffff8000ebff1e: cmp r12b, 0x7f
		_0xffffff8000ebff22: sbb r12, r12
		_0xffffff8000ebff25: and r12, 0x100
		_0xffffff8000ebff2c: add r12, r13
		_0xffffff8000ebff2f: lea r12, [r12 + rdx*2]
		_0xffffff8000ebff33: lea r13, [r12 + r12]
		_0xffffff8000ebff37: movabs rdx, 0x11ceee71b
		_0xffffff8000ebff41: or rdx, r13
		_0xffffff8000ebff44: movabs rsi, 0xfffffffee31118e4
		_0xffffff8000ebff4e: xor rsi, rdx
		_0xffffff8000ebff51: movabs rdx, 0xfffffffee31118e5
		_0xffffff8000ebff5b: or rdx, r13
		_0xffffff8000ebff5e: movabs rdi, 0x11ceee71a
		_0xffffff8000ebff68: xor rdi, rdx
		_0xffffff8000ebff6b: mov rdx, rdi
		_0xffffff8000ebff6e: xor rdx, rsi
		_0xffffff8000ebff71: mov r8, rdi
		_0xffffff8000ebff74: shr r8, 1
		_0xffffff8000ebff77: mov r9, rsi
		_0xffffff8000ebff7a: shr r9, 1
		_0xffffff8000ebff7d: add r9, r8
		_0xffffff8000ebff80: imul edi, esi
		_0xffffff8000ebff83: and rdi, 1
		_0xffffff8000ebff87: add rdi, r9
		_0xffffff8000ebff8a: shr rdx, 1
		_0xffffff8000ebff8d: sub rdi, rdx
		_0xffffff8000ebff90: movabs rdx, 0x1fdedf9fb7feafae
		_0xffffff8000ebff9a: and rdi, rdx
		_0xffffff8000ebff9d: xor rdi, rdx
		_0xffffff8000ebffa0: movabs rdx, 0x3ffffffffffffffe
		_0xffffff8000ebffaa: xor r12, rdx
		_0xffffff8000ebffad: movabs rsi, 0x2021206048015052
		_0xffffff8000ebffb7: and rsi, r13
		_0xffffff8000ebffba: xor rsi, 2
		_0xffffff8000ebffbe: add rsi, r12
		_0xffffff8000ebffc1: add rsi, rdi
		_0xffffff8000ebffc4: mov r12, qword ptr [r14 + 0x210]
		_0xffffff8000ebffcb: mov qword ptr [rbp - 0x3c0], r12
		_0xffffff8000ebffd2: mov r13, qword ptr [r14 + 0x218]
		_0xffffff8000ebffd9: mov qword ptr [rbp - 0x3d0], r13
		_0xffffff8000ebffe0: xor ecx, dword ptr [r12 + rsi*4]
		_0xffffff8000ebffe4: lea esi, [rax + rcx]
		_0xffffff8000ebffe7: and ecx, eax
		_0xffffff8000ebffe9: add ecx, ecx
		_0xffffff8000ebffeb: sub esi, ecx
		_0xffffff8000ebffed: movzx eax, byte ptr [rbx + 9]
		_0xffffff8000ebfff1: mov ecx, eax
		_0xffffff8000ebfff3: xor ecx, 0x59cf8fff
		_0xffffff8000ebfff9: lea eax, [rcx + rax*2 - 0x59cf8fff]
		_0xffffff8000ec0000: movsxd rax, eax
		_0xffffff8000ec0003: movabs rcx, 0x3ffeefddfe7fabf5
		_0xffffff8000ec000d: mov rdi, rax
		_0xffffff8000ec0010: and rdi, rcx
		_0xffffff8000ec0013: xor rax, rcx
		_0xffffff8000ec0016: lea rax, [rax + rdi*2]
		_0xffffff8000ec001a: add rax, qword ptr [r14 + 0x58]
		_0xffffff8000ec001e: movabs rcx, 0xc00110220180540b
		_0xffffff8000ec0028: mov al, byte ptr [rcx + rax]
		_0xffffff8000ec002b: mov cl, al
		_0xffffff8000ec002d: add cl, cl
		_0xffffff8000ec002f: xor al, 0x1e
		_0xffffff8000ec0031: and cl, 0x3c
		_0xffffff8000ec0034: add cl, al
		_0xffffff8000ec0036: add cl, 0xf4
		_0xffffff8000ec0039: movzx eax, cl
		_0xffffff8000ec003c: mov rcx, rax
		_0xffffff8000ec003f: and rcx, 0xc6
		_0xffffff8000ec0046: mov rdi, rax
		_0xffffff8000ec0049: xor rdi, 0x3d00c6c6
		_0xffffff8000ec0050: lea rcx, [rdi + rcx*2]
		_0xffffff8000ec0054: cmp al, 0x12
		_0xffffff8000ec0056: sbb rax, rax
		_0xffffff8000ec0059: and rax, 0x100
		_0xffffff8000ec005f: mov rdi, rcx
		_0xffffff8000ec0062: and rdi, rax
		_0xffffff8000ec0065: xor rax, rcx
		_0xffffff8000ec0068: lea rax, [rax + rdi*2]
		_0xffffff8000ec006c: mov rcx, rax
		_0xffffff8000ec006f: shl rcx, 0x21
		_0xffffff8000ec0073: movabs rdi, 0x85fe725000000000
		_0xffffff8000ec007d: and rdi, rcx
		_0xffffff8000ec0080: shl rax, 0x20
		_0xffffff8000ec0084: movabs rcx, 0xc2ff392800000000
		_0xffffff8000ec008e: xor rcx, rax
		_0xffffff8000ec0091: add rcx, rdi
		_0xffffff8000ec0094: mov rax, rcx
		_0xffffff8000ec0097: sar rax, 0x20
		_0xffffff8000ec009b: xor rax, 0x8a9a7bf
		_0xffffff8000ec00a1: movabs rdi, 0x77ff1ffed64a50c4
		_0xffffff8000ec00ab: add rdi, rax
		_0xffffff8000ec00ae: add rax, rax
		_0xffffff8000ec00b1: movabs r8, 0xeffe3ffdac94a188
		_0xffffff8000ec00bb: and r8, rax
		_0xffffff8000ec00be: sub rdi, r8
		_0xffffff8000ec00c1: sar rcx, 0x1f
		_0xffffff8000ec00c5: movabs rax, 0xeffe3ffdbdc7eef6
		_0xffffff8000ec00cf: and rax, rcx
		_0xffffff8000ec00d2: movabs rcx, 0x8800e001211c0885
		_0xffffff8000ec00dc: add rcx, rax
		_0xffffff8000ec00df: mov rax, rdi
		_0xffffff8000ec00e2: and rax, rcx
		_0xffffff8000ec00e5: xor rcx, rdi
		_0xffffff8000ec00e8: lea rax, [rcx + rax*2]
		_0xffffff8000ec00ec: xor esi, dword ptr [r13 + rax*4]
		_0xffffff8000ec00f1: movzx eax, byte ptr [rbx + 0xe]
		_0xffffff8000ec00f5: mov ecx, eax
		_0xffffff8000ec00f7: and ecx, 0x7b
		_0xffffff8000ec00fa: xor eax, 0x5f767f7b
		_0xffffff8000ec00ff: lea eax, [rax + rcx*2 - 0x5f767f7b]
		_0xffffff8000ec0106: movsxd rax, eax
		_0xffffff8000ec0109: movabs rcx, 0x3defcbfedfffd2ff
		_0xffffff8000ec0113: mov rdi, rax
		_0xffffff8000ec0116: and rdi, rcx
		_0xffffff8000ec0119: xor rax, rcx
		_0xffffff8000ec011c: lea rax, [rax + rdi*2]
		_0xffffff8000ec0120: add rax, qword ptr [r14 + 0x80]
		_0xffffff8000ec0127: movabs rcx, 0xc210340120002d01
		_0xffffff8000ec0131: mov al, byte ptr [rcx + rax]
		_0xffffff8000ec0134: mov cl, al
		_0xffffff8000ec0136: add cl, cl
		_0xffffff8000ec0138: xor al, 0x13
		_0xffffff8000ec013a: and cl, 0x26
		_0xffffff8000ec013d: add cl, al
		_0xffffff8000ec013f: add cl, 0xfe
		_0xffffff8000ec0142: movzx eax, cl
		_0xffffff8000ec0145: mov ecx, eax
		_0xffffff8000ec0147: xor ecx, 0x4ff09cc4
		_0xffffff8000ec014d: movzx edi, al
		_0xffffff8000ec0150: add rdi, rdi
		_0xffffff8000ec0153: and edi, 0x188
		_0xffffff8000ec0159: add edi, ecx
		_0xffffff8000ec015b: cmp al, 0x11
		_0xffffff8000ec015d: sbb rax, rax
		_0xffffff8000ec0160: and eax, 0x100
		_0xffffff8000ec0165: mov ecx, edi
		_0xffffff8000ec0167: and ecx, eax
		_0xffffff8000ec0169: xor eax, edi
		_0xffffff8000ec016b: lea eax, [rax + rcx*2]
		_0xffffff8000ec016e: shl rax, 0x20
		_0xffffff8000ec0172: movabs rcx, 0x7ae5fe4400000000
		_0xffffff8000ec017c: and rcx, rax
		_0xffffff8000ec017f: movabs rdi, 0x851a01bb00000000
		_0xffffff8000ec0189: and rdi, rax
		_0xffffff8000ec018c: lea rax, [rdi + rcx + 0x4496eb22]
		_0xffffff8000ec0194: movabs rcx, 0xb00f632b4496eb22
		_0xffffff8000ec019e: sub rcx, rax
		_0xffffff8000ec01a1: lea rcx, [rcx + rax - 0x4496eb22]
		_0xffffff8000ec01a9: add rax, -0x4496eb22
		_0xffffff8000ec01af: mov rdi, rcx
		_0xffffff8000ec01b2: and rdi, rax
		_0xffffff8000ec01b5: xor rax, rcx
		_0xffffff8000ec01b8: lea rax, [rax + rdi*2]
		_0xffffff8000ec01bc: mov rcx, rax
		_0xffffff8000ec01bf: sar rcx, 0x1e
		_0xffffff8000ec01c3: movabs rdi, 0x441288088410020
		_0xffffff8000ec01cd: and rdi, rcx
		_0xffffff8000ec01d0: mov rcx, rax
		_0xffffff8000ec01d3: sar rcx, 0x1f
		_0xffffff8000ec01d7: movabs r8, 0xf3bc977f77bcffde
		_0xffffff8000ec01e1: and r8, rcx
		_0xffffff8000ec01e4: movabs rcx, 0x8621b44044218011
		_0xffffff8000ec01ee: xor rcx, r8
		_0xffffff8000ec01f1: lea rcx, [rdi + rcx + 0x5ac799e2]
		_0xffffff8000ec01f9: movabs rdi, 0x4922914922491511
		_0xffffff8000ec0203: and rdi, rcx
		_0xffffff8000ec0206: sar rax, 0x20
		_0xffffff8000ec020a: movabs r8, 0x79de4bbfbbde7fef
		_0xffffff8000ec0214: xor r8, rax
		_0xffffff8000ec0217: add r8, -0x5ac799e2
		_0xffffff8000ec021e: movabs rax, 0x922914922491511
		_0xffffff8000ec0228: mov r9, r8
		_0xffffff8000ec022b: and r9, rax
		_0xffffff8000ec022e: movabs r10, 0x245229244922a22
		_0xffffff8000ec0238: add r10, r9
		_0xffffff8000ec023b: sub r10, rdi
		_0xffffff8000ec023e: and r10, rax
		_0xffffff8000ec0241: and rdi, r8
		_0xffffff8000ec0244: add rdi, rdi
		_0xffffff8000ec0247: add rdi, r10
		_0xffffff8000ec024a: movabs rax, 0x124924949492424a
		_0xffffff8000ec0254: mov r9, rcx
		_0xffffff8000ec0257: and r9, rax
		_0xffffff8000ec025a: movabs r10, 0x492492929248494
		_0xffffff8000ec0264: add r10, r9
		_0xffffff8000ec0267: movabs r9, 0x924924949492424a
		_0xffffff8000ec0271: and r9, r8
		_0xffffff8000ec0274: sub r10, r9
		_0xffffff8000ec0277: and r10, rax
		_0xffffff8000ec027a: and r9, rcx
		_0xffffff8000ec027d: add r9, r9
		_0xffffff8000ec0280: add r9, r10
		_0xffffff8000ec0283: add r9, rdi
		_0xffffff8000ec0286: movabs rax, 0x24944a224924a8a4
		_0xffffff8000ec0290: mov rdi, rcx
		_0xffffff8000ec0293: and rdi, rax
		_0xffffff8000ec0296: movabs r10, 0x928944492495148
		_0xffffff8000ec02a0: add r10, rdi
		_0xffffff8000ec02a3: and r8, rax
		_0xffffff8000ec02a6: sub r10, r8
		_0xffffff8000ec02a9: and r10, rax
		_0xffffff8000ec02ac: and r8, rcx
		_0xffffff8000ec02af: add r8, r8
		_0xffffff8000ec02b2: add r8, r10
		_0xffffff8000ec02b5: add r8, r9
		_0xffffff8000ec02b8: mov rax, qword ptr [r14 + 0x220]
		_0xffffff8000ec02bf: mov qword ptr [rbp - 0x3d8], rax
		_0xffffff8000ec02c6: xor esi, dword ptr [rax + r8*4]
		_0xffffff8000ec02ca: mov edi, 0xf
		_0xffffff8000ec02cf: sub edi, esi
		_0xffffff8000ec02d1: mov ecx, edi
		_0xffffff8000ec02d3: xor ecx, esi
		_0xffffff8000ec02d5: mov r8d, esi
		_0xffffff8000ec02d8: and r8d, edi
		_0xffffff8000ec02db: mov r9d, edi
		_0xffffff8000ec02de: and r9d, 0x4a52484a
		_0xffffff8000ec02e5: mov r10d, esi
		_0xffffff8000ec02e8: and r10d, 0xa
		_0xffffff8000ec02ec: add r10d, 4
		_0xffffff8000ec02f0: sub r10d, r9d
		_0xffffff8000ec02f3: and r9d, esi
		_0xffffff8000ec02f6: add r9d, r9d
		_0xffffff8000ec02f9: and r10d, 0xa
		_0xffffff8000ec02fd: add r10d, r9d
		_0xffffff8000ec0300: and ecx, 1
		_0xffffff8000ec0303: and r8d, 1
		_0xffffff8000ec0307: add r8d, r8d
		_0xffffff8000ec030a: add r8d, ecx
		_0xffffff8000ec030d: and edi, 0x14
		_0xffffff8000ec0310: mov ecx, esi
		_0xffffff8000ec0312: and ecx, 0x14
		_0xffffff8000ec0315: add ecx, edi
		_0xffffff8000ec0317: add ecx, r8d
		_0xffffff8000ec031a: add ecx, r10d
		_0xffffff8000ec031d: and ecx, 0x1f
		_0xffffff8000ec0320: mov edi, esi
		_0xffffff8000ec0322: and edi, 0xe1c3a698
		_0xffffff8000ec0328: shr edi, cl
		_0xffffff8000ec032a: xor edi, 0x9c10d56
		_0xffffff8000ec0330: mov r8d, esi
		_0xffffff8000ec0333: and r8d, 0x1e3c5967
		_0xffffff8000ec033a: shr r8d, cl
		_0xffffff8000ec033d: xor r8d, 0x9c10d56
		_0xffffff8000ec0344: lea ecx, [r8 + rdi]
		_0xffffff8000ec0348: and r8d, edi
		_0xffffff8000ec034b: add r8d, r8d
		_0xffffff8000ec034e: sub ecx, r8d
		_0xffffff8000ec0351: and ecx, 0xec
		_0xffffff8000ec0357: neg ecx
		_0xffffff8000ec0359: mov edi, esi
		_0xffffff8000ec035b: shr edi, 0xf
		_0xffffff8000ec035e: and edi, 0xec
		_0xffffff8000ec0364: mov r8d, esi
		_0xffffff8000ec0367: shr r8d, 0x10
		_0xffffff8000ec036b: xor r8d, 0x76
		_0xffffff8000ec036f: add r8d, edi
		_0xffffff8000ec0372: mov edi, r8d
		_0xffffff8000ec0375: and edi, ecx
		_0xffffff8000ec0377: xor r8d, ecx
		_0xffffff8000ec037a: lea ecx, [r8 + rdi*2]
		_0xffffff8000ec037e: xor ecx, 0xb0b29ad6
		_0xffffff8000ec0384: lea edi, [rcx + rcx]
		_0xffffff8000ec0387: and edi, 0x40
		_0xffffff8000ec038a: neg edi
		_0xffffff8000ec038c: lea ecx, [rcx + rdi + 0xa0]
		_0xffffff8000ec0393: mov dil, cl
		_0xffffff8000ec0396: add dil, 0x7a
		_0xffffff8000ec039a: mov al, dil
		_0xffffff8000ec039d: and al, 3
		_0xffffff8000ec039f: mov r8b, 0xa2
		_0xffffff8000ec03a2: mul r8b
		_0xffffff8000ec03a5: mov r8b, al
		_0xffffff8000ec03a8: sar dil, 2
		_0xffffff8000ec03ac: mov al, dil
		_0xffffff8000ec03af: add al, 0x5e
		_0xffffff8000ec03b1: mul al
		_0xffffff8000ec03b3: sub r8b, al
		_0xffffff8000ec03b6: mov al, dil
		_0xffffff8000ec03b9: add al, 0xa2
		_0xffffff8000ec03bb: mul al
		_0xffffff8000ec03bd: add al, r8b
		_0xffffff8000ec03c0: mov dil, 0x31
		_0xffffff8000ec03c3: mul dil
		_0xffffff8000ec03c6: mov dil, 0x1a
		_0xffffff8000ec03c9: sub dil, al
		_0xffffff8000ec03cc: add al, 0xc
		_0xffffff8000ec03ce: mov r8b, al
		_0xffffff8000ec03d1: xor r8b, dil
		_0xffffff8000ec03d4: and dil, al
		_0xffffff8000ec03d7: add dil, dil
		_0xffffff8000ec03da: add dil, r8b
		_0xffffff8000ec03dd: and dil, al
		_0xffffff8000ec03e0: xor cl, 0x64
		_0xffffff8000ec03e3: mov r8b, cl
		_0xffffff8000ec03e6: add r8b, r8b
		_0xffffff8000ec03e9: add cl, 0x77
		_0xffffff8000ec03ec: and r8b, 0xee
		_0xffffff8000ec03f0: sub cl, r8b
		_0xffffff8000ec03f3: mov r8b, cl
		_0xffffff8000ec03f6: add r8b, r8b
		_0xffffff8000ec03f9: xor cl, 0xfe
		_0xffffff8000ec03fc: and r8b, 0xfc
		_0xffffff8000ec0400: add r8b, cl
		_0xffffff8000ec0403: mov cl, dil
		_0xffffff8000ec0406: xor cl, r8b
		_0xffffff8000ec0409: and r8b, dil
		_0xffffff8000ec040c: add r8b, r8b
		_0xffffff8000ec040f: add r8b, cl
		_0xffffff8000ec0412: movzx ecx, r8b
		_0xffffff8000ec0416: cmp cl, 0x11
		_0xffffff8000ec0419: sbb rdi, rdi
		_0xffffff8000ec041c: and edi, 0x100
		_0xffffff8000ec0422: add edi, ecx
		_0xffffff8000ec0424: add edi, 0x56027765
		_0xffffff8000ec042a: shl rdi, 0x20
		_0xffffff8000ec042e: movabs rcx, 0xa9fd888a00000000
		_0xffffff8000ec0438: add rcx, rdi
		_0xffffff8000ec043b: mov rdi, rcx
		_0xffffff8000ec043e: sar rdi, 0x1f
		_0xffffff8000ec0442: movabs r8, 0xb3cffb5f7b95ebfc
		_0xffffff8000ec044c: and r8, rdi
		_0xffffff8000ec044f: sar rcx, 0x20
		_0xffffff8000ec0453: movabs rdi, 0x59e7fdafbdcaf5fe
		_0xffffff8000ec045d: xor rdi, rcx
		_0xffffff8000ec0460: add rdi, r8
		_0xffffff8000ec0463: add rdi, qword ptr [r14 + 0xc0]
		_0xffffff8000ec046a: movabs rcx, 0xa618025042350a02
		_0xffffff8000ec0474: mov cl, byte ptr [rcx + rdi]
		_0xffffff8000ec0477: mov dil, cl
		_0xffffff8000ec047a: add dil, dil
		_0xffffff8000ec047d: xor cl, 0x3c
		_0xffffff8000ec0480: and dil, 0x78
		_0xffffff8000ec0484: add dil, cl
		_0xffffff8000ec0487: add dil, 0xfc
		_0xffffff8000ec048b: movzx ecx, dil
		_0xffffff8000ec048f: cmp cl, 0x38
		_0xffffff8000ec0492: sbb rdi, rdi
		_0xffffff8000ec0495: and edi, 0x100
		_0xffffff8000ec049b: add edi, ecx
		_0xffffff8000ec049d: add edi, 0x487c2840
		_0xffffff8000ec04a3: shl rdi, 0x20
		_0xffffff8000ec04a7: movabs rcx, 0xb783d78800000000
		_0xffffff8000ec04b1: add rcx, rdi
		_0xffffff8000ec04b4: mov rdi, rcx
		_0xffffff8000ec04b7: sar rdi, 0x1f
		_0xffffff8000ec04bb: movabs r8, 0x3bbff3ceae7df3fa
		_0xffffff8000ec04c5: and r8, rdi
		_0xffffff8000ec04c8: sar rcx, 0x20
		_0xffffff8000ec04cc: movabs rdi, 0x3ddff9e7573ef9fd
		_0xffffff8000ec04d6: xor rdi, rcx
		_0xffffff8000ec04d9: add rdi, r8
		_0xffffff8000ec04dc: mov rax, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec04e3: lea rcx, [rax + rdi*4]
		_0xffffff8000ec04e7: movzx edi, byte ptr [rbx + 8]
		_0xffffff8000ec04eb: mov r8d, edi
		_0xffffff8000ec04ee: and r8d, 0xdf
		_0xffffff8000ec04f5: xor edi, 0x7fdb7fdf
		_0xffffff8000ec04fb: lea edi, [rdi + r8*2 - 0x7fdb7fdf]
		_0xffffff8000ec0503: movsxd rdi, edi
		_0xffffff8000ec0506: movabs r8, 0x56fae2f9e320b6fd
		_0xffffff8000ec0510: mov r9, rdi
		_0xffffff8000ec0513: and r9, r8
		_0xffffff8000ec0516: xor rdi, r8
		_0xffffff8000ec0519: lea rdi, [rdi + r9*2]
		_0xffffff8000ec051d: add rdi, qword ptr [r14 + 0x50]
		_0xffffff8000ec0521: movabs r8, 0xa9051d061cdf4903
		_0xffffff8000ec052b: mov dil, byte ptr [r8 + rdi]
		_0xffffff8000ec052f: mov r8b, dil
		_0xffffff8000ec0532: add r8b, r8b
		_0xffffff8000ec0535: xor dil, 0x4d
		_0xffffff8000ec0539: and r8b, 0x9a
		_0xffffff8000ec053d: add r8b, dil
		_0xffffff8000ec0540: movzx edi, r8b
		_0xffffff8000ec0544: cmp dil, 0x4d
		_0xffffff8000ec0548: sbb r8, r8
		_0xffffff8000ec054b: and r8d, 0x100
		_0xffffff8000ec0552: add r8d, edi
		_0xffffff8000ec0555: add r8d, 0x11a33b06
		_0xffffff8000ec055c: shl r8, 0x20
		_0xffffff8000ec0560: movabs rdi, 0xee5cc4ad00000000
		_0xffffff8000ec056a: add rdi, r8
		_0xffffff8000ec056d: mov r8, rdi
		_0xffffff8000ec0570: sar r8, 0x1f
		_0xffffff8000ec0574: movabs r9, 0xbffb3ddb6b62c7e
		_0xffffff8000ec057e: and r9, r8
		_0xffffff8000ec0581: sar rdi, 0x20
		_0xffffff8000ec0585: movabs r8, 0x25ffd9eedb5b163f
		_0xffffff8000ec058f: xor r8, rdi
		_0xffffff8000ec0592: add r8, r9
		_0xffffff8000ec0595: lea rdi, [r12 + r8*4]
		_0xffffff8000ec0599: movzx r8d, byte ptr [rbx + 0xd]
		_0xffffff8000ec059e: mov r9d, r8d
		_0xffffff8000ec05a1: and r9d, 0xbf
		_0xffffff8000ec05a8: xor r8d, 0x5efbfbbf
		_0xffffff8000ec05af: lea r8d, [r8 + r9*2 - 0x5efbfbbf]
		_0xffffff8000ec05b7: movsxd r8, r8d
		_0xffffff8000ec05ba: movabs r9, 0x6ceed34bb7fbe36a
		_0xffffff8000ec05c4: mov r10, r8
		_0xffffff8000ec05c7: and r10, r9
		_0xffffff8000ec05ca: xor r8, r9
		_0xffffff8000ec05cd: lea r8, [r8 + r10*2]
		_0xffffff8000ec05d1: add r8, qword ptr [r14 + 0x78]
		_0xffffff8000ec05d5: movabs r9, 0x93112cb448041c96
		_0xffffff8000ec05df: mov r8b, byte ptr [r9 + r8]
		_0xffffff8000ec05e3: mov r9b, r8b
		_0xffffff8000ec05e6: add r9b, r9b
		_0xffffff8000ec05e9: xor r8b, 0x7f
		_0xffffff8000ec05ed: add r8b, r9b
		_0xffffff8000ec05f0: add r8b, 0xaf
		_0xffffff8000ec05f4: movzx r8d, r8b
		_0xffffff8000ec05f8: cmp r8b, 0x2e
		_0xffffff8000ec05fc: sbb r9, r9
		_0xffffff8000ec05ff: and r9d, 0x100
		_0xffffff8000ec0606: add r9d, r8d
		_0xffffff8000ec0609: add r9d, 0x305c7794
		_0xffffff8000ec0610: shl r9, 0x20
		_0xffffff8000ec0614: movabs r8, 0xcfa3883e00000000
		_0xffffff8000ec061e: add r8, r9
		_0xffffff8000ec0621: mov r9, r8
		_0xffffff8000ec0624: sar r9, 0x1f
		_0xffffff8000ec0628: movabs r10, 0x3daeb57bfebdd32c
		_0xffffff8000ec0632: and r10, r9
		_0xffffff8000ec0635: sar r8, 0x20
		_0xffffff8000ec0639: movabs r9, 0x3ed75abdff5ee996
		_0xffffff8000ec0643: xor r9, r8
		_0xffffff8000ec0646: add r9, r10
		_0xffffff8000ec0649: lea r8, [r13 + r9*4]
		_0xffffff8000ec064e: movabs r9, 0x4a29508028459a8
		_0xffffff8000ec0658: mov r8d, dword ptr [r9 + r8]
		_0xffffff8000ec065c: movabs r9, 0x680098449293a704
		_0xffffff8000ec0666: xor r8d, dword ptr [r9 + rdi]
		_0xffffff8000ec066a: movzx edi, byte ptr [rbx + 2]
		_0xffffff8000ec066e: mov r9d, edi
		_0xffffff8000ec0671: and r9d, 0xee
		_0xffffff8000ec0678: xor edi, 0x3f1eebee
		_0xffffff8000ec067e: lea edi, [rdi + r9*2 - 0x3f1eebee]
		_0xffffff8000ec0686: movsxd rdi, edi
		_0xffffff8000ec0689: movabs r9, 0x1d5abfb3f4ffffff
		_0xffffff8000ec0693: mov r10, rdi
		_0xffffff8000ec0696: and r10, r9
		_0xffffff8000ec0699: xor rdi, r9
		_0xffffff8000ec069c: lea rdi, [rdi + r10*2]
		_0xffffff8000ec06a0: add rdi, qword ptr [r14 + 0x20]
		_0xffffff8000ec06a4: movabs r9, 0xe2a5404c0b000001
		_0xffffff8000ec06ae: mov dil, byte ptr [r9 + rdi]
		_0xffffff8000ec06b2: mov r9b, dil
		_0xffffff8000ec06b5: add r9b, r9b
		_0xffffff8000ec06b8: xor dil, 0x69
		_0xffffff8000ec06bc: and r9b, 0xd2
		_0xffffff8000ec06c0: add r9b, dil
		_0xffffff8000ec06c3: add r9b, 0xb8
		_0xffffff8000ec06c7: movzx edi, r9b
		_0xffffff8000ec06cb: cmp dil, 0x21
		_0xffffff8000ec06cf: sbb r9, r9
		_0xffffff8000ec06d2: and r9d, 0x100
		_0xffffff8000ec06d9: add r9d, edi
		_0xffffff8000ec06dc: add r9d, 0x71c9b886
		_0xffffff8000ec06e3: shl r9, 0x20
		_0xffffff8000ec06e7: movabs rdi, 0x8e36475900000000
		_0xffffff8000ec06f1: add rdi, r9
		_0xffffff8000ec06f4: mov r9, rdi
		_0xffffff8000ec06f7: sar r9, 0x1f
		_0xffffff8000ec06fb: movabs r10, 0x37ffbf97adbfb6ae
		_0xffffff8000ec0705: and r10, r9
		_0xffffff8000ec0708: sar rdi, 0x20
		_0xffffff8000ec070c: movabs r9, 0x3bffdfcbd6dfdb57
		_0xffffff8000ec0716: xor r9, rdi
		_0xffffff8000ec0719: add r9, r10
		_0xffffff8000ec071c: lea rdi, [rax + r9*4]
		_0xffffff8000ec0720: movabs r9, 0x100080d0a48092a4
		_0xffffff8000ec072a: xor r8d, dword ptr [r9 + rdi]
		_0xffffff8000ec072e: movzx edi, byte ptr [rbx + 7]
		_0xffffff8000ec0732: mov r9d, edi
		_0xffffff8000ec0735: and r9d, 0xd7
		_0xffffff8000ec073c: xor edi, 0x7fafefd7
		_0xffffff8000ec0742: lea edi, [rdi + r9*2 - 0x7fafefd7]
		_0xffffff8000ec074a: movsxd rdi, edi
		_0xffffff8000ec074d: movabs r9, 0x3b7ddf6feffdebbd
		_0xffffff8000ec0757: mov r10, rdi
		_0xffffff8000ec075a: and r10, r9
		_0xffffff8000ec075d: xor rdi, r9
		_0xffffff8000ec0760: lea rdi, [rdi + r10*2]
		_0xffffff8000ec0764: add rdi, qword ptr [r14 + 0x48]
		_0xffffff8000ec0768: movabs r9, 0xc482209010021443
		_0xffffff8000ec0772: mov dil, byte ptr [r9 + rdi]
		_0xffffff8000ec0776: mov r9b, dil
		_0xffffff8000ec0779: add r9b, r9b
		_0xffffff8000ec077c: xor dil, 0x71
		_0xffffff8000ec0780: and r9b, 0xe2
		_0xffffff8000ec0784: add r9b, dil
		_0xffffff8000ec0787: add r9b, 0xcf
		_0xffffff8000ec078b: movzx edi, r9b
		_0xffffff8000ec078f: cmp dil, 0x40
		_0xffffff8000ec0793: sbb r9, r9
		_0xffffff8000ec0796: and r9d, 0x100
		_0xffffff8000ec079d: add r9d, edi
		_0xffffff8000ec07a0: add r9d, 0x58ebbcfd
		_0xffffff8000ec07a7: shl r9, 0x20
		_0xffffff8000ec07ab: movabs rdi, 0xa71442c300000000
		_0xffffff8000ec07b5: add rdi, r9
		_0xffffff8000ec07b8: mov r9, rdi
		_0xffffff8000ec07bb: sar r9, 0x1f
		_0xffffff8000ec07bf: movabs r10, 0x25fff6ef9a9df55e
		_0xffffff8000ec07c9: and r10, r9
		_0xffffff8000ec07cc: sar rdi, 0x20
		_0xffffff8000ec07d0: movabs r9, 0x12fffb77cd4efaaf
		_0xffffff8000ec07da: xor r9, rdi
		_0xffffff8000ec07dd: add r9, r10
		_0xffffff8000ec07e0: lea rdi, [r15 + r9*4]
		_0xffffff8000ec07e4: movabs r9, 0xb4001220cac41544
		_0xffffff8000ec07ee: xor r8d, dword ptr [r9 + rdi]
		_0xffffff8000ec07f2: mov edi, r8d
		_0xffffff8000ec07f5: shr edi, 0x17
		_0xffffff8000ec07f8: and edi, 0x86
		_0xffffff8000ec07fe: mov r9d, r8d
		_0xffffff8000ec0801: shr r9d, 0x18
		_0xffffff8000ec0805: add r9d, 0x43
		_0xffffff8000ec0809: sub r9d, edi
		_0xffffff8000ec080c: xor r9d, 0x43
		_0xffffff8000ec0810: mov dil, r9b
		_0xffffff8000ec0813: add dil, dil
		_0xffffff8000ec0816: xor r9b, 0x71
		_0xffffff8000ec081a: and dil, 0xe2
		_0xffffff8000ec081e: add dil, r9b
		_0xffffff8000ec0821: add dil, 0xcf
		_0xffffff8000ec0825: movzx edi, dil
		_0xffffff8000ec0829: cmp dil, 0x40
		_0xffffff8000ec082d: sbb r9, r9
		_0xffffff8000ec0830: and r9d, 0x100
		_0xffffff8000ec0837: add r9d, edi
		_0xffffff8000ec083a: add r9d, 0x4c7a70c1
		_0xffffff8000ec0841: shl r9, 0x20
		_0xffffff8000ec0845: movabs rdi, 0xb3858eff00000000
		_0xffffff8000ec084f: add rdi, r9
		_0xffffff8000ec0852: mov r9, rdi
		_0xffffff8000ec0855: sar r9, 0x1f
		_0xffffff8000ec0859: movabs r10, 0xe2d1f38fdfcfbf9e
		_0xffffff8000ec0863: and r10, r9
		_0xffffff8000ec0866: sar rdi, 0x20
		_0xffffff8000ec086a: movabs r9, 0x7168f9c7efe7dfcf
		_0xffffff8000ec0874: xor r9, rdi
		_0xffffff8000ec0877: add r9, r10
		_0xffffff8000ec087a: add r9, qword ptr [r14 + 0xe8]
		_0xffffff8000ec0881: movabs rdi, 0x8e97063810182031
		_0xffffff8000ec088b: mov dil, byte ptr [rdi + r9]
		_0xffffff8000ec088f: mov r9b, dil
		_0xffffff8000ec0892: add r9b, r9b
		_0xffffff8000ec0895: xor dil, 0x6f
		_0xffffff8000ec0899: and r9b, 0xde
		_0xffffff8000ec089d: add r9b, dil
		_0xffffff8000ec08a0: add r9b, 0xe0
		_0xffffff8000ec08a4: movzx edi, r9b
		_0xffffff8000ec08a8: cmp dil, 0x4f
		_0xffffff8000ec08ac: sbb r9, r9
		_0xffffff8000ec08af: and r9, 0x100
		_0xffffff8000ec08b6: add r9, rdi
		_0xffffff8000ec08b9: add r9, -0x4f
		_0xffffff8000ec08bd: movabs rdi, 0x1bebfffb57f63f3e
		_0xffffff8000ec08c7: mov r10, r9
		_0xffffff8000ec08ca: and r10, rdi
		_0xffffff8000ec08cd: xor r9, rdi
		_0xffffff8000ec08d0: lea rdi, [r9 + r10*2]
		_0xffffff8000ec08d4: lea rdi, [r15 + rdi*4]
		_0xffffff8000ec08d8: movabs r9, 0x90500012a0270308
		_0xffffff8000ec08e2: mov eax, dword ptr [r9 + rdi]
		_0xffffff8000ec08e6: mov dword ptr [rbp - 0x3c4], eax
		_0xffffff8000ec08ec: movzx edx, byte ptr [rbx + 6]
		_0xffffff8000ec08f0: mov edi, edx
		_0xffffff8000ec08f2: and edi, 0x8f
		_0xffffff8000ec08f8: xor edx, 0x4fecb98f
		_0xffffff8000ec08fe: lea edx, [rdx + rdi*2 - 0x4fecb98f]
		_0xffffff8000ec0905: movsxd r15, edx
		_0xffffff8000ec0908: movabs r12, 0x3ddff2bfffff7faf
		_0xffffff8000ec0912: mov r13, r15
		_0xffffff8000ec0915: and r13, r12
		_0xffffff8000ec0918: xor r15, r12
		_0xffffff8000ec091b: lea r15, [r15 + r13*2]
		_0xffffff8000ec091f: add r15, qword ptr [r14 + 0x40]
		_0xffffff8000ec0923: movabs r12, 0xc2200d4000008051
		_0xffffff8000ec092d: mov dl, byte ptr [r12 + r15]
		_0xffffff8000ec0931: mov dil, dl
		_0xffffff8000ec0934: add dil, dil
		_0xffffff8000ec0937: xor dl, 0x7d
		_0xffffff8000ec093a: and dil, 0xfa
		_0xffffff8000ec093e: add dil, dl
		_0xffffff8000ec0941: add dil, 0xbc
		_0xffffff8000ec0945: movzx r15d, dil
		_0xffffff8000ec0949: cmp r15b, 0x39
		_0xffffff8000ec094d: sbb r12, r12
		_0xffffff8000ec0950: and r12, 0x100
		_0xffffff8000ec0957: add r12, r15
		_0xffffff8000ec095a: add r12, -0x39
		_0xffffff8000ec095e: movabs r15, 0x1962fb4ffdc9b7ae
		_0xffffff8000ec0968: mov r13, r12
		_0xffffff8000ec096b: and r13, r15
		_0xffffff8000ec096e: xor r12, r15
		_0xffffff8000ec0971: lea r15, [r12 + r13*2]
		_0xffffff8000ec0975: mov rax, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec097c: lea r15, [rax + r15*4]
		_0xffffff8000ec0980: movabs r12, 0x9a7412c008d92148
		_0xffffff8000ec098a: mov edi, dword ptr [r12 + r15]
		_0xffffff8000ec098e: movzx edx, byte ptr [rbx + 0xc]
		_0xffffff8000ec0992: mov r9d, edx
		_0xffffff8000ec0995: and r9d, 0xcd
		_0xffffff8000ec099c: xor edx, 0x7fe79ecd
		_0xffffff8000ec09a2: lea edx, [rdx + r9*2 - 0x7fe79ecd]
		_0xffffff8000ec09aa: movsxd r15, edx
		_0xffffff8000ec09ad: movabs r12, 0x35eefd7f7f1f7ad7
		_0xffffff8000ec09b7: mov r13, r15
		_0xffffff8000ec09ba: and r13, r12
		_0xffffff8000ec09bd: xor r15, r12
		_0xffffff8000ec09c0: lea r15, [r15 + r13*2]
		_0xffffff8000ec09c4: add r15, qword ptr [r14 + 0x70]
		_0xffffff8000ec09c8: movabs r12, 0xca11028080e08529
		_0xffffff8000ec09d2: mov dl, byte ptr [r12 + r15]
		_0xffffff8000ec09d6: mov r9b, dl
		_0xffffff8000ec09d9: add r9b, r9b
		_0xffffff8000ec09dc: xor dl, 0x4c
		_0xffffff8000ec09df: and r9b, 0x98
		_0xffffff8000ec09e3: add r9b, dl
		_0xffffff8000ec09e6: movzx edx, r9b
		_0xffffff8000ec09ea: cmp dl, 0x4c
		_0xffffff8000ec09ed: sbb r15, r15
		_0xffffff8000ec09f0: and r15d, 0x100
		_0xffffff8000ec09f7: add r15d, edx
		_0xffffff8000ec09fa: add r15d, 0x56372b56
		_0xffffff8000ec0a01: shl r15, 0x20
		_0xffffff8000ec0a05: movabs r12, 0xa9c8d45e00000000
		_0xffffff8000ec0a0f: add r12, r15
		_0xffffff8000ec0a12: mov r15, r12
		_0xffffff8000ec0a15: sar r15, 0x1f
		_0xffffff8000ec0a19: movabs r13, 0x3feaadbfdecbfcda
		_0xffffff8000ec0a23: and r13, r15
		_0xffffff8000ec0a26: sar r12, 0x20
		_0xffffff8000ec0a2a: movabs r15, 0x1ff556dfef65fe6d
		_0xffffff8000ec0a34: xor r15, r12
		_0xffffff8000ec0a37: add r15, r13
		_0xffffff8000ec0a3a: mov r12, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec0a41: lea r15, [r12 + r15*4]
		_0xffffff8000ec0a45: movabs r13, 0x802aa4804268064c
		_0xffffff8000ec0a4f: xor edi, dword ptr [r13 + r15]
		_0xffffff8000ec0a54: movzx edx, byte ptr [rbx + 1]
		_0xffffff8000ec0a58: mov r9d, edx
		_0xffffff8000ec0a5b: and r9d, 0xaf
		_0xffffff8000ec0a62: xor edx, 0x5de5bfaf
		_0xffffff8000ec0a68: lea edx, [rdx + r9*2 - 0x5de5bfaf]
		_0xffffff8000ec0a70: movsxd r15, edx
		_0xffffff8000ec0a73: movabs r13, 0x7af69a7fdfedcf6a
		_0xffffff8000ec0a7d: mov rdx, r15
		_0xffffff8000ec0a80: and rdx, r13
		_0xffffff8000ec0a83: xor r15, r13
		_0xffffff8000ec0a86: lea r15, [r15 + rdx*2]
		_0xffffff8000ec0a8a: add r15, qword ptr [r14 + 0x18]
		_0xffffff8000ec0a8e: movabs r13, 0x8509658020123096
		_0xffffff8000ec0a98: mov dl, byte ptr [r13 + r15]
		_0xffffff8000ec0a9d: mov r9b, dl
		_0xffffff8000ec0aa0: add r9b, r9b
		_0xffffff8000ec0aa3: xor dl, 0x7c
		_0xffffff8000ec0aa6: and r9b, 0xf8
		_0xffffff8000ec0aaa: add r9b, dl
		_0xffffff8000ec0aad: add r9b, 0xe8
		_0xffffff8000ec0ab1: movzx edx, r9b
		_0xffffff8000ec0ab5: cmp dl, 0x64
		_0xffffff8000ec0ab8: sbb r15, r15
		_0xffffff8000ec0abb: and r15d, 0x100
		_0xffffff8000ec0ac2: add r15d, edx
		_0xffffff8000ec0ac5: add r15d, 0x30b9c48a
		_0xffffff8000ec0acc: shl r15, 0x20
		_0xffffff8000ec0ad0: movabs r13, 0xcf463b1200000000
		_0xffffff8000ec0ada: add r13, r15
		_0xffffff8000ec0add: mov r15, r13
		_0xffffff8000ec0ae0: sar r15, 0x1f
		_0xffffff8000ec0ae4: movabs rdx, 0x3ebe1fbff7febebe
		_0xffffff8000ec0aee: and rdx, r15
		_0xffffff8000ec0af1: sar r13, 0x20
		_0xffffff8000ec0af5: movabs r15, 0x1f5f0fdffbff5f5f
		_0xffffff8000ec0aff: xor r15, r13
		_0xffffff8000ec0b02: add r15, rdx
		_0xffffff8000ec0b05: mov r13, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec0b0c: lea r15, [r13 + r15*4]
		_0xffffff8000ec0b11: movabs rdx, 0x8283c08010028284
		_0xffffff8000ec0b1b: xor edi, dword ptr [rdx + r15]
		_0xffffff8000ec0b1f: movzx edx, byte ptr [rbx + 0xb]
		_0xffffff8000ec0b23: mov r9d, edx
		_0xffffff8000ec0b26: and r9d, 0x7d
		_0xffffff8000ec0b2a: xor edx, 0x47b6677d
		_0xffffff8000ec0b30: lea edx, [rdx + r9*2 - 0x47b6677d]
		_0xffffff8000ec0b38: movsxd r15, edx
		_0xffffff8000ec0b3b: movabs rdx, 0x7fcf6bf8ef3eefbb
		_0xffffff8000ec0b45: mov r9, r15
		_0xffffff8000ec0b48: and r9, rdx
		_0xffffff8000ec0b4b: xor r15, rdx
		_0xffffff8000ec0b4e: lea r15, [r15 + r9*2]
		_0xffffff8000ec0b52: add r15, qword ptr [r14 + 0x68]
		_0xffffff8000ec0b56: movabs rdx, 0x8030940710c11045
		_0xffffff8000ec0b60: mov dl, byte ptr [rdx + r15]
		_0xffffff8000ec0b64: mov r9b, dl
		_0xffffff8000ec0b67: add r9b, r9b
		_0xffffff8000ec0b6a: xor dl, 0x6e
		_0xffffff8000ec0b6d: and r9b, 0xdc
		_0xffffff8000ec0b71: add r9b, dl
		_0xffffff8000ec0b74: add r9b, 0xfc
		_0xffffff8000ec0b78: movzx r15d, r9b
		_0xffffff8000ec0b7c: cmp r15b, 0x6a
		_0xffffff8000ec0b80: sbb rdx, rdx
		_0xffffff8000ec0b83: and rdx, 0x100
		_0xffffff8000ec0b8a: add rdx, r15
		_0xffffff8000ec0b8d: add rdx, -0x6a
		_0xffffff8000ec0b91: movabs r15, 0x13c8efdffd4d3cdb
		_0xffffff8000ec0b9b: and r15, rdx
		_0xffffff8000ec0b9e: movabs r9, 0x33c8efdffd4d3cdb
		_0xffffff8000ec0ba8: xor r9, rdx
		_0xffffff8000ec0bab: lea r15, [r9 + r15*2]
		_0xffffff8000ec0baf: mov rdx, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec0bb6: lea r15, [rdx + r15*4]
		_0xffffff8000ec0bba: movabs r9, 0x30dc40800acb0c94
		_0xffffff8000ec0bc4: xor edi, dword ptr [r9 + r15]
		_0xffffff8000ec0bc8: mov r9b, dil
		_0xffffff8000ec0bcb: add r9b, r9b
		_0xffffff8000ec0bce: mov r10b, dil
		_0xffffff8000ec0bd1: xor r10b, 0x4c
		_0xffffff8000ec0bd5: and r9b, 0x98
		_0xffffff8000ec0bd9: add r9b, r10b
		_0xffffff8000ec0bdc: movzx r9d, r9b
		_0xffffff8000ec0be0: cmp r9b, 0x4c
		_0xffffff8000ec0be4: mov r15d, 0xb4
		_0xffffff8000ec0bea: mov r10d, 0xffffffb4
		_0xffffff8000ec0bf0: cmovb r10, r15
		_0xffffff8000ec0bf4: lea r15d, [r10 + r9 + 0x55ae4500]
		_0xffffff8000ec0bfc: shl r15, 0x20
		_0xffffff8000ec0c00: movabs r9, 0xaa51bb0000000000
		_0xffffff8000ec0c0a: add r9, r15
		_0xffffff8000ec0c0d: mov r15, r9
		_0xffffff8000ec0c10: sar r15, 0x1f
		_0xffffff8000ec0c14: movabs r10, 0xa9f7bbbfef27d6f2
		_0xffffff8000ec0c1e: and r10, r15
		_0xffffff8000ec0c21: sar r9, 0x20
		_0xffffff8000ec0c25: movabs r15, 0x54fbdddff793eb79
		_0xffffff8000ec0c2f: xor r15, r9
		_0xffffff8000ec0c32: add r15, r10
		_0xffffff8000ec0c35: add r15, qword ptr [r14 + 0xf0]
		_0xffffff8000ec0c3c: movabs r9, 0xab042220086c1487
		_0xffffff8000ec0c46: mov r9b, byte ptr [r9 + r15]
		_0xffffff8000ec0c4a: mov r10b, r9b
		_0xffffff8000ec0c4d: add r10b, r10b
		_0xffffff8000ec0c50: xor r9b, 0x7d
		_0xffffff8000ec0c54: and r10b, 0xfa
		_0xffffff8000ec0c58: add r10b, r9b
		_0xffffff8000ec0c5b: add r10b, 0x98
		_0xffffff8000ec0c5f: movzx r9d, r10b
		_0xffffff8000ec0c63: cmp r9b, 0x15
		_0xffffff8000ec0c67: sbb r15, r15
		_0xffffff8000ec0c6a: and r15d, 0x100
		_0xffffff8000ec0c71: add r15d, r9d
		_0xffffff8000ec0c74: add r15d, 0x31060e20
		_0xffffff8000ec0c7b: shl r15, 0x20
		_0xffffff8000ec0c7f: movabs r9, 0xcef9f1cb00000000
		_0xffffff8000ec0c89: add r9, r15
		_0xffffff8000ec0c8c: mov r15, r9
		_0xffffff8000ec0c8f: sar r15, 0x1f
		_0xffffff8000ec0c93: movabs r10, 0xefffb27fb8fd7dc
		_0xffffff8000ec0c9d: and r10, r15
		_0xffffff8000ec0ca0: sar r9, 0x20
		_0xffffff8000ec0ca4: movabs r15, 0x77ffd93fdc7ebee
		_0xffffff8000ec0cae: xor r15, r9
		_0xffffff8000ec0cb1: add r15, r10
		_0xffffff8000ec0cb4: lea r15, [r12 + r15*4]
		_0xffffff8000ec0cb8: movabs r9, 0xe20009b008e05048
		_0xffffff8000ec0cc2: mov eax, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec0cc8: xor eax, dword ptr [r9 + r15]
		_0xffffff8000ec0ccc: movabs r15, 0x8801862a304180c
		_0xffffff8000ec0cd6: xor eax, dword ptr [r15 + rcx]
		_0xffffff8000ec0cda: mov dword ptr [rbp - 0x3c4], eax
		_0xffffff8000ec0ce0: movzx ecx, byte ptr [rbx + 0xf]
		_0xffffff8000ec0ce4: mov r9d, ecx
		_0xffffff8000ec0ce7: and r9d, 0x2f
		_0xffffff8000ec0ceb: xor ecx, 0x15cfdb2f
		_0xffffff8000ec0cf1: lea ecx, [rcx + r9*2 - 0x15cfdb2f]
		_0xffffff8000ec0cf9: movsxd r15, ecx
		_0xffffff8000ec0cfc: movabs rcx, 0x6df5f53bd9efdffe
		_0xffffff8000ec0d06: mov r9, r15
		_0xffffff8000ec0d09: and r9, rcx
		_0xffffff8000ec0d0c: xor r15, rcx
		_0xffffff8000ec0d0f: lea r15, [r15 + r9*2]
		_0xffffff8000ec0d13: add r15, qword ptr [r14 + 0x88]
		_0xffffff8000ec0d1a: movabs rcx, 0x920a0ac426102002
		_0xffffff8000ec0d24: mov cl, byte ptr [rcx + r15]
		_0xffffff8000ec0d28: mov r9b, cl
		_0xffffff8000ec0d2b: add r9b, r9b
		_0xffffff8000ec0d2e: xor cl, 0x77
		_0xffffff8000ec0d31: and r9b, 0xee
		_0xffffff8000ec0d35: add r9b, cl
		_0xffffff8000ec0d38: add r9b, 0xbf
		_0xffffff8000ec0d3c: cmp r9b, 0x36
		_0xffffff8000ec0d40: movabs r15, 0x49229122a0042109
		_0xffffff8000ec0d4a: movabs rcx, 0x49229122a0042009
		_0xffffff8000ec0d54: cmovb rcx, r15
		_0xffffff8000ec0d58: movzx r15d, r9b
		_0xffffff8000ec0d5c: mov r9d, 0xb0792967
		_0xffffff8000ec0d62: add r9, r15
		_0xffffff8000ec0d65: movabs r15, 0x49229122a224a489
		_0xffffff8000ec0d6f: and r15, r9
		_0xffffff8000ec0d72: add r15, rcx
		_0xffffff8000ec0d75: movabs rcx, 0x12494a4849514922
		_0xffffff8000ec0d7f: and rcx, r9
		_0xffffff8000ec0d82: lea r10, [r9 + r9]
		_0xffffff8000ec0d86: movabs r11, 0x2492949010801204
		_0xffffff8000ec0d90: and r11, r10
		_0xffffff8000ec0d93: add r11, rcx
		_0xffffff8000ec0d96: movabs rcx, 0x12494a4808400902
		_0xffffff8000ec0da0: xor rcx, r11
		_0xffffff8000ec0da3: add rcx, r15
		_0xffffff8000ec0da6: movabs r15, 0xa4942495148a1254
		_0xffffff8000ec0db0: and r15, r9
		_0xffffff8000ec0db3: movabs r9, 0x4928492a090020a0
		_0xffffff8000ec0dbd: and r9, r10
		_0xffffff8000ec0dc0: add r9, r15
		_0xffffff8000ec0dc3: movabs r15, 0xa494249504801050
		_0xffffff8000ec0dcd: xor r15, r9
		_0xffffff8000ec0dd0: add r15, rcx
		_0xffffff8000ec0dd3: mov r9d, 0x20
		_0xffffff8000ec0dd9: sub r9d, r15d
		_0xffffff8000ec0ddc: mov ecx, r9d
		_0xffffff8000ec0ddf: xor ecx, r15d
		_0xffffff8000ec0de2: mov r10d, ecx
		_0xffffff8000ec0de5: and r10d, 9
		_0xffffff8000ec0de9: mov r11d, r15d
		_0xffffff8000ec0dec: and r11d, r9d
		_0xffffff8000ec0def: mov eax, r11d
		_0xffffff8000ec0df2: and eax, 9
		_0xffffff8000ec0df5: add eax, eax
		_0xffffff8000ec0df7: add eax, r10d
		_0xffffff8000ec0dfa: and ecx, 0x12
		_0xffffff8000ec0dfd: and r11d, 0x12
		_0xffffff8000ec0e01: add r11d, r11d
		_0xffffff8000ec0e04: add r11d, ecx
		_0xffffff8000ec0e07: add r11d, eax
		_0xffffff8000ec0e0a: and r9d, 0xa484a8a4
		_0xffffff8000ec0e11: mov ecx, r15d
		_0xffffff8000ec0e14: and ecx, 0x24
		_0xffffff8000ec0e17: add ecx, 8
		_0xffffff8000ec0e1a: sub ecx, r9d
		_0xffffff8000ec0e1d: and r9d, r15d
		_0xffffff8000ec0e20: add r9d, r9d
		_0xffffff8000ec0e23: and ecx, 0x24
		_0xffffff8000ec0e26: add ecx, r9d
		_0xffffff8000ec0e29: add ecx, r11d
		_0xffffff8000ec0e2c: and ecx, 0x3f
		_0xffffff8000ec0e2f: mov rax, r15
		_0xffffff8000ec0e32: movabs r9, 0xcccccccccccccccd
		_0xffffff8000ec0e3c: mul r9
		_0xffffff8000ec0e3f: mov rax, rdx
		_0xffffff8000ec0e42: and rax, 0xfffffffffffffff0
		_0xffffff8000ec0e46: shr rax, 2
		_0xffffff8000ec0e4a: lea rax, [rax + rax*4]
		_0xffffff8000ec0e4e: sub r15, rax
		_0xffffff8000ec0e51: shl r15, cl
		_0xffffff8000ec0e54: mov eax, 0x14
		_0xffffff8000ec0e59: shl rax, cl
		_0xffffff8000ec0e5c: mov rcx, rax
		_0xffffff8000ec0e5f: and rcx, 3
		_0xffffff8000ec0e63: shr rdx, 4
		_0xffffff8000ec0e67: imul rcx, rdx
		_0xffffff8000ec0e6b: add rcx, r15
		_0xffffff8000ec0e6e: sar rax, 2
		_0xffffff8000ec0e72: lea r15, [rdx + rax]
		_0xffffff8000ec0e76: imul r15, r15
		_0xffffff8000ec0e7a: add r15, rcx
		_0xffffff8000ec0e7d: sub rdx, rax
		_0xffffff8000ec0e80: imul rdx, rdx
		_0xffffff8000ec0e84: sub r15, rdx
		_0xffffff8000ec0e87: movabs rax, 0xa2c29d0800000000
		_0xffffff8000ec0e91: sub rax, r15
		_0xffffff8000ec0e94: mov rcx, rax
		_0xffffff8000ec0e97: and rcx, r15
		_0xffffff8000ec0e9a: xor rax, r15
		_0xffffff8000ec0e9d: lea rax, [rax + rcx*2]
		_0xffffff8000ec0ea1: mov rcx, rax
		_0xffffff8000ec0ea4: and rcx, r15
		_0xffffff8000ec0ea7: xor r15, rax
		_0xffffff8000ec0eaa: lea r15, [r15 + rcx*2]
		_0xffffff8000ec0eae: mov rax, r15
		_0xffffff8000ec0eb1: sar rax, 0x1e
		_0xffffff8000ec0eb5: movabs rcx, 0x20140000800
		_0xffffff8000ec0ebf: and rcx, rax
		_0xffffff8000ec0ec2: mov r10, r15
		_0xffffff8000ec0ec5: sar r10, 0x1f
		_0xffffff8000ec0ec9: movabs r11, 0x240a0544a0008412
		_0xffffff8000ec0ed3: and r11, r10
		_0xffffff8000ec0ed6: add r11, rcx
		_0xffffff8000ec0ed9: movabs rcx, 0x408100a4000400
		_0xffffff8000ec0ee3: xor rcx, r11
		_0xffffff8000ec0ee6: movabs r11, 0x9200102000000040
		_0xffffff8000ec0ef0: and r11, rax
		_0xffffff8000ec0ef3: movabs rbx, 0x4910289000252124
		_0xffffff8000ec0efd: and rbx, r10
		_0xffffff8000ec0f00: add rbx, r11
		_0xffffff8000ec0f03: movabs r11, 0x4900081002000820
		_0xffffff8000ec0f0d: xor r11, rbx
		_0xffffff8000ec0f10: add r11, rcx
		_0xffffff8000ec0f13: movabs rbx, 0x40800002900000
		_0xffffff8000ec0f1d: and rbx, rax
		_0xffffff8000ec0f20: movabs rax, 0x244008114a4288
		_0xffffff8000ec0f2a: and rax, r10
		_0xffffff8000ec0f2d: movabs rcx, 0xa568e45323dc8513
		_0xffffff8000ec0f37: sub rcx, rax
		_0xffffff8000ec0f3a: movabs rax, 0x92a45229114a4289
		_0xffffff8000ec0f44: and rax, rcx
		_0xffffff8000ec0f47: add rax, rbx
		_0xffffff8000ec0f4a: add rax, r11
		_0xffffff8000ec0f4d: sar r15, 0x20
		_0xffffff8000ec0f51: mov ebx, 0xcaa6fde9
		_0xffffff8000ec0f56: xor rbx, r15
		_0xffffff8000ec0f59: movabs r15, 0xa49128a8942a4494
		_0xffffff8000ec0f63: mov rcx, rbx
		_0xffffff8000ec0f66: and rcx, r15
		_0xffffff8000ec0f69: movabs r10, 0x6db371f9b8548d3c
		_0xffffff8000ec0f73: sub r10, rcx
		_0xffffff8000ec0f76: and r10, r15
		_0xffffff8000ec0f79: movabs r15, 0x124a454249452922
		_0xffffff8000ec0f83: mov rcx, rbx
		_0xffffff8000ec0f86: and rcx, r15
		_0xffffff8000ec0f89: movabs r11, 0x120a044200010822
		_0xffffff8000ec0f93: add r11, rcx
		_0xffffff8000ec0f96: and r11, r15
		_0xffffff8000ec0f99: add r11, r10
		_0xffffff8000ec0f9c: movabs r15, 0x4924921522909249
		_0xffffff8000ec0fa6: and rbx, r15
		_0xffffff8000ec0fa9: movabs rcx, 0x1249242a45212492
		_0xffffff8000ec0fb3: add rcx, rbx
		_0xffffff8000ec0fb6: movabs rbx, 0x7ffbedfbfdeffe00
		_0xffffff8000ec0fc0: add rbx, rcx
		_0xffffff8000ec0fc3: and rbx, r15
		_0xffffff8000ec0fc6: add rbx, r11
		_0xffffff8000ec0fc9: mov r15, rbx
		_0xffffff8000ec0fcc: and r15, rax
		_0xffffff8000ec0fcf: xor rbx, rax
		_0xffffff8000ec0fd2: lea rbx, [rbx + r15*2]
		_0xffffff8000ec0fd6: mov ecx, 0x9f7d7b66
		_0xffffff8000ec0fdb: mov rdx, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec0fe2: xor ecx, dword ptr [rdx + rbx*4]
		_0xffffff8000ec0fe5: mov rbx, qword ptr [rbp - 0x3e0]
		_0xffffff8000ec0fec: movzx eax, byte ptr [rbx]
		_0xffffff8000ec0fef: mov r10d, eax
		_0xffffff8000ec0ff2: and r10d, 0xdf
		_0xffffff8000ec0ff9: xor eax, 0x617fefdf
		_0xffffff8000ec0ffe: lea eax, [rax + r10*2 - 0x617fefdf]
		_0xffffff8000ec1006: movsxd r15, eax
		_0xffffff8000ec1009: movabs rax, 0x7fb75f5effe57bb9
		_0xffffff8000ec1013: mov r10, r15
		_0xffffff8000ec1016: and r10, rax
		_0xffffff8000ec1019: xor r15, rax
		_0xffffff8000ec101c: lea r15, [r15 + r10*2]
		_0xffffff8000ec1020: add r15, qword ptr [r14 + 0x10]
		_0xffffff8000ec1024: movabs rax, 0x8048a0a1001a8447
		_0xffffff8000ec102e: mov al, byte ptr [rax + r15]
		_0xffffff8000ec1032: mov r10b, al
		_0xffffff8000ec1035: add r10b, r10b
		_0xffffff8000ec1038: xor al, 0x7a
		_0xffffff8000ec103a: and r10b, 0xf4
		_0xffffff8000ec103e: add r10b, al
		_0xffffff8000ec1041: add r10b, 0xa0
		_0xffffff8000ec1045: movzx r15d, r10b
		_0xffffff8000ec1049: lea rax, [r15 + 0x6eaad3fc]
		_0xffffff8000ec1050: lea r10, [rax + rax]
		_0xffffff8000ec1054: mov r11d, r10d
		_0xffffff8000ec1057: and r11d, 0x88090008
		_0xffffff8000ec105e: mov edx, eax
		_0xffffff8000ec1060: and edx, 0x54449524
		_0xffffff8000ec1066: add edx, 0x28892a48
		_0xffffff8000ec106c: add edx, 0xbbfb7ffc
		_0xffffff8000ec1072: and edx, 0x54449524
		_0xffffff8000ec1078: add edx, r11d
		_0xffffff8000ec107b: and r10d, 0x10040100
		_0xffffff8000ec1082: mov r11d, eax
		_0xffffff8000ec1085: and r11d, 0x92a2891
		_0xffffff8000ec108c: mov r9d, 0x1a5651a2
		_0xffffff8000ec1092: sub r9d, r11d
		_0xffffff8000ec1095: and r9d, 0x92a2891
		_0xffffff8000ec109c: add r9d, r10d
		_0xffffff8000ec109f: and eax, 0xa291424a
		_0xffffff8000ec10a4: add eax, r9d
		_0xffffff8000ec10a7: lea eax, [rax + rdx - 0x7d7effb6]
		_0xffffff8000ec10ae: cmp r15b, 0x1a
		_0xffffff8000ec10b2: sbb r15, r15
		_0xffffff8000ec10b5: and r15d, 0x100
		_0xffffff8000ec10bc: mov edx, eax
		_0xffffff8000ec10be: and edx, r15d
		_0xffffff8000ec10c1: xor r15d, eax
		_0xffffff8000ec10c4: lea r15d, [r15 + rdx*2]
		_0xffffff8000ec10c8: shl r15, 0x20
		_0xffffff8000ec10cc: movabs rax, 0xc2cdab1c00000000
		_0xffffff8000ec10d6: add rax, r15
		_0xffffff8000ec10d9: mov r15, rax
		_0xffffff8000ec10dc: sar r15, 0x1e
		_0xffffff8000ec10e0: movabs rdx, 0x24000408020820
		_0xffffff8000ec10ea: and rdx, r15
		_0xffffff8000ec10ed: mov r15, rax
		_0xffffff8000ec10f0: sar r15, 0x1f
		_0xffffff8000ec10f4: movabs r9, 0xff1bfff3e7fdf79c
		_0xffffff8000ec10fe: and r9, r15
		_0xffffff8000ec1101: movabs r15, 0x807200060c010432
		_0xffffff8000ec110b: xor r15, r9
		_0xffffff8000ec110e: add r15, rdx
		_0xffffff8000ec1111: sar rax, 0x20
		_0xffffff8000ec1115: xor rax, 0x7bb292a5
		_0xffffff8000ec111b: movabs rdx, 0x7f8dfff9884c696b
		_0xffffff8000ec1125: add rdx, rax
		_0xffffff8000ec1128: add rax, rax
		_0xffffff8000ec112b: movabs r9, 0xff1bfff31098d2d6
		_0xffffff8000ec1135: and r9, rax
		_0xffffff8000ec1138: sub rdx, r9
		_0xffffff8000ec113b: mov rax, rdx
		_0xffffff8000ec113e: and rax, r15
		_0xffffff8000ec1141: xor rdx, r15
		_0xffffff8000ec1144: lea r15, [rdx + rax*2]
		_0xffffff8000ec1148: mov r9d, 0x5462eedf
		_0xffffff8000ec114e: xor r9d, dword ptr [r12 + r15*4]
		_0xffffff8000ec1152: movzx eax, byte ptr [rbx + 0xa]
		_0xffffff8000ec1156: mov edx, eax
		_0xffffff8000ec1158: and edx, 0xcf
		_0xffffff8000ec115e: xor eax, 0x7b767fcf
		_0xffffff8000ec1163: lea eax, [rax + rdx*2 - 0x7b767fcf]
		_0xffffff8000ec116a: movsxd r15, eax
		_0xffffff8000ec116d: movabs rax, 0x7fffc77ffffef3ff
		_0xffffff8000ec1177: mov rdx, r15
		_0xffffff8000ec117a: and rdx, rax
		_0xffffff8000ec117d: xor r15, rax
		_0xffffff8000ec1180: lea r15, [r15 + rdx*2]
		_0xffffff8000ec1184: add r15, qword ptr [r14 + 0x60]
		_0xffffff8000ec1188: movabs rax, 0x8000388000010c01
		_0xffffff8000ec1192: mov al, byte ptr [rax + r15]
		_0xffffff8000ec1196: mov dl, al
		_0xffffff8000ec1198: add dl, dl
		_0xffffff8000ec119a: xor al, 0x5e
		_0xffffff8000ec119c: and dl, 0xbc
		_0xffffff8000ec119f: add dl, al
		_0xffffff8000ec11a1: add dl, 0xfe
		_0xffffff8000ec11a4: movzx r15d, dl
		_0xffffff8000ec11a8: mov rax, r15
		_0xffffff8000ec11ab: and rax, 0x23
		_0xffffff8000ec11af: mov rdx, r15
		_0xffffff8000ec11b2: xor rdx, 0x77f80c23
		_0xffffff8000ec11b9: lea rax, [rdx + rax*2]
		_0xffffff8000ec11bd: cmp r15b, 0x5c
		_0xffffff8000ec11c1: sbb r15, r15
		_0xffffff8000ec11c4: and r15, 0x100
		_0xffffff8000ec11cb: mov rdx, rax
		_0xffffff8000ec11ce: and rdx, r15
		_0xffffff8000ec11d1: xor r15, rax
		_0xffffff8000ec11d4: lea rax, [r15 + rdx*2]
		_0xffffff8000ec11d8: mov r15d, eax
		_0xffffff8000ec11db: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec11e5: mul rdx
		_0xffffff8000ec11e8: shr rdx, 4
		_0xffffff8000ec11ec: imul eax, edx, 0x18
		_0xffffff8000ec11ef: sub r15d, eax
		_0xffffff8000ec11f2: shl r15, 0x20
		_0xffffff8000ec11f6: lea rax, [rdx + rdx*2]
		_0xffffff8000ec11fa: shl rax, 0x23
		_0xffffff8000ec11fe: add rax, r15
		_0xffffff8000ec1201: movabs r15, 0x8807f38100000000
		_0xffffff8000ec120b: add r15, rax
		_0xffffff8000ec120e: sar r15, 0x20
		_0xffffff8000ec1212: movabs rax, 0x3ffc7dbbffa9ff3f
		_0xffffff8000ec121c: mov r10, r15
		_0xffffff8000ec121f: xor r10, rax
		_0xffffff8000ec1222: sub rax, r10
		_0xffffff8000ec1225: add rax, r15
		_0xffffff8000ec1228: movabs r10, 0x40038244005600c1
		_0xffffff8000ec1232: and r10, rax
		_0xffffff8000ec1235: movabs r11, 0xc0038244005600c1
		_0xffffff8000ec123f: xor r11, rax
		_0xffffff8000ec1242: lea rax, [r11 + r10*2]
		_0xffffff8000ec1246: xor r15, 0x6d974043
		_0xffffff8000ec124d: movabs r10, 0x3ffc7dbb923ebf7c
		_0xffffff8000ec1257: add r10, r15
		_0xffffff8000ec125a: add r15, r15
		_0xffffff8000ec125d: movabs r11, 0x7ff8fb77247d7ef8
		_0xffffff8000ec1267: and r11, r15
		_0xffffff8000ec126a: sub r10, r11
		_0xffffff8000ec126d: mov r15, rax
		_0xffffff8000ec1270: and r15, r10
		_0xffffff8000ec1273: xor r10, rax
		_0xffffff8000ec1276: lea r15, [r10 + r15*2]
		_0xffffff8000ec127a: mov eax, 0x20cc0819
		_0xffffff8000ec127f: mov r10, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec1286: xor eax, dword ptr [r10 + r15*4]
		_0xffffff8000ec128a: lea r11d, [rax + r9]
		_0xffffff8000ec128e: and eax, r9d
		_0xffffff8000ec1291: add eax, eax
		_0xffffff8000ec1293: sub r11d, eax
		_0xffffff8000ec1296: xor r11d, 0xebd39da0
		_0xffffff8000ec129d: lea eax, [rcx + r11]
		_0xffffff8000ec12a1: and r11d, ecx
		_0xffffff8000ec12a4: add r11d, r11d
		_0xffffff8000ec12a7: sub eax, r11d
		_0xffffff8000ec12aa: xor eax, 0xe6cd8ac8
		_0xffffff8000ec12af: movzx ecx, byte ptr [rbx + 5]
		_0xffffff8000ec12b3: mov r9d, ecx
		_0xffffff8000ec12b6: and r9d, 0xbf
		_0xffffff8000ec12bd: xor ecx, 0x7b97ffbf
		_0xffffff8000ec12c3: lea ecx, [rcx + r9*2 - 0x7b97ffbf]
		_0xffffff8000ec12cb: movsxd r15, ecx
		_0xffffff8000ec12ce: movabs rcx, 0x67feaeb5ecdffd6f
		_0xffffff8000ec12d8: mov r9, r15
		_0xffffff8000ec12db: and r9, rcx
		_0xffffff8000ec12de: xor r15, rcx
		_0xffffff8000ec12e1: lea r15, [r15 + r9*2]
		_0xffffff8000ec12e5: add r15, qword ptr [r14 + 0x38]
		_0xffffff8000ec12e9: movabs rcx, 0x9801514a13200291
		_0xffffff8000ec12f3: mov cl, byte ptr [rcx + r15]
		_0xffffff8000ec12f7: mov r9b, cl
		_0xffffff8000ec12fa: add r9b, r9b
		_0xffffff8000ec12fd: xor cl, 0x7c
		_0xffffff8000ec1300: and r9b, 0xf8
		_0xffffff8000ec1304: add r9b, cl
		_0xffffff8000ec1307: add r9b, 0xb0
		_0xffffff8000ec130b: movzx r15d, r9b
		_0xffffff8000ec130f: cmp r15b, 0x2c
		_0xffffff8000ec1313: sbb rcx, rcx
		_0xffffff8000ec1316: and rcx, 0x100
		_0xffffff8000ec131d: add rcx, r15
		_0xffffff8000ec1320: add rcx, 0x687086ff
		_0xffffff8000ec1327: mov r15, rcx
		_0xffffff8000ec132a: shl r15, 0x21
		_0xffffff8000ec132e: movabs r9, 0x2f1ef1aa00000000
		_0xffffff8000ec1338: and r9, r15
		_0xffffff8000ec133b: shl rcx, 0x20
		_0xffffff8000ec133f: movabs r15, 0x978f78d500000000
		_0xffffff8000ec1349: xor r15, rcx
		_0xffffff8000ec134c: add r15, r9
		_0xffffff8000ec134f: mov rcx, r15
		_0xffffff8000ec1352: sar rcx, 0x1e
		_0xffffff8000ec1356: movabs r9, 0x42020a20480a4904
		_0xffffff8000ec1360: and r9, rcx
		_0xffffff8000ec1363: mov rcx, r15
		_0xffffff8000ec1366: sar rcx, 0x1f
		_0xffffff8000ec136a: movabs r11, 0x3dfdf5dc37f5a6fa
		_0xffffff8000ec1374: and r11, rcx
		_0xffffff8000ec1377: movabs rcx, 0xe1010511e4052c83
		_0xffffff8000ec1381: xor rcx, r11
		_0xffffff8000ec1384: add rcx, r9
		_0xffffff8000ec1387: sar r15, 0x20
		_0xffffff8000ec138b: mov r9d, 0x831b32b9
		_0xffffff8000ec1391: xor r9, r15
		_0xffffff8000ec1394: movabs r15, 0x1efefaee98e1e1c4
		_0xffffff8000ec139e: add r15, r9
		_0xffffff8000ec13a1: add r9, r9
		_0xffffff8000ec13a4: movabs r11, 0x3dfdf5dd31c3c388
		_0xffffff8000ec13ae: and r11, r9
		_0xffffff8000ec13b1: sub r15, r11
		_0xffffff8000ec13b4: mov r9, r15
		_0xffffff8000ec13b7: xor r9, rcx
		_0xffffff8000ec13ba: mov r11, rcx
		_0xffffff8000ec13bd: and r11, r15
		_0xffffff8000ec13c0: movabs rbx, 0xa28a90a92484a909
		_0xffffff8000ec13ca: and rbx, r15
		_0xffffff8000ec13cd: movabs r12, 0x228a90a92484a909
		_0xffffff8000ec13d7: mov r13, rcx
		_0xffffff8000ec13da: and r13, r12
		_0xffffff8000ec13dd: movabs rdx, 0x515215249095212
		_0xffffff8000ec13e7: add rdx, r13
		_0xffffff8000ec13ea: sub rdx, rbx
		_0xffffff8000ec13ed: and rdx, r12
		_0xffffff8000ec13f0: and rbx, rcx
		_0xffffff8000ec13f3: add rbx, rbx
		_0xffffff8000ec13f6: add rbx, rdx
		_0xffffff8000ec13f9: movabs r12, 0x9212a14522a4454
		_0xffffff8000ec1403: and r9, r12
		_0xffffff8000ec1406: and r11, r12
		_0xffffff8000ec1409: add r11, r11
		_0xffffff8000ec140c: add r11, r9
		_0xffffff8000ec140f: movabs r12, 0x14544542895112a2
		_0xffffff8000ec1419: and r15, r12
		_0xffffff8000ec141c: and rcx, r12
		_0xffffff8000ec141f: add rcx, r15
		_0xffffff8000ec1422: add rcx, r11
		_0xffffff8000ec1425: add rcx, rbx
		_0xffffff8000ec1428: mov edx, 0xe6cd8ac8
		_0xffffff8000ec142d: mov r13, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec1434: xor edx, dword ptr [r13 + rcx*4]
		_0xffffff8000ec1439: lea r9d, [rax + rdx]
		_0xffffff8000ec143d: and edx, eax
		_0xffffff8000ec143f: add edx, edx
		_0xffffff8000ec1441: sub r9d, edx
		_0xffffff8000ec1444: mov eax, r9d
		_0xffffff8000ec1447: shr eax, 8
		_0xffffff8000ec144a: mov ecx, eax
		_0xffffff8000ec144c: and ecx, 0x1ecd4d
		_0xffffff8000ec1452: and eax, 0xe132b2
		_0xffffff8000ec1457: add eax, ecx
		_0xffffff8000ec1459: xor eax, 0xea38b5b1
		_0xffffff8000ec145e: lea ecx, [rax + rax]
		_0xffffff8000ec1461: and ecx, 0x62
		_0xffffff8000ec1464: neg ecx
		_0xffffff8000ec1466: lea eax, [rax + rcx + 0xb1]
		_0xffffff8000ec146d: mov cl, al
		_0xffffff8000ec146f: xor cl, 0x7c
		_0xffffff8000ec1472: mov dl, cl
		_0xffffff8000ec1474: add dl, dl
		_0xffffff8000ec1476: mov r11b, dl
		_0xffffff8000ec1479: and r11b, 0x40
		_0xffffff8000ec147d: mov bl, cl
		_0xffffff8000ec147f: and bl, 0xa1
		_0xffffff8000ec1482: or bl, 0x42
		_0xffffff8000ec1485: add bl, 0x60
		_0xffffff8000ec1488: and bl, 0xa1
		_0xffffff8000ec148b: or bl, r11b
		_0xffffff8000ec148e: mov r11b, cl
		_0xffffff8000ec1491: and r11b, 0x14
		_0xffffff8000ec1495: and dl, 0x20
		_0xffffff8000ec1498: or dl, r11b
		_0xffffff8000ec149b: and cl, 0x4a
		_0xffffff8000ec149e: or cl, dl
		_0xffffff8000ec14a0: xor cl, 0x10
		_0xffffff8000ec14a3: add cl, bl
		_0xffffff8000ec14a5: add al, al
		_0xffffff8000ec14a7: and al, 0xf8
		_0xffffff8000ec14a9: mov dl, cl
		_0xffffff8000ec14ab: xor dl, al
		_0xffffff8000ec14ad: and al, cl
		_0xffffff8000ec14af: add al, al
		_0xffffff8000ec14b1: add al, dl
		_0xffffff8000ec14b3: movzx eax, al
		_0xffffff8000ec14b6: cmp al, 0x2c
		_0xffffff8000ec14b8: sbb rbx, rbx
		_0xffffff8000ec14bb: and ebx, 0x100
		_0xffffff8000ec14c1: add ebx, eax
		_0xffffff8000ec14c3: add ebx, 0x50c4d2b9
		_0xffffff8000ec14c9: shl rbx, 0x20
		_0xffffff8000ec14cd: movabs r15, 0xaf3b2d1b00000000
		_0xffffff8000ec14d7: add r15, rbx
		_0xffffff8000ec14da: mov rbx, r15
		_0xffffff8000ec14dd: sar rbx, 0x1f
		_0xffffff8000ec14e1: movabs r12, 0xbffdbffd409db3b8
		_0xffffff8000ec14eb: and r12, rbx
		_0xffffff8000ec14ee: sar r15, 0x20
		_0xffffff8000ec14f2: movabs rbx, 0x5ffedffea04ed9dc
		_0xffffff8000ec14fc: xor rbx, r15
		_0xffffff8000ec14ff: add rbx, r12
		_0xffffff8000ec1502: add rbx, qword ptr [r14 + 0x98]
		_0xffffff8000ec1509: movabs r15, 0xa00120015fb12624
		_0xffffff8000ec1513: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec1517: mov cl, al
		_0xffffff8000ec1519: add cl, cl
		_0xffffff8000ec151b: xor al, 0x2f
		_0xffffff8000ec151d: and cl, 0x5e
		_0xffffff8000ec1520: add cl, al
		_0xffffff8000ec1522: add cl, 0xdd
		_0xffffff8000ec1525: movzx eax, cl
		_0xffffff8000ec1528: cmp al, 0xc
		_0xffffff8000ec152a: sbb rbx, rbx
		_0xffffff8000ec152d: and ebx, 0x100
		_0xffffff8000ec1533: add ebx, eax
		_0xffffff8000ec1535: add ebx, 0x33920eab
		_0xffffff8000ec153b: shl rbx, 0x20
		_0xffffff8000ec153f: movabs r15, 0xcc6df14900000000
		_0xffffff8000ec1549: add r15, rbx
		_0xffffff8000ec154c: mov rbx, r15
		_0xffffff8000ec154f: sar rbx, 0x1f
		_0xffffff8000ec1553: movabs r12, 0xff9bd98fef7cdfe
		_0xffffff8000ec155d: and r12, rbx
		_0xffffff8000ec1560: sar r15, 0x20
		_0xffffff8000ec1564: movabs rbx, 0x27fcdecc7f7be6ff
		_0xffffff8000ec156e: xor rbx, r15
		_0xffffff8000ec1571: add rbx, r12
		_0xffffff8000ec1574: lea rbx, [r13 + rbx*4]
		_0xffffff8000ec1579: movabs r15, 0x600c84ce02106404
		_0xffffff8000ec1583: mov eax, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec1589: xor eax, dword ptr [r15 + rbx]
		_0xffffff8000ec158d: mov dword ptr [rbp - 0x3c4], eax
		_0xffffff8000ec1593: mov ecx, eax
		_0xffffff8000ec1595: shr ecx, 0xf
		_0xffffff8000ec1598: and ecx, 0x2c
		_0xffffff8000ec159b: mov edx, eax
		_0xffffff8000ec159d: shr edx, 0x10
		_0xffffff8000ec15a0: add edx, 0x16
		_0xffffff8000ec15a3: sub edx, ecx
		_0xffffff8000ec15a5: xor edx, 0x16
		_0xffffff8000ec15a8: mov cl, dl
		_0xffffff8000ec15aa: add cl, cl
		_0xffffff8000ec15ac: xor dl, 0x3c
		_0xffffff8000ec15af: and cl, 0x78
		_0xffffff8000ec15b2: add cl, dl
		_0xffffff8000ec15b4: add cl, 0xfc
		_0xffffff8000ec15b7: movzx ecx, cl
		_0xffffff8000ec15ba: cmp cl, 0x38
		_0xffffff8000ec15bd: sbb rbx, rbx
		_0xffffff8000ec15c0: and ebx, 0x100
		_0xffffff8000ec15c6: add ebx, ecx
		_0xffffff8000ec15c8: add ebx, 0x594dcf77
		_0xffffff8000ec15ce: shl rbx, 0x20
		_0xffffff8000ec15d2: movabs r15, 0xa6b2305100000000
		_0xffffff8000ec15dc: add r15, rbx
		_0xffffff8000ec15df: mov rbx, r15
		_0xffffff8000ec15e2: sar rbx, 0x1f
		_0xffffff8000ec15e6: movabs r12, 0xd06f73c9d1cea67e
		_0xffffff8000ec15f0: and r12, rbx
		_0xffffff8000ec15f3: sar r15, 0x20
		_0xffffff8000ec15f7: movabs rbx, 0x6837b9e4e8e7533f
		_0xffffff8000ec1601: xor rbx, r15
		_0xffffff8000ec1604: add rbx, r12
		_0xffffff8000ec1607: add rbx, qword ptr [r14 + 0x180]
		_0xffffff8000ec160e: movabs r15, 0x97c8461b1718acc1
		_0xffffff8000ec1618: mov cl, byte ptr [r15 + rbx]
		_0xffffff8000ec161c: mov dl, cl
		_0xffffff8000ec161e: add dl, dl
		_0xffffff8000ec1620: xor cl, 0x71
		_0xffffff8000ec1623: and dl, 0xe2
		_0xffffff8000ec1626: add dl, cl
		_0xffffff8000ec1628: dec dl
		_0xffffff8000ec162a: movzx ecx, dl
		_0xffffff8000ec162d: cmp cl, 0x70
		_0xffffff8000ec1630: sbb rbx, rbx
		_0xffffff8000ec1633: and ebx, 0x100
		_0xffffff8000ec1639: add ebx, ecx
		_0xffffff8000ec163b: add ebx, 0x60585b3e
		_0xffffff8000ec1641: shl rbx, 0x20
		_0xffffff8000ec1645: movabs r15, 0x9fa7a45200000000
		_0xffffff8000ec164f: add r15, rbx
		_0xffffff8000ec1652: mov rbx, r15
		_0xffffff8000ec1655: sar rbx, 0x1f
		_0xffffff8000ec1659: movabs r12, 0x3df5ecf7dff7bfee
		_0xffffff8000ec1663: and r12, rbx
		_0xffffff8000ec1666: sar r15, 0x20
		_0xffffff8000ec166a: movabs rbx, 0x3efaf67beffbdff7
		_0xffffff8000ec1674: xor rbx, r15
		_0xffffff8000ec1677: add rbx, r12
		_0xffffff8000ec167a: lea rbx, [r10 + rbx*4]
		_0xffffff8000ec167e: movabs r15, 0x414261040108024
		_0xffffff8000ec1688: mov edx, dword ptr [r15 + rbx]
		_0xffffff8000ec168c: mov ecx, esi
		_0xffffff8000ec168e: shr ecx, 7
		_0xffffff8000ec1691: mov r11d, 0xcc
		_0xffffff8000ec1697: sub r11d, ecx
		_0xffffff8000ec169a: mov ebx, r11d
		_0xffffff8000ec169d: and ebx, ecx
		_0xffffff8000ec169f: xor r11d, ecx
		_0xffffff8000ec16a2: lea r11d, [r11 + rbx*2]
		_0xffffff8000ec16a6: and r11d, ecx
		_0xffffff8000ec16a9: neg r11d
		_0xffffff8000ec16ac: mov ecx, esi
		_0xffffff8000ec16ae: shr ecx, 8
		_0xffffff8000ec16b1: add ecx, 0xe6
		_0xffffff8000ec16b7: mov ebx, ecx
		_0xffffff8000ec16b9: xor ebx, r11d
		_0xffffff8000ec16bc: mov r15d, ebx
		_0xffffff8000ec16bf: and r15d, 0x12
		_0xffffff8000ec16c3: mov r12d, ecx
		_0xffffff8000ec16c6: and r12d, r11d
		_0xffffff8000ec16c9: mov eax, r12d
		_0xffffff8000ec16cc: and eax, 0x12
		_0xffffff8000ec16cf: add eax, eax
		_0xffffff8000ec16d1: add eax, r15d
		_0xffffff8000ec16d4: and ebx, 0xa4
		_0xffffff8000ec16da: and r12d, 0x4a5248a4
		_0xffffff8000ec16e1: add r12d, r12d
		_0xffffff8000ec16e4: add r12d, ebx
		_0xffffff8000ec16e7: and r11d, 0x49
		_0xffffff8000ec16eb: and ecx, 0x49
		_0xffffff8000ec16ee: add ecx, r11d
		_0xffffff8000ec16f1: add ecx, r12d
		_0xffffff8000ec16f4: add ecx, eax
		_0xffffff8000ec16f6: xor ecx, 0xe6
		_0xffffff8000ec16fc: mov al, cl
		_0xffffff8000ec16fe: xor al, 0x1e
		_0xffffff8000ec1700: mov r11b, 0xf4
		_0xffffff8000ec1703: sub r11b, al
		_0xffffff8000ec1706: mov bl, r11b
		_0xffffff8000ec1709: xor bl, al
		_0xffffff8000ec170b: and r11b, al
		_0xffffff8000ec170e: add r11b, r11b
		_0xffffff8000ec1711: add r11b, bl
		_0xffffff8000ec1714: mov bl, r11b
		_0xffffff8000ec1717: and bl, 9
		_0xffffff8000ec171a: mov r15b, al
		_0xffffff8000ec171d: and r15b, 9
		_0xffffff8000ec1721: or r15b, 2
		_0xffffff8000ec1725: sub r15b, bl
		_0xffffff8000ec1728: and bl, al
		_0xffffff8000ec172a: mov r12b, al
		_0xffffff8000ec172d: and r12b, 0xa2
		_0xffffff8000ec1731: mov r10b, r11b
		_0xffffff8000ec1734: and r10b, r12b
		_0xffffff8000ec1737: add r10b, r10b
		_0xffffff8000ec173a: mov r13b, r11b
		_0xffffff8000ec173d: and r13b, 0xa2
		_0xffffff8000ec1741: or r13b, 0x44
		_0xffffff8000ec1745: sub r13b, r12b
		_0xffffff8000ec1748: and r13b, 0xa2
		_0xffffff8000ec174c: or r13b, r10b
		_0xffffff8000ec174f: add bl, bl
		_0xffffff8000ec1751: and r15b, 9
		_0xffffff8000ec1755: or r15b, bl
		_0xffffff8000ec1758: and r11b, 0x54
		_0xffffff8000ec175c: and al, 0x54
		_0xffffff8000ec175e: add al, r11b
		_0xffffff8000ec1761: add al, r15b
		_0xffffff8000ec1764: add al, r13b
		_0xffffff8000ec1767: add cl, cl
		_0xffffff8000ec1769: and cl, 0x3c
		_0xffffff8000ec176c: mov r10b, al
		_0xffffff8000ec176f: xor r10b, cl
		_0xffffff8000ec1772: and cl, al
		_0xffffff8000ec1774: add cl, cl
		_0xffffff8000ec1776: add cl, r10b
		_0xffffff8000ec1779: movzx ebx, cl
		_0xffffff8000ec177c: cmp bl, 0x12
		_0xffffff8000ec177f: sbb r15, r15
		_0xffffff8000ec1782: and r15, 0x100
		_0xffffff8000ec1789: add r15, rbx
		_0xffffff8000ec178c: add r15, -0x12
		_0xffffff8000ec1790: movabs rbx, 0x1f73b7fe39f7feb6
		_0xffffff8000ec179a: mov r12, r15
		_0xffffff8000ec179d: and r12, rbx
		_0xffffff8000ec17a0: xor r15, rbx
		_0xffffff8000ec17a3: lea rbx, [r15 + r12*2]
		_0xffffff8000ec17a7: add rbx, qword ptr [r14 + 0xb8]
		_0xffffff8000ec17ae: movabs r15, 0xe08c4801c608014a
		_0xffffff8000ec17b8: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec17bc: mov cl, al
		_0xffffff8000ec17be: add cl, cl
		_0xffffff8000ec17c0: xor al, 0x53
		_0xffffff8000ec17c2: and cl, 0xa6
		_0xffffff8000ec17c5: add cl, al
		_0xffffff8000ec17c7: add cl, 0xf0
		_0xffffff8000ec17ca: movzx ebx, cl
		_0xffffff8000ec17cd: cmp bl, 0x43
		_0xffffff8000ec17d0: sbb r15, r15
		_0xffffff8000ec17d3: and r15, 0x100
		_0xffffff8000ec17da: add r15, rbx
		_0xffffff8000ec17dd: add r15, -0x43
		_0xffffff8000ec17e1: movabs rbx, 0x17fcff3ffecdfd5f
		_0xffffff8000ec17eb: and rbx, r15
		_0xffffff8000ec17ee: movabs r12, 0x37fcff3ffecdfd5f
		_0xffffff8000ec17f8: xor r12, r15
		_0xffffff8000ec17fb: lea rbx, [r12 + rbx*2]
		_0xffffff8000ec17ff: mov r13, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec1806: lea rbx, [r13 + rbx*4]
		_0xffffff8000ec180b: mov eax, r8d
		_0xffffff8000ec180e: shr eax, 0xf
		_0xffffff8000ec1811: and eax, 0x80
		_0xffffff8000ec1816: mov ecx, r8d
		_0xffffff8000ec1819: shr ecx, 0x10
		_0xffffff8000ec181c: add ecx, 0xc0
		_0xffffff8000ec1822: sub ecx, eax
		_0xffffff8000ec1824: xor ecx, 0xc0
		_0xffffff8000ec182a: mov al, cl
		_0xffffff8000ec182c: add al, al
		_0xffffff8000ec182e: xor cl, 0x69
		_0xffffff8000ec1831: and al, 0xd2
		_0xffffff8000ec1833: add al, cl
		_0xffffff8000ec1835: add al, 0xb8
		_0xffffff8000ec1837: movzx r15d, al
		_0xffffff8000ec183b: cmp r15b, 0x21
		_0xffffff8000ec183f: sbb r12, r12
		_0xffffff8000ec1842: and r12, 0x100
		_0xffffff8000ec1849: add r12, r15
		_0xffffff8000ec184c: add r12, -0x21
		_0xffffff8000ec1850: movabs r15, 0x5dafef2ffefddffd
		_0xffffff8000ec185a: mov rax, r12
		_0xffffff8000ec185d: and rax, r15
		_0xffffff8000ec1860: xor r12, r15
		_0xffffff8000ec1863: lea r15, [r12 + rax*2]
		_0xffffff8000ec1867: add r15, qword ptr [r14 + 0xe0]
		_0xffffff8000ec186e: movabs r12, 0xa25010d001022003
		_0xffffff8000ec1878: mov al, byte ptr [r12 + r15]
		_0xffffff8000ec187c: mov cl, al
		_0xffffff8000ec187e: add cl, cl
		_0xffffff8000ec1880: xor al, 0x3f
		_0xffffff8000ec1882: and cl, 0x7e
		_0xffffff8000ec1885: add cl, al
		_0xffffff8000ec1887: add cl, 0xc8
		_0xffffff8000ec188a: movzx eax, cl
		_0xffffff8000ec188d: cmp al, 7
		_0xffffff8000ec188f: sbb r15, r15
		_0xffffff8000ec1892: and r15d, 0x100
		_0xffffff8000ec1899: add r15d, eax
		_0xffffff8000ec189c: add r15d, 0x4ab3a31d
		_0xffffff8000ec18a3: shl r15, 0x20
		_0xffffff8000ec18a7: movabs r12, 0xb54c5cdc00000000
		_0xffffff8000ec18b1: add r12, r15
		_0xffffff8000ec18b4: mov r15, r12
		_0xffffff8000ec18b7: sar r15, 0x1f
		_0xffffff8000ec18bb: movabs rax, 0x2fff5352fffffbfe
		_0xffffff8000ec18c5: and rax, r15
		_0xffffff8000ec18c8: sar r12, 0x20
		_0xffffff8000ec18cc: movabs r15, 0x17ffa9a97ffffdff
		_0xffffff8000ec18d6: xor r15, r12
		_0xffffff8000ec18d9: add r15, rax
		_0xffffff8000ec18dc: mov r10, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec18e3: lea r15, [r10 + r15*4]
		_0xffffff8000ec18e7: mov eax, edi
		_0xffffff8000ec18e9: shr eax, 0x17
		_0xffffff8000ec18ec: and eax, 0x84
		_0xffffff8000ec18f1: mov ecx, edi
		_0xffffff8000ec18f3: shr ecx, 0x18
		_0xffffff8000ec18f6: add ecx, 0xc2
		_0xffffff8000ec18fc: sub ecx, eax
		_0xffffff8000ec18fe: xor ecx, 0xc2
		_0xffffff8000ec1904: mov al, cl
		_0xffffff8000ec1906: add al, al
		_0xffffff8000ec1908: xor cl, 0x6e
		_0xffffff8000ec190b: and al, 0xdc
		_0xffffff8000ec190d: add al, cl
		_0xffffff8000ec190f: add al, 0xfc
		_0xffffff8000ec1911: movzx eax, al
		_0xffffff8000ec1914: cmp al, 0x6a
		_0xffffff8000ec1916: sbb r12, r12
		_0xffffff8000ec1919: and r12d, 0x100
		_0xffffff8000ec1920: add r12d, eax
		_0xffffff8000ec1923: add r12d, 0x37f63b81
		_0xffffff8000ec192a: shl r12, 0x20
		_0xffffff8000ec192e: movabs rax, 0xc809c41500000000
		_0xffffff8000ec1938: add rax, r12
		_0xffffff8000ec193b: mov r12, rax
		_0xffffff8000ec193e: sar r12, 0x1f
		_0xffffff8000ec1942: movabs rcx, 0xcecbdffedd4aef9a
		_0xffffff8000ec194c: and rcx, r12
		_0xffffff8000ec194f: sar rax, 0x20
		_0xffffff8000ec1953: movabs r12, 0x6765efff6ea577cd
		_0xffffff8000ec195d: xor r12, rax
		_0xffffff8000ec1960: add r12, rcx
		_0xffffff8000ec1963: add r12, qword ptr [r14 + 0x108]
		_0xffffff8000ec196a: movabs rax, 0x989a1000915a8833
		_0xffffff8000ec1974: mov al, byte ptr [rax + r12]
		_0xffffff8000ec1978: mov cl, al
		_0xffffff8000ec197a: add cl, cl
		_0xffffff8000ec197c: xor al, 0x6f
		_0xffffff8000ec197e: and cl, 0xde
		_0xffffff8000ec1981: add cl, al
		_0xffffff8000ec1983: dec cl
		_0xffffff8000ec1985: movzx eax, cl
		_0xffffff8000ec1988: cmp al, 0x6e
		_0xffffff8000ec198a: sbb r12, r12
		_0xffffff8000ec198d: and r12d, 0x100
		_0xffffff8000ec1994: add r12d, eax
		_0xffffff8000ec1997: add r12d, 0x45c53f9a
		_0xffffff8000ec199e: shl r12, 0x20
		_0xffffff8000ec19a2: movabs rax, 0xba3abff800000000
		_0xffffff8000ec19ac: add rax, r12
		_0xffffff8000ec19af: mov r12, rax
		_0xffffff8000ec19b2: sar r12, 0x1f
		_0xffffff8000ec19b6: movabs rcx, 0x3f5ff79efcedbffa
		_0xffffff8000ec19c0: and rcx, r12
		_0xffffff8000ec19c3: sar rax, 0x20
		_0xffffff8000ec19c7: movabs r12, 0x3faffbcf7e76dffd
		_0xffffff8000ec19d1: xor r12, rax
		_0xffffff8000ec19d4: add r12, rcx
		_0xffffff8000ec19d7: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec19de: lea r12, [rax + r12*4]
		_0xffffff8000ec19e2: movabs rcx, 0x14010c20624800c
		_0xffffff8000ec19ec: mov r11d, dword ptr [rcx + r12]
		_0xffffff8000ec19f0: movabs r12, 0xa001595a00000804
		_0xffffff8000ec19fa: xor r11d, dword ptr [r12 + r15]
		_0xffffff8000ec19fe: movabs r15, 0x200c030004c80a84
		_0xffffff8000ec1a08: xor r11d, dword ptr [r15 + rbx]
		_0xffffff8000ec1a0c: mov cl, r9b
		_0xffffff8000ec1a0f: add cl, cl
		_0xffffff8000ec1a11: mov bl, r9b
		_0xffffff8000ec1a14: xor bl, 0x7a
		_0xffffff8000ec1a17: mov r15b, 0xa0
		_0xffffff8000ec1a1a: sub r15b, bl
		_0xffffff8000ec1a1d: mov r12b, r15b
		_0xffffff8000ec1a20: and r12b, bl
		_0xffffff8000ec1a23: xor r15b, bl
		_0xffffff8000ec1a26: add r15b, bl
		_0xffffff8000ec1a29: add r12b, r12b
		_0xffffff8000ec1a2c: add r12b, r15b
		_0xffffff8000ec1a2f: mov bl, cl
		_0xffffff8000ec1a31: and bl, 0xb2
		_0xffffff8000ec1a34: xor bl, 0x18
		_0xffffff8000ec1a37: and cl, 0x4c
		_0xffffff8000ec1a3a: xor cl, 0x18
		_0xffffff8000ec1a3d: mov r15b, cl
		_0xffffff8000ec1a40: add r15b, bl
		_0xffffff8000ec1a43: and cl, bl
		_0xffffff8000ec1a45: add cl, cl
		_0xffffff8000ec1a47: sub r15b, cl
		_0xffffff8000ec1a4a: sar r15b, 1
		_0xffffff8000ec1a4d: add r12b, r15b
		_0xffffff8000ec1a50: add r12b, 0xfa
		_0xffffff8000ec1a54: xor r15b, 0xfa
		_0xffffff8000ec1a58: sub r12b, r15b
		_0xffffff8000ec1a5b: movzx ecx, r12b
		_0xffffff8000ec1a5f: cmp cl, 0x1a
		_0xffffff8000ec1a62: sbb rbx, rbx
		_0xffffff8000ec1a65: and ebx, 0x100
		_0xffffff8000ec1a6b: add ebx, ecx
		_0xffffff8000ec1a6d: add ebx, 0x4f23e636
		_0xffffff8000ec1a73: shl rbx, 0x20
		_0xffffff8000ec1a77: movabs r15, 0xb0dc19b000000000
		_0xffffff8000ec1a81: add r15, rbx
		_0xffffff8000ec1a84: mov rbx, r15
		_0xffffff8000ec1a87: sar rbx, 0x1f
		_0xffffff8000ec1a8b: movabs r12, 0xf6ddf79dbfffb7fc
		_0xffffff8000ec1a95: and r12, rbx
		_0xffffff8000ec1a98: sar r15, 0x20
		_0xffffff8000ec1a9c: movabs rbx, 0x7b6efbcedfffdbfe
		_0xffffff8000ec1aa6: xor rbx, r15
		_0xffffff8000ec1aa9: add rbx, r12
		_0xffffff8000ec1aac: add rbx, qword ptr [r14 + 0x90]
		_0xffffff8000ec1ab3: movabs r15, 0x8491043120002402
		_0xffffff8000ec1abd: mov cl, byte ptr [r15 + rbx]
		_0xffffff8000ec1ac1: mov bl, cl
		_0xffffff8000ec1ac3: add bl, bl
		_0xffffff8000ec1ac5: xor cl, 0x79
		_0xffffff8000ec1ac8: and bl, 0xf2
		_0xffffff8000ec1acb: add bl, cl
		_0xffffff8000ec1acd: add bl, 0xa0
		_0xffffff8000ec1ad0: movzx ecx, bl
		_0xffffff8000ec1ad3: cmp cl, 0x19
		_0xffffff8000ec1ad6: sbb rbx, rbx
		_0xffffff8000ec1ad9: and ebx, 0x100
		_0xffffff8000ec1adf: add ebx, ecx
		_0xffffff8000ec1ae1: add ebx, 0x646d84dc
		_0xffffff8000ec1ae7: shl rbx, 0x20
		_0xffffff8000ec1aeb: movabs r15, 0x9b927b0b00000000
		_0xffffff8000ec1af5: add r15, rbx
		_0xffffff8000ec1af8: mov rbx, r15
		_0xffffff8000ec1afb: sar rbx, 0x1f
		_0xffffff8000ec1aff: movabs r12, 0x3f736b5fffbbfbe2
		_0xffffff8000ec1b09: and r12, rbx
		_0xffffff8000ec1b0c: sar r15, 0x20
		_0xffffff8000ec1b10: movabs rbx, 0x3fb9b5afffddfdf1
		_0xffffff8000ec1b1a: xor rbx, r15
		_0xffffff8000ec1b1d: add rbx, r12
		_0xffffff8000ec1b20: mov r12, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec1b27: lea rbx, [r12 + rbx*4]
		_0xffffff8000ec1b2b: movabs r15, 0x11929400088083c
		_0xffffff8000ec1b35: xor r11d, dword ptr [r15 + rbx]
		_0xffffff8000ec1b39: mov ecx, r11d
		_0xffffff8000ec1b3c: shr ecx, 0x17
		_0xffffff8000ec1b3f: and ecx, 0xd8
		_0xffffff8000ec1b45: mov ebx, r11d
		_0xffffff8000ec1b48: shr ebx, 0x18
		_0xffffff8000ec1b4b: add ebx, 0xec
		_0xffffff8000ec1b51: sub ebx, ecx
		_0xffffff8000ec1b53: xor ebx, 0xec
		_0xffffff8000ec1b59: mov cl, bl
		_0xffffff8000ec1b5b: add cl, cl
		_0xffffff8000ec1b5d: xor bl, 0x6f
		_0xffffff8000ec1b60: and cl, 0xde
		_0xffffff8000ec1b63: add cl, bl
		_0xffffff8000ec1b65: dec cl
		_0xffffff8000ec1b67: movzx ecx, cl
		_0xffffff8000ec1b6a: cmp cl, 0x6e
		_0xffffff8000ec1b6d: sbb rbx, rbx
		_0xffffff8000ec1b70: and ebx, 0x100
		_0xffffff8000ec1b76: add ebx, ecx
		_0xffffff8000ec1b78: add ebx, 0x5ecf58e4
		_0xffffff8000ec1b7e: shl rbx, 0x20
		_0xffffff8000ec1b82: movabs r15, 0xa130a6ae00000000
		_0xffffff8000ec1b8c: add r15, rbx
		_0xffffff8000ec1b8f: mov rbx, r15
		_0xffffff8000ec1b92: sar rbx, 0x1f
		_0xffffff8000ec1b96: movabs rcx, 0xbfdf7fecbbf7befa
		_0xffffff8000ec1ba0: and rcx, rbx
		_0xffffff8000ec1ba3: sar r15, 0x20
		_0xffffff8000ec1ba7: movabs rbx, 0x5fefbff65dfbdf7d
		_0xffffff8000ec1bb1: xor rbx, r15
		_0xffffff8000ec1bb4: add rbx, rcx
		_0xffffff8000ec1bb7: add rbx, qword ptr [r14 + 0x128]
		_0xffffff8000ec1bbe: movabs r15, 0xa0104009a2042083
		_0xffffff8000ec1bc8: mov cl, byte ptr [r15 + rbx]
		_0xffffff8000ec1bcc: mov bl, cl
		_0xffffff8000ec1bce: add bl, bl
		_0xffffff8000ec1bd0: xor cl, 0x47
		_0xffffff8000ec1bd3: and bl, 0x8e
		_0xffffff8000ec1bd6: add bl, cl
		_0xffffff8000ec1bd8: add bl, 0xfc
		_0xffffff8000ec1bdb: movzx ecx, bl
		_0xffffff8000ec1bde: cmp cl, 0x43
		_0xffffff8000ec1be1: sbb rbx, rbx
		_0xffffff8000ec1be4: and ebx, 0x100
		_0xffffff8000ec1bea: add ebx, ecx
		_0xffffff8000ec1bec: add ebx, 0x784e473d
		_0xffffff8000ec1bf2: shl rbx, 0x20
		_0xffffff8000ec1bf6: movabs r15, 0x87b1b88000000000
		_0xffffff8000ec1c00: add r15, rbx
		_0xffffff8000ec1c03: mov rbx, r15
		_0xffffff8000ec1c06: sar rbx, 0x1f
		_0xffffff8000ec1c0a: movabs rcx, 0x2d7dfe7fb7dfc772
		_0xffffff8000ec1c14: and rcx, rbx
		_0xffffff8000ec1c17: sar r15, 0x20
		_0xffffff8000ec1c1b: movabs rbx, 0x36beff3fdbefe3b9
		_0xffffff8000ec1c25: xor rbx, r15
		_0xffffff8000ec1c28: add rbx, rcx
		_0xffffff8000ec1c2b: lea rbx, [rax + rbx*4]
		_0xffffff8000ec1c2f: movabs r15, 0x250403009040711c
		_0xffffff8000ec1c39: xor edx, dword ptr [r15 + rbx]
		_0xffffff8000ec1c3d: mov ecx, r9d
		_0xffffff8000ec1c40: shr ecx, 0x10
		_0xffffff8000ec1c43: mov ebx, ecx
		_0xffffff8000ec1c45: and ebx, 0xab3b
		_0xffffff8000ec1c4b: and ecx, 0x54c4
		_0xffffff8000ec1c51: add ecx, ebx
		_0xffffff8000ec1c53: mov ebx, ecx
		_0xffffff8000ec1c55: xor ebx, 0x63
		_0xffffff8000ec1c58: mov r15d, r9d
		_0xffffff8000ec1c5b: shr r15d, 0xf
		_0xffffff8000ec1c5f: and r15d, 0xc6
		_0xffffff8000ec1c66: sub ebx, r15d
		_0xffffff8000ec1c69: and ecx, 0x63
		_0xffffff8000ec1c6c: lea ecx, [rbx + rcx*2]
		_0xffffff8000ec1c6f: xor ecx, 0xa05418bb
		_0xffffff8000ec1c75: mov ebx, ecx
		_0xffffff8000ec1c77: and ebx, 0xad
		_0xffffff8000ec1c7d: and ecx, 0x52
		_0xffffff8000ec1c80: add ecx, 0x24
		_0xffffff8000ec1c83: add ecx, 0x30
		_0xffffff8000ec1c86: and ecx, 0x52
		_0xffffff8000ec1c89: add ecx, ebx
		_0xffffff8000ec1c8b: xor ecx, 0x88
		_0xffffff8000ec1c91: mov bl, cl
		_0xffffff8000ec1c93: add bl, bl
		_0xffffff8000ec1c95: mov r15b, bl
		_0xffffff8000ec1c98: and r15b, 0x28
		_0xffffff8000ec1c9c: xor r15b, 0x62
		_0xffffff8000ec1ca0: and bl, 0xd6
		_0xffffff8000ec1ca3: xor bl, 0x62
		_0xffffff8000ec1ca6: mov al, bl
		_0xffffff8000ec1ca8: add al, r15b
		_0xffffff8000ec1cab: and bl, r15b
		_0xffffff8000ec1cae: add bl, bl
		_0xffffff8000ec1cb0: sub al, bl
		_0xffffff8000ec1cb2: and al, 0xbc
		_0xffffff8000ec1cb4: xor cl, 0x2b
		_0xffffff8000ec1cb7: mov bl, cl
		_0xffffff8000ec1cb9: add bl, bl
		_0xffffff8000ec1cbb: add cl, 0x73
		_0xffffff8000ec1cbe: and bl, 0xea
		_0xffffff8000ec1cc1: sub cl, bl
		_0xffffff8000ec1cc3: mov bl, al
		_0xffffff8000ec1cc5: xor bl, cl
		_0xffffff8000ec1cc7: and cl, al
		_0xffffff8000ec1cc9: add cl, cl
		_0xffffff8000ec1ccb: add cl, bl
		_0xffffff8000ec1ccd: movzx eax, cl
		_0xffffff8000ec1cd0: cmp al, 0x5c
		_0xffffff8000ec1cd2: sbb rbx, rbx
		_0xffffff8000ec1cd5: and ebx, 0x100
		_0xffffff8000ec1cdb: add ebx, eax
		_0xffffff8000ec1cdd: add ebx, 0x36fcee81
		_0xffffff8000ec1ce3: shl rbx, 0x20
		_0xffffff8000ec1ce7: movabs r15, 0xc903112300000000
		_0xffffff8000ec1cf1: add r15, rbx
		_0xffffff8000ec1cf4: mov rbx, r15
		_0xffffff8000ec1cf7: sar rbx, 0x1f
		_0xffffff8000ec1cfb: movabs rax, 0xaec3ee7fb73b9b60
		_0xffffff8000ec1d05: and rax, rbx
		_0xffffff8000ec1d08: sar r15, 0x20
		_0xffffff8000ec1d0c: movabs rbx, 0x5761f73fdb9dcdb0
		_0xffffff8000ec1d16: xor rbx, r15
		_0xffffff8000ec1d19: add rbx, rax
		_0xffffff8000ec1d1c: add rbx, qword ptr [r14 + 0xa0]
		_0xffffff8000ec1d23: movabs r15, 0xa89e08c024623250
		_0xffffff8000ec1d2d: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec1d31: mov cl, al
		_0xffffff8000ec1d33: add cl, cl
		_0xffffff8000ec1d35: xor al, 0x6b
		_0xffffff8000ec1d37: and cl, 0xd6
		_0xffffff8000ec1d3a: add cl, al
		_0xffffff8000ec1d3c: add cl, 0xf8
		_0xffffff8000ec1d3f: movzx eax, cl
		_0xffffff8000ec1d42: cmp al, 0x63
		_0xffffff8000ec1d44: sbb rbx, rbx
		_0xffffff8000ec1d47: and ebx, 0x100
		_0xffffff8000ec1d4d: add ebx, eax
		_0xffffff8000ec1d4f: add ebx, 0x5d436a14
		_0xffffff8000ec1d55: shl rbx, 0x20
		_0xffffff8000ec1d59: movabs r15, 0xa2bc958900000000
		_0xffffff8000ec1d63: add r15, rbx
		_0xffffff8000ec1d66: mov rbx, r15
		_0xffffff8000ec1d69: sar rbx, 0x1f
		_0xffffff8000ec1d6d: movabs rax, 0x23edefbbfffeef5e
		_0xffffff8000ec1d77: and rax, rbx
		_0xffffff8000ec1d7a: sar r15, 0x20
		_0xffffff8000ec1d7e: movabs rbx, 0x31f6f7ddffff77af
		_0xffffff8000ec1d88: xor rbx, r15
		_0xffffff8000ec1d8b: add rbx, rax
		_0xffffff8000ec1d8e: lea rbx, [r10 + rbx*4]
		_0xffffff8000ec1d92: mov eax, esi
		_0xffffff8000ec1d94: shr eax, 0x18
		_0xffffff8000ec1d97: imul ecx, eax, 0xfd44eb76
		_0xffffff8000ec1d9d: and ecx, 0xfd44eb76
		_0xffffff8000ec1da3: imul eax, eax, 0xfea275bb
		_0xffffff8000ec1da9: xor eax, 0xfea275bb
		_0xffffff8000ec1dae: add eax, ecx
		_0xffffff8000ec1db0: imul eax, eax, 0x48170773
		_0xffffff8000ec1db6: add eax, 0xbcafc8ed
		_0xffffff8000ec1dbb: mov ecx, esi
		_0xffffff8000ec1dbd: shr ecx, 0x17
		_0xffffff8000ec1dc0: and ecx, 2
		_0xffffff8000ec1dc3: mov r15d, 0x43503713
		_0xffffff8000ec1dc9: sub r15d, ecx
		_0xffffff8000ec1dcc: mov ecx, eax
		_0xffffff8000ec1dce: and ecx, r15d
		_0xffffff8000ec1dd1: xor r15d, eax
		_0xffffff8000ec1dd4: lea eax, [r15 + rcx*2]
		_0xffffff8000ec1dd8: xor eax, 0x455fbe10
		_0xffffff8000ec1ddd: lea ecx, [rax + rax]
		_0xffffff8000ec1de0: and ecx, 0x22
		_0xffffff8000ec1de3: neg ecx
		_0xffffff8000ec1de5: lea eax, [rax + rcx + 0x11]
		_0xffffff8000ec1de9: mov cl, 1
		_0xffffff8000ec1deb: sub cl, al
		_0xffffff8000ec1ded: mov r15b, cl
		_0xffffff8000ec1df0: xor r15b, al
		_0xffffff8000ec1df3: and cl, al
		_0xffffff8000ec1df5: add cl, cl
		_0xffffff8000ec1df7: add cl, r15b
		_0xffffff8000ec1dfa: mov r15b, al
		_0xffffff8000ec1dfd: shl r15b, cl
		_0xffffff8000ec1e00: and r15b, 0x1a
		_0xffffff8000ec1e04: xor al, 0x32
		_0xffffff8000ec1e06: mov cl, al
		_0xffffff8000ec1e08: add cl, cl
		_0xffffff8000ec1e0a: add al, 0x3f
		_0xffffff8000ec1e0c: and cl, 0x7e
		_0xffffff8000ec1e0f: sub al, cl
		_0xffffff8000ec1e11: add al, r15b
		_0xffffff8000ec1e14: movzx r15d, al
		_0xffffff8000ec1e18: cmp r15b, 0xd
		_0xffffff8000ec1e1c: sbb rax, rax
		_0xffffff8000ec1e1f: and rax, 0x100
		_0xffffff8000ec1e25: add rax, r15
		_0xffffff8000ec1e28: add rax, -0xd
		_0xffffff8000ec1e2c: movabs r15, 0x6dbb7bbbcefbff95
		_0xffffff8000ec1e36: mov rcx, rax
		_0xffffff8000ec1e39: and rcx, r15
		_0xffffff8000ec1e3c: xor rax, r15
		_0xffffff8000ec1e3f: lea r15, [rax + rcx*2]
		_0xffffff8000ec1e43: add r15, qword ptr [r14 + 0xc8]
		_0xffffff8000ec1e4a: movabs rax, 0x924484443104006b
		_0xffffff8000ec1e54: mov al, byte ptr [rax + r15]
		_0xffffff8000ec1e58: mov cl, al
		_0xffffff8000ec1e5a: add cl, cl
		_0xffffff8000ec1e5c: xor al, 0x76
		_0xffffff8000ec1e5e: and cl, 0xec
		_0xffffff8000ec1e61: add cl, al
		_0xffffff8000ec1e63: movzx eax, cl
		_0xffffff8000ec1e66: cmp al, 0x76
		_0xffffff8000ec1e68: sbb r15, r15
		_0xffffff8000ec1e6b: and r15d, 0x100
		_0xffffff8000ec1e72: add r15d, eax
		_0xffffff8000ec1e75: add r15d, 0x5625a716
		_0xffffff8000ec1e7c: shl r15, 0x20
		_0xffffff8000ec1e80: movabs rax, 0xa9da587400000000
		_0xffffff8000ec1e8a: add rax, r15
		_0xffffff8000ec1e8d: mov r15, rax
		_0xffffff8000ec1e90: sar r15, 0x1f
		_0xffffff8000ec1e94: movabs rcx, 0x39f5b3f7d3bfddc4
		_0xffffff8000ec1e9e: and rcx, r15
		_0xffffff8000ec1ea1: sar rax, 0x20
		_0xffffff8000ec1ea5: movabs r15, 0x1cfad9fbe9dfeee2
		_0xffffff8000ec1eaf: xor r15, rax
		_0xffffff8000ec1eb2: add r15, rcx
		_0xffffff8000ec1eb5: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec1ebc: lea r15, [rax + r15*4]
		_0xffffff8000ec1ec0: mov ecx, edi
		_0xffffff8000ec1ec2: shr ecx, 7
		_0xffffff8000ec1ec5: and ecx, 0xfa
		_0xffffff8000ec1ecb: mov eax, edi
		_0xffffff8000ec1ecd: shr eax, 8
		_0xffffff8000ec1ed0: add eax, 0x7d
		_0xffffff8000ec1ed3: sub eax, ecx
		_0xffffff8000ec1ed5: xor eax, 0x7d
		_0xffffff8000ec1ed8: mov cl, al
		_0xffffff8000ec1eda: add cl, cl
		_0xffffff8000ec1edc: xor al, 0x7c
		_0xffffff8000ec1ede: and cl, 0xf8
		_0xffffff8000ec1ee1: add cl, al
		_0xffffff8000ec1ee3: add cl, 0xe8
		_0xffffff8000ec1ee6: movzx eax, cl
		_0xffffff8000ec1ee9: cmp al, 0x64
		_0xffffff8000ec1eeb: sbb rcx, rcx
		_0xffffff8000ec1eee: and rcx, 0x100
		_0xffffff8000ec1ef5: add rcx, rax
		_0xffffff8000ec1ef8: add rcx, -0x64
		_0xffffff8000ec1efc: movabs rax, 0x5ffc71bddffdcb72
		_0xffffff8000ec1f06: mov r12, rcx
		_0xffffff8000ec1f09: and r12, rax
		_0xffffff8000ec1f0c: xor rcx, rax
		_0xffffff8000ec1f0f: lea r12, [rcx + r12*2]
		_0xffffff8000ec1f13: add r12, qword ptr [r14 + 0xf8]
		_0xffffff8000ec1f1a: movabs rax, 0xa0038e422002348e
		_0xffffff8000ec1f24: mov al, byte ptr [rax + r12]
		_0xffffff8000ec1f28: mov cl, al
		_0xffffff8000ec1f2a: add cl, cl
		_0xffffff8000ec1f2c: xor al, 0x7f
		_0xffffff8000ec1f2e: add al, cl
		_0xffffff8000ec1f30: add al, 0xbf
		_0xffffff8000ec1f32: movzx eax, al
		_0xffffff8000ec1f35: cmp al, 0x3e
		_0xffffff8000ec1f37: sbb r12, r12
		_0xffffff8000ec1f3a: and r12d, 0x100
		_0xffffff8000ec1f41: add r12d, eax
		_0xffffff8000ec1f44: add r12d, 0x12206758
		_0xffffff8000ec1f4b: shl r12, 0x20
		_0xffffff8000ec1f4f: movabs rax, 0xeddf986a00000000
		_0xffffff8000ec1f59: add rax, r12
		_0xffffff8000ec1f5c: mov r12, rax
		_0xffffff8000ec1f5f: sar r12, 0x1f
		_0xffffff8000ec1f63: movabs rcx, 0x3bffbfa7ffe5a3bc
		_0xffffff8000ec1f6d: and rcx, r12
		_0xffffff8000ec1f70: sar rax, 0x20
		_0xffffff8000ec1f74: movabs r12, 0x3dffdfd3fff2d1de
		_0xffffff8000ec1f7e: xor r12, rax
		_0xffffff8000ec1f81: add r12, rcx
		_0xffffff8000ec1f84: lea r12, [r13 + r12*4]
		_0xffffff8000ec1f89: mov al, r8b
		_0xffffff8000ec1f8c: add al, al
		_0xffffff8000ec1f8e: mov cl, r8b
		_0xffffff8000ec1f91: xor cl, 0x4d
		_0xffffff8000ec1f94: and al, 0x9a
		_0xffffff8000ec1f96: add al, cl
		_0xffffff8000ec1f98: movzx eax, al
		_0xffffff8000ec1f9b: cmp al, 0x4d
		_0xffffff8000ec1f9d: sbb rcx, rcx
		_0xffffff8000ec1fa0: and ecx, 0x100
		_0xffffff8000ec1fa6: add ecx, eax
		_0xffffff8000ec1fa8: add ecx, 0x17f81a1e
		_0xffffff8000ec1fae: shl rcx, 0x20
		_0xffffff8000ec1fb2: movabs rax, 0xe807e59500000000
		_0xffffff8000ec1fbc: add rax, rcx
		_0xffffff8000ec1fbf: mov rcx, rax
		_0xffffff8000ec1fc2: sar rcx, 0x1f
		_0xffffff8000ec1fc6: movabs r13, 0x4de96d7fbeffd2f8
		_0xffffff8000ec1fd0: and r13, rcx
		_0xffffff8000ec1fd3: sar rax, 0x20
		_0xffffff8000ec1fd7: movabs rcx, 0x26f4b6bfdf7fe97c
		_0xffffff8000ec1fe1: xor rcx, rax
		_0xffffff8000ec1fe4: add rcx, r13
		_0xffffff8000ec1fe7: add rcx, qword ptr [r14 + 0xd0]
		_0xffffff8000ec1fee: movabs r13, 0xd90b494020801684
		_0xffffff8000ec1ff8: mov al, byte ptr [r13 + rcx]
		_0xffffff8000ec1ffd: mov cl, al
		_0xffffff8000ec1fff: add cl, cl
		_0xffffff8000ec2001: xor al, 0x2f
		_0xffffff8000ec2003: and cl, 0x5e
		_0xffffff8000ec2006: add cl, al
		_0xffffff8000ec2008: add cl, 0xe0
		_0xffffff8000ec200b: movzx eax, cl
		_0xffffff8000ec200e: cmp al, 0xf
		_0xffffff8000ec2010: sbb r13, r13
		_0xffffff8000ec2013: and r13d, 0x100
		_0xffffff8000ec201a: add r13d, eax
		_0xffffff8000ec201d: add r13d, 0x551f43fd
		_0xffffff8000ec2024: shl r13, 0x20
		_0xffffff8000ec2028: movabs rax, 0xaae0bbf400000000
		_0xffffff8000ec2032: add rax, r13
		_0xffffff8000ec2035: mov r13, rax
		_0xffffff8000ec2038: sar r13, 0x1f
		_0xffffff8000ec203c: movabs rcx, 0x2ffdd5abad7bfbee
		_0xffffff8000ec2046: and rcx, r13
		_0xffffff8000ec2049: sar rax, 0x20
		_0xffffff8000ec204d: movabs r13, 0x37feead5d6bdfdf7
		_0xffffff8000ec2057: xor r13, rax
		_0xffffff8000ec205a: add r13, rcx
		_0xffffff8000ec205d: mov rax, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec2064: lea r13, [rax + r13*4]
		_0xffffff8000ec2068: movabs rcx, 0x200454a8a5080824
		_0xffffff8000ec2072: mov ecx, dword ptr [rcx + r13]
		_0xffffff8000ec2076: movabs r13, 0x80080b00034b888
		_0xffffff8000ec2080: xor ecx, dword ptr [r13 + r12]
		_0xffffff8000ec2085: movabs r12, 0x8c14981058804478
		_0xffffff8000ec208f: xor ecx, dword ptr [r12 + r15]
		_0xffffff8000ec2093: movabs r15, 0x3824208800022144
		_0xffffff8000ec209d: xor ecx, dword ptr [r15 + rbx]
		_0xffffff8000ec20a1: mov ebx, ecx
		_0xffffff8000ec20a3: shr ebx, 7
		_0xffffff8000ec20a6: and ebx, 0x22
		_0xffffff8000ec20a9: mov r15d, ecx
		_0xffffff8000ec20ac: shr r15d, 8
		_0xffffff8000ec20b0: add r15d, 0x91
		_0xffffff8000ec20b7: sub r15d, ebx
		_0xffffff8000ec20ba: xor r15d, 0x91
		_0xffffff8000ec20c1: mov bl, r15b
		_0xffffff8000ec20c4: add bl, bl
		_0xffffff8000ec20c6: xor r15b, 0x7f
		_0xffffff8000ec20ca: add r15b, bl
		_0xffffff8000ec20cd: add r15b, 0xbf
		_0xffffff8000ec20d1: movzx ebx, r15b
		_0xffffff8000ec20d5: cmp bl, 0x3e
		_0xffffff8000ec20d8: sbb r15, r15
		_0xffffff8000ec20db: and r15d, 0x100
		_0xffffff8000ec20e2: add r15d, ebx
		_0xffffff8000ec20e5: add r15d, 0x4877195b
		_0xffffff8000ec20ec: shl r15, 0x20
		_0xffffff8000ec20f0: movabs rbx, 0xb788e66700000000
		_0xffffff8000ec20fa: add rbx, r15
		_0xffffff8000ec20fd: mov r15, rbx
		_0xffffff8000ec2100: sar r15, 0x1f
		_0xffffff8000ec2104: movabs r12, 0x7aaeff9ff3e7f5ee
		_0xffffff8000ec210e: and r12, r15
		_0xffffff8000ec2111: sar rbx, 0x20
		_0xffffff8000ec2115: movabs r15, 0x3d577fcff9f3faf7
		_0xffffff8000ec211f: xor r15, rbx
		_0xffffff8000ec2122: add r15, r12
		_0xffffff8000ec2125: add r15, qword ptr [r14 + 0x158]
		_0xffffff8000ec212c: movabs rbx, 0xc2a88030060c0509
		_0xffffff8000ec2136: mov bl, byte ptr [rbx + r15]
		_0xffffff8000ec213a: mov r15b, bl
		_0xffffff8000ec213d: add r15b, r15b
		_0xffffff8000ec2140: xor bl, 0x75
		_0xffffff8000ec2143: and r15b, 0xea
		_0xffffff8000ec2147: add r15b, bl
		_0xffffff8000ec214a: add r15b, 0xfb
		_0xffffff8000ec214e: movzx ebx, r15b
		_0xffffff8000ec2152: cmp bl, 0x70
		_0xffffff8000ec2155: sbb r15, r15
		_0xffffff8000ec2158: and r15d, 0x100
		_0xffffff8000ec215f: add r15d, ebx
		_0xffffff8000ec2162: add r15d, 0x67bf1f2b
		_0xffffff8000ec2169: shl r15, 0x20
		_0xffffff8000ec216d: movabs rbx, 0x9840e06500000000
		_0xffffff8000ec2177: add rbx, r15
		_0xffffff8000ec217a: mov r15, rbx
		_0xffffff8000ec217d: sar r15, 0x1f
		_0xffffff8000ec2181: movabs r12, 0x39bdd59bffe6f6b2
		_0xffffff8000ec218b: and r12, r15
		_0xffffff8000ec218e: sar rbx, 0x20
		_0xffffff8000ec2192: movabs r15, 0x3cdeeacdfff37b59
		_0xffffff8000ec219c: xor r15, rbx
		_0xffffff8000ec219f: add r15, r12
		_0xffffff8000ec21a2: mov r13, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec21a9: lea rbx, [r13 + r15*4]
		_0xffffff8000ec21ae: movabs r15, 0xc8454c80032129c
		_0xffffff8000ec21b8: xor edx, dword ptr [r15 + rbx]
		_0xffffff8000ec21bc: shr r9d, 0x18
		_0xffffff8000ec21c0: mov ebx, r9d
		_0xffffff8000ec21c3: or ebx, 0xffffffac
		_0xffffff8000ec21c6: xor ebx, 0x53
		_0xffffff8000ec21c9: mov r15d, ebx
		_0xffffff8000ec21cc: and r15d, 0xc3ddd513
		_0xffffff8000ec21d3: sub ebx, r15d
		_0xffffff8000ec21d6: mov r12d, r9d
		_0xffffff8000ec21d9: or r12d, 0xffffff53
		_0xffffff8000ec21e0: xor r12d, 0xac
		_0xffffff8000ec21e7: and r12d, ebx
		_0xffffff8000ec21ea: xor r12d, r15d
		_0xffffff8000ec21ed: not r12d
		_0xffffff8000ec21f0: imul ebx, r12d, 0xd42ad8c3
		_0xffffff8000ec21f7: xor ebx, 0x6084dc91
		_0xffffff8000ec21fd: imul r15d, r12d, 0xa855b186
		_0xffffff8000ec2204: and r15d, 0xc109b922
		_0xffffff8000ec220b: add r15d, ebx
		_0xffffff8000ec220e: imul ebx, r15d, 0x40f097eb
		_0xffffff8000ec2215: mov r15d, 0xffffffe5
		_0xffffff8000ec221b: sub r15d, r9d
		_0xffffff8000ec221e: xor r9d, 0x1b
		_0xffffff8000ec2222: add r9d, r15d
		_0xffffff8000ec2225: add r9d, ebx
		_0xffffff8000ec2228: xor r9d, 0x4495cfd3
		_0xffffff8000ec222f: mov ebx, r9d
		_0xffffff8000ec2232: and ebx, 0x94
		_0xffffff8000ec2238: sub ebx, -0x80
		_0xffffff8000ec223b: mov r15d, r9d
		_0xffffff8000ec223e: and r15d, 0x21
		_0xffffff8000ec2242: mov r12d, 0x424dcf42
		_0xffffff8000ec2248: sub r12d, r15d
		_0xffffff8000ec224b: and r12d, 0x21
		_0xffffff8000ec224f: or r12d, ebx
		_0xffffff8000ec2252: and r9d, 0x4a
		_0xffffff8000ec2256: add r9d, 0x14
		_0xffffff8000ec225a: add r9d, 0x38
		_0xffffff8000ec225e: and r9d, 0x4a
		_0xffffff8000ec2262: or r9d, r12d
		_0xffffff8000ec2265: mov bl, r9b
		_0xffffff8000ec2268: xor bl, 0xda
		_0xffffff8000ec226b: mov r15b, bl
		_0xffffff8000ec226e: add r15b, r15b
		_0xffffff8000ec2271: add bl, 0xad
		_0xffffff8000ec2274: and r15b, 0x5a
		_0xffffff8000ec2278: sub bl, r15b
		_0xffffff8000ec227b: mov al, bl
		_0xffffff8000ec227d: add al, al
		_0xffffff8000ec227f: xor bl, 0xbf
		_0xffffff8000ec2282: and al, 0x7e
		_0xffffff8000ec2284: add al, bl
		_0xffffff8000ec2286: mov bl, 0x1b
		_0xffffff8000ec2288: mul bl
		_0xffffff8000ec228a: mov r15b, al
		_0xffffff8000ec228d: mov al, r9b
		_0xffffff8000ec2290: mul bl
		_0xffffff8000ec2292: shr ax, 8
		_0xffffff8000ec2296: mov r12b, al
		_0xffffff8000ec2299: shr r12b, 2
		_0xffffff8000ec229d: mov r10b, 0x26
		_0xffffff8000ec22a0: mov al, r12b
		_0xffffff8000ec22a3: mul r10b
		_0xffffff8000ec22a6: sub r9b, al
		_0xffffff8000ec22a9: add r9b, r9b
		_0xffffff8000ec22ac: mov al, r12b
		_0xffffff8000ec22af: add al, 0xed
		_0xffffff8000ec22b1: mul al
		_0xffffff8000ec22b3: sub r9b, al
		_0xffffff8000ec22b6: mov al, r12b
		_0xffffff8000ec22b9: add al, 0x13
		_0xffffff8000ec22bb: mul al
		_0xffffff8000ec22bd: add al, r9b
		_0xffffff8000ec22c0: and al, 0xee
		_0xffffff8000ec22c2: mul bl
		_0xffffff8000ec22c4: mov r9b, al
		_0xffffff8000ec22c7: xor r9b, r15b
		_0xffffff8000ec22ca: and al, r15b
		_0xffffff8000ec22cd: add al, al
		_0xffffff8000ec22cf: add al, r9b
		_0xffffff8000ec22d2: mov r9b, 0x13
		_0xffffff8000ec22d5: mul r9b
		_0xffffff8000ec22d8: movzx r9d, al
		_0xffffff8000ec22dc: cmp r9b, 0x36
		_0xffffff8000ec22e0: sbb rbx, rbx
		_0xffffff8000ec22e3: and ebx, 0x100
		_0xffffff8000ec22e9: add ebx, r9d
		_0xffffff8000ec22ec: add ebx, 0x1b695536
		_0xffffff8000ec22f2: shl rbx, 0x20
		_0xffffff8000ec22f6: movabs r15, 0xe496aa9400000000
		_0xffffff8000ec2300: add r15, rbx
		_0xffffff8000ec2303: mov rbx, r15
		_0xffffff8000ec2306: sar rbx, 0x1f
		_0xffffff8000ec230a: movabs r12, 0x8e36f3563aff97e2
		_0xffffff8000ec2314: and r12, rbx
		_0xffffff8000ec2317: sar r15, 0x20
		_0xffffff8000ec231b: movabs rbx, 0x471b79ab1d7fcbf1
		_0xffffff8000ec2325: xor rbx, r15
		_0xffffff8000ec2328: add rbx, r12
		_0xffffff8000ec232b: add rbx, qword ptr [r14 + 0xa8]
		_0xffffff8000ec2332: movabs r15, 0xb8e48654e280340f
		_0xffffff8000ec233c: mov r9b, byte ptr [r15 + rbx]
		_0xffffff8000ec2340: mov r10b, r9b
		_0xffffff8000ec2343: add r10b, r10b
		_0xffffff8000ec2346: xor r9b, 0x7e
		_0xffffff8000ec234a: and r10b, 0xfc
		_0xffffff8000ec234e: add r10b, r9b
		_0xffffff8000ec2351: add r10b, 0xde
		_0xffffff8000ec2355: movzx r9d, r10b
		_0xffffff8000ec2359: cmp r9b, 0x5c
		_0xffffff8000ec235d: sbb rbx, rbx
		_0xffffff8000ec2360: and ebx, 0x100
		_0xffffff8000ec2366: add ebx, r9d
		_0xffffff8000ec2369: add ebx, 0x502a5db6
		_0xffffff8000ec236f: shl rbx, 0x20
		_0xffffff8000ec2373: movabs r15, 0xafd5a1ee00000000
		_0xffffff8000ec237d: add r15, rbx
		_0xffffff8000ec2380: mov rbx, r15
		_0xffffff8000ec2383: sar rbx, 0x1f
		_0xffffff8000ec2387: movabs r12, 0x3befdfead77eb77e
		_0xffffff8000ec2391: and r12, rbx
		_0xffffff8000ec2394: sar r15, 0x20
		_0xffffff8000ec2398: movabs rbx, 0x3df7eff56bbf5bbf
		_0xffffff8000ec23a2: xor rbx, r15
		_0xffffff8000ec23a5: add rbx, r12
		_0xffffff8000ec23a8: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec23af: lea rbx, [rax + rbx*4]
		_0xffffff8000ec23b3: mov r9b, sil
		_0xffffff8000ec23b6: add r9b, r9b
		_0xffffff8000ec23b9: mov r10b, r9b
		_0xffffff8000ec23bc: and r10b, 0xd6
		_0xffffff8000ec23c0: xor r10b, 0xa0
		_0xffffff8000ec23c4: and r9b, 0x28
		_0xffffff8000ec23c8: xor r9b, 0xa0
		_0xffffff8000ec23cc: mov r15b, r9b
		_0xffffff8000ec23cf: add r15b, r10b
		_0xffffff8000ec23d2: and r9b, r10b
		_0xffffff8000ec23d5: add r9b, r9b
		_0xffffff8000ec23d8: sub r15b, r9b
		_0xffffff8000ec23db: xor sil, 0x8b
		_0xffffff8000ec23df: mov r9b, sil
		_0xffffff8000ec23e2: and r9b, 0x54
		_0xffffff8000ec23e6: mov r10b, 0xfc
		_0xffffff8000ec23e9: sub r10b, r9b
		_0xffffff8000ec23ec: mov r9b, r15b
		_0xffffff8000ec23ef: xor r9b, r10b
		_0xffffff8000ec23f2: mov r12b, r10b
		_0xffffff8000ec23f5: and r12b, r15b
		_0xffffff8000ec23f8: mov al, r15b
		_0xffffff8000ec23fb: and al, 0x48
		_0xffffff8000ec23fd: or al, 0x12
		_0xffffff8000ec23ff: mov r13b, sil
		_0xffffff8000ec2402: and r13b, 0xa
		_0xffffff8000ec2406: and sil, 0xa1
		_0xffffff8000ec240a: add sil, 0xa0
		_0xffffff8000ec240e: and sil, 0xa1
		_0xffffff8000ec2412: or sil, r13b
		_0xffffff8000ec2415: mov r13b, sil
		_0xffffff8000ec2418: and r13b, 9
		_0xffffff8000ec241c: and r10b, 0x40
		_0xffffff8000ec2420: or r10b, r13b
		_0xffffff8000ec2423: sub al, r10b
		_0xffffff8000ec2426: and r10b, r15b
		_0xffffff8000ec2429: add r10b, r10b
		_0xffffff8000ec242c: and al, 0x49
		_0xffffff8000ec242e: or al, r10b
		_0xffffff8000ec2431: and r9b, 0x14
		_0xffffff8000ec2435: and r12b, 0x14
		_0xffffff8000ec2439: add r12b, r12b
		_0xffffff8000ec243c: or r12b, r9b
		_0xffffff8000ec243f: and r15b, 0xa2
		_0xffffff8000ec2443: and sil, 0xa2
		_0xffffff8000ec2447: add sil, r15b
		_0xffffff8000ec244a: add sil, r12b
		_0xffffff8000ec244d: add sil, al
		_0xffffff8000ec2450: movzx r15d, sil
		_0xffffff8000ec2454: cmp r15b, 0x7f
		_0xffffff8000ec2458: sbb r12, r12
		_0xffffff8000ec245b: and r12, 0x100
		_0xffffff8000ec2462: add r12, r15
		_0xffffff8000ec2465: add r12, -0x7f
		_0xffffff8000ec2469: movabs r15, 0x55fcfff7fdfb7cfd
		_0xffffff8000ec2473: mov r13, r12
		_0xffffff8000ec2476: and r13, r15
		_0xffffff8000ec2479: xor r12, r15
		_0xffffff8000ec247c: lea r15, [r12 + r13*2]
		_0xffffff8000ec2480: add r15, qword ptr [r14 + 0xb0]
		_0xffffff8000ec2487: movabs r12, 0xaa03000802048303
		_0xffffff8000ec2491: mov al, byte ptr [r12 + r15]
		_0xffffff8000ec2495: mov sil, al
		_0xffffff8000ec2498: add sil, sil
		_0xffffff8000ec249b: xor al, 0x7f
		_0xffffff8000ec249d: add al, sil
		_0xffffff8000ec24a0: add al, 0xf7
		_0xffffff8000ec24a2: movzx eax, al
		_0xffffff8000ec24a5: cmp al, 0x76
		_0xffffff8000ec24a7: sbb r15, r15
		_0xffffff8000ec24aa: and r15d, 0x100
		_0xffffff8000ec24b1: add r15d, eax
		_0xffffff8000ec24b4: add r15d, 0x3c3d4e57
		_0xffffff8000ec24bb: shl r15, 0x20
		_0xffffff8000ec24bf: movabs r12, 0xc3c2b13300000000
		_0xffffff8000ec24c9: add r12, r15
		_0xffffff8000ec24cc: mov r15, r12
		_0xffffff8000ec24cf: sar r15, 0x1f
		_0xffffff8000ec24d3: movabs r13, 0x3f6df7da3ffffbc6
		_0xffffff8000ec24dd: and r13, r15
		_0xffffff8000ec24e0: sar r12, 0x20
		_0xffffff8000ec24e4: movabs r15, 0x3fb6fbed1ffffde3
		_0xffffff8000ec24ee: xor r15, r12
		_0xffffff8000ec24f1: add r15, r13
		_0xffffff8000ec24f4: mov rax, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec24fb: lea r15, [rax + r15*4]
		_0xffffff8000ec24ff: mov esi, edi
		_0xffffff8000ec2501: shr esi, 0xf
		_0xffffff8000ec2504: and esi, 0x7e
		_0xffffff8000ec2507: shr edi, 0x10
		_0xffffff8000ec250a: add edi, 0x3f
		_0xffffff8000ec250d: sub edi, esi
		_0xffffff8000ec250f: xor edi, 0x3f
		_0xffffff8000ec2512: mov sil, dil
		_0xffffff8000ec2515: add sil, sil
		_0xffffff8000ec2518: xor dil, 0x7d
		_0xffffff8000ec251c: and sil, 0xfa
		_0xffffff8000ec2520: add sil, dil
		_0xffffff8000ec2523: add sil, 0xbc
		_0xffffff8000ec2527: movzx esi, sil
		_0xffffff8000ec252b: cmp sil, 0x39
		_0xffffff8000ec252f: sbb r12, r12
		_0xffffff8000ec2532: and r12d, 0x100
		_0xffffff8000ec2539: add r12d, esi
		_0xffffff8000ec253c: add r12d, 0x1bb8c142
		_0xffffff8000ec2543: shl r12, 0x20
		_0xffffff8000ec2547: movabs r13, 0xe4473e8500000000
		_0xffffff8000ec2551: add r13, r12
		_0xffffff8000ec2554: mov r12, r13
		_0xffffff8000ec2557: sar r12, 0x1f
		_0xffffff8000ec255b: movabs rsi, 0x7fbbfff5fdf23eb8
		_0xffffff8000ec2565: and rsi, r12
		_0xffffff8000ec2568: sar r13, 0x20
		_0xffffff8000ec256c: movabs r12, 0x3fddfffafef91f5c
		_0xffffff8000ec2576: xor r12, r13
		_0xffffff8000ec2579: add r12, rsi
		_0xffffff8000ec257c: add r12, qword ptr [r14 + 0x100]
		_0xffffff8000ec2583: movabs r13, 0xc02200050106e0a4
		_0xffffff8000ec258d: mov sil, byte ptr [r13 + r12]
		_0xffffff8000ec2592: mov dil, sil
		_0xffffff8000ec2595: add dil, dil
		_0xffffff8000ec2598: xor sil, 0x79
		_0xffffff8000ec259c: and dil, 0xf2
		_0xffffff8000ec25a0: add dil, sil
		_0xffffff8000ec25a3: add dil, 0xb0
		_0xffffff8000ec25a7: movzx esi, dil
		_0xffffff8000ec25ab: cmp sil, 0x29
		_0xffffff8000ec25af: sbb r12, r12
		_0xffffff8000ec25b2: and r12d, 0x100
		_0xffffff8000ec25b9: add r12d, esi
		_0xffffff8000ec25bc: add r12d, 0x7233eb11
		_0xffffff8000ec25c3: shl r12, 0x20
		_0xffffff8000ec25c7: movabs r13, 0x8dcc14c600000000
		_0xffffff8000ec25d1: add r13, r12
		_0xffffff8000ec25d4: mov r12, r13
		_0xffffff8000ec25d7: sar r12, 0x1f
		_0xffffff8000ec25db: movabs rsi, 0x25b6bdfac8be73de
		_0xffffff8000ec25e5: and rsi, r12
		_0xffffff8000ec25e8: sar r13, 0x20
		_0xffffff8000ec25ec: movabs r12, 0x32db5efd645f39ef
		_0xffffff8000ec25f6: xor r12, r13
		_0xffffff8000ec25f9: add r12, rsi
		_0xffffff8000ec25fc: mov r10, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec2603: lea r12, [r10 + r12*4]
		_0xffffff8000ec2607: mov esi, r8d
		_0xffffff8000ec260a: shr esi, 7
		_0xffffff8000ec260d: and esi, 0xf0
		_0xffffff8000ec2613: shr r8d, 8
		_0xffffff8000ec2617: add r8d, 0x78
		_0xffffff8000ec261b: sub r8d, esi
		_0xffffff8000ec261e: xor r8d, 0x78
		_0xffffff8000ec2622: mov sil, r8b
		_0xffffff8000ec2625: add sil, sil
		_0xffffff8000ec2628: xor r8b, 0x7f
		_0xffffff8000ec262c: add r8b, sil
		_0xffffff8000ec262f: add r8b, 0xaf
		_0xffffff8000ec2633: movzx esi, r8b
		_0xffffff8000ec2637: cmp sil, 0x2e
		_0xffffff8000ec263b: sbb r13, r13
		_0xffffff8000ec263e: and r13d, 0x100
		_0xffffff8000ec2645: add r13d, esi
		_0xffffff8000ec2648: add r13d, 0x201b6f99
		_0xffffff8000ec264f: shl r13, 0x20
		_0xffffff8000ec2653: movabs rsi, 0xdfe4903900000000
		_0xffffff8000ec265d: add rsi, r13
		_0xffffff8000ec2660: mov r13, rsi
		_0xffffff8000ec2663: sar r13, 0x1f
		_0xffffff8000ec2667: movabs rdi, 0x381bfffb97efee7c
		_0xffffff8000ec2671: and rdi, r13
		_0xffffff8000ec2674: sar rsi, 0x20
		_0xffffff8000ec2678: movabs r13, 0x1c0dfffdcbf7f73e
		_0xffffff8000ec2682: xor r13, rsi
		_0xffffff8000ec2685: add r13, rdi
		_0xffffff8000ec2688: add r13, qword ptr [r14 + 0xd8]
		_0xffffff8000ec268f: movabs rsi, 0xe3f20002340808c2
		_0xffffff8000ec2699: mov sil, byte ptr [rsi + r13]
		_0xffffff8000ec269d: mov dil, sil
		_0xffffff8000ec26a0: add dil, dil
		_0xffffff8000ec26a3: xor sil, 0x73
		_0xffffff8000ec26a7: and dil, 0xe6
		_0xffffff8000ec26ab: add dil, sil
		_0xffffff8000ec26ae: movzx esi, dil
		_0xffffff8000ec26b2: cmp sil, 0x73
		_0xffffff8000ec26b6: sbb r13, r13
		_0xffffff8000ec26b9: and r13d, 0x100
		_0xffffff8000ec26c0: add r13d, esi
		_0xffffff8000ec26c3: add r13d, 0x529fc039
		_0xffffff8000ec26ca: shl r13, 0x20
		_0xffffff8000ec26ce: movabs rsi, 0xad603f5400000000
		_0xffffff8000ec26d8: add rsi, r13
		_0xffffff8000ec26db: mov r13, rsi
		_0xffffff8000ec26de: sar r13, 0x1f
		_0xffffff8000ec26e2: movabs rdi, 0x2ddfff1779efa9fc
		_0xffffff8000ec26ec: and rdi, r13
		_0xffffff8000ec26ef: sar rsi, 0x20
		_0xffffff8000ec26f3: movabs r13, 0x36efff8bbcf7d4fe
		_0xffffff8000ec26fd: xor r13, rsi
		_0xffffff8000ec2700: add r13, rdi
		_0xffffff8000ec2703: mov rsi, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec270a: lea r13, [rsi + r13*4]
		_0xffffff8000ec270e: movabs rdi, 0x244001d10c20ac08
		_0xffffff8000ec2718: mov edi, dword ptr [rdi + r13]
		_0xffffff8000ec271c: movabs r13, 0x3492840a6e831844
		_0xffffff8000ec2726: xor edi, dword ptr [r13 + r12]
		_0xffffff8000ec272b: movabs r12, 0x124104b80000874
		_0xffffff8000ec2735: xor edi, dword ptr [r12 + r15]
		_0xffffff8000ec2739: movabs r15, 0x820402a51029104
		_0xffffff8000ec2743: xor edi, dword ptr [r15 + rbx]
		_0xffffff8000ec2747: mov r8b, dil
		_0xffffff8000ec274a: add r8b, r8b
		_0xffffff8000ec274d: mov r9b, dil
		_0xffffff8000ec2750: xor r9b, 0x7f
		_0xffffff8000ec2754: add r9b, r8b
		_0xffffff8000ec2757: add r9b, 0xf7
		_0xffffff8000ec275b: movzx r8d, r9b
		_0xffffff8000ec275f: cmp r8b, 0x76
		_0xffffff8000ec2763: sbb rbx, rbx
		_0xffffff8000ec2766: and ebx, 0x100
		_0xffffff8000ec276c: add ebx, r8d
		_0xffffff8000ec276f: add ebx, 0x1844a013
		_0xffffff8000ec2775: shl rbx, 0x20
		_0xffffff8000ec2779: movabs r15, 0xe7bb5f7700000000
		_0xffffff8000ec2783: add r15, rbx
		_0xffffff8000ec2786: mov rbx, r15
		_0xffffff8000ec2789: sar rbx, 0x1f
		_0xffffff8000ec278d: movabs r12, 0xc8fff29b2ff9fc76
		_0xffffff8000ec2797: and r12, rbx
		_0xffffff8000ec279a: sar r15, 0x20
		_0xffffff8000ec279e: movabs rbx, 0x647ff94d97fcfe3b
		_0xffffff8000ec27a8: xor rbx, r15
		_0xffffff8000ec27ab: add rbx, r12
		_0xffffff8000ec27ae: add rbx, qword ptr [r14 + 0x130]
		_0xffffff8000ec27b5: movabs r15, 0x9b8006b2680301c5
		_0xffffff8000ec27bf: mov r8b, byte ptr [r15 + rbx]
		_0xffffff8000ec27c3: mov r9b, r8b
		_0xffffff8000ec27c6: add r9b, r9b
		_0xffffff8000ec27c9: xor r8b, 0x1b
		_0xffffff8000ec27cd: and r9b, 0x36
		_0xffffff8000ec27d1: add r9b, r8b
		_0xffffff8000ec27d4: add r9b, 0xfe
		_0xffffff8000ec27d8: movzx ebx, r9b
		_0xffffff8000ec27dc: cmp bl, 0x19
		_0xffffff8000ec27df: sbb r15, r15
		_0xffffff8000ec27e2: and r15, 0x100
		_0xffffff8000ec27e9: add r15, rbx
		_0xffffff8000ec27ec: add r15, -0x19
		_0xffffff8000ec27f0: movabs rbx, 0x1bcdf5f7fe3ff7e8
		_0xffffff8000ec27fa: and rbx, r15
		_0xffffff8000ec27fd: movabs r12, 0x3bcdf5f7fe3ff7e8
		_0xffffff8000ec2807: xor r12, r15
		_0xffffff8000ec280a: lea rbx, [r12 + rbx*2]
		_0xffffff8000ec280e: lea rbx, [rax + rbx*4]
		_0xffffff8000ec2812: movabs r15, 0x10c8282007002060
		_0xffffff8000ec281c: xor edx, dword ptr [r15 + rbx]
		_0xffffff8000ec2820: mov r8d, edx
		_0xffffff8000ec2823: shr r8d, 7
		_0xffffff8000ec2827: and r8d, 0xae
		_0xffffff8000ec282e: mov r9d, edx
		_0xffffff8000ec2831: shr r9d, 8
		_0xffffff8000ec2835: add r9d, 0xd7
		_0xffffff8000ec283c: sub r9d, r8d
		_0xffffff8000ec283f: xor r9d, 0xd7
		_0xffffff8000ec2846: mov r8b, r9b
		_0xffffff8000ec2849: add r8b, r8b
		_0xffffff8000ec284c: xor r9b, 0x75
		_0xffffff8000ec2850: and r8b, 0xea
		_0xffffff8000ec2854: add r8b, r9b
		_0xffffff8000ec2857: add r8b, 0xfb
		_0xffffff8000ec285b: movzx r8d, r8b
		_0xffffff8000ec285f: cmp r8b, 0x70
		_0xffffff8000ec2863: sbb rbx, rbx
		_0xffffff8000ec2866: and ebx, 0x100
		_0xffffff8000ec286c: add ebx, r8d
		_0xffffff8000ec286f: add ebx, 0x450f7595
		_0xffffff8000ec2875: shl rbx, 0x20
		_0xffffff8000ec2879: movabs r15, 0xbaf089fb00000000
		_0xffffff8000ec2883: add r15, rbx
		_0xffffff8000ec2886: mov rbx, r15
		_0xffffff8000ec2889: sar rbx, 0x1f
		_0xffffff8000ec288d: movabs r12, 0xde7fffd7ffaa9fb2
		_0xffffff8000ec2897: and r12, rbx
		_0xffffff8000ec289a: sar r15, 0x20
		_0xffffff8000ec289e: movabs rbx, 0x6f3fffebffd54fd9
		_0xffffff8000ec28a8: xor rbx, r15
		_0xffffff8000ec28ab: add rbx, r12
		_0xffffff8000ec28ae: add rbx, qword ptr [r14 + 0x1b8]
		_0xffffff8000ec28b5: movabs r15, 0x90c00014002ab027
		_0xffffff8000ec28bf: mov r8b, byte ptr [r15 + rbx]
		_0xffffff8000ec28c3: mov r9b, r8b
		_0xffffff8000ec28c6: add r9b, r9b
		_0xffffff8000ec28c9: xor r8b, 0x2f
		_0xffffff8000ec28cd: and r9b, 0x5e
		_0xffffff8000ec28d1: add r9b, r8b
		_0xffffff8000ec28d4: add r9b, 0xdb
		_0xffffff8000ec28d8: movzx r8d, r9b
		_0xffffff8000ec28dc: cmp r8b, 0xa
		_0xffffff8000ec28e0: sbb rbx, rbx
		_0xffffff8000ec28e3: and ebx, 0x100
		_0xffffff8000ec28e9: add ebx, r8d
		_0xffffff8000ec28ec: add ebx, 0x65dff436
		_0xffffff8000ec28f2: shl rbx, 0x20
		_0xffffff8000ec28f6: movabs r15, 0x9a200bc000000000
		_0xffffff8000ec2900: add r15, rbx
		_0xffffff8000ec2903: mov rbx, r15
		_0xffffff8000ec2906: sar rbx, 0x1f
		_0xffffff8000ec290a: movabs r12, 0x3ff3db957bd7ee7e
		_0xffffff8000ec2914: and r12, rbx
		_0xffffff8000ec2917: sar r15, 0x20
		_0xffffff8000ec291b: movabs rbx, 0x3ff9edcabdebf73f
		_0xffffff8000ec2925: xor rbx, r15
		_0xffffff8000ec2928: add rbx, r12
		_0xffffff8000ec292b: lea rbx, [rsi + rbx*4]
		_0xffffff8000ec292f: mov r8d, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec2936: shr r8d, 0x17
		_0xffffff8000ec293a: and r8d, 0x3a
		_0xffffff8000ec293e: mov r9d, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec2945: shr r9d, 0x18
		_0xffffff8000ec2949: add r9d, 0x1d
		_0xffffff8000ec294d: sub r9d, r8d
		_0xffffff8000ec2950: xor r9d, 0x1d
		_0xffffff8000ec2954: mov r8b, r9b
		_0xffffff8000ec2957: add r8b, r8b
		_0xffffff8000ec295a: xor r9b, 0x6f
		_0xffffff8000ec295e: and r8b, 0xde
		_0xffffff8000ec2962: add r8b, r9b
		_0xffffff8000ec2965: add r8b, 0xe0
		_0xffffff8000ec2969: movzx r8d, r8b
		_0xffffff8000ec296d: cmp r8b, 0x4f
		_0xffffff8000ec2971: sbb r15, r15
		_0xffffff8000ec2974: and r15d, 0x100
		_0xffffff8000ec297b: add r15d, r8d
		_0xffffff8000ec297e: add r15d, 0x6e1d50d6
		_0xffffff8000ec2985: shl r15, 0x20
		_0xffffff8000ec2989: movabs r12, 0x91e2aedb00000000
		_0xffffff8000ec2993: add r12, r15
		_0xffffff8000ec2996: mov r15, r12
		_0xffffff8000ec2999: sar r15, 0x1f
		_0xffffff8000ec299d: movabs r13, 0xf6ce77fdb1f0affe
		_0xffffff8000ec29a7: and r13, r15
		_0xffffff8000ec29aa: sar r12, 0x20
		_0xffffff8000ec29ae: movabs r15, 0x7b673bfed8f857ff
		_0xffffff8000ec29b8: xor r15, r12
		_0xffffff8000ec29bb: add r15, r13
		_0xffffff8000ec29be: add r15, qword ptr [r14 + 0x188]
		_0xffffff8000ec29c5: movabs r12, 0x8498c4012707a801
		_0xffffff8000ec29cf: mov r8b, byte ptr [r12 + r15]
		_0xffffff8000ec29d3: mov r9b, r8b
		_0xffffff8000ec29d6: add r9b, r9b
		_0xffffff8000ec29d9: xor r8b, 0x53
		_0xffffff8000ec29dd: and r9b, 0xa6
		_0xffffff8000ec29e1: add r9b, r8b
		_0xffffff8000ec29e4: dec r9b
		_0xffffff8000ec29e7: movzx r8d, r9b
		_0xffffff8000ec29eb: cmp r8b, 0x52
		_0xffffff8000ec29ef: sbb r15, r15
		_0xffffff8000ec29f2: and r15d, 0x100
		_0xffffff8000ec29f9: add r15d, r8d
		_0xffffff8000ec29fc: add r15d, 0x2b1d4a3b
		_0xffffff8000ec2a03: shl r15, 0x20
		_0xffffff8000ec2a07: movabs r12, 0xd4e2b57300000000
		_0xffffff8000ec2a11: add r12, r15
		_0xffffff8000ec2a14: mov r15, r12
		_0xffffff8000ec2a17: sar r15, 0x1f
		_0xffffff8000ec2a1b: movabs r13, 0x3cf6fefabda5f7da
		_0xffffff8000ec2a25: and r13, r15
		_0xffffff8000ec2a28: sar r12, 0x20
		_0xffffff8000ec2a2c: movabs r15, 0x3e7b7f7d5ed2fbed
		_0xffffff8000ec2a36: xor r15, r12
		_0xffffff8000ec2a39: add r15, r13
		_0xffffff8000ec2a3c: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec2a43: lea r15, [rax + r15*4]
		_0xffffff8000ec2a47: movabs r12, 0x612020a84b4104c
		_0xffffff8000ec2a51: mov r8d, dword ptr [r12 + r15]
		_0xffffff8000ec2a55: mov r9b, r11b
		_0xffffff8000ec2a58: add r9b, r9b
		_0xffffff8000ec2a5b: mov r15b, r11b
		_0xffffff8000ec2a5e: xor r15b, 0x79
		_0xffffff8000ec2a62: and r9b, 0xf2
		_0xffffff8000ec2a66: add r9b, r15b
		_0xffffff8000ec2a69: add r9b, 0xa0
		_0xffffff8000ec2a6d: movzx r9d, r9b
		_0xffffff8000ec2a71: cmp r9b, 0x19
		_0xffffff8000ec2a75: sbb r15, r15
		_0xffffff8000ec2a78: and r15d, 0x100
		_0xffffff8000ec2a7f: add r15d, r9d
		_0xffffff8000ec2a82: add r15d, 0x3ef892b8
		_0xffffff8000ec2a89: shl r15, 0x20
		_0xffffff8000ec2a8d: movabs r12, 0xc1076d2f00000000
		_0xffffff8000ec2a97: add r12, r15
		_0xffffff8000ec2a9a: mov r15, r12
		_0xffffff8000ec2a9d: sar r15, 0x1f
		_0xffffff8000ec2aa1: movabs r13, 0xffffffeffffcefea
		_0xffffff8000ec2aab: and r13, r15
		_0xffffff8000ec2aae: sar r12, 0x20
		_0xffffff8000ec2ab2: movabs r15, 0x7ffffff7fffe77f5
		_0xffffff8000ec2abc: xor r15, r12
		_0xffffff8000ec2abf: add r15, r13
		_0xffffff8000ec2ac2: add r15, qword ptr [r14 + 0x110]
		_0xffffff8000ec2ac9: movabs r12, 0x800000080001880b
		_0xffffff8000ec2ad3: mov r9b, byte ptr [r12 + r15]
		_0xffffff8000ec2ad7: mov r15b, r9b
		_0xffffff8000ec2ada: add r15b, r15b
		_0xffffff8000ec2add: xor r9b, 0x73
		_0xffffff8000ec2ae1: and r15b, 0xe6
		_0xffffff8000ec2ae5: add r15b, r9b
		_0xffffff8000ec2ae8: add r15b, 0xf0
		_0xffffff8000ec2aec: movzx r9d, r15b
		_0xffffff8000ec2af0: cmp r9b, 0x63
		_0xffffff8000ec2af4: sbb r15, r15
		_0xffffff8000ec2af7: and r15d, 0x100
		_0xffffff8000ec2afe: add r15d, r9d
		_0xffffff8000ec2b01: add r15d, 0x3e094b23
		_0xffffff8000ec2b08: shl r15, 0x20
		_0xffffff8000ec2b0c: movabs r12, 0xc1f6b47a00000000
		_0xffffff8000ec2b16: add r12, r15
		_0xffffff8000ec2b19: mov r15, r12
		_0xffffff8000ec2b1c: sar r15, 0x1f
		_0xffffff8000ec2b20: movabs r13, 0x13ffffeff9dbbfde
		_0xffffff8000ec2b2a: and r13, r15
		_0xffffff8000ec2b2d: sar r12, 0x20
		_0xffffff8000ec2b31: movabs r15, 0x29fffff7fceddfef
		_0xffffff8000ec2b3b: xor r15, r12
		_0xffffff8000ec2b3e: add r15, r13
		_0xffffff8000ec2b41: mov rax, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec2b48: lea r15, [rax + r15*4]
		_0xffffff8000ec2b4c: movabs r12, 0x580000200c488044
		_0xffffff8000ec2b56: xor r8d, dword ptr [r12 + r15]
		_0xffffff8000ec2b5a: mov r9d, ecx
		_0xffffff8000ec2b5d: shr r9d, 0xf
		_0xffffff8000ec2b61: and r9d, 0xc
		_0xffffff8000ec2b65: mov r15d, ecx
		_0xffffff8000ec2b68: shr r15d, 0x10
		_0xffffff8000ec2b6c: add r15d, 0x86
		_0xffffff8000ec2b73: sub r15d, r9d
		_0xffffff8000ec2b76: xor r15d, 0x86
		_0xffffff8000ec2b7d: mov r9b, r15b
		_0xffffff8000ec2b80: add r9b, r9b
		_0xffffff8000ec2b83: xor r15b, 0x6b
		_0xffffff8000ec2b87: and r9b, 0xd6
		_0xffffff8000ec2b8b: add r9b, r15b
		_0xffffff8000ec2b8e: add r9b, 0xf8
		_0xffffff8000ec2b92: movzx r9d, r9b
		_0xffffff8000ec2b96: cmp r9b, 0x63
		_0xffffff8000ec2b9a: sbb r15, r15
		_0xffffff8000ec2b9d: and r15d, 0x100
		_0xffffff8000ec2ba4: add r15d, r9d
		_0xffffff8000ec2ba7: add r15d, 0x58f34f49
		_0xffffff8000ec2bae: shl r15, 0x20
		_0xffffff8000ec2bb2: movabs r12, 0xa70cb05400000000
		_0xffffff8000ec2bbc: add r12, r15
		_0xffffff8000ec2bbf: mov r15, r12
		_0xffffff8000ec2bc2: sar r15, 0x1f
		_0xffffff8000ec2bc6: movabs r13, 0x2def8fdfecbcbb1e
		_0xffffff8000ec2bd0: and r13, r15
		_0xffffff8000ec2bd3: sar r12, 0x20
		_0xffffff8000ec2bd7: movabs r15, 0x16f7c7eff65e5d8f
		_0xffffff8000ec2be1: xor r15, r12
		_0xffffff8000ec2be4: add r15, r13
		_0xffffff8000ec2be7: add r15, qword ptr [r14 + 0x160]
		_0xffffff8000ec2bee: movabs r12, 0xe908381009a1a271
		_0xffffff8000ec2bf8: mov r9b, byte ptr [r12 + r15]
		_0xffffff8000ec2bfc: mov r15b, r9b
		_0xffffff8000ec2bff: add r15b, r15b
		_0xffffff8000ec2c02: xor r9b, 0x5c
		_0xffffff8000ec2c06: and r15b, 0xb8
		_0xffffff8000ec2c0a: add r15b, r9b
		_0xffffff8000ec2c0d: add r15b, 0xf8
		_0xffffff8000ec2c11: movzx r9d, r15b
		_0xffffff8000ec2c15: cmp r9b, 0x54
		_0xffffff8000ec2c19: sbb r15, r15
		_0xffffff8000ec2c1c: and r15d, 0x100
		_0xffffff8000ec2c23: add r15d, r9d
		_0xffffff8000ec2c26: add r15d, 0x603aecdc
		_0xffffff8000ec2c2d: shl r15, 0x20
		_0xffffff8000ec2c31: movabs r12, 0x9fc512d000000000
		_0xffffff8000ec2c3b: add r12, r15
		_0xffffff8000ec2c3e: mov r15, r12
		_0xffffff8000ec2c41: sar r15, 0x1f
		_0xffffff8000ec2c45: movabs r13, 0x36587b897ff76f3e
		_0xffffff8000ec2c4f: and r13, r15
		_0xffffff8000ec2c52: sar r12, 0x20
		_0xffffff8000ec2c56: movabs r15, 0x1b2c3dc4bffbb79f
		_0xffffff8000ec2c60: xor r15, r12
		_0xffffff8000ec2c63: add r15, r13
		_0xffffff8000ec2c66: lea r15, [r10 + r15*4]
		_0xffffff8000ec2c6a: movabs r12, 0x934f08ed00112184
		_0xffffff8000ec2c74: xor r8d, dword ptr [r12 + r15]
		_0xffffff8000ec2c78: mov r9d, edi
		_0xffffff8000ec2c7b: shr r9d, 7
		_0xffffff8000ec2c7f: and r9d, 0x44
		_0xffffff8000ec2c83: mov r15d, edi
		_0xffffff8000ec2c86: shr r15d, 8
		_0xffffff8000ec2c8a: add r15d, 0xa2
		_0xffffff8000ec2c91: sub r15d, r9d
		_0xffffff8000ec2c94: xor r15d, 0xa2
		_0xffffff8000ec2c9b: mov r9b, r15b
		_0xffffff8000ec2c9e: add r9b, r9b
		_0xffffff8000ec2ca1: xor r15b, 0x73
		_0xffffff8000ec2ca5: and r9b, 0xe6
		_0xffffff8000ec2ca9: add r9b, r15b
		_0xffffff8000ec2cac: movzx r9d, r9b
		_0xffffff8000ec2cb0: cmp r9b, 0x73
		_0xffffff8000ec2cb4: sbb r15, r15
		_0xffffff8000ec2cb7: and r15d, 0x100
		_0xffffff8000ec2cbe: add r15d, r9d
		_0xffffff8000ec2cc1: add r15d, 0x10a03c58
		_0xffffff8000ec2cc8: shl r15, 0x20
		_0xffffff8000ec2ccc: movabs r12, 0xef5fc33500000000
		_0xffffff8000ec2cd6: add r12, r15
		_0xffffff8000ec2cd9: mov r15, r12
		_0xffffff8000ec2cdc: sar r15, 0x1f
		_0xffffff8000ec2ce0: movabs r13, 0xfe6bbfcabcff5afe
		_0xffffff8000ec2cea: and r13, r15
		_0xffffff8000ec2ced: sar r12, 0x20
		_0xffffff8000ec2cf1: movabs r15, 0x7f35dfe55e7fad7f
		_0xffffff8000ec2cfb: xor r15, r12
		_0xffffff8000ec2cfe: add r15, r13
		_0xffffff8000ec2d01: add r15, qword ptr [r14 + 0x138]
		_0xffffff8000ec2d08: movabs r12, 0x80ca201aa1805281
		_0xffffff8000ec2d12: mov r9b, byte ptr [r12 + r15]
		_0xffffff8000ec2d16: mov r15b, r9b
		_0xffffff8000ec2d19: add r15b, r15b
		_0xffffff8000ec2d1c: xor r9b, 0x77
		_0xffffff8000ec2d20: and r15b, 0xee
		_0xffffff8000ec2d24: add r15b, r9b
		_0xffffff8000ec2d27: add r15b, 0x8c
		_0xffffff8000ec2d2b: movzx r9d, r15b
		_0xffffff8000ec2d2f: cmp r9b, 3
		_0xffffff8000ec2d33: sbb r15, r15
		_0xffffff8000ec2d36: and r15d, 0x100
		_0xffffff8000ec2d3d: add r15d, r9d
		_0xffffff8000ec2d40: add r15d, 0x51f723e4
		_0xffffff8000ec2d47: shl r15, 0x20
		_0xffffff8000ec2d4b: movabs r12, 0xae08dc1900000000
		_0xffffff8000ec2d55: add r12, r15
		_0xffffff8000ec2d58: mov r15, r12
		_0xffffff8000ec2d5b: sar r15, 0x1f
		_0xffffff8000ec2d5f: movabs r13, 0x3ff7f47fbd5f77fe
		_0xffffff8000ec2d69: and r13, r15
		_0xffffff8000ec2d6c: sar r12, 0x20
		_0xffffff8000ec2d70: movabs r15, 0x3ffbfa3fdeafbbff
		_0xffffff8000ec2d7a: xor r15, r12
		_0xffffff8000ec2d7d: add r15, r13
		_0xffffff8000ec2d80: lea r15, [rsi + r15*4]
		_0xffffff8000ec2d84: movabs r12, 0x10170085411004
		_0xffffff8000ec2d8e: xor r8d, dword ptr [r12 + r15]
		_0xffffff8000ec2d92: mov r9b, r8b
		_0xffffff8000ec2d95: add r9b, r9b
		_0xffffff8000ec2d98: mov r15b, r8b
		_0xffffff8000ec2d9b: xor r15b, 0x73
		_0xffffff8000ec2d9f: and r9b, 0xe6
		_0xffffff8000ec2da3: add r9b, r15b
		_0xffffff8000ec2da6: add r9b, 0xf0
		_0xffffff8000ec2daa: movzx r9d, r9b
		_0xffffff8000ec2dae: cmp r9b, 0x63
		_0xffffff8000ec2db2: sbb r15, r15
		_0xffffff8000ec2db5: and r15d, 0x100
		_0xffffff8000ec2dbc: add r15d, r9d
		_0xffffff8000ec2dbf: add r15d, 0x2df2f90c
		_0xffffff8000ec2dc6: shl r15, 0x20
		_0xffffff8000ec2dca: movabs r12, 0xd20d069100000000
		_0xffffff8000ec2dd4: add r12, r15
		_0xffffff8000ec2dd7: mov r15, r12
		_0xffffff8000ec2dda: sar r15, 0x1f
		_0xffffff8000ec2dde: movabs r13, 0xff7ffcf50def9f7e
		_0xffffff8000ec2de8: and r13, r15
		_0xffffff8000ec2deb: sar r12, 0x20
		_0xffffff8000ec2def: movabs r15, 0x7fbffe7a86f7cfbf
		_0xffffff8000ec2df9: xor r15, r12
		_0xffffff8000ec2dfc: add r15, r13
		_0xffffff8000ec2dff: add r15, qword ptr [r14 + 0x190]
		_0xffffff8000ec2e06: movabs r12, 0x8040018579083041
		_0xffffff8000ec2e10: mov r9b, byte ptr [r12 + r15]
		_0xffffff8000ec2e14: mov r15b, r9b
		_0xffffff8000ec2e17: add r15b, r15b
		_0xffffff8000ec2e1a: xor r9b, 0x7f
		_0xffffff8000ec2e1e: add r9b, r15b
		_0xffffff8000ec2e21: add r9b, 0xfc
		_0xffffff8000ec2e25: movzx r9d, r9b
		_0xffffff8000ec2e29: cmp r9b, 0x7b
		_0xffffff8000ec2e2d: sbb r15, r15
		_0xffffff8000ec2e30: and r15d, 0x100
		_0xffffff8000ec2e37: add r15d, r9d
		_0xffffff8000ec2e3a: add r15d, 0x4fa1df64
		_0xffffff8000ec2e41: shl r15, 0x20
		_0xffffff8000ec2e45: movabs r12, 0xb05e202100000000
		_0xffffff8000ec2e4f: add r12, r15
		_0xffffff8000ec2e52: mov r15, r12
		_0xffffff8000ec2e55: sar r15, 0x1f
		_0xffffff8000ec2e59: movabs r13, 0x3ffffeed7dbfd7de
		_0xffffff8000ec2e63: and r13, r15
		_0xffffff8000ec2e66: sar r12, 0x20
		_0xffffff8000ec2e6a: movabs r15, 0x1fffff76bedfebef
		_0xffffff8000ec2e74: xor r15, r12
		_0xffffff8000ec2e77: add r15, r13
		_0xffffff8000ec2e7a: lea r15, [rax + r15*4]
		_0xffffff8000ec2e7e: movabs r12, 0x8000022504805044
		_0xffffff8000ec2e88: mov eax, dword ptr [r12 + r15]
		_0xffffff8000ec2e8c: movabs r15, 0x1848d508502304
		_0xffffff8000ec2e96: xor eax, dword ptr [r15 + rbx]
		_0xffffff8000ec2e9a: mov dword ptr [rbp - 0x3b0], eax
		_0xffffff8000ec2ea0: mov esi, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec2ea6: shr esi, 7
		_0xffffff8000ec2ea9: and esi, 0x7a
		_0xffffff8000ec2eac: mov r9d, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec2eb3: shr r9d, 8
		_0xffffff8000ec2eb7: add r9d, 0x3d
		_0xffffff8000ec2ebb: sub r9d, esi
		_0xffffff8000ec2ebe: xor r9d, 0x3d
		_0xffffff8000ec2ec2: mov sil, r9b
		_0xffffff8000ec2ec5: add sil, sil
		_0xffffff8000ec2ec8: xor r9b, 0x2f
		_0xffffff8000ec2ecc: and sil, 0x5e
		_0xffffff8000ec2ed0: add sil, r9b
		_0xffffff8000ec2ed3: add sil, 0xdd
		_0xffffff8000ec2ed7: movzx esi, sil
		_0xffffff8000ec2edb: cmp sil, 0xc
		_0xffffff8000ec2edf: sbb rbx, rbx
		_0xffffff8000ec2ee2: and ebx, 0x100
		_0xffffff8000ec2ee8: add ebx, esi
		_0xffffff8000ec2eea: add ebx, 0x70475146
		_0xffffff8000ec2ef0: shl rbx, 0x20
		_0xffffff8000ec2ef4: movabs r15, 0x8fb8aeae00000000
		_0xffffff8000ec2efe: add r15, rbx
		_0xffffff8000ec2f01: mov rbx, r15
		_0xffffff8000ec2f04: sar rbx, 0x1f
		_0xffffff8000ec2f08: movabs r12, 0x3ebbefbbd5f1efae
		_0xffffff8000ec2f12: and r12, rbx
		_0xffffff8000ec2f15: sar r15, 0x20
		_0xffffff8000ec2f19: movabs rbx, 0x1f5df7ddeaf8f7d7
		_0xffffff8000ec2f23: xor rbx, r15
		_0xffffff8000ec2f26: add rbx, r12
		_0xffffff8000ec2f29: add rbx, qword ptr [r14 + 0x178]
		_0xffffff8000ec2f30: movabs r15, 0xe0a2082215070829
		_0xffffff8000ec2f3a: mov sil, byte ptr [r15 + rbx]
		_0xffffff8000ec2f3e: mov r9b, sil
		_0xffffff8000ec2f41: add r9b, r9b
		_0xffffff8000ec2f44: xor sil, 0x5f
		_0xffffff8000ec2f48: and r9b, 0xbe
		_0xffffff8000ec2f4c: add r9b, sil
		_0xffffff8000ec2f4f: add r9b, 0xb9
		_0xffffff8000ec2f53: movzx esi, r9b
		_0xffffff8000ec2f57: cmp sil, 0x18
		_0xffffff8000ec2f5b: sbb rbx, rbx
		_0xffffff8000ec2f5e: and ebx, 0x100
		_0xffffff8000ec2f64: add ebx, esi
		_0xffffff8000ec2f66: add ebx, 0x6441e47d
		_0xffffff8000ec2f6c: shl rbx, 0x20
		_0xffffff8000ec2f70: movabs r15, 0x9bbe1b6b00000000
		_0xffffff8000ec2f7a: add r15, rbx
		_0xffffff8000ec2f7d: mov rbx, r15
		_0xffffff8000ec2f80: sar rbx, 0x1f
		_0xffffff8000ec2f84: movabs r12, 0x23fff6ef01cb67fc
		_0xffffff8000ec2f8e: and r12, rbx
		_0xffffff8000ec2f91: sar r15, 0x20
		_0xffffff8000ec2f95: movabs rbx, 0x31fffb7780e5b3fe
		_0xffffff8000ec2f9f: xor rbx, r15
		_0xffffff8000ec2fa2: add rbx, r12
		_0xffffff8000ec2fa5: mov rsi, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec2fac: lea rbx, [rsi + rbx*4]
		_0xffffff8000ec2fb0: movabs r15, 0x38001221fc693008
		_0xffffff8000ec2fba: mov r9d, dword ptr [r15 + rbx]
		_0xffffff8000ec2fbe: mov r10d, r11d
		_0xffffff8000ec2fc1: shr r10d, 0xf
		_0xffffff8000ec2fc5: and r10d, 0x5a
		_0xffffff8000ec2fc9: mov ebx, r11d
		_0xffffff8000ec2fcc: shr ebx, 0x10
		_0xffffff8000ec2fcf: add ebx, 0x2d
		_0xffffff8000ec2fd2: sub ebx, r10d
		_0xffffff8000ec2fd5: xor ebx, 0x2d
		_0xffffff8000ec2fd8: mov r10b, bl
		_0xffffff8000ec2fdb: add r10b, r10b
		_0xffffff8000ec2fde: xor bl, 0x3f
		_0xffffff8000ec2fe1: and r10b, 0x7e
		_0xffffff8000ec2fe5: add r10b, bl
		_0xffffff8000ec2fe8: add r10b, 0xc8
		_0xffffff8000ec2fec: movzx ebx, r10b
		_0xffffff8000ec2ff0: cmp bl, 7
		_0xffffff8000ec2ff3: sbb r15, r15
		_0xffffff8000ec2ff6: and r15, 0x100
		_0xffffff8000ec2ffd: add r15, rbx
		_0xffffff8000ec3000: add r15, -7
		_0xffffff8000ec3004: movabs rbx, 0x2ffeffef6dbabe7f
		_0xffffff8000ec300e: mov r12, r15
		_0xffffff8000ec3011: and r12, rbx
		_0xffffff8000ec3014: xor r15, rbx
		_0xffffff8000ec3017: lea rbx, [r15 + r12*2]
		_0xffffff8000ec301b: add rbx, qword ptr [r14 + 0x120]
		_0xffffff8000ec3022: movabs r15, 0xd001001092454181
		_0xffffff8000ec302c: mov r10b, byte ptr [r15 + rbx]
		_0xffffff8000ec3030: mov bl, r10b
		_0xffffff8000ec3033: add bl, bl
		_0xffffff8000ec3035: xor r10b, 0x59
		_0xffffff8000ec3039: and bl, 0xb2
		_0xffffff8000ec303c: add bl, r10b
		_0xffffff8000ec303f: add bl, 0xf0
		_0xffffff8000ec3042: movzx r10d, bl
		_0xffffff8000ec3046: cmp r10b, 0x49
		_0xffffff8000ec304a: sbb rbx, rbx
		_0xffffff8000ec304d: and ebx, 0x100
		_0xffffff8000ec3053: add ebx, r10d
		_0xffffff8000ec3056: add ebx, 0x37168cd7
		_0xffffff8000ec305c: shl rbx, 0x20
		_0xffffff8000ec3060: movabs r15, 0xc8e972e000000000
		_0xffffff8000ec306a: add r15, rbx
		_0xffffff8000ec306d: mov rbx, r15
		_0xffffff8000ec3070: sar rbx, 0x1f
		_0xffffff8000ec3074: movabs r12, 0x1dbdf7fc7cdef2dc
		_0xffffff8000ec307e: and r12, rbx
		_0xffffff8000ec3081: sar r15, 0x20
		_0xffffff8000ec3085: movabs rbx, 0x2edefbfe3e6f796e
		_0xffffff8000ec308f: xor rbx, r15
		_0xffffff8000ec3092: add rbx, r12
		_0xffffff8000ec3095: mov r10, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec309c: lea rbx, [r10 + rbx*4]
		_0xffffff8000ec30a0: movabs r15, 0x4484100706421a48
		_0xffffff8000ec30aa: xor r9d, dword ptr [r15 + rbx]
		_0xffffff8000ec30ae: mov bl, cl
		_0xffffff8000ec30b0: add bl, bl
		_0xffffff8000ec30b2: mov r15b, cl
		_0xffffff8000ec30b5: xor r15b, 0x2f
		_0xffffff8000ec30b9: and bl, 0x5e
		_0xffffff8000ec30bc: add bl, r15b
		_0xffffff8000ec30bf: add bl, 0xe0
		_0xffffff8000ec30c2: movzx ebx, bl
		_0xffffff8000ec30c5: cmp bl, 0xf
		_0xffffff8000ec30c8: sbb r15, r15
		_0xffffff8000ec30cb: and r15d, 0x100
		_0xffffff8000ec30d2: add r15d, ebx
		_0xffffff8000ec30d5: add r15d, 0x228b17c2
		_0xffffff8000ec30dc: shl r15, 0x20
		_0xffffff8000ec30e0: movabs rbx, 0xdd74e82f00000000
		_0xffffff8000ec30ea: add rbx, r15
		_0xffffff8000ec30ed: mov r15, rbx
		_0xffffff8000ec30f0: sar r15, 0x1f
		_0xffffff8000ec30f4: movabs r12, 0xffdafaf43e9bffd8
		_0xffffff8000ec30fe: and r12, r15
		_0xffffff8000ec3101: sar rbx, 0x20
		_0xffffff8000ec3105: movabs r15, 0x7fed7d7a1f4dffec
		_0xffffff8000ec310f: xor r15, rbx
		_0xffffff8000ec3112: add r15, r12
		_0xffffff8000ec3115: add r15, qword ptr [r14 + 0x150]
		_0xffffff8000ec311c: movabs rbx, 0x80128285e0b20014
		_0xffffff8000ec3126: mov bl, byte ptr [rbx + r15]
		_0xffffff8000ec312a: mov r15b, bl
		_0xffffff8000ec312d: add r15b, r15b
		_0xffffff8000ec3130: xor bl, 0x6f
		_0xffffff8000ec3133: and r15b, 0xde
		_0xffffff8000ec3137: add r15b, bl
		_0xffffff8000ec313a: add r15b, 0xf9
		_0xffffff8000ec313e: movzx ebx, r15b
		_0xffffff8000ec3142: cmp bl, 0x68
		_0xffffff8000ec3145: sbb r15, r15
		_0xffffff8000ec3148: and r15d, 0x100
		_0xffffff8000ec314f: add r15d, ebx
		_0xffffff8000ec3152: add r15d, 0x11ca6677
		_0xffffff8000ec3159: shl r15, 0x20
		_0xffffff8000ec315d: movabs rbx, 0xee35992100000000
		_0xffffff8000ec3167: add rbx, r15
		_0xffffff8000ec316a: mov r15, rbx
		_0xffffff8000ec316d: sar r15, 0x1f
		_0xffffff8000ec3171: movabs r12, 0x3fffefcaf7ced7ea
		_0xffffff8000ec317b: and r12, r15
		_0xffffff8000ec317e: sar rbx, 0x20
		_0xffffff8000ec3182: movabs r15, 0x3ffff7e57be76bf5
		_0xffffff8000ec318c: xor r15, rbx
		_0xffffff8000ec318f: add r15, r12
		_0xffffff8000ec3192: mov rax, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec3199: lea rbx, [rax + r15*4]
		_0xffffff8000ec319d: movabs r15, 0x206a1062502c
		_0xffffff8000ec31a7: xor r9d, dword ptr [r15 + rbx]
		_0xffffff8000ec31ab: mov ebx, edi
		_0xffffff8000ec31ad: shr ebx, 0x17
		_0xffffff8000ec31b0: and ebx, 0xa0
		_0xffffff8000ec31b6: mov r15d, edi
		_0xffffff8000ec31b9: shr r15d, 0x18
		_0xffffff8000ec31bd: add r15d, 0x50
		_0xffffff8000ec31c1: sub r15d, ebx
		_0xffffff8000ec31c4: xor r15d, 0x50
		_0xffffff8000ec31c8: mov bl, r15b
		_0xffffff8000ec31cb: add bl, bl
		_0xffffff8000ec31cd: xor r15b, 0x7e
		_0xffffff8000ec31d1: and bl, 0xfc
		_0xffffff8000ec31d4: add bl, r15b
		_0xffffff8000ec31d7: add bl, 0xde
		_0xffffff8000ec31da: movzx ebx, bl
		_0xffffff8000ec31dd: cmp bl, 0x5c
		_0xffffff8000ec31e0: sbb r15, r15
		_0xffffff8000ec31e3: and r15d, 0x100
		_0xffffff8000ec31ea: add r15d, ebx
		_0xffffff8000ec31ed: add r15d, 0x2d5e431c
		_0xffffff8000ec31f4: shl r15, 0x20
		_0xffffff8000ec31f8: movabs rbx, 0xd2a1bc8800000000
		_0xffffff8000ec3202: add rbx, r15
		_0xffffff8000ec3205: mov r15, rbx
		_0xffffff8000ec3208: sar r15, 0x1f
		_0xffffff8000ec320c: movabs r12, 0xb37f37ffa3dfb7f0
		_0xffffff8000ec3216: and r12, r15
		_0xffffff8000ec3219: sar rbx, 0x20
		_0xffffff8000ec321d: movabs r15, 0x59bf9bffd1efdbf8
		_0xffffff8000ec3227: xor r15, rbx
		_0xffffff8000ec322a: add r15, r12
		_0xffffff8000ec322d: add r15, qword ptr [r14 + 0x148]
		_0xffffff8000ec3234: movabs rbx, 0xa64064002e102408
		_0xffffff8000ec323e: mov bl, byte ptr [rbx + r15]
		_0xffffff8000ec3242: mov r15b, bl
		_0xffffff8000ec3245: add r15b, r15b
		_0xffffff8000ec3248: xor bl, 0x1b
		_0xffffff8000ec324b: and r15b, 0x36
		_0xffffff8000ec324f: add r15b, bl
		_0xffffff8000ec3252: add r15b, 0xe8
		_0xffffff8000ec3256: movzx ebx, r15b
		_0xffffff8000ec325a: cmp bl, 3
		_0xffffff8000ec325d: sbb r15, r15
		_0xffffff8000ec3260: and r15d, 0x100
		_0xffffff8000ec3267: add r15d, ebx
		_0xffffff8000ec326a: add r15d, 0x4d8ec2db
		_0xffffff8000ec3271: shl r15, 0x20
		_0xffffff8000ec3275: movabs rbx, 0xb2713d2200000000
		_0xffffff8000ec327f: add rbx, r15
		_0xffffff8000ec3282: mov r15, rbx
		_0xffffff8000ec3285: sar r15, 0x1f
		_0xffffff8000ec3289: movabs r12, 0x339f1bb4ffd55f9c
		_0xffffff8000ec3293: and r12, r15
		_0xffffff8000ec3296: sar rbx, 0x20
		_0xffffff8000ec329a: movabs r15, 0x39cf8dda7feaafce
		_0xffffff8000ec32a4: xor r15, rbx
		_0xffffff8000ec32a7: add r15, r12
		_0xffffff8000ec32aa: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec32b1: lea rbx, [rax + r15*4]
		_0xffffff8000ec32b5: movabs r15, 0x18c1c896005540c8
		_0xffffff8000ec32bf: xor r9d, dword ptr [r15 + rbx]
		_0xffffff8000ec32c3: mov ebx, r9d
		_0xffffff8000ec32c6: shr ebx, 0xf
		_0xffffff8000ec32c9: and ebx, 0x6c
		_0xffffff8000ec32cc: mov r15d, r9d
		_0xffffff8000ec32cf: shr r15d, 0x10
		_0xffffff8000ec32d3: add r15d, 0xb6
		_0xffffff8000ec32da: sub r15d, ebx
		_0xffffff8000ec32dd: xor r15d, 0xb6
		_0xffffff8000ec32e4: mov bl, r15b
		_0xffffff8000ec32e7: add bl, bl
		_0xffffff8000ec32e9: xor r15b, 0x59
		_0xffffff8000ec32ed: and bl, 0xb2
		_0xffffff8000ec32f0: add bl, r15b
		_0xffffff8000ec32f3: add bl, 0xf0
		_0xffffff8000ec32f6: movzx ebx, bl
		_0xffffff8000ec32f9: cmp bl, 0x49
		_0xffffff8000ec32fc: sbb r15, r15
		_0xffffff8000ec32ff: and r15d, 0x100
		_0xffffff8000ec3306: add r15d, ebx
		_0xffffff8000ec3309: add r15d, 0x6c8f5e9e
		_0xffffff8000ec3310: shl r15, 0x20
		_0xffffff8000ec3314: movabs rbx, 0x9370a11900000000
		_0xffffff8000ec331e: add rbx, r15
		_0xffffff8000ec3321: mov r15, rbx
		_0xffffff8000ec3324: sar r15, 0x1f
		_0xffffff8000ec3328: movabs r12, 0xbfcfe3adddf7df54
		_0xffffff8000ec3332: and r12, r15
		_0xffffff8000ec3335: sar rbx, 0x20
		_0xffffff8000ec3339: movabs r15, 0x5fe7f1d6eefbefaa
		_0xffffff8000ec3343: xor r15, rbx
		_0xffffff8000ec3346: add r15, r12
		_0xffffff8000ec3349: add r15, qword ptr [r14 + 0x1e0]
		_0xffffff8000ec3350: movabs rbx, 0xa0180e2911041056
		_0xffffff8000ec335a: mov bl, byte ptr [rbx + r15]
		_0xffffff8000ec335e: mov r15b, bl
		_0xffffff8000ec3361: add r15b, r15b
		_0xffffff8000ec3364: xor bl, 0x6c
		_0xffffff8000ec3367: and r15b, 0xd8
		_0xffffff8000ec336b: add r15b, bl
		_0xffffff8000ec336e: add r15b, 0xe0
		_0xffffff8000ec3372: movzx ebx, r15b
		_0xffffff8000ec3376: cmp bl, 0x4c
		_0xffffff8000ec3379: sbb r15, r15
		_0xffffff8000ec337c: and r15, 0x100
		_0xffffff8000ec3383: add r15, rbx
		_0xffffff8000ec3386: add r15, -0x4c
		_0xffffff8000ec338a: movabs rbx, 0x1fecfdb7ff5ef379
		_0xffffff8000ec3394: and rbx, r15
		_0xffffff8000ec3397: movabs r12, 0x3fecfdb7ff5ef379
		_0xffffff8000ec33a1: xor r12, r15
		_0xffffff8000ec33a4: lea rbx, [r12 + rbx*2]
		_0xffffff8000ec33a8: lea rbx, [r10 + rbx*4]
		_0xffffff8000ec33ac: movabs r15, 0x4c09200284321c
		_0xffffff8000ec33b6: mov eax, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec33bc: xor eax, dword ptr [r15 + rbx]
		_0xffffff8000ec33c0: mov dword ptr [rbp - 0x3b0], eax
		_0xffffff8000ec33c6: mov ebx, ecx
		_0xffffff8000ec33c8: shr ebx, 0x17
		_0xffffff8000ec33cb: and ebx, 0x36
		_0xffffff8000ec33ce: shr ecx, 0x18
		_0xffffff8000ec33d1: add ecx, 0x1b
		_0xffffff8000ec33d4: sub ecx, ebx
		_0xffffff8000ec33d6: xor ecx, 0x1b
		_0xffffff8000ec33d9: mov bl, cl
		_0xffffff8000ec33db: add bl, bl
		_0xffffff8000ec33dd: xor cl, 0x76
		_0xffffff8000ec33e0: and bl, 0xec
		_0xffffff8000ec33e3: add bl, cl
		_0xffffff8000ec33e5: movzx ecx, bl
		_0xffffff8000ec33e8: cmp cl, 0x76
		_0xffffff8000ec33eb: sbb rbx, rbx
		_0xffffff8000ec33ee: and ebx, 0x100
		_0xffffff8000ec33f4: add ebx, ecx
		_0xffffff8000ec33f6: add ebx, 0x7c77b81c
		_0xffffff8000ec33fc: shl rbx, 0x20
		_0xffffff8000ec3400: movabs r15, 0x8388476e00000000
		_0xffffff8000ec340a: add r15, rbx
		_0xffffff8000ec340d: mov rbx, r15
		_0xffffff8000ec3410: sar rbx, 0x1f
		_0xffffff8000ec3414: movabs r12, 0xb395e7fbbf96dbe2
		_0xffffff8000ec341e: and r12, rbx
		_0xffffff8000ec3421: sar r15, 0x20
		_0xffffff8000ec3425: movabs rbx, 0x59caf3fddfcb6df1
		_0xffffff8000ec342f: xor rbx, r15
		_0xffffff8000ec3432: add rbx, r12
		_0xffffff8000ec3435: add rbx, qword ptr [r14 + 0x168]
		_0xffffff8000ec343c: movabs r15, 0xa6350c022034920f
		_0xffffff8000ec3446: mov cl, byte ptr [r15 + rbx]
		_0xffffff8000ec344a: mov bl, cl
		_0xffffff8000ec344c: add bl, bl
		_0xffffff8000ec344e: xor cl, 0x3f
		_0xffffff8000ec3451: and bl, 0x7e
		_0xffffff8000ec3454: add bl, cl
		_0xffffff8000ec3456: add bl, 0xfc
		_0xffffff8000ec3459: movzx ecx, bl
		_0xffffff8000ec345c: cmp cl, 0x3b
		_0xffffff8000ec345f: sbb rbx, rbx
		_0xffffff8000ec3462: and ebx, 0x100
		_0xffffff8000ec3468: add ebx, ecx
		_0xffffff8000ec346a: add ebx, 0x4e4c0e71
		_0xffffff8000ec3470: shl rbx, 0x20
		_0xffffff8000ec3474: movabs r15, 0xb1b3f15400000000
		_0xffffff8000ec347e: add r15, rbx
		_0xffffff8000ec3481: mov rbx, r15
		_0xffffff8000ec3484: sar rbx, 0x1f
		_0xffffff8000ec3488: movabs r12, 0x2ffe3dd7fdfff3fa
		_0xffffff8000ec3492: and r12, rbx
		_0xffffff8000ec3495: sar r15, 0x20
		_0xffffff8000ec3499: movabs rbx, 0x37ff1eebfefff9fd
		_0xffffff8000ec34a3: xor rbx, r15
		_0xffffff8000ec34a6: add rbx, r12
		_0xffffff8000ec34a9: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec34b0: lea rbx, [rax + rbx*4]
		_0xffffff8000ec34b4: mov eax, dword ptr [rbp - 0x3c4]
		_0xffffff8000ec34ba: mov cl, al
		_0xffffff8000ec34bc: add cl, cl
		_0xffffff8000ec34be: xor al, 0x7d
		_0xffffff8000ec34c0: and cl, 0xfa
		_0xffffff8000ec34c3: add cl, al
		_0xffffff8000ec34c5: add cl, 0x98
		_0xffffff8000ec34c8: movzx eax, cl
		_0xffffff8000ec34cb: cmp al, 0x15
		_0xffffff8000ec34cd: sbb r15, r15
		_0xffffff8000ec34d0: and r15d, 0x100
		_0xffffff8000ec34d7: add r15d, eax
		_0xffffff8000ec34da: add r15d, 0x1be2eab3
		_0xffffff8000ec34e1: shl r15, 0x20
		_0xffffff8000ec34e5: movabs r12, 0xe41d153800000000
		_0xffffff8000ec34ef: add r12, r15
		_0xffffff8000ec34f2: mov r15, r12
		_0xffffff8000ec34f5: sar r15, 0x1f
		_0xffffff8000ec34f9: movabs r13, 0x1befdd79fefd7bcc
		_0xffffff8000ec3503: and r13, r15
		_0xffffff8000ec3506: sar r12, 0x20
		_0xffffff8000ec350a: movabs r15, 0xdf7eebcff7ebde6
		_0xffffff8000ec3514: xor r15, r12
		_0xffffff8000ec3517: add r15, r13
		_0xffffff8000ec351a: add r15, qword ptr [r14 + 0x170]
		_0xffffff8000ec3521: movabs r12, 0xf20811430081421a
		_0xffffff8000ec352b: mov al, byte ptr [r12 + r15]
		_0xffffff8000ec352f: mov cl, al
		_0xffffff8000ec3531: add cl, cl
		_0xffffff8000ec3533: xor al, 0x7c
		_0xffffff8000ec3535: and cl, 0xf8
		_0xffffff8000ec3538: add cl, al
		_0xffffff8000ec353a: add cl, 0xdc
		_0xffffff8000ec353d: movzx eax, cl
		_0xffffff8000ec3540: cmp al, 0x58
		_0xffffff8000ec3542: sbb r15, r15
		_0xffffff8000ec3545: and r15d, 0x100
		_0xffffff8000ec354c: add r15d, eax
		_0xffffff8000ec354f: add r15d, 0x5368ef29
		_0xffffff8000ec3556: shl r15, 0x20
		_0xffffff8000ec355a: movabs r12, 0xac97107f00000000
		_0xffffff8000ec3564: add r12, r15
		_0xffffff8000ec3567: mov r15, r12
		_0xffffff8000ec356a: sar r15, 0x1f
		_0xffffff8000ec356e: movabs r13, 0x2f9fcbfdda52fa98
		_0xffffff8000ec3578: and r13, r15
		_0xffffff8000ec357b: sar r12, 0x20
		_0xffffff8000ec357f: movabs r15, 0x37cfe5feed297d4c
		_0xffffff8000ec3589: xor r15, r12
		_0xffffff8000ec358c: add r15, r13
		_0xffffff8000ec358f: mov rax, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec3596: lea r15, [rax + r15*4]
		_0xffffff8000ec359a: movabs r12, 0x20c068044b5a0ad0
		_0xffffff8000ec35a4: mov r15d, dword ptr [r12 + r15]
		_0xffffff8000ec35a8: mov ecx, r11d
		_0xffffff8000ec35ab: shr ecx, 7
		_0xffffff8000ec35ae: and ecx, 0x34
		_0xffffff8000ec35b1: shr r11d, 8
		_0xffffff8000ec35b5: add r11d, 0x9a
		_0xffffff8000ec35bc: sub r11d, ecx
		_0xffffff8000ec35bf: xor r11d, 0x9a
		_0xffffff8000ec35c6: mov cl, r11b
		_0xffffff8000ec35c9: add cl, cl
		_0xffffff8000ec35cb: xor r11b, 0x53
		_0xffffff8000ec35cf: and cl, 0xa6
		_0xffffff8000ec35d2: add cl, r11b
		_0xffffff8000ec35d5: add cl, 0xf0
		_0xffffff8000ec35d8: movzx ecx, cl
		_0xffffff8000ec35db: cmp cl, 0x43
		_0xffffff8000ec35de: sbb r12, r12
		_0xffffff8000ec35e1: and r12d, 0x100
		_0xffffff8000ec35e8: add r12d, ecx
		_0xffffff8000ec35eb: add r12d, 0x2768353e
		_0xffffff8000ec35f2: shl r12, 0x20
		_0xffffff8000ec35f6: movabs r13, 0xd897ca7f00000000
		_0xffffff8000ec3600: add r13, r12
		_0xffffff8000ec3603: mov r12, r13
		_0xffffff8000ec3606: sar r12, 0x1f
		_0xffffff8000ec360a: movabs rcx, 0xf7b7edeffdedcde6
		_0xffffff8000ec3614: and rcx, r12
		_0xffffff8000ec3617: sar r13, 0x20
		_0xffffff8000ec361b: movabs r12, 0x7bdbf6f7fef6e6f3
		_0xffffff8000ec3625: xor r12, r13
		_0xffffff8000ec3628: add r12, rcx
		_0xffffff8000ec362b: add r12, qword ptr [r14 + 0x118]
		_0xffffff8000ec3632: movabs r13, 0x842409080109190d
		_0xffffff8000ec363c: mov cl, byte ptr [r13 + r12]
		_0xffffff8000ec3641: mov r11b, cl
		_0xffffff8000ec3644: add r11b, r11b
		_0xffffff8000ec3647: xor cl, 0x51
		_0xffffff8000ec364a: and r11b, 0xa2
		_0xffffff8000ec364e: add r11b, cl
		_0xffffff8000ec3651: movzx r12d, r11b
		_0xffffff8000ec3655: cmp r12b, 0x51
		_0xffffff8000ec3659: sbb r13, r13
		_0xffffff8000ec365c: and r13, 0x100
		_0xffffff8000ec3663: add r13, r12
		_0xffffff8000ec3666: add r13, -0x51
		_0xffffff8000ec366a: movabs r12, 0x1ed9fff71fff7ef8
		_0xffffff8000ec3674: and r12, r13
		_0xffffff8000ec3677: movabs rcx, 0x3ed9fff71fff7ef8
		_0xffffff8000ec3681: xor rcx, r13
		_0xffffff8000ec3684: lea r12, [rcx + r12*2]
		_0xffffff8000ec3688: lea r12, [rsi + r12*4]
		_0xffffff8000ec368c: movabs r13, 0x498002380020420
		_0xffffff8000ec3696: xor r15d, dword ptr [r13 + r12]
		_0xffffff8000ec369b: movabs r12, 0x200384500400180c
		_0xffffff8000ec36a5: xor r15d, dword ptr [r12 + rbx]
		_0xffffff8000ec36a9: mov ecx, edi
		_0xffffff8000ec36ab: shr ecx, 0xf
		_0xffffff8000ec36ae: and ecx, 0x92
		_0xffffff8000ec36b4: shr edi, 0x10
		_0xffffff8000ec36b7: add edi, 0xc9
		_0xffffff8000ec36bd: sub edi, ecx
		_0xffffff8000ec36bf: xor edi, 0xc9
		_0xffffff8000ec36c5: mov cl, dil
		_0xffffff8000ec36c8: add cl, cl
		_0xffffff8000ec36ca: xor dil, 0x79
		_0xffffff8000ec36ce: and cl, 0xf2
		_0xffffff8000ec36d1: add cl, dil
		_0xffffff8000ec36d4: add cl, 0xb0
		_0xffffff8000ec36d7: movzx ecx, cl
		_0xffffff8000ec36da: cmp cl, 0x29
		_0xffffff8000ec36dd: sbb rbx, rbx
		_0xffffff8000ec36e0: and ebx, 0x100
		_0xffffff8000ec36e6: add ebx, ecx
		_0xffffff8000ec36e8: add ebx, 0x48092a9e
		_0xffffff8000ec36ee: shl rbx, 0x20
		_0xffffff8000ec36f2: movabs r12, 0xb7f6d53900000000
		_0xffffff8000ec36fc: add r12, rbx
		_0xffffff8000ec36ff: mov rbx, r12
		_0xffffff8000ec3702: sar rbx, 0x1f
		_0xffffff8000ec3706: movabs r13, 0xdbe7fffab7360bda
		_0xffffff8000ec3710: and r13, rbx
		_0xffffff8000ec3713: sar r12, 0x20
		_0xffffff8000ec3717: movabs rbx, 0x6df3fffd5b9b05ed
		_0xffffff8000ec3721: xor rbx, r12
		_0xffffff8000ec3724: add rbx, r13
		_0xffffff8000ec3727: add rbx, qword ptr [r14 + 0x140]
		_0xffffff8000ec372e: movabs r12, 0x920c0002a464fa13
		_0xffffff8000ec3738: mov cl, byte ptr [r12 + rbx]
		_0xffffff8000ec373c: mov dil, cl
		_0xffffff8000ec373f: add dil, dil
		_0xffffff8000ec3742: xor cl, 0x77
		_0xffffff8000ec3745: and dil, 0xee
		_0xffffff8000ec3749: add dil, cl
		_0xffffff8000ec374c: add dil, 0xf0
		_0xffffff8000ec3750: movzx ecx, dil
		_0xffffff8000ec3754: cmp cl, 0x67
		_0xffffff8000ec3757: sbb rbx, rbx
		_0xffffff8000ec375a: and ebx, 0x100
		_0xffffff8000ec3760: add ebx, ecx
		_0xffffff8000ec3762: add ebx, 0x43f9de6b
		_0xffffff8000ec3768: shl rbx, 0x20
		_0xffffff8000ec376c: movabs r12, 0xbc06212e00000000
		_0xffffff8000ec3776: add r12, rbx
		_0xffffff8000ec3779: mov rbx, r12
		_0xffffff8000ec377c: sar rbx, 0x1f
		_0xffffff8000ec3780: movabs r13, 0x3f5dba3ff77ffefc
		_0xffffff8000ec378a: and r13, rbx
		_0xffffff8000ec378d: sar r12, 0x20
		_0xffffff8000ec3791: movabs rbx, 0x3faedd1ffbbfff7e
		_0xffffff8000ec379b: xor rbx, r12
		_0xffffff8000ec379e: add rbx, r13
		_0xffffff8000ec37a1: lea rbx, [r10 + rbx*4]
		_0xffffff8000ec37a5: movabs r12, 0x1448b8011000208
		_0xffffff8000ec37af: xor r15d, dword ptr [r12 + rbx]
		_0xffffff8000ec37b3: mov ecx, r15d
		_0xffffff8000ec37b6: shr ecx, 0x17
		_0xffffff8000ec37b9: and ecx, 0xfc
		_0xffffff8000ec37bf: mov edi, r15d
		_0xffffff8000ec37c2: shr edi, 0x18
		_0xffffff8000ec37c5: add edi, 0x7e
		_0xffffff8000ec37c8: sub edi, ecx
		_0xffffff8000ec37ca: xor edi, 0x7e
		_0xffffff8000ec37cd: mov cl, dil
		_0xffffff8000ec37d0: add cl, cl
		_0xffffff8000ec37d2: xor dil, 0x3f
		_0xffffff8000ec37d6: and cl, 0x7e
		_0xffffff8000ec37d9: add cl, dil
		_0xffffff8000ec37dc: add cl, 0xfc
		_0xffffff8000ec37df: movzx ecx, cl
		_0xffffff8000ec37e2: cmp cl, 0x3b
		_0xffffff8000ec37e5: sbb rbx, rbx
		_0xffffff8000ec37e8: and ebx, 0x100
		_0xffffff8000ec37ee: add ebx, ecx
		_0xffffff8000ec37f0: add ebx, 0x588fbf2e
		_0xffffff8000ec37f6: shl rbx, 0x20
		_0xffffff8000ec37fa: movabs r12, 0xa770409700000000
		_0xffffff8000ec3804: add r12, rbx
		_0xffffff8000ec3807: mov rbx, r12
		_0xffffff8000ec380a: sar rbx, 0x1f
		_0xffffff8000ec380e: movabs r13, 0xf9f977af7cce3f6e
		_0xffffff8000ec3818: and r13, rbx
		_0xffffff8000ec381b: sar r12, 0x20
		_0xffffff8000ec381f: movabs rbx, 0x7cfcbbd7be671fb7
		_0xffffff8000ec3829: xor rbx, r12
		_0xffffff8000ec382c: add rbx, r13
		_0xffffff8000ec382f: add rbx, qword ptr [r14 + 0x208]
		_0xffffff8000ec3836: movabs r12, 0x830344284198e049
		_0xffffff8000ec3840: mov cl, byte ptr [r12 + rbx]
		_0xffffff8000ec3844: mov dil, cl
		_0xffffff8000ec3847: add dil, dil
		_0xffffff8000ec384a: xor cl, 0x55
		_0xffffff8000ec384d: and dil, 0xaa
		_0xffffff8000ec3851: add dil, cl
		_0xffffff8000ec3854: add dil, 0xbf
		_0xffffff8000ec3858: movzx ecx, dil
		_0xffffff8000ec385c: cmp cl, 0x14
		_0xffffff8000ec385f: sbb rbx, rbx
		_0xffffff8000ec3862: and ebx, 0x100
		_0xffffff8000ec3868: add ebx, ecx
		_0xffffff8000ec386a: add ebx, 0x618b7fdf
		_0xffffff8000ec3870: shl rbx, 0x20
		_0xffffff8000ec3874: movabs r12, 0x9e74800d00000000
		_0xffffff8000ec387e: add r12, rbx
		_0xffffff8000ec3881: mov rbx, r12
		_0xffffff8000ec3884: sar rbx, 0x1f
		_0xffffff8000ec3888: movabs r13, 0x154249a7e97adf9e
		_0xffffff8000ec3892: and r13, rbx
		_0xffffff8000ec3895: sar r12, 0x20
		_0xffffff8000ec3899: movabs rbx, 0x2aa124d3f4bd6fcf
		_0xffffff8000ec38a3: xor rbx, r12
		_0xffffff8000ec38a6: add rbx, r13
		_0xffffff8000ec38a9: mov rax, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec38b0: lea rbx, [rax + rbx*4]
		_0xffffff8000ec38b4: movabs r12, 0x557b6cb02d0a40c4
		_0xffffff8000ec38be: mov eax, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec38c4: xor eax, dword ptr [r12 + rbx]
		_0xffffff8000ec38c8: mov dword ptr [rbp - 0x3b0], eax
		_0xffffff8000ec38ce: mov cl, al
		_0xffffff8000ec38d0: add cl, cl
		_0xffffff8000ec38d2: mov dil, al
		_0xffffff8000ec38d5: xor dil, 0x7f
		_0xffffff8000ec38d9: add dil, cl
		_0xffffff8000ec38dc: add dil, 0xfc
		_0xffffff8000ec38e0: movzx ecx, dil
		_0xffffff8000ec38e4: cmp cl, 0x7b
		_0xffffff8000ec38e7: sbb rbx, rbx
		_0xffffff8000ec38ea: and ebx, 0x100
		_0xffffff8000ec38f0: add ebx, ecx
		_0xffffff8000ec38f2: add ebx, 0x76bb174d
		_0xffffff8000ec38f8: shl rbx, 0x20
		_0xffffff8000ec38fc: movabs r12, 0x8944e83800000000
		_0xffffff8000ec3906: add r12, rbx
		_0xffffff8000ec3909: mov rbx, r12
		_0xffffff8000ec390c: sar rbx, 0x1f
		_0xffffff8000ec3910: movabs r13, 0xff973799fdc7fafe
		_0xffffff8000ec391a: and r13, rbx
		_0xffffff8000ec391d: sar r12, 0x20
		_0xffffff8000ec3921: movabs rbx, 0x7fcb9bccfee3fd7f
		_0xffffff8000ec392b: xor rbx, r12
		_0xffffff8000ec392e: add rbx, r13
		_0xffffff8000ec3931: add rbx, qword ptr [r14 + 0x410]
		_0xffffff8000ec3938: movabs r12, 0x80346433011c0281
		_0xffffff8000ec3942: mov cl, byte ptr [r12 + rbx]
		_0xffffff8000ec3946: mov byte ptr [rbp - 0x3f1], cl
		_0xffffff8000ec394c: mov edi, r9d
		_0xffffff8000ec394f: shr edi, 7
		_0xffffff8000ec3952: and edi, 0xf8
		_0xffffff8000ec3958: mov r11d, r9d
		_0xffffff8000ec395b: shr r11d, 8
		_0xffffff8000ec395f: add r11d, 0xfc
		_0xffffff8000ec3966: sub r11d, edi
		_0xffffff8000ec3969: xor r11d, 0xfc
		_0xffffff8000ec3970: mov dil, r11b
		_0xffffff8000ec3973: add dil, dil
		_0xffffff8000ec3976: xor r11b, 0x5f
		_0xffffff8000ec397a: and dil, 0xbe
		_0xffffff8000ec397e: add dil, r11b
		_0xffffff8000ec3981: add dil, 0xb9
		_0xffffff8000ec3985: movzx edi, dil
		_0xffffff8000ec3989: cmp dil, 0x18
		_0xffffff8000ec398d: sbb rbx, rbx
		_0xffffff8000ec3990: and ebx, 0x100
		_0xffffff8000ec3996: add ebx, edi
		_0xffffff8000ec3998: add ebx, 0x7758cf9e
		_0xffffff8000ec399e: shl rbx, 0x20
		_0xffffff8000ec39a2: movabs r12, 0x88a7304a00000000
		_0xffffff8000ec39ac: add r12, rbx
		_0xffffff8000ec39af: mov rbx, r12
		_0xffffff8000ec39b2: sar rbx, 0x1f
		_0xffffff8000ec39b6: movabs r13, 0xd4f777bd8b5c2d54
		_0xffffff8000ec39c0: and r13, rbx
		_0xffffff8000ec39c3: sar r12, 0x20
		_0xffffff8000ec39c7: movabs rbx, 0x6a7bbbdec5ae16aa
		_0xffffff8000ec39d1: xor rbx, r12
		_0xffffff8000ec39d4: add rbx, r13
		_0xffffff8000ec39d7: add rbx, qword ptr [r14 + 0x1d8]
		_0xffffff8000ec39de: movabs r12, 0x958444213a51e956
		_0xffffff8000ec39e8: mov dil, byte ptr [r12 + rbx]
		_0xffffff8000ec39ec: mov r11b, dil
		_0xffffff8000ec39ef: add r11b, r11b
		_0xffffff8000ec39f2: xor dil, 0x4b
		_0xffffff8000ec39f6: and r11b, 0x96
		_0xffffff8000ec39fa: add r11b, dil
		_0xffffff8000ec39fd: add r11b, 0xfd
		_0xffffff8000ec3a01: movzx ebx, r11b
		_0xffffff8000ec3a05: cmp bl, 0x48
		_0xffffff8000ec3a08: sbb r12, r12
		_0xffffff8000ec3a0b: and r12, 0x100
		_0xffffff8000ec3a12: add r12, rbx
		_0xffffff8000ec3a15: lea rbx, [r12 - 0x48]
		_0xffffff8000ec3a1a: mov edi, 1
		_0xffffff8000ec3a1f: sub edi, ebx
		_0xffffff8000ec3a21: mov r11d, edi
		_0xffffff8000ec3a24: and r11d, ebx
		_0xffffff8000ec3a27: xor edi, ebx
		_0xffffff8000ec3a29: lea ecx, [rdi + r11*2]
		_0xffffff8000ec3a2d: mov r13, rbx
		_0xffffff8000ec3a30: xor r13, 0x1a15396c
		_0xffffff8000ec3a37: movabs rdi, 0xffffffff2f30012a
		_0xffffff8000ec3a41: and rdi, r13
		_0xffffff8000ec3a44: and r13d, 0xd0cffed5
		_0xffffff8000ec3a4b: add r13, rdi
		_0xffffff8000ec3a4e: xor r13, 0x1a15396c
		_0xffffff8000ec3a55: shl r13, cl
		_0xffffff8000ec3a58: movabs rdi, 0x3f7bf71f7d597df2
		_0xffffff8000ec3a62: and rdi, r13
		_0xffffff8000ec3a65: movabs r13, 0x3ffffffffffffffe
		_0xffffff8000ec3a6f: xor rbx, r13
		_0xffffff8000ec3a72: lea r12, [r12 + r12 - 0x90]
		_0xffffff8000ec3a7a: movabs r13, 0x8408e082a6820e
		_0xffffff8000ec3a84: and r13, r12
		_0xffffff8000ec3a87: xor r13, 2
		_0xffffff8000ec3a8b: add r13, rbx
		_0xffffff8000ec3a8e: add r13, rdi
		_0xffffff8000ec3a91: mov edi, 0x9308dc61
		_0xffffff8000ec3a96: mov r11d, dword ptr [rsi + r13*4]
		_0xffffff8000ec3a9a: xor r11d, edi
		_0xffffff8000ec3a9d: mov ebx, r15d
		_0xffffff8000ec3aa0: shr ebx, 7
		_0xffffff8000ec3aa3: and ebx, 0x7c
		_0xffffff8000ec3aa6: mov r12d, r15d
		_0xffffff8000ec3aa9: shr r12d, 8
		_0xffffff8000ec3aad: add r12d, 0xbe
		_0xffffff8000ec3ab4: sub r12d, ebx
		_0xffffff8000ec3ab7: xor r12d, 0xbe
		_0xffffff8000ec3abe: mov bl, r12b
		_0xffffff8000ec3ac1: add bl, bl
		_0xffffff8000ec3ac3: xor r12b, 0x51
		_0xffffff8000ec3ac7: and bl, 0xa2
		_0xffffff8000ec3aca: add bl, r12b
		_0xffffff8000ec3acd: movzx ebx, bl
		_0xffffff8000ec3ad0: cmp bl, 0x51
		_0xffffff8000ec3ad3: sbb r12, r12
		_0xffffff8000ec3ad6: and r12d, 0x100
		_0xffffff8000ec3add: add r12d, ebx
		_0xffffff8000ec3ae0: add r12d, 0x26302729
		_0xffffff8000ec3ae7: shl r12, 0x20
		_0xffffff8000ec3aeb: movabs rbx, 0xd9cfd88600000000
		_0xffffff8000ec3af5: add rbx, r12
		_0xffffff8000ec3af8: mov r12, rbx
		_0xffffff8000ec3afb: sar r12, 0x1f
		_0xffffff8000ec3aff: movabs r13, 0xdd7feebb7f39ff7a
		_0xffffff8000ec3b09: and r13, r12
		_0xffffff8000ec3b0c: sar rbx, 0x20
		_0xffffff8000ec3b10: movabs r12, 0x6ebff75dbf9cffbd
		_0xffffff8000ec3b1a: xor r12, rbx
		_0xffffff8000ec3b1d: add r12, r13
		_0xffffff8000ec3b20: add r12, qword ptr [r14 + 0x1f8]
		_0xffffff8000ec3b27: movabs rbx, 0x914008a240630043
		_0xffffff8000ec3b31: mov bl, byte ptr [rbx + r12]
		_0xffffff8000ec3b35: mov byte ptr [rbp - 0x3e1], bl
		_0xffffff8000ec3b3b: mov ebx, r8d
		_0xffffff8000ec3b3e: shr ebx, 0xf
		_0xffffff8000ec3b41: and ebx, 0x22
		_0xffffff8000ec3b44: mov r12d, r8d
		_0xffffff8000ec3b47: shr r12d, 0x10
		_0xffffff8000ec3b4b: add r12d, 0x11
		_0xffffff8000ec3b4f: sub r12d, ebx
		_0xffffff8000ec3b52: xor r12d, 0x11
		_0xffffff8000ec3b56: mov bl, r12b
		_0xffffff8000ec3b59: add bl, bl
		_0xffffff8000ec3b5b: xor r12b, 0x5c
		_0xffffff8000ec3b5f: and bl, 0xb8
		_0xffffff8000ec3b62: add bl, r12b
		_0xffffff8000ec3b65: add bl, 0xf8
		_0xffffff8000ec3b68: movzx ebx, bl
		_0xffffff8000ec3b6b: cmp bl, 0x54
		_0xffffff8000ec3b6e: sbb r12, r12
		_0xffffff8000ec3b71: and r12d, 0x100
		_0xffffff8000ec3b78: add r12d, ebx
		_0xffffff8000ec3b7b: add r12d, 0x45a4b3e9
		_0xffffff8000ec3b82: shl r12, 0x20
		_0xffffff8000ec3b86: movabs rbx, 0xba5b4bc300000000
		_0xffffff8000ec3b90: add rbx, r12
		_0xffffff8000ec3b93: mov r12, rbx
		_0xffffff8000ec3b96: sar r12, 0x1f
		_0xffffff8000ec3b9a: movabs r13, 0x6bffbfbcc7fee9fc
		_0xffffff8000ec3ba4: and r13, r12
		_0xffffff8000ec3ba7: sar rbx, 0x20
		_0xffffff8000ec3bab: movabs r12, 0x35ffdfde63ff74fe
		_0xffffff8000ec3bb5: xor r12, rbx
		_0xffffff8000ec3bb8: add r12, r13
		_0xffffff8000ec3bbb: add r12, qword ptr [r14 + 0x1a0]
		_0xffffff8000ec3bc2: movabs rbx, 0xca0020219c008b02
		_0xffffff8000ec3bcc: mov bl, byte ptr [rbx + r12]
		_0xffffff8000ec3bd0: mov byte ptr [rbp - 0x3c4], bl
		_0xffffff8000ec3bd6: mov ebx, edx
		_0xffffff8000ec3bd8: shr ebx, 0x17
		_0xffffff8000ec3bdb: and ebx, 0xc2
		_0xffffff8000ec3be1: mov r12d, edx
		_0xffffff8000ec3be4: shr r12d, 0x18
		_0xffffff8000ec3be8: add r12d, 0xe1
		_0xffffff8000ec3bef: sub r12d, ebx
		_0xffffff8000ec3bf2: xor r12d, 0xe1
		_0xffffff8000ec3bf9: mov bl, r12b
		_0xffffff8000ec3bfc: add bl, bl
		_0xffffff8000ec3bfe: xor r12b, 0x47
		_0xffffff8000ec3c02: and bl, 0x8e
		_0xffffff8000ec3c05: add bl, r12b
		_0xffffff8000ec3c08: add bl, 0xfc
		_0xffffff8000ec3c0b: movzx ebx, bl
		_0xffffff8000ec3c0e: cmp bl, 0x43
		_0xffffff8000ec3c11: sbb r12, r12
		_0xffffff8000ec3c14: and r12d, 0x100
		_0xffffff8000ec3c1b: add r12d, ebx
		_0xffffff8000ec3c1e: add r12d, 0x3f4ed61a
		_0xffffff8000ec3c25: shl r12, 0x20
		_0xffffff8000ec3c29: movabs rbx, 0xc0b129a300000000
		_0xffffff8000ec3c33: add rbx, r12
		_0xffffff8000ec3c36: mov r12, rbx
		_0xffffff8000ec3c39: sar r12, 0x1f
		_0xffffff8000ec3c3d: movabs r13, 0x76ffc7fffddd7e6c
		_0xffffff8000ec3c47: and r13, r12
		_0xffffff8000ec3c4a: sar rbx, 0x20
		_0xffffff8000ec3c4e: movabs r12, 0x3b7fe3fffeeebf36
		_0xffffff8000ec3c58: xor r12, rbx
		_0xffffff8000ec3c5b: add r12, r13
		_0xffffff8000ec3c5e: add r12, qword ptr [r14 + 0x1c8]
		_0xffffff8000ec3c65: movabs rbx, 0xc4801c00011140ca
		_0xffffff8000ec3c6f: mov bl, byte ptr [rbx + r12]
		_0xffffff8000ec3c73: mov byte ptr [rbp - 0x3e2], bl
		_0xffffff8000ec3c79: mov ebx, r8d
		_0xffffff8000ec3c7c: shr ebx, 7
		_0xffffff8000ec3c7f: and ebx, 0xbe
		_0xffffff8000ec3c85: mov r12d, r8d
		_0xffffff8000ec3c88: shr r12d, 8
		_0xffffff8000ec3c8c: add r12d, 0xdf
		_0xffffff8000ec3c93: sub r12d, ebx
		_0xffffff8000ec3c96: xor r12d, 0xdf
		_0xffffff8000ec3c9d: mov bl, r12b
		_0xffffff8000ec3ca0: add bl, bl
		_0xffffff8000ec3ca2: xor r12b, 0x77
		_0xffffff8000ec3ca6: and bl, 0xee
		_0xffffff8000ec3ca9: add bl, r12b
		_0xffffff8000ec3cac: add bl, 0x8c
		_0xffffff8000ec3caf: movzx ebx, bl
		_0xffffff8000ec3cb2: cmp bl, 3
		_0xffffff8000ec3cb5: sbb r12, r12
		_0xffffff8000ec3cb8: and r12d, 0x100
		_0xffffff8000ec3cbf: add r12d, ebx
		_0xffffff8000ec3cc2: add r12d, 0x10c90865
		_0xffffff8000ec3cc9: shl r12, 0x20
		_0xffffff8000ec3ccd: movabs rbx, 0xef36f79800000000
		_0xffffff8000ec3cd7: add rbx, r12
		_0xffffff8000ec3cda: mov r12, rbx
		_0xffffff8000ec3cdd: sar r12, 0x1f
		_0xffffff8000ec3ce1: movabs r13, 0xdfdfb7ed2a5fed3e
		_0xffffff8000ec3ceb: and r13, r12
		_0xffffff8000ec3cee: sar rbx, 0x20
		_0xffffff8000ec3cf2: movabs r12, 0x6fefdbf6952ff69f
		_0xffffff8000ec3cfc: xor r12, rbx
		_0xffffff8000ec3cff: add r12, r13
		_0xffffff8000ec3d02: add r12, qword ptr [r14 + 0x198]
		_0xffffff8000ec3d09: movabs rbx, 0x901024096ad00961
		_0xffffff8000ec3d13: mov bl, byte ptr [rbx + r12]
		_0xffffff8000ec3d17: mov byte ptr [rbp - 0x3e3], bl
		_0xffffff8000ec3d1d: mov ebx, edx
		_0xffffff8000ec3d1f: shr ebx, 0xf
		_0xffffff8000ec3d22: and ebx, 0x1a
		_0xffffff8000ec3d25: mov r12d, edx
		_0xffffff8000ec3d28: shr r12d, 0x10
		_0xffffff8000ec3d2c: add r12d, 0x8d
		_0xffffff8000ec3d33: sub r12d, ebx
		_0xffffff8000ec3d36: xor r12d, 0x8d
		_0xffffff8000ec3d3d: mov bl, r12b
		_0xffffff8000ec3d40: add bl, bl
		_0xffffff8000ec3d42: xor r12b, 0x71
		_0xffffff8000ec3d46: and bl, 0xe2
		_0xffffff8000ec3d49: add bl, r12b
		_0xffffff8000ec3d4c: dec bl
		_0xffffff8000ec3d4e: movzx ebx, bl
		_0xffffff8000ec3d51: cmp bl, 0x70
		_0xffffff8000ec3d54: sbb r12, r12
		_0xffffff8000ec3d57: and r12d, 0x100
		_0xffffff8000ec3d5e: add r12d, ebx
		_0xffffff8000ec3d61: add r12d, 0x1513ed5c
		_0xffffff8000ec3d68: shl r12, 0x20
		_0xffffff8000ec3d6c: movabs rbx, 0xeaec123400000000
		_0xffffff8000ec3d76: add rbx, r12
		_0xffffff8000ec3d79: mov r12, rbx
		_0xffffff8000ec3d7c: sar r12, 0x1f
		_0xffffff8000ec3d80: movabs r13, 0xdfff63ef9fb7d26e
		_0xffffff8000ec3d8a: and r13, r12
		_0xffffff8000ec3d8d: sar rbx, 0x20
		_0xffffff8000ec3d91: movabs r12, 0x6fffb1f7cfdbe937
		_0xffffff8000ec3d9b: xor r12, rbx
		_0xffffff8000ec3d9e: add r12, r13
		_0xffffff8000ec3da1: add r12, qword ptr [r14 + 0x1c0]
		_0xffffff8000ec3da8: movabs rbx, 0x90004e08302416c9
		_0xffffff8000ec3db2: mov bl, byte ptr [rbx + r12]
		_0xffffff8000ec3db6: mov byte ptr [rbp - 0x3e5], bl
		_0xffffff8000ec3dbc: mov ebx, r9d
		_0xffffff8000ec3dbf: shr ebx, 0x17
		_0xffffff8000ec3dc2: and ebx, 0x44
		_0xffffff8000ec3dc5: mov r12d, r9d
		_0xffffff8000ec3dc8: shr r12d, 0x18
		_0xffffff8000ec3dcc: add r12d, 0xa2
		_0xffffff8000ec3dd3: sub r12d, ebx
		_0xffffff8000ec3dd6: xor r12d, 0xa2
		_0xffffff8000ec3ddd: mov bl, r12b
		_0xffffff8000ec3de0: add bl, bl
		_0xffffff8000ec3de2: xor r12b, 0x1b
		_0xffffff8000ec3de6: and bl, 0x36
		_0xffffff8000ec3de9: add bl, r12b
		_0xffffff8000ec3dec: add bl, 0xe8
		_0xffffff8000ec3def: movzx ebx, bl
		_0xffffff8000ec3df2: cmp bl, 3
		_0xffffff8000ec3df5: sbb r12, r12
		_0xffffff8000ec3df8: and r12d, 0x100
		_0xffffff8000ec3dff: add r12d, ebx
		_0xffffff8000ec3e02: add r12d, 0x69aff90e
		_0xffffff8000ec3e09: shl r12, 0x20
		_0xffffff8000ec3e0d: movabs rbx, 0x965006ef00000000
		_0xffffff8000ec3e17: add rbx, r12
		_0xffffff8000ec3e1a: mov r12, rbx
		_0xffffff8000ec3e1d: sar r12, 0x1f
		_0xffffff8000ec3e21: movabs r13, 0xf4bac7df26ffacfe
		_0xffffff8000ec3e2b: and r13, r12
		_0xffffff8000ec3e2e: sar rbx, 0x20
		_0xffffff8000ec3e32: movabs r12, 0x7a5d63ef937fd67f
		_0xffffff8000ec3e3c: xor r12, rbx
		_0xffffff8000ec3e3f: add r12, r13
		_0xffffff8000ec3e42: add r12, qword ptr [r14 + 0x1e8]
		_0xffffff8000ec3e49: movabs rbx, 0x85a29c106c802981
		_0xffffff8000ec3e53: mov bl, byte ptr [rbx + r12]
		_0xffffff8000ec3e57: mov r12d, r8d
		_0xffffff8000ec3e5a: shr r12d, 0x17
		_0xffffff8000ec3e5e: and r12d, 0x78
		_0xffffff8000ec3e62: shr r8d, 0x18
		_0xffffff8000ec3e66: add r8d, 0x3c
		_0xffffff8000ec3e6a: sub r8d, r12d
		_0xffffff8000ec3e6d: xor r8d, 0x3c
		_0xffffff8000ec3e71: mov r12b, r8b
		_0xffffff8000ec3e74: add r12b, r12b
		_0xffffff8000ec3e77: xor r8b, 0x53
		_0xffffff8000ec3e7b: and r12b, 0xa6
		_0xffffff8000ec3e7f: add r12b, r8b
		_0xffffff8000ec3e82: dec r12b
		_0xffffff8000ec3e85: movzx r8d, r12b
		_0xffffff8000ec3e89: cmp r8b, 0x52
		_0xffffff8000ec3e8d: sbb r12, r12
		_0xffffff8000ec3e90: and r12d, 0x100
		_0xffffff8000ec3e97: add r12d, r8d
		_0xffffff8000ec3e9a: add r12d, 0x18752ca8
		_0xffffff8000ec3ea1: shl r12, 0x20
		_0xffffff8000ec3ea5: movabs r13, 0xe78ad30600000000
		_0xffffff8000ec3eaf: add r13, r12
		_0xffffff8000ec3eb2: mov r12, r13
		_0xffffff8000ec3eb5: sar r12, 0x1f
		_0xffffff8000ec3eb9: movabs r8, 0x54fdfefcbdeb55fe
		_0xffffff8000ec3ec3: and r8, r12
		_0xffffff8000ec3ec6: sar r13, 0x20
		_0xffffff8000ec3eca: movabs r12, 0x2a7eff7e5ef5aaff
		_0xffffff8000ec3ed4: xor r12, r13
		_0xffffff8000ec3ed7: add r12, r8
		_0xffffff8000ec3eda: add r12, qword ptr [r14 + 0x1a8]
		_0xffffff8000ec3ee1: movabs r13, 0xd5810081a10a5501
		_0xffffff8000ec3eeb: mov r8b, byte ptr [r13 + r12]
		_0xffffff8000ec3ef0: mov r12d, r15d
		_0xffffff8000ec3ef3: shr r12d, 0xf
		_0xffffff8000ec3ef7: and r12d, 2
		_0xffffff8000ec3efb: mov r13d, r15d
		_0xffffff8000ec3efe: shr r13d, 0x10
		_0xffffff8000ec3f02: add r13d, 0x81
		_0xffffff8000ec3f09: sub r13d, r12d
		_0xffffff8000ec3f0c: xor r13d, 0x81
		_0xffffff8000ec3f13: mov r12b, r13b
		_0xffffff8000ec3f16: add r12b, r12b
		_0xffffff8000ec3f19: xor r13b, 0x77
		_0xffffff8000ec3f1d: and r12b, 0xee
		_0xffffff8000ec3f21: add r12b, r13b
		_0xffffff8000ec3f24: add r12b, 0xf0
		_0xffffff8000ec3f28: movzx r12d, r12b
		_0xffffff8000ec3f2c: cmp r12b, 0x67
		_0xffffff8000ec3f30: sbb r13, r13
		_0xffffff8000ec3f33: and r13d, 0x100
		_0xffffff8000ec3f3a: add r13d, r12d
		_0xffffff8000ec3f3d: add r13d, 0x2d0114ca
		_0xffffff8000ec3f44: shl r13, 0x20
		_0xffffff8000ec3f48: movabs r12, 0xd2feeacf00000000
		_0xffffff8000ec3f52: add r12, r13
		_0xffffff8000ec3f55: mov r13, r12
		_0xffffff8000ec3f58: sar r13, 0x1f
		_0xffffff8000ec3f5c: movabs rax, 0xfeefbffefffddf9c
		_0xffffff8000ec3f66: and rax, r13
		_0xffffff8000ec3f69: sar r12, 0x20
		_0xffffff8000ec3f6d: movabs r13, 0x7f77dfff7ffeefce
		_0xffffff8000ec3f77: xor r13, r12
		_0xffffff8000ec3f7a: add r13, rax
		_0xffffff8000ec3f7d: add r13, qword ptr [r14 + 0x200]
		_0xffffff8000ec3f84: movabs r12, 0x8088200080011032
		_0xffffff8000ec3f8e: mov al, byte ptr [r12 + r13]
		_0xffffff8000ec3f92: mov r12b, r9b
		_0xffffff8000ec3f95: add r12b, r12b
		_0xffffff8000ec3f98: xor r9b, 0x6f
		_0xffffff8000ec3f9c: and r12b, 0xde
		_0xffffff8000ec3fa0: add r12b, r9b
		_0xffffff8000ec3fa3: add r12b, 0xf9
		_0xffffff8000ec3fa7: movzx r9d, r12b
		_0xffffff8000ec3fab: cmp r9b, 0x68
		_0xffffff8000ec3faf: sbb r12, r12
		_0xffffff8000ec3fb2: and r12d, 0x100
		_0xffffff8000ec3fb9: add r12d, r9d
		_0xffffff8000ec3fbc: add r12d, 0x74c22b04
		_0xffffff8000ec3fc3: shl r12, 0x20
		_0xffffff8000ec3fc7: movabs r13, 0x8b3dd49400000000
		_0xffffff8000ec3fd1: add r13, r12
		_0xffffff8000ec3fd4: mov r12, r13
		_0xffffff8000ec3fd7: sar r12, 0x1f
		_0xffffff8000ec3fdb: movabs r9, 0xffd6dfbfdfffafbe
		_0xffffff8000ec3fe5: and r9, r12
		_0xffffff8000ec3fe8: sar r13, 0x20
		_0xffffff8000ec3fec: movabs r12, 0x7feb6fdfefffd7df
		_0xffffff8000ec3ff6: xor r12, r13
		_0xffffff8000ec3ff9: add r12, r9
		_0xffffff8000ec3ffc: add r12, qword ptr [r14 + 0x1d0]
		_0xffffff8000ec4003: movabs r13, 0x8014902010002821
		_0xffffff8000ec400d: mov r9b, byte ptr [r13 + r12]
		_0xffffff8000ec4012: mov byte ptr [rbp - 0x3e4], r9b
		_0xffffff8000ec4019: mov r9b, r15b
		_0xffffff8000ec401c: add r9b, r9b
		_0xffffff8000ec401f: xor r15b, 0x7c
		_0xffffff8000ec4023: and r9b, 0xf8
		_0xffffff8000ec4027: add r9b, r15b
		_0xffffff8000ec402a: add r9b, 0xdc
		_0xffffff8000ec402e: movzx r9d, r9b
		_0xffffff8000ec4032: cmp r9b, 0x58
		_0xffffff8000ec4036: sbb r15, r15
		_0xffffff8000ec4039: and r15d, 0x100
		_0xffffff8000ec4040: add r15d, r9d
		_0xffffff8000ec4043: add r15d, 0x33c8b6e7
		_0xffffff8000ec404a: shl r15, 0x20
		_0xffffff8000ec404e: movabs r12, 0xcc3748c100000000
		_0xffffff8000ec4058: add r12, r15
		_0xffffff8000ec405b: mov r15, r12
		_0xffffff8000ec405e: sar r15, 0x1f
		_0xffffff8000ec4062: movabs r13, 0xfff262ffebffcf6a
		_0xffffff8000ec406c: and r13, r15
		_0xffffff8000ec406f: sar r12, 0x20
		_0xffffff8000ec4073: movabs r15, 0x7ff9317ff5ffe7b5
		_0xffffff8000ec407d: xor r15, r12
		_0xffffff8000ec4080: add r15, r13
		_0xffffff8000ec4083: add r15, qword ptr [r14 + 0x1f0]
		_0xffffff8000ec408a: movabs r12, 0x8006ce800a00184b
		_0xffffff8000ec4094: mov r9b, byte ptr [r12 + r15]
		_0xffffff8000ec4098: mov r15b, dl
		_0xffffff8000ec409b: add r15b, r15b
		_0xffffff8000ec409e: xor dl, 0x1b
		_0xffffff8000ec40a1: and r15b, 0x36
		_0xffffff8000ec40a5: add r15b, dl
		_0xffffff8000ec40a8: add r15b, 0xfe
		_0xffffff8000ec40ac: movzx edx, r15b
		_0xffffff8000ec40b0: cmp dl, 0x19
		_0xffffff8000ec40b3: sbb r15, r15
		_0xffffff8000ec40b6: and r15d, 0x100
		_0xffffff8000ec40bd: add r15d, edx
		_0xffffff8000ec40c0: add r15d, 0x1fb064ff
		_0xffffff8000ec40c7: shl r15, 0x20
		_0xffffff8000ec40cb: movabs r12, 0xe04f9ae800000000
		_0xffffff8000ec40d5: add r12, r15
		_0xffffff8000ec40d8: mov r15, r12
		_0xffffff8000ec40db: sar r15, 0x1f
		_0xffffff8000ec40df: movabs r13, 0x1fdfedf935d7e33c
		_0xffffff8000ec40e9: and r13, r15
		_0xffffff8000ec40ec: sar r12, 0x20
		_0xffffff8000ec40f0: movabs r15, 0xfeff6fc9aebf19e
		_0xffffff8000ec40fa: xor r15, r12
		_0xffffff8000ec40fd: add r15, r13
		_0xffffff8000ec4100: add r15, qword ptr [r14 + 0x1b0]
		_0xffffff8000ec4107: movabs r12, 0xf010090365140e62
		_0xffffff8000ec4111: mov r15b, byte ptr [r12 + r15]
		_0xffffff8000ec4115: mov r12, qword ptr [rbp - 0x3e0]
		_0xffffff8000ec411c: mov cl, byte ptr [rbp - 0x3f1]
		_0xffffff8000ec4122: mov byte ptr [r12], cl
		_0xffffff8000ec4126: mov cl, al
		_0xffffff8000ec4128: add cl, cl
		_0xffffff8000ec412a: xor al, 0x6f
		_0xffffff8000ec412c: and cl, 0xde
		_0xffffff8000ec412f: add cl, al
		_0xffffff8000ec4131: add cl, 0xbf
		_0xffffff8000ec4134: movzx r13d, cl
		_0xffffff8000ec4138: mov eax, 0x76813b8c
		_0xffffff8000ec413d: sub rax, r13
		_0xffffff8000ec4140: mov rcx, rax
		_0xffffff8000ec4143: and rcx, r13
		_0xffffff8000ec4146: xor rax, r13
		_0xffffff8000ec4149: lea rax, [rax + rcx*2]
		_0xffffff8000ec414d: mov rcx, rax
		_0xffffff8000ec4150: and rcx, r13
		_0xffffff8000ec4153: xor rax, r13
		_0xffffff8000ec4156: lea rax, [rax + rcx*2]
		_0xffffff8000ec415a: cmp r13b, 0x2e
		_0xffffff8000ec415e: sbb r13, r13
		_0xffffff8000ec4161: and r13, 0x100
		_0xffffff8000ec4168: mov rcx, rax
		_0xffffff8000ec416b: and rcx, r13
		_0xffffff8000ec416e: xor r13, rax
		_0xffffff8000ec4171: lea rax, [r13 + rcx*2]
		_0xffffff8000ec4176: mov r13d, eax
		_0xffffff8000ec4179: movabs rcx, 0xfc0fc0fc0fc0fc1
		_0xffffff8000ec4183: mul rcx
		_0xffffff8000ec4186: shr rdx, 2
		_0xffffff8000ec418a: imul eax, edx, 0x41
		_0xffffff8000ec418d: sub r13d, eax
		_0xffffff8000ec4190: shl r13, 0x20
		_0xffffff8000ec4194: movabs rax, 0x4100000000
		_0xffffff8000ec419e: imul rax, rdx
		_0xffffff8000ec41a2: add rax, r13
		_0xffffff8000ec41a5: movabs r13, 0x97ec44600000000
		_0xffffff8000ec41af: and r13, rax
		_0xffffff8000ec41b2: movabs rcx, 0x897ec44600000000
		_0xffffff8000ec41bc: xor rcx, rax
		_0xffffff8000ec41bf: lea r13, [rcx + r13*2]
		_0xffffff8000ec41c3: mov rax, r13
		_0xffffff8000ec41c6: sar rax, 0x1f
		_0xffffff8000ec41ca: xor rax, 0x1adc6ed9
		_0xffffff8000ec41d0: mov rcx, rax
		_0xffffff8000ec41d3: sar rcx, 0x17
		_0xffffff8000ec41d7: movabs rdx, 0x39f7ffb5ffc
		_0xffffff8000ec41e1: mov r12, rcx
		_0xffffff8000ec41e4: xor r12, rdx
		_0xffffff8000ec41e7: add rcx, rdx
		_0xffffff8000ec41ea: sub rcx, r12
		_0xffffff8000ec41ed: shl rcx, 0x16
		_0xffffff8000ec41f1: and rax, 0x6cfdf6
		_0xffffff8000ec41f7: add rax, rcx
		_0xffffff8000ec41fa: movabs r12, 0x982001281a85edd5
		_0xffffff8000ec4204: xor r12, rax
		_0xffffff8000ec4207: add rax, rax
		_0xffffff8000ec420a: movabs rcx, 0x3040025001910208
		_0xffffff8000ec4214: and rcx, rax
		_0xffffff8000ec4217: xor rcx, 0x900000
		_0xffffff8000ec421e: add rcx, r12
		_0xffffff8000ec4221: sar r13, 0x20
		_0xffffff8000ec4225: movabs r12, 0x67dffed7ff367efb
		_0xffffff8000ec422f: xor r12, r13
		_0xffffff8000ec4232: mov r13, rcx
		_0xffffff8000ec4235: and r13, r12
		_0xffffff8000ec4238: xor r12, rcx
		_0xffffff8000ec423b: lea r12, [r12 + r13*2]
		_0xffffff8000ec423f: mov eax, 0xfb62aa87
		_0xffffff8000ec4244: xor eax, dword ptr [r10 + r12*4]
		_0xffffff8000ec4248: mov cl, r15b
		_0xffffff8000ec424b: add cl, cl
		_0xffffff8000ec424d: xor r15b, 0x17
		_0xffffff8000ec4251: and cl, 0x2e
		_0xffffff8000ec4254: add cl, r15b
		_0xffffff8000ec4257: add cl, 0xf0
		_0xffffff8000ec425a: movzx ecx, cl
		_0xffffff8000ec425d: mov edx, ecx
		_0xffffff8000ec425f: xor edx, 0x11bad059
		_0xffffff8000ec4265: mov r15b, cl
		_0xffffff8000ec4268: add r15b, cl
		_0xffffff8000ec426b: movzx r15d, r15b
		_0xffffff8000ec426f: and r15d, 0xb2
		_0xffffff8000ec4276: add r15d, edx
		_0xffffff8000ec4279: cmp cl, 7
		_0xffffff8000ec427c: sbb r12, r12
		_0xffffff8000ec427f: and r12d, 0x100
		_0xffffff8000ec4286: mov ecx, r15d
		_0xffffff8000ec4289: and ecx, r12d
		_0xffffff8000ec428c: mov edx, r15d
		_0xffffff8000ec428f: and edx, 0xa42a48a4
		_0xffffff8000ec4295: add ecx, ecx
		_0xffffff8000ec4297: add ecx, edx
		_0xffffff8000ec4299: mov edx, r15d
		_0xffffff8000ec429c: and edx, 0x12851509
		_0xffffff8000ec42a2: add edx, 0x50a2a12
		_0xffffff8000ec42a8: sub edx, r12d
		_0xffffff8000ec42ab: and edx, 0x12851509
		_0xffffff8000ec42b1: add edx, ecx
		_0xffffff8000ec42b3: and r15d, 0x4950a252
		_0xffffff8000ec42ba: add r15d, edx
		_0xffffff8000ec42bd: shl r15, 0x20
		_0xffffff8000ec42c1: movabs r12, 0x28b841400000000
		_0xffffff8000ec42cb: and r12, r15
		_0xffffff8000ec42ce: mov r13d, 0xfe40b45c
		_0xffffff8000ec42d4: add r12, r13
		_0xffffff8000ec42d7: movabs rcx, 0x84008840a004
		_0xffffff8000ec42e1: and rcx, r12
		_0xffffff8000ec42e4: movabs rdx, 0xfd747beb00000000
		_0xffffff8000ec42ee: and rdx, r15
		_0xffffff8000ec42f1: add rdx, r13
		_0xffffff8000ec42f4: movabs r15, 0x252401488840a004
		_0xffffff8000ec42fe: and r15, rdx
		_0xffffff8000ec4301: add r15, rcx
		_0xffffff8000ec4304: movabs r13, 0x252485488944a924
		_0xffffff8000ec430e: and r13, r15
		_0xffffff8000ec4311: movabs r15, 0x2001052000050
		_0xffffff8000ec431b: and r15, r12
		_0xffffff8000ec431e: movabs rcx, 0x4850288252000050
		_0xffffff8000ec4328: and rcx, rdx
		_0xffffff8000ec432b: movabs rsi, 0x10a45124a45284a4
		_0xffffff8000ec4335: add rsi, rcx
		_0xffffff8000ec4338: sub rsi, r15
		_0xffffff8000ec433b: movabs r15, 0x4852289252294250
		_0xffffff8000ec4345: and r15, rsi
		_0xffffff8000ec4348: add r15, r13
		_0xffffff8000ec434b: movabs r13, 0x289000424001408
		_0xffffff8000ec4355: and r13, r12
		_0xffffff8000ec4358: movabs r12, 0x9000522124001408
		_0xffffff8000ec4362: and r12, rdx
		_0xffffff8000ec4365: movabs rcx, 0x2512a44a49242912
		_0xffffff8000ec436f: add rcx, r12
		_0xffffff8000ec4372: sub rcx, r13
		_0xffffff8000ec4375: movabs r12, 0x9289522524921488
		_0xffffff8000ec437f: and r12, rcx
		_0xffffff8000ec4382: add r12, r15
		_0xffffff8000ec4385: movabs r15, 0x6e452fa000000000
		_0xffffff8000ec438f: and r15, r12
		_0xffffff8000ec4392: movabs r13, 0xee452fa000000000
		_0xffffff8000ec439c: xor r13, r12
		_0xffffff8000ec439f: lea r15, [r13 + r15*2]
		_0xffffff8000ec43a4: mov r12, r15
		_0xffffff8000ec43a7: sar r12, 0x20
		_0xffffff8000ec43ab: xor r12, 0x5ed239fe
		_0xffffff8000ec43b2: movabs r13, 0x737b7fddc529e217
		_0xffffff8000ec43bc: add r13, r12
		_0xffffff8000ec43bf: add r12, r12
		_0xffffff8000ec43c2: movabs rcx, 0x26f6ffbb8a53c42e
		_0xffffff8000ec43cc: and rcx, r12
		_0xffffff8000ec43cf: sub r13, rcx
		_0xffffff8000ec43d2: sar r15, 0x1f
		_0xffffff8000ec43d6: movabs r12, 0xe6f6ffbb37f7b7d2
		_0xffffff8000ec43e0: and r12, r15
		_0xffffff8000ec43e3: add r12, 0x4e539d41
		_0xffffff8000ec43ea: movabs r15, 0x288925250a291254
		_0xffffff8000ec43f4: and r15, r12
		_0xffffff8000ec43f7: lea rcx, [r12 + r12]
		_0xffffff8000ec43fb: movabs rdx, 0x11000040004004a8
		_0xffffff8000ec4405: and rdx, rcx
		_0xffffff8000ec4408: add rdx, r15
		_0xffffff8000ec440b: movabs r15, 0x880002000200254
		_0xffffff8000ec4415: xor r15, rdx
		_0xffffff8000ec4418: add r15, r13
		_0xffffff8000ec441b: movabs r13, 0x8000409010900
		_0xffffff8000ec4425: and r13, rcx
		_0xffffff8000ec4428: movabs rdx, 0x2544892a484a489
		_0xffffff8000ec4432: mov rsi, r12
		_0xffffff8000ec4435: and rsi, rdx
		_0xffffff8000ec4438: movabs r10, 0x84ac91274d89cd92
		_0xffffff8000ec4442: sub r10, rsi
		_0xffffff8000ec4445: and r10, rdx
		_0xffffff8000ec4448: add r10, r13
		_0xffffff8000ec444b: add r10, r15
		_0xffffff8000ec444e: movabs r15, 0x1522924851524922
		_0xffffff8000ec4458: and r15, r12
		_0xffffff8000ec445b: movabs r12, 0x801000022200004
		_0xffffff8000ec4465: and r12, rcx
		_0xffffff8000ec4468: add r12, r15
		_0xffffff8000ec446b: movabs r15, 0x400800011100002
		_0xffffff8000ec4475: xor r15, r12
		_0xffffff8000ec4478: add r15, r10
		_0xffffff8000ec447b: mov r12, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec4482: xor edi, dword ptr [r12 + r15*4]
		_0xffffff8000ec4486: mov ecx, edi
		_0xffffff8000ec4488: xor ecx, r11d
		_0xffffff8000ec448b: and ecx, 0x9144948a
		_0xffffff8000ec4491: mov edx, edi
		_0xffffff8000ec4493: and edx, 0x4a294254
		_0xffffff8000ec4499: mov esi, r11d
		_0xffffff8000ec449c: and esi, 0x4a294254
		_0xffffff8000ec44a2: add esi, 0x145284a8
		_0xffffff8000ec44a8: sub esi, edx
		_0xffffff8000ec44aa: and esi, 0x4a294254
		_0xffffff8000ec44b0: add esi, ecx
		_0xffffff8000ec44b2: and edi, 0x24922921
		_0xffffff8000ec44b8: and r11d, 0x24922921
		_0xffffff8000ec44bf: add r11d, edi
		_0xffffff8000ec44c2: and r11d, 0x24922921
		_0xffffff8000ec44c9: add r11d, esi
		_0xffffff8000ec44cc: xor r11d, 0xfb62aa87
		_0xffffff8000ec44d3: lea ecx, [rax + r11]
		_0xffffff8000ec44d7: and r11d, eax
		_0xffffff8000ec44da: add r11d, r11d
		_0xffffff8000ec44dd: sub ecx, r11d
		_0xffffff8000ec44e0: xor ecx, 0x45f9c7a2
		_0xffffff8000ec44e6: mov eax, ecx
		_0xffffff8000ec44e8: and eax, 0x54921289
		_0xffffff8000ec44ed: add eax, 0x29242512
		_0xffffff8000ec44f2: mov dl, r8b
		_0xffffff8000ec44f5: add dl, dl
		_0xffffff8000ec44f7: xor r8b, 0x70
		_0xffffff8000ec44fb: and dl, 0xe0
		_0xffffff8000ec44fe: add dl, r8b
		_0xffffff8000ec4501: add dl, 0xc0
		_0xffffff8000ec4504: movzx r15d, dl
		_0xffffff8000ec4508: mov r13, r15
		_0xffffff8000ec450b: and r13, 0xaf
		_0xffffff8000ec4512: mov rdx, r15
		_0xffffff8000ec4515: xor rdx, 0x44a5d0af
		_0xffffff8000ec451c: lea r13, [rdx + r13*2]
		_0xffffff8000ec4520: movabs rdx, 0x29212a1514924454
		_0xffffff8000ec452a: and rdx, r13
		_0xffffff8000ec452d: movabs rsi, 0x44949142a145290a
		_0xffffff8000ec4537: and rsi, r13
		_0xffffff8000ec453a: cmp r15b, 0x30
		_0xffffff8000ec453e: sbb r15, r15
		_0xffffff8000ec4541: and r15, 0x100
		_0xffffff8000ec4548: xor rsi, r15
		_0xffffff8000ec454b: add rsi, rdx
		_0xffffff8000ec454e: and r15, r13
		_0xffffff8000ec4551: add r15, r15
		_0xffffff8000ec4554: add r15, rsi
		_0xffffff8000ec4557: movabs rdx, 0x924a44a84a2892a1
		_0xffffff8000ec4561: and r13, rdx
		_0xffffff8000ec4564: movabs rsi, 0x2494895094512542
		_0xffffff8000ec456e: sub rsi, r13
		_0xffffff8000ec4571: and rsi, rdx
		_0xffffff8000ec4574: add rsi, r15
		_0xffffff8000ec4577: mov r15, rsi
		_0xffffff8000ec457a: shl r15, 0x20
		_0xffffff8000ec457e: movabs r13, 0x4894854500000000
		_0xffffff8000ec4588: and r13, r15
		_0xffffff8000ec458b: movabs rdx, 0xa2492a2800000000
		_0xffffff8000ec4595: and rdx, r15
		_0xffffff8000ec4598: add rdx, r13
		_0xffffff8000ec459b: shl rsi, 0x21
		_0xffffff8000ec459f: movabs r13, 0x2204000000000000
		_0xffffff8000ec45a9: and r13, rsi
		_0xffffff8000ec45ac: movabs rsi, 0x1522509200000000
		_0xffffff8000ec45b6: and r15, rsi
		_0xffffff8000ec45b9: movabs rdi, 0xa44a12515229224
		_0xffffff8000ec45c3: add rdi, r15
		_0xffffff8000ec45c6: movabs r15, 0xefe000000000000
		_0xffffff8000ec45d0: add r15, rdi
		_0xffffff8000ec45d3: and r15, rsi
		_0xffffff8000ec45d6: add r15, r13
		_0xffffff8000ec45d9: add r15, rdx
		_0xffffff8000ec45dc: movabs r13, 0xaa582f2100000000
		_0xffffff8000ec45e6: add r13, r15
		_0xffffff8000ec45e9: mov r15, r13
		_0xffffff8000ec45ec: sar r15, 0x1e
		_0xffffff8000ec45f0: movabs rdx, 0x224a28041044210
		_0xffffff8000ec45fa: and rdx, r15
		_0xffffff8000ec45fd: mov r15, r13
		_0xffffff8000ec4600: sar r15, 0x1f
		_0xffffff8000ec4604: movabs rsi, 0xfdda5d7fbcf3bdec
		_0xffffff8000ec460e: and rsi, r15
		_0xffffff8000ec4611: movabs r15, 0x8112d1402186210a
		_0xffffff8000ec461b: xor r15, rsi
		_0xffffff8000ec461e: add r15, rdx
		_0xffffff8000ec4621: sar r13, 0x20
		_0xffffff8000ec4625: xor r13, 0x417fe3c2
		_0xffffff8000ec462c: movabs rdx, 0x7eed2ebf9f063d34
		_0xffffff8000ec4636: add rdx, r13
		_0xffffff8000ec4639: add r13, r13
		_0xffffff8000ec463c: movabs rsi, 0xfdda5d7f3e0c7a68
		_0xffffff8000ec4646: and rsi, r13
		_0xffffff8000ec4649: sub rdx, rsi
		_0xffffff8000ec464c: mov r13, rdx
		_0xffffff8000ec464f: and r13, r15
		_0xffffff8000ec4652: xor rdx, r15
		_0xffffff8000ec4655: lea r15, [rdx + r13*2]
		_0xffffff8000ec4659: mov esi, 0x45f9c7a2
		_0xffffff8000ec465e: mov r13, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec4665: xor esi, dword ptr [r13 + r15*4]
		_0xffffff8000ec466a: mov edx, esi
		_0xffffff8000ec466c: and edx, 0x54921289
		_0xffffff8000ec4672: sub eax, edx
		_0xffffff8000ec4674: and eax, 0x54921289
		_0xffffff8000ec4679: mov edi, ecx
		_0xffffff8000ec467b: and edi, 0x89254854
		_0xffffff8000ec4681: add edi, 0x124a90a8
		_0xffffff8000ec4687: mov edx, esi
		_0xffffff8000ec4689: and edx, 0x89254854
		_0xffffff8000ec468f: sub edi, edx
		_0xffffff8000ec4691: and edi, 0x89254854
		_0xffffff8000ec4697: add edi, eax
		_0xffffff8000ec4699: xor esi, ecx
		_0xffffff8000ec469b: and esi, 0x2248a522
		_0xffffff8000ec46a1: add esi, edi
		_0xffffff8000ec46a3: mov cl, sil
		_0xffffff8000ec46a6: add cl, cl
		_0xffffff8000ec46a8: mov al, sil
		_0xffffff8000ec46ab: xor al, 0xe7
		_0xffffff8000ec46ad: and cl, 0xe0
		_0xffffff8000ec46b0: xor cl, 0x20
		_0xffffff8000ec46b3: add cl, al
		_0xffffff8000ec46b5: mov al, sil
		_0xffffff8000ec46b8: and al, 3
		_0xffffff8000ec46ba: mov dl, 0xd2
		_0xffffff8000ec46bc: mul dl
		_0xffffff8000ec46be: mov dl, al
		_0xffffff8000ec46c0: mov r8b, sil
		_0xffffff8000ec46c3: sar r8b, 2
		_0xffffff8000ec46c7: mov al, 0xd2
		_0xffffff8000ec46c9: sub al, r8b
		_0xffffff8000ec46cc: mul al
		_0xffffff8000ec46ce: sub dl, al
		_0xffffff8000ec46d0: mov al, r8b
		_0xffffff8000ec46d3: add al, 0xd2
		_0xffffff8000ec46d5: mul al
		_0xffffff8000ec46d7: add al, dl
		_0xffffff8000ec46d9: mov dl, 0xd9
		_0xffffff8000ec46db: mul dl
		_0xffffff8000ec46dd: and al, 0x2e
		_0xffffff8000ec46df: mov dl, al
		_0xffffff8000ec46e1: xor dl, cl
		_0xffffff8000ec46e3: and cl, al
		_0xffffff8000ec46e5: add cl, cl
		_0xffffff8000ec46e7: add cl, dl
		_0xffffff8000ec46e9: movzx eax, cl
		_0xffffff8000ec46ec: cmp al, 7
		_0xffffff8000ec46ee: sbb r15, r15
		_0xffffff8000ec46f1: and r15d, 0x100
		_0xffffff8000ec46f8: add r15d, eax
		_0xffffff8000ec46fb: add r15d, 0x3592a76b
		_0xffffff8000ec4702: shl r15, 0x20
		_0xffffff8000ec4706: movabs rax, 0xca6d588e00000000
		_0xffffff8000ec4710: add rax, r15
		_0xffffff8000ec4713: mov r15, rax
		_0xffffff8000ec4716: sar r15, 0x1f
		_0xffffff8000ec471a: movabs rcx, 0x8debcd9b8be2befc
		_0xffffff8000ec4724: and rcx, r15
		_0xffffff8000ec4727: sar rax, 0x20
		_0xffffff8000ec472b: movabs r15, 0x46f5e6cdc5f15f7e
		_0xffffff8000ec4735: xor r15, rax
		_0xffffff8000ec4738: add r15, rcx
		_0xffffff8000ec473b: add r15, qword ptr [r14 + 0x430]
		_0xffffff8000ec4742: movabs rax, 0xb90a19323a0ea082
		_0xffffff8000ec474c: mov al, byte ptr [rax + r15]
		_0xffffff8000ec4750: mov byte ptr [rbp - 0x3f1], al
		_0xffffff8000ec4756: mov cl, bl
		_0xffffff8000ec4758: add cl, cl
		_0xffffff8000ec475a: xor bl, 0x3b
		_0xffffff8000ec475d: and cl, 0x76
		_0xffffff8000ec4760: add cl, bl
		_0xffffff8000ec4762: add cl, 0xcd
		_0xffffff8000ec4765: movzx ebx, cl
		_0xffffff8000ec4768: mov r15d, 0xb23b7eff
		_0xffffff8000ec476e: add r15, rbx
		_0xffffff8000ec4771: movabs r12, 0x7fffffff4dc480f9
		_0xffffff8000ec477b: and r12, r15
		_0xffffff8000ec477e: movabs r13, 0xffffffff4dc480f9
		_0xffffff8000ec4788: xor r13, r15
		_0xffffff8000ec478b: lea r15, [r13 + r12*2]
		_0xffffff8000ec4790: movabs r12, 0x48a15095114a4894
		_0xffffff8000ec479a: mov r13, r15
		_0xffffff8000ec479d: and r13, r12
		_0xffffff8000ec47a0: movabs rcx, 0x9142a12a22949128
		_0xffffff8000ec47aa: sub rcx, r13
		_0xffffff8000ec47ad: and rcx, r12
		_0xffffff8000ec47b0: cmp bl, 8
		_0xffffff8000ec47b3: sbb rbx, rbx
		_0xffffff8000ec47b6: and rbx, 0x100
		_0xffffff8000ec47bd: mov r12, r15
		_0xffffff8000ec47c0: and r12, rbx
		_0xffffff8000ec47c3: add r12, r12
		_0xffffff8000ec47c6: add r12, rcx
		_0xffffff8000ec47c9: movabs r13, 0xa50a2a224a251521
		_0xffffff8000ec47d3: mov rcx, r15
		_0xffffff8000ec47d6: and rcx, r13
		_0xffffff8000ec47d9: movabs rdx, 0x4a145444944a2a42
		_0xffffff8000ec47e3: add rdx, rcx
		_0xffffff8000ec47e6: sub rdx, rbx
		_0xffffff8000ec47e9: and rdx, r13
		_0xffffff8000ec47ec: add rdx, r12
		_0xffffff8000ec47ef: movabs rbx, 0x12548548a490a24a
		_0xffffff8000ec47f9: and rbx, r15
		_0xffffff8000ec47fc: add rbx, rdx
		_0xffffff8000ec47ff: mov r15, rbx
		_0xffffff8000ec4802: xor r15, 0x63ea8c75
		_0xffffff8000ec4809: mov r12, r15
		_0xffffff8000ec480c: shl r12, 0x19
		_0xffffff8000ec4810: movabs r13, 0x40000000000000
		_0xffffff8000ec481a: and r13, r12
		_0xffffff8000ec481d: xor r13, r15
		_0xffffff8000ec4820: mov r15, r13
		_0xffffff8000ec4823: shr r15, 4
		_0xffffff8000ec4827: movabs r12, 0x20000000000
		_0xffffff8000ec4831: and r12, r15
		_0xffffff8000ec4834: xor r12, r13
		_0xffffff8000ec4837: movabs r15, 0x77ebdedf8c14739b
		_0xffffff8000ec4841: xor r15, r12
		_0xffffff8000ec4844: movabs r12, 0x200000000000
		_0xffffff8000ec484e: and r12, r15
		_0xffffff8000ec4851: mov rax, r12
		_0xffffff8000ec4854: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec485e: mul rdx
		_0xffffff8000ec4861: shr rdx, 1
		_0xffffff8000ec4864: lea r13, [rdx + rdx*2]
		_0xffffff8000ec4868: sub r12, r13
		_0xffffff8000ec486b: mov rax, r12
		_0xffffff8000ec486e: imul rax, rax
		_0xffffff8000ec4872: mov r12d, eax
		_0xffffff8000ec4875: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec487f: mul rdx
		_0xffffff8000ec4882: shr edx, 1
		_0xffffff8000ec4884: lea ecx, [rdx + rdx*2]
		_0xffffff8000ec4887: sub r12d, ecx
		_0xffffff8000ec488a: shl r12, 0x29
		_0xffffff8000ec488e: xor r12, r15
		_0xffffff8000ec4891: mov r15, r12
		_0xffffff8000ec4894: and r15, 0x20000000
		_0xffffff8000ec489b: mov rax, r15
		_0xffffff8000ec489e: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec48a8: mul rdx
		_0xffffff8000ec48ab: shr rdx, 1
		_0xffffff8000ec48ae: lea r13, [rdx + rdx*2]
		_0xffffff8000ec48b2: sub r15, r13
		_0xffffff8000ec48b5: mov rax, r15
		_0xffffff8000ec48b8: imul rax, rax
		_0xffffff8000ec48bc: mov r15d, eax
		_0xffffff8000ec48bf: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec48c9: mul rdx
		_0xffffff8000ec48cc: shr edx, 1
		_0xffffff8000ec48ce: lea ecx, [rdx + rdx*2]
		_0xffffff8000ec48d1: sub r15d, ecx
		_0xffffff8000ec48d4: shl r15, 0x36
		_0xffffff8000ec48d8: xor r15, r12
		_0xffffff8000ec48db: movabs r12, 0x8814212010010012
		_0xffffff8000ec48e5: sub r12, r15
		_0xffffff8000ec48e8: mov r13, r12
		_0xffffff8000ec48eb: and r13, r15
		_0xffffff8000ec48ee: xor r12, r15
		_0xffffff8000ec48f1: lea r12, [r12 + r13*2]
		_0xffffff8000ec48f5: mov r13, r12
		_0xffffff8000ec48f8: and r13, r15
		_0xffffff8000ec48fb: xor r15, r12
		_0xffffff8000ec48fe: lea r15, [r15 + r13*2]
		_0xffffff8000ec4902: movabs r12, 0x4895212492524a4
		_0xffffff8000ec490c: mov r13, r15
		_0xffffff8000ec490f: and r13, r12
		_0xffffff8000ec4912: movabs r8, 0x112a424924a4948
		_0xffffff8000ec491c: add r8, r13
		_0xffffff8000ec491f: mov ecx, 1
		_0xffffff8000ec4924: sub ecx, ebx
		_0xffffff8000ec4926: mov r10d, ecx
		_0xffffff8000ec4929: and r10d, ebx
		_0xffffff8000ec492c: xor ecx, ebx
		_0xffffff8000ec492e: lea ecx, [rcx + r10*2]
		_0xffffff8000ec4932: and ecx, 0x3f
		_0xffffff8000ec4935: mov r13d, 0xf380b51a
		_0xffffff8000ec493b: xor rbx, r13
		_0xffffff8000ec493e: mov r10, rbx
		_0xffffff8000ec4941: and r10, 0xffffffff9fde2fea
		_0xffffff8000ec4948: shl r10, cl
		_0xffffff8000ec494b: mov r11d, 0xfbeb1e71
		_0xffffff8000ec4951: xor r10, r11
		_0xffffff8000ec4954: and rbx, 0x6021d015
		_0xffffff8000ec495b: shl rbx, cl
		_0xffffff8000ec495e: xor rbx, r11
		_0xffffff8000ec4961: lea r11, [rbx + r10]
		_0xffffff8000ec4965: and rbx, r10
		_0xffffff8000ec4968: add rbx, rbx
		_0xffffff8000ec496b: sub r11, rbx
		_0xffffff8000ec496e: shl r13, cl
		_0xffffff8000ec4971: xor r13, r11
		_0xffffff8000ec4974: movabs rbx, 0x4481101249252484
		_0xffffff8000ec497e: and rbx, r13
		_0xffffff8000ec4981: sub r8, rbx
		_0xffffff8000ec4984: and r8, r12
		_0xffffff8000ec4987: and rbx, r15
		_0xffffff8000ec498a: add rbx, rbx
		_0xffffff8000ec498d: add rbx, r8
		_0xffffff8000ec4990: movabs r12, 0x25424a482489248
		_0xffffff8000ec499a: and r12, r13
		_0xffffff8000ec499d: mov rcx, r15
		_0xffffff8000ec49a0: and rcx, r12
		_0xffffff8000ec49a3: movabs r8, 0x125424a4a2489249
		_0xffffff8000ec49ad: mov r10, r15
		_0xffffff8000ec49b0: and r10, r8
		_0xffffff8000ec49b3: movabs r11, 0x4a8494944912492
		_0xffffff8000ec49bd: add r11, r12
		_0xffffff8000ec49c0: sub r11, r10
		_0xffffff8000ec49c3: and r11, r8
		_0xffffff8000ec49c6: add rcx, rcx
		_0xffffff8000ec49c9: add rcx, r11
		_0xffffff8000ec49cc: movabs r12, 0x2922894914924912
		_0xffffff8000ec49d6: and r12, r15
		_0xffffff8000ec49d9: movabs r15, 0x2902890914904910
		_0xffffff8000ec49e3: and r15, r13
		_0xffffff8000ec49e6: add r15, r12
		_0xffffff8000ec49e9: add r15, rcx
		_0xffffff8000ec49ec: add r15, rbx
		_0xffffff8000ec49ef: mov ecx, 0xd8065de2
		_0xffffff8000ec49f4: mov r13, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec49fb: mov r8d, dword ptr [r13 + r15*4]
		_0xffffff8000ec4a00: xor r8d, ecx
		_0xffffff8000ec4a03: mov r10b, r9b
		_0xffffff8000ec4a06: add r10b, r10b
		_0xffffff8000ec4a09: xor r9b, 0x3f
		_0xffffff8000ec4a0d: and r10b, 0x7e
		_0xffffff8000ec4a11: add r10b, r9b
		_0xffffff8000ec4a14: add r10b, 0xea
		_0xffffff8000ec4a18: movzx ebx, r10b
		_0xffffff8000ec4a1c: lea r15, [rbx + rbx]
		_0xffffff8000ec4a20: mov r12, rbx
		_0xffffff8000ec4a23: and r12, 0x14
		_0xffffff8000ec4a27: movabs r9, 0x2514948562745b3c
		_0xffffff8000ec4a31: sub r9, r12
		_0xffffff8000ec4a34: movabs r12, 0x128a4a42a12a2914
		_0xffffff8000ec4a3e: and r12, r9
		_0xffffff8000ec4a41: mov r9, r15
		_0xffffff8000ec4a44: and r9, 0x28
		_0xffffff8000ec4a48: add r9, r12
		_0xffffff8000ec4a4b: mov r12, rbx
		_0xffffff8000ec4a4e: and r12, 0xa1
		_0xffffff8000ec4a55: mov r10, r15
		_0xffffff8000ec4a58: and r10, 0x100
		_0xffffff8000ec4a5f: add r10, r12
		_0xffffff8000ec4a62: xor r10, 0x2810080
		_0xffffff8000ec4a69: add r10, r9
		_0xffffff8000ec4a6c: mov r12, rbx
		_0xffffff8000ec4a6f: and r12, 0x4a
		_0xffffff8000ec4a73: movabs r9, 0xa424950a8892494
		_0xffffff8000ec4a7d: add r9, r12
		_0xffffff8000ec4a80: movabs r12, 0x7fffffffeffbedbe
		_0xffffff8000ec4a8a: add r12, r9
		_0xffffff8000ec4a8d: movabs r9, 0x452124a85444924a
		_0xffffff8000ec4a97: and r9, r12
		_0xffffff8000ec4a9a: and r15, 0x84
		_0xffffff8000ec4aa1: add r15, r9
		_0xffffff8000ec4aa4: add r15, r10
		_0xffffff8000ec4aa7: cmp bl, 0x29
		_0xffffff8000ec4aaa: sbb rbx, rbx
		_0xffffff8000ec4aad: and rbx, 0x100
		_0xffffff8000ec4ab4: mov r12, r15
		_0xffffff8000ec4ab7: and r12, rbx
		_0xffffff8000ec4aba: xor rbx, r15
		_0xffffff8000ec4abd: lea rax, [rbx + r12*2]
		_0xffffff8000ec4ac1: mov ebx, eax
		_0xffffff8000ec4ac3: movabs r9, 0xcccccccccccccccd
		_0xffffff8000ec4acd: mul r9
		_0xffffff8000ec4ad0: mov r15, rdx
		_0xffffff8000ec4ad3: shr r15, 4
		_0xffffff8000ec4ad7: imul r10d, r15d, 0x14
		_0xffffff8000ec4adb: sub ebx, r10d
		_0xffffff8000ec4ade: shl rbx, 0x20
		_0xffffff8000ec4ae2: and r15, 1
		_0xffffff8000ec4ae6: neg r15
		_0xffffff8000ec4ae9: movabs r12, 0x1400000000
		_0xffffff8000ec4af3: and r12, r15
		_0xffffff8000ec4af6: add r12, rbx
		_0xffffff8000ec4af9: shr rdx, 5
		_0xffffff8000ec4afd: movabs rbx, 0xa00000000
		_0xffffff8000ec4b07: lea r15, [rdx + rbx]
		_0xffffff8000ec4b0b: imul r15, r15
		_0xffffff8000ec4b0f: add r15, r12
		_0xffffff8000ec4b12: movabs r12, 0xcd5ae40100000000
		_0xffffff8000ec4b1c: add r12, r15
		_0xffffff8000ec4b1f: movabs r15, 0xfffffff600000000
		_0xffffff8000ec4b29: add rdx, r15
		_0xffffff8000ec4b2c: imul rdx, rdx
		_0xffffff8000ec4b30: sub r12, rdx
		_0xffffff8000ec4b33: mov r10, r12
		_0xffffff8000ec4b36: sar r10, 0x1e
		_0xffffff8000ec4b3a: movabs r11, 0x4054042288021240
		_0xffffff8000ec4b44: and r11, r10
		_0xffffff8000ec4b47: mov r10, r12
		_0xffffff8000ec4b4a: sar r10, 0x1f
		_0xffffff8000ec4b4e: movabs r13, 0xbfabfbdd77fde9be
		_0xffffff8000ec4b58: and r13, r10
		_0xffffff8000ec4b5b: movabs r10, 0xa02a021144010b21
		_0xffffff8000ec4b65: xor r10, r13
		_0xffffff8000ec4b68: add r10, r11
		_0xffffff8000ec4b6b: sar r12, 0x20
		_0xffffff8000ec4b6f: mov r13d, 0xf265401b
		_0xffffff8000ec4b75: xor r13, r12
		_0xffffff8000ec4b78: movabs r12, 0x5fd5fdee499bb4c4
		_0xffffff8000ec4b82: add r12, r13
		_0xffffff8000ec4b85: add r13, r13
		_0xffffff8000ec4b88: movabs r11, 0xbfabfbdc93376988
		_0xffffff8000ec4b92: and r11, r13
		_0xffffff8000ec4b95: sub r12, r11
		_0xffffff8000ec4b98: mov r13, r12
		_0xffffff8000ec4b9b: and r13, r10
		_0xffffff8000ec4b9e: xor r12, r10
		_0xffffff8000ec4ba1: lea r12, [r12 + r13*2]
		_0xffffff8000ec4ba5: mov r13, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec4bac: xor ecx, dword ptr [r13 + r12*4]
		_0xffffff8000ec4bb1: lea r10d, [r8 + rcx]
		_0xffffff8000ec4bb5: and ecx, r8d
		_0xffffff8000ec4bb8: add ecx, ecx
		_0xffffff8000ec4bba: sub r10d, ecx
		_0xffffff8000ec4bbd: xor r10d, 0xf925ef5f
		_0xffffff8000ec4bc4: mov cl, byte ptr [rbp - 0x3e5]
		_0xffffff8000ec4bca: add cl, cl
		_0xffffff8000ec4bcc: xor byte ptr [rbp - 0x3e5], 0x7d
		_0xffffff8000ec4bd3: and cl, 0xfa
		_0xffffff8000ec4bd6: add cl, byte ptr [rbp - 0x3e5]
		_0xffffff8000ec4bdc: add cl, 0xb7
		_0xffffff8000ec4bdf: movzx r12d, cl
		_0xffffff8000ec4be3: mov rcx, 0xffffffffffffffcc
		_0xffffff8000ec4bea: sub rcx, r12
		_0xffffff8000ec4bed: mov r8, rcx
		_0xffffff8000ec4bf0: and r8, r12
		_0xffffff8000ec4bf3: xor rcx, r12
		_0xffffff8000ec4bf6: lea rcx, [rcx + r8*2]
		_0xffffff8000ec4bfa: mov r8, rcx
		_0xffffff8000ec4bfd: and r8, r12
		_0xffffff8000ec4c00: xor rcx, r12
		_0xffffff8000ec4c03: lea rcx, [rcx + r8*2]
		_0xffffff8000ec4c07: cmp r12b, 0x34
		_0xffffff8000ec4c0b: sbb r12, r12
		_0xffffff8000ec4c0e: and r12, 0x100
		_0xffffff8000ec4c15: mov r8, rcx
		_0xffffff8000ec4c18: and r8, r12
		_0xffffff8000ec4c1b: xor r12, rcx
		_0xffffff8000ec4c1e: lea r12, [r12 + r8*2]
		_0xffffff8000ec4c22: movabs rcx, 0x97b425ed097b425f
		_0xffffff8000ec4c2c: mov rax, r12
		_0xffffff8000ec4c2f: mul rcx
		_0xffffff8000ec4c32: mov rcx, rdx
		_0xffffff8000ec4c35: shr rcx, 4
		_0xffffff8000ec4c39: lea r8, [rcx + rcx*8]
		_0xffffff8000ec4c3d: lea r8, [r8 + r8*2]
		_0xffffff8000ec4c41: mov r11, r12
		_0xffffff8000ec4c44: sub r11, r8
		_0xffffff8000ec4c47: and ecx, 1
		_0xffffff8000ec4c4a: neg ecx
		_0xffffff8000ec4c4c: and rcx, 0x36
		_0xffffff8000ec4c50: lea rcx, [rcx + r11*2]
		_0xffffff8000ec4c54: shr rdx, 5
		_0xffffff8000ec4c58: mov r8d, 0x1b
		_0xffffff8000ec4c5e: sub r8, rdx
		_0xffffff8000ec4c61: add rdx, 0x1b
		_0xffffff8000ec4c65: imul rdx, rdx
		_0xffffff8000ec4c69: add rdx, rcx
		_0xffffff8000ec4c6c: imul r8, r8
		_0xffffff8000ec4c70: sub rdx, r8
		_0xffffff8000ec4c73: movabs rcx, 0xdeff1ef77dfefa3e
		_0xffffff8000ec4c7d: sub rcx, rdx
		_0xffffff8000ec4c80: mov r8, rcx
		_0xffffff8000ec4c83: and r8, rdx
		_0xffffff8000ec4c86: xor rcx, rdx
		_0xffffff8000ec4c89: lea rcx, [rcx + r8*2]
		_0xffffff8000ec4c8d: mov r8, rcx
		_0xffffff8000ec4c90: sar r8, 1
		_0xffffff8000ec4c93: mov r11, rdx
		_0xffffff8000ec4c96: sar r11, 1
		_0xffffff8000ec4c99: add r11, r8
		_0xffffff8000ec4c9c: mov r8d, edx
		_0xffffff8000ec4c9f: neg r8d
		_0xffffff8000ec4ca2: and r8d, ecx
		_0xffffff8000ec4ca5: and r8, 1
		_0xffffff8000ec4ca9: add r8, r11
		_0xffffff8000ec4cac: movabs r11, 0xffffffff0abeb92b
		_0xffffff8000ec4cb6: add r11, r8
		_0xffffff8000ec4cb9: xor rdx, rcx
		_0xffffff8000ec4cbc: sar rdx, 1
		_0xffffff8000ec4cbf: sub r11, rdx
		_0xffffff8000ec4cc2: mov ecx, 0x9d25450d
		_0xffffff8000ec4cc7: xor rcx, r12
		_0xffffff8000ec4cca: movabs r12, 0x6f7f8f7b23da3812
		_0xffffff8000ec4cd4: add r12, rcx
		_0xffffff8000ec4cd7: add rcx, rcx
		_0xffffff8000ec4cda: movabs r8, 0xdeff1ef647b47024
		_0xffffff8000ec4ce4: and r8, rcx
		_0xffffff8000ec4ce7: sub r12, r8
		_0xffffff8000ec4cea: movabs rcx, 0x10807084410082e1
		_0xffffff8000ec4cf4: and rcx, r12
		_0xffffff8000ec4cf7: movabs r8, 0x90807084410082e1
		_0xffffff8000ec4d01: xor r8, r12
		_0xffffff8000ec4d04: lea r12, [r8 + rcx*2]
		_0xffffff8000ec4d08: mov ecx, 0xf54146d5
		_0xffffff8000ec4d0d: add rcx, r12
		_0xffffff8000ec4d10: mov r12, r11
		_0xffffff8000ec4d13: xor r12, rcx
		_0xffffff8000ec4d16: mov r8, rcx
		_0xffffff8000ec4d19: and r8, r11
		_0xffffff8000ec4d1c: movabs r13, 0x84a84a50a854922
		_0xffffff8000ec4d26: and r13, r11
		_0xffffff8000ec4d29: movabs rax, 0x12a15248a150a249
		_0xffffff8000ec4d33: and rax, r11
		_0xffffff8000ec4d36: movabs r11, 0x1aebd6edabd5eb6b
		_0xffffff8000ec4d40: and r11, rcx
		_0xffffff8000ec4d43: add r11, rax
		_0xffffff8000ec4d46: add r11, r13
		_0xffffff8000ec4d49: movabs r13, 0x25142912542a1494
		_0xffffff8000ec4d53: and r13, r12
		_0xffffff8000ec4d56: movabs r12, 0x5142912542a1494
		_0xffffff8000ec4d60: and r12, r8
		_0xffffff8000ec4d63: add r12, r12
		_0xffffff8000ec4d66: add r12, r13
		_0xffffff8000ec4d69: add r12, r11
		_0xffffff8000ec4d6c: mov eax, 0xf925ef5f
		_0xffffff8000ec4d71: mov r13, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec4d78: xor eax, dword ptr [r13 + r12*4]
		_0xffffff8000ec4d7d: lea r8d, [r10 + rax]
		_0xffffff8000ec4d81: and eax, r10d
		_0xffffff8000ec4d84: add eax, eax
		_0xffffff8000ec4d86: sub r8d, eax
		_0xffffff8000ec4d89: mov al, byte ptr [rbp - 0x3e3]
		_0xffffff8000ec4d8f: add al, al
		_0xffffff8000ec4d91: xor byte ptr [rbp - 0x3e3], 0x78
		_0xffffff8000ec4d98: and al, 0xf0
		_0xffffff8000ec4d9a: add al, byte ptr [rbp - 0x3e3]
		_0xffffff8000ec4da0: add al, 0xc0
		_0xffffff8000ec4da2: movzx r12d, al
		_0xffffff8000ec4da6: mov rax, r12
		_0xffffff8000ec4da9: and rax, 0x57
		_0xffffff8000ec4dad: mov rcx, r12
		_0xffffff8000ec4db0: xor rcx, 0x5146b457
		_0xffffff8000ec4db7: lea rax, [rcx + rax*2]
		_0xffffff8000ec4dbb: cmp r12b, 0x38
		_0xffffff8000ec4dbf: sbb r12, r12
		_0xffffff8000ec4dc2: and r12, 0x100
		_0xffffff8000ec4dc9: mov rcx, rax
		_0xffffff8000ec4dcc: and rcx, r12
		_0xffffff8000ec4dcf: xor r12, rax
		_0xffffff8000ec4dd2: lea r12, [r12 + rcx*2]
		_0xffffff8000ec4dd6: mov rax, r12
		_0xffffff8000ec4dd9: shl rax, 0x21
		_0xffffff8000ec4ddd: movabs rcx, 0x5d7296e200000000
		_0xffffff8000ec4de7: and rcx, rax
		_0xffffff8000ec4dea: shl r12, 0x20
		_0xffffff8000ec4dee: movabs rax, 0xaeb94b7100000000
		_0xffffff8000ec4df8: xor rax, r12
		_0xffffff8000ec4dfb: add rax, rcx
		_0xffffff8000ec4dfe: sar rax, 0x20
		_0xffffff8000ec4e02: mov r12d, 0xf3a60961
		_0xffffff8000ec4e08: xor r12, rax
		_0xffffff8000ec4e0b: lea rcx, [rax + r12]
		_0xffffff8000ec4e0f: movabs r10, 0xf95c57fd285afed6
		_0xffffff8000ec4e19: add r10, rcx
		_0xffffff8000ec4e1c: movabs rcx, 0x395c57fddbfcf7b7
		_0xffffff8000ec4e26: xor rcx, rax
		_0xffffff8000ec4e29: sub r10, rcx
		_0xffffff8000ec4e2c: add r12, r12
		_0xffffff8000ec4e2f: movabs rax, 0x32b8affa50b5fdac
		_0xffffff8000ec4e39: and rax, r12
		_0xffffff8000ec4e3c: sub r10, rax
		_0xffffff8000ec4e3f: mov r12, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec4e46: xor r8d, dword ptr [r12 + r10*4]
		_0xffffff8000ec4e4a: mov al, byte ptr [rbp - 0x3e2]
		_0xffffff8000ec4e50: add al, al
		_0xffffff8000ec4e52: xor byte ptr [rbp - 0x3e2], 0x66
		_0xffffff8000ec4e59: and al, 0xcc
		_0xffffff8000ec4e5b: add al, byte ptr [rbp - 0x3e2]
		_0xffffff8000ec4e61: add al, 0xfe
		_0xffffff8000ec4e63: movzx eax, al
		_0xffffff8000ec4e66: lea rcx, [rax + rax]
		_0xffffff8000ec4e6a: mov r10, rax
		_0xffffff8000ec4e6d: and r10, 0x24
		_0xffffff8000ec4e71: movabs r11, 0xd9b3f1bf1b7e6f4c
		_0xffffff8000ec4e7b: sub r11, r10
		_0xffffff8000ec4e7e: movabs r10, 0x48915095092a2524
		_0xffffff8000ec4e88: and r10, r11
		_0xffffff8000ec4e8b: mov r11, rcx
		_0xffffff8000ec4e8e: and r11, 8
		_0xffffff8000ec4e92: add r11, r10
		_0xffffff8000ec4e95: mov r10, rax
		_0xffffff8000ec4e98: and r10, 0x92
		_0xffffff8000ec4e9f: movabs r12, 0xe6de6f66fcf1b7b4
		_0xffffff8000ec4ea9: sub r12, r10
		_0xffffff8000ec4eac: movabs r10, 0xa24a252254509292
		_0xffffff8000ec4eb6: and r10, r12
		_0xffffff8000ec4eb9: mov r12, rcx
		_0xffffff8000ec4ebc: and r12, 0x120
		_0xffffff8000ec4ec3: add r12, r10
		_0xffffff8000ec4ec6: add r12, r11
		_0xffffff8000ec4ec9: mov r10, rax
		_0xffffff8000ec4ecc: and r10, 0x49
		_0xffffff8000ec4ed0: and rcx, 0x10
		_0xffffff8000ec4ed4: add rcx, r10
		_0xffffff8000ec4ed7: movabs r10, 0x15248a48a2854808
		_0xffffff8000ec4ee1: xor r10, rcx
		_0xffffff8000ec4ee4: add r10, r12
		_0xffffff8000ec4ee7: cmp al, 0x64
		_0xffffff8000ec4ee9: sbb r12, r12
		_0xffffff8000ec4eec: and r12, 0x100
		_0xffffff8000ec4ef3: mov rax, r10
		_0xffffff8000ec4ef6: and rax, r12
		_0xffffff8000ec4ef9: xor r12, r10
		_0xffffff8000ec4efc: lea r12, [r12 + rax*2]
		_0xffffff8000ec4f00: mov eax, 0xbe8c422f
		_0xffffff8000ec4f05: xor rax, r12
		_0xffffff8000ec4f08: mov rcx, rax
		_0xffffff8000ec4f0b: shr rcx, 4
		_0xffffff8000ec4f0f: and rcx, 0x80
		_0xffffff8000ec4f16: xor rcx, rax
		_0xffffff8000ec4f19: mov rax, rcx
		_0xffffff8000ec4f1c: shl rax, 0x15
		_0xffffff8000ec4f20: movabs r10, 0x200000000000000
		_0xffffff8000ec4f2a: and r10, rax
		_0xffffff8000ec4f2d: xor r10, rcx
		_0xffffff8000ec4f30: movabs rcx, 0x6cfefbcec35bb514
		_0xffffff8000ec4f3a: xor rcx, r10
		_0xffffff8000ec4f3d: movabs r10, 0x1000000000
		_0xffffff8000ec4f47: and r10, rcx
		_0xffffff8000ec4f4a: lea rax, [rip - 0xd986]
		_0xffffff8000ec4f51: mov rax, qword ptr [rax]
		_0xffffff8000ec4f54: mov rax, r10
		_0xffffff8000ec4f57: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec4f61: mul rdx
		_0xffffff8000ec4f64: shr rdx, 1
		_0xffffff8000ec4f67: lea rax, [rdx + rdx*2]
		_0xffffff8000ec4f6b: sub r10, rax
		_0xffffff8000ec4f6e: mov rax, r10
		_0xffffff8000ec4f71: imul rax, rax
		_0xffffff8000ec4f75: mov r10d, eax
		_0xffffff8000ec4f78: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec4f82: mul rdx
		_0xffffff8000ec4f85: shr edx, 1
		_0xffffff8000ec4f87: lea eax, [rdx + rdx*2]
		_0xffffff8000ec4f8a: sub r10d, eax
		_0xffffff8000ec4f8d: shl r10, 0x39
		_0xffffff8000ec4f91: xor r10, rcx
		_0xffffff8000ec4f94: mov rcx, r10
		_0xffffff8000ec4f97: and rcx, 0x800
		_0xffffff8000ec4f9e: mov rax, rcx
		_0xffffff8000ec4fa1: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec4fab: mul rdx
		_0xffffff8000ec4fae: shr rdx, 1
		_0xffffff8000ec4fb1: lea rax, [rdx + rdx*2]
		_0xffffff8000ec4fb5: sub rcx, rax
		_0xffffff8000ec4fb8: imul rcx, rcx
		_0xffffff8000ec4fbc: mov rax, rcx
		_0xffffff8000ec4fbf: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec4fc9: mul rdx
		_0xffffff8000ec4fcc: shr rdx, 1
		_0xffffff8000ec4fcf: lea rax, [rdx + rdx*2]
		_0xffffff8000ec4fd3: sub rcx, rax
		_0xffffff8000ec4fd6: shl rcx, 7
		_0xffffff8000ec4fda: xor rcx, r10
		_0xffffff8000ec4fdd: movabs rax, 0x93010431822808c5
		_0xffffff8000ec4fe7: sub rax, rcx
		_0xffffff8000ec4fea: movabs r10, 0x49242912a4914851
		_0xffffff8000ec4ff4: mov r11, rax
		_0xffffff8000ec4ff7: and r11, r10
		_0xffffff8000ec4ffa: mov r13, rcx
		_0xffffff8000ec4ffd: and r13, r10
		_0xffffff8000ec5000: movabs rdx, 0x12485225492290a2
		_0xffffff8000ec500a: add rdx, r13
		_0xffffff8000ec500d: sub rdx, r11
		_0xffffff8000ec5010: and rdx, r10
		_0xffffff8000ec5013: and r11, rcx
		_0xffffff8000ec5016: add r11, r11
		_0xffffff8000ec5019: add r11, rdx
		_0xffffff8000ec501c: movabs r13, 0x148a84a90a2a128a
		_0xffffff8000ec5026: mov rdx, rax
		_0xffffff8000ec5029: and rdx, r13
		_0xffffff8000ec502c: mov r10, rcx
		_0xffffff8000ec502f: and r10, r13
		_0xffffff8000ec5032: movabs r9, 0x915095214542514
		_0xffffff8000ec503c: add r9, r10
		_0xffffff8000ec503f: sub r9, rdx
		_0xffffff8000ec5042: and r9, r13
		_0xffffff8000ec5045: and rdx, rcx
		_0xffffff8000ec5048: add rdx, rdx
		_0xffffff8000ec504b: add rdx, r9
		_0xffffff8000ec504e: add rdx, r11
		_0xffffff8000ec5051: movabs r13, 0xa25152445144a524
		_0xffffff8000ec505b: mov r9, rcx
		_0xffffff8000ec505e: and r9, r13
		_0xffffff8000ec5061: mov r10, rax
		_0xffffff8000ec5064: and r10, r13
		_0xffffff8000ec5067: movabs r11, 0x44a2a488a2894a48
		_0xffffff8000ec5071: add r11, r10
		_0xffffff8000ec5074: sub r11, r9
		_0xffffff8000ec5077: and r11, r13
		_0xffffff8000ec507a: and r9, rax
		_0xffffff8000ec507d: add r9, r9
		_0xffffff8000ec5080: add r9, r11
		_0xffffff8000ec5083: add r9, rdx
		_0xffffff8000ec5086: mov r13, r9
		_0xffffff8000ec5089: and r13, rcx
		_0xffffff8000ec508c: xor r9, rcx
		_0xffffff8000ec508f: lea r13, [r9 + r13*2]
		_0xffffff8000ec5093: mov rax, r12
		_0xffffff8000ec5096: and rax, 0x7f
		_0xffffff8000ec509a: shr r12, 7
		_0xffffff8000ec509e: mov ecx, 0x20
		_0xffffff8000ec50a3: sub rcx, r12
		_0xffffff8000ec50a6: imul rcx, rcx
		_0xffffff8000ec50aa: sub rax, rcx
		_0xffffff8000ec50ad: add r12, 0x20
		_0xffffff8000ec50b1: imul r12, r12
		_0xffffff8000ec50b5: add r12, rax
		_0xffffff8000ec50b8: add r12, r12
		_0xffffff8000ec50bb: movabs rax, 0xd9fdf79cfbafee76
		_0xffffff8000ec50c5: sub rax, r12
		_0xffffff8000ec50c8: mov rcx, rax
		_0xffffff8000ec50cb: and rcx, r12
		_0xffffff8000ec50ce: xor rax, r12
		_0xffffff8000ec50d1: lea rax, [rax + rcx*2]
		_0xffffff8000ec50d5: mov rcx, rax
		_0xffffff8000ec50d8: xor rcx, r12
		_0xffffff8000ec50db: sar rax, 1
		_0xffffff8000ec50de: sar rcx, 1
		_0xffffff8000ec50e1: sub rax, rcx
		_0xffffff8000ec50e4: sar r12, 1
		_0xffffff8000ec50e7: add r12, rax
		_0xffffff8000ec50ea: mov rax, r13
		_0xffffff8000ec50ed: and rax, r12
		_0xffffff8000ec50f0: xor r12, r13
		_0xffffff8000ec50f3: lea r12, [r12 + rax*2]
		_0xffffff8000ec50f7: mov al, byte ptr [rbp - 0x3c4]
		_0xffffff8000ec50fd: add al, al
		_0xffffff8000ec50ff: xor byte ptr [rbp - 0x3c4], 0x7f
		_0xffffff8000ec5106: add byte ptr [rbp - 0x3c4], al
		_0xffffff8000ec510c: add byte ptr [rbp - 0x3c4], 0xb9
		_0xffffff8000ec5113: movzx r13d, byte ptr [rbp - 0x3c4]
		_0xffffff8000ec511b: mov rax, r13
		_0xffffff8000ec511e: xor rax, 0x3ebad7a5
		_0xffffff8000ec5124: cmp r13b, 0x38
		_0xffffff8000ec5128: sbb rcx, rcx
		_0xffffff8000ec512b: and rcx, 0x100
		_0xffffff8000ec5132: add rcx, rax
		_0xffffff8000ec5135: and r13, 0xa5
		_0xffffff8000ec513c: lea r13, [rcx + r13*2]
		_0xffffff8000ec5140: mov rax, r13
		_0xffffff8000ec5143: movabs r9, 0xcccccccccccccccd
		_0xffffff8000ec514d: mul r9
		_0xffffff8000ec5150: shr rdx, 5
		_0xffffff8000ec5154: add r15, rdx
		_0xffffff8000ec5157: imul r15, r15
		_0xffffff8000ec515b: add rbx, rdx
		_0xffffff8000ec515e: imul rbx, rbx
		_0xffffff8000ec5162: sub rbx, r15
		_0xffffff8000ec5165: imul eax, edx, 0x28
		_0xffffff8000ec5168: sub r13d, eax
		_0xffffff8000ec516b: shl r13, 0x20
		_0xffffff8000ec516f: add r13, rbx
		_0xffffff8000ec5172: movabs rbx, 0x4145282300000000
		_0xffffff8000ec517c: and rbx, r13
		_0xffffff8000ec517f: movabs r15, 0xc145282300000000
		_0xffffff8000ec5189: xor r15, r13
		_0xffffff8000ec518c: lea rbx, [r15 + rbx*2]
		_0xffffff8000ec5190: mov r15, rbx
		_0xffffff8000ec5193: sar r15, 0x1f
		_0xffffff8000ec5197: movabs r13, 0xd37dfee7da
		_0xffffff8000ec51a1: and r13, r15
		_0xffffff8000ec51a4: mov r15, rbx
		_0xffffff8000ec51a7: sar r15, 0x20
		_0xffffff8000ec51ab: movabs rax, 0x1f797fe9beff73ed
		_0xffffff8000ec51b5: xor rax, r15
		_0xffffff8000ec51b8: add rax, r13
		_0xffffff8000ec51bb: sar rbx, 0x3f
		_0xffffff8000ec51bf: mov ecx, ebx
		_0xffffff8000ec51c1: xor ecx, 0x3ef2ff
		_0xffffff8000ec51c7: neg ecx
		_0xffffff8000ec51c9: lea ebx, [rbx + rcx + 0x1bef2ff]
		_0xffffff8000ec51d0: shl rbx, 0x27
		_0xffffff8000ec51d4: add rbx, rax
		_0xffffff8000ec51d7: mov r13, qword ptr [rbp - 0x3d8]
		_0xffffff8000ec51de: lea rbx, [r13 + rbx*4]
		_0xffffff8000ec51e3: movabs r15, 0x821a00590402304c
		_0xffffff8000ec51ed: mov ecx, dword ptr [r15 + rbx]
		_0xffffff8000ec51f1: mov r13, qword ptr [rbp - 0x3b8]
		_0xffffff8000ec51f8: xor ecx, dword ptr [r13 + r12*4]
		_0xffffff8000ec51fd: mov al, byte ptr [rbp - 0x3e4]
		_0xffffff8000ec5203: add al, al
		_0xffffff8000ec5205: xor byte ptr [rbp - 0x3e4], 0x14
		_0xffffff8000ec520c: and al, 0x28
		_0xffffff8000ec520e: add al, byte ptr [rbp - 0x3e4]
		_0xffffff8000ec5214: add al, 0xf0
		_0xffffff8000ec5216: movzx ebx, al
		_0xffffff8000ec5219: mov r15d, 0x12ad4ef6
		_0xffffff8000ec521f: sub r15, rbx
		_0xffffff8000ec5222: mov r12, r15
		_0xffffff8000ec5225: and r12, 0x9254454
		_0xffffff8000ec522c: mov r13, r12
		_0xffffff8000ec522f: and r13, rbx
		_0xffffff8000ec5232: mov rax, rbx
		_0xffffff8000ec5235: and rax, 0x54
		_0xffffff8000ec5239: xor rax, r12
		_0xffffff8000ec523c: add r13, r13
		_0xffffff8000ec523f: add r13, rax
		_0xffffff8000ec5242: mov r12, r15
		_0xffffff8000ec5245: and r12, 0x148a290a
		_0xffffff8000ec524c: mov rax, rbx
		_0xffffff8000ec524f: and rax, 0xab
		_0xffffff8000ec5255: add rax, r12
		_0xffffff8000ec5258: and r15, 0x25092a1
		_0xffffff8000ec525f: add r15, rax
		_0xffffff8000ec5262: add r15, r13
		_0xffffff8000ec5265: mov r12, r15
		_0xffffff8000ec5268: and r12, rbx
		_0xffffff8000ec526b: xor r15, rbx
		_0xffffff8000ec526e: lea r15, [r15 + r12*2]
		_0xffffff8000ec5272: cmp bl, 4
		_0xffffff8000ec5275: sbb rbx, rbx
		_0xffffff8000ec5278: and rbx, 0x100
		_0xffffff8000ec527f: mov r12, r15
		_0xffffff8000ec5282: and r12, rbx
		_0xffffff8000ec5285: xor rbx, r15
		_0xffffff8000ec5288: lea rax, [rbx + r12*2 + 0x42532a58]
		_0xffffff8000ec5290: mov ebx, eax
		_0xffffff8000ec5292: movabs r15, 0x8888888888888889
		_0xffffff8000ec529c: mul r15
		_0xffffff8000ec529f: shr rdx, 4
		_0xffffff8000ec52a3: imul eax, edx, 0x1e
		_0xffffff8000ec52a6: sub ebx, eax
		_0xffffff8000ec52a8: shl rbx, 0x20
		_0xffffff8000ec52ac: movabs r15, 0x1e00000000
		_0xffffff8000ec52b6: imul r15, rdx
		_0xffffff8000ec52ba: add r15, rbx
		_0xffffff8000ec52bd: movabs rbx, 0x2fa5db5e00000000
		_0xffffff8000ec52c7: sub rbx, r15
		_0xffffff8000ec52ca: movabs r12, 0xbdacd5a800000000
		_0xffffff8000ec52d4: add r12, r15
		_0xffffff8000ec52d7: mov r15, r12
		_0xffffff8000ec52da: xor r15, rbx
		_0xffffff8000ec52dd: add r15, r12
		_0xffffff8000ec52e0: and r12, rbx
		_0xffffff8000ec52e3: lea rbx, [r15 + r12*2]
		_0xffffff8000ec52e7: mov r15, rbx
		_0xffffff8000ec52ea: sar r15, 0x20
		_0xffffff8000ec52ee: xor r15, 0x6b55010c
		_0xffffff8000ec52f5: mov r12, r15
		_0xffffff8000ec52f8: shl r12, 0x23
		_0xffffff8000ec52fc: movabs r13, 0x800000000
		_0xffffff8000ec5306: and r12, r13
		_0xffffff8000ec5309: xor r12, r15
		_0xffffff8000ec530c: mov r15, r12
		_0xffffff8000ec530f: shl r15, 0x1d
		_0xffffff8000ec5313: movabs rax, 0x100000000
		_0xffffff8000ec531d: and rax, r15
		_0xffffff8000ec5320: xor rax, r12
		_0xffffff8000ec5323: movabs r15, 0x47bfbff724aaec77
		_0xffffff8000ec532d: xor r15, rax
		_0xffffff8000ec5330: mov r12, r15
		_0xffffff8000ec5333: and r12, 8
		_0xffffff8000ec5337: mov rax, r12
		_0xffffff8000ec533a: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec5344: mul rdx
		_0xffffff8000ec5347: shr rdx, 1
		_0xffffff8000ec534a: lea rax, [rdx + rdx*2]
		_0xffffff8000ec534e: sub r12, rax
		_0xffffff8000ec5351: mov rax, r12
		_0xffffff8000ec5354: imul rax, rax
		_0xffffff8000ec5358: mov r12d, eax
		_0xffffff8000ec535b: movabs rdx, 0xaaaaaaaaaaaaaaab
		_0xffffff8000ec5365: mul rdx
		_0xffffff8000ec5368: shr rdx, 1
		_0xffffff8000ec536b: lea eax, [rdx + rdx*2]
		_0xffffff8000ec536e: sub r12d, eax
		_0xffffff8000ec5371: shl r12, 0x20
		_0xffffff8000ec5375: xor r12, r15
		_0xffffff8000ec5378: mov r15, r12
		_0xffffff8000ec537b: shl r15, 0x23
		_0xffffff8000ec537f: and r15, r13
		_0xffffff8000ec5382: xor r15, r12
		_0xffffff8000ec5385: movabs r12, 0x95222a2891254249
		_0xffffff8000ec538f: and r12, r15
		_0xffffff8000ec5392: sar rbx, 0x1f
		_0xffffff8000ec5396: mov r13d, 0xf29e30a2
		_0xffffff8000ec539c: xor r13, rbx
		_0xffffff8000ec539f: mov rbx, r13
		_0xffffff8000ec53a2: sar rbx, 0x22
		_0xffffff8000ec53a6: mov eax, ebx
		_0xffffff8000ec53a8: xor eax, 0x63dfdfff
		_0xffffff8000ec53ad: neg eax
		_0xffffff8000ec53af: lea ebx, [rbx + rax + 0x63dfdfff]
		_0xffffff8000ec53b6: shl rbx, 0x21
		_0xffffff8000ec53ba: movabs rax, 0x29fffdaf6
		_0xffffff8000ec53c4: and rax, r13
		_0xffffff8000ec53c7: add rax, rbx
		_0xffffff8000ec53ca: mov ebx, 0x929e10a2
		_0xffffff8000ec53cf: xor rbx, rax
		_0xffffff8000ec53d2: mov r13d, 0xa4688ab4
		_0xffffff8000ec53d8: add r13, rbx
		_0xffffff8000ec53db: movabs rbx, 0xa922514249249294
		_0xffffff8000ec53e5: and rbx, r13
		_0xffffff8000ec53e8: lea rax, [r13 + r13]
		_0xffffff8000ec53ed: movabs rdx, 0x5000800012090520
		_0xffffff8000ec53f7: and rdx, rax
		_0xffffff8000ec53fa: add rdx, rbx
		_0xffffff8000ec53fd: movabs rbx, 0xa800400009048290
		_0xffffff8000ec5407: xor rbx, rdx
		_0xffffff8000ec540a: movabs rdx, 0x2000000000040080
		_0xffffff8000ec5414: and rdx, rax
		_0xffffff8000ec5417: movabs rax, 0x12948495144a284a
		_0xffffff8000ec5421: mov r9, r13
		_0xffffff8000ec5424: and r9, rax
		_0xffffff8000ec5427: movabs r10, 0x3529092a289650d4
		_0xffffff8000ec5431: sub r10, r9
		_0xffffff8000ec5434: and r10, rax
		_0xffffff8000ec5437: add r10, rdx
		_0xffffff8000ec543a: movabs rax, 0x44492a28a2914520
		_0xffffff8000ec5444: and rax, r13
		_0xffffff8000ec5447: add rax, r10
		_0xffffff8000ec544a: add rax, rbx
		_0xffffff8000ec544d: movabs rbx, 0x40000002910501
		_0xffffff8000ec5457: add rbx, rax
		_0xffffff8000ec545a: movabs r13, 0x15222a2891254249
		_0xffffff8000ec5464: mov rax, rbx
		_0xffffff8000ec5467: and rax, r13
		_0xffffff8000ec546a: movabs rdx, 0xa445451224a8492
		_0xffffff8000ec5474: add rdx, rax
		_0xffffff8000ec5477: sub rdx, r12
		_0xffffff8000ec547a: and r12, rbx
		_0xffffff8000ec547d: movabs rax, 0x488951424a889522
		_0xffffff8000ec5487: and rax, r15
		_0xffffff8000ec548a: movabs r9, 0x88951424a889522
		_0xffffff8000ec5494: mov r10, rbx
		_0xffffff8000ec5497: and r10, r9
		_0xffffff8000ec549a: movabs r11, 0x112a28495112a44
		_0xffffff8000ec54a4: add r11, r10
		_0xffffff8000ec54a7: sub r11, rax
		_0xffffff8000ec54aa: and r11, r9
		_0xffffff8000ec54ad: and rax, rbx
		_0xffffff8000ec54b0: add rax, rax
		_0xffffff8000ec54b3: add rax, r11
		_0xffffff8000ec54b6: and rdx, r13
		_0xffffff8000ec54b9: add r12, r12
		_0xffffff8000ec54bc: add r12, rdx
		_0xffffff8000ec54bf: movabs r13, 0x2254849524522894
		_0xffffff8000ec54c9: and r15, r13
		_0xffffff8000ec54cc: and rbx, r13
		_0xffffff8000ec54cf: add rbx, r15
		_0xffffff8000ec54d2: add rbx, r12
		_0xffffff8000ec54d5: add rbx, rax
		_0xffffff8000ec54d8: mov r9d, 0xc45528e4
		_0xffffff8000ec54de: mov r13, qword ptr [rbp - 0x3c0]
		_0xffffff8000ec54e5: xor r9d, dword ptr [r13 + rbx*4]
		_0xffffff8000ec54ea: mov al, byte ptr [rbp - 0x3e1]
		_0xffffff8000ec54f0: add al, al
		_0xffffff8000ec54f2: xor byte ptr [rbp - 0x3e1], 0x76
		_0xffffff8000ec54f9: and al, 0xec
		_0xffffff8000ec54fb: add al, byte ptr [rbp - 0x3e1]
		_0xffffff8000ec5501: add al, 0xdc
		_0xffffff8000ec5503: movzx ebx, al
		_0xffffff8000ec5506: mov r15, rbx
		_0xffffff8000ec5509: and r15, 8
		_0xffffff8000ec550d: mov r12, rbx
		_0xffffff8000ec5510: xor r12, 0x34e74508
		_0xffffff8000ec5517: lea r15, [r12 + r15*2]
		_0xffffff8000ec551b: cmp bl, 0x52
		_0xffffff8000ec551e: sbb rbx, rbx
		_0xffffff8000ec5521: and rbx, 0x100
		_0xffffff8000ec5528: mov r12, r15
		_0xffffff8000ec552b: and r12, rbx
		_0xffffff8000ec552e: xor rbx, r15
		_0xffffff8000ec5531: lea rbx, [rbx + r12*2]
		_0xffffff8000ec5535: movabs r15, 0x29e4129e4129e413
		_0xffffff8000ec553f: mov rax, rbx
		_0xffffff8000ec5542: mul r15
		_0xffffff8000ec5545: mov r15, rbx
		_0xffffff8000ec5548: sub r15, rdx
		_0xffffff8000ec554b: shr r15, 1
		_0xffffff8000ec554e: add r15, rdx
		_0xffffff8000ec5551: shr r15, 5
		_0xffffff8000ec5555: movabs r12, 0x3700000000
		_0xffffff8000ec555f: imul r12, r15
		_0xffffff8000ec5563: imul eax, r15d, 0x37
		_0xffffff8000ec5567: sub ebx, eax
		_0xffffff8000ec5569: shl rbx, 0x20
		_0xffffff8000ec556d: add rbx, r12
		_0xffffff8000ec5570: movabs r15, 0x4b18baa600000000
		_0xffffff8000ec557a: and r15, rbx
		_0xffffff8000ec557d: movabs r12, 0xcb18baa600000000
		_0xffffff8000ec5587: xor r12, rbx
		_0xffffff8000ec558a: lea rbx, [r12 + r15*2]
		_0xffffff8000ec558e: mov r15, rbx
		_0xffffff8000ec5591: sar r15, 0x3f
		_0xffffff8000ec5595: mov eax, r15d
		_0xffffff8000ec5598: xor eax, 0x1fefeff
		_0xffffff8000ec559d: neg eax
		_0xffffff8000ec559f: lea r15d, [r15 + rax + 0x1fefeff]
		_0xffffff8000ec55a7: shl r15, 0x27
		_0xffffff8000ec55ab: mov r12, rbx
		_0xffffff8000ec55ae: sar r12, 0x1f
		_0xffffff8000ec55b2: movabs r13, 0x9bfffb3b42
		_0xffffff8000ec55bc: and r13, r12
		_0xffffff8000ec55bf: add r13, r15
		_0xffffff8000ec55c2: movabs r15, 0x80801200022242
		_0xffffff8000ec55cc: and r15, r13
		_0xffffff8000ec55cf: movabs r12, 0x808080320002625f
		_0xffffff8000ec55d9: xor r12, r13
		_0xffffff8000ec55dc: lea r15, [r12 + r15*2]
		_0xffffff8000ec55e0: sar rbx, 0x20
		_0xffffff8000ec55e4: mov r12d, 0xffb0d3c6
		_0xffffff8000ec55ea: xor r12, rbx
		_0xffffff8000ec55ed: movabs rbx, 0x7f7f7fcd004d4e67
		_0xffffff8000ec55f7: add rbx, r12
		_0xffffff8000ec55fa: add r12, r12
		_0xffffff8000ec55fd: movabs r13, 0xfefeff9a009a9cce
		_0xffffff8000ec5607: and r13, r12
		_0xffffff8000ec560a: sub rbx, r13
		_0xffffff8000ec560d: mov r12, r15
		_0xffffff8000ec5610: and r12, rbx
		_0xffffff8000ec5613: xor rbx, r15
		_0xffffff8000ec5616: lea rbx, [rbx + r12*2]
		_0xffffff8000ec561a: mov eax, 0xbd8a01d6
		_0xffffff8000ec561f: mov r12, qword ptr [rbp - 0x3d0]
		_0xffffff8000ec5626: xor eax, dword ptr [r12 + rbx*4]
		_0xffffff8000ec562a: mov r12, qword ptr [rbp - 0x3e0]
		_0xffffff8000ec5631: mov dl, byte ptr [rbp - 0x3f1]
		_0xffffff8000ec5637: mov byte ptr [r12 + 4], dl
		_0xffffff8000ec563c: xor ecx, 0xc45528e4
		_0xffffff8000ec5642: lea edx, [r9 + rcx]
		_0xffffff8000ec5646: and ecx, r9d
		_0xffffff8000ec5649: add ecx, ecx
		_0xffffff8000ec564b: sub edx, ecx
		_0xffffff8000ec564d: xor edx, 0xbd8a01d6
		_0xffffff8000ec5653: lea r9d, [rdx + rax]
		_0xffffff8000ec5657: and edx, eax
		_0xffffff8000ec5659: add edx, edx
		_0xffffff8000ec565b: sub r9d, edx
		_0xffffff8000ec565e: mov cl, r9b
		_0xffffff8000ec5661: xor cl, 0x85
		_0xffffff8000ec5664: mov al, cl
		_0xffffff8000ec5666: add al, al
		_0xffffff8000ec5668: add cl, 0x81
		_0xffffff8000ec566b: and al, 0x22
		_0xffffff8000ec566d: sub cl, al
		_0xffffff8000ec566f: mov dl, 0x95
		_0xffffff8000ec5671: mov al, r9b
		_0xffffff8000ec5674: mul dl
		_0xffffff8000ec5676: shr ax, 8
		_0xffffff8000ec567a: mov dl, al
		_0xffffff8000ec567c: mov r10b, dl
		_0xffffff8000ec567f: shr r10b, 5
		_0xffffff8000ec5683: mov r11b, 0x37
		_0xffffff8000ec5686: mov al, r10b
		_0xffffff8000ec5689: mul r11b
		_0xffffff8000ec568c: mov r11b, r9b
		_0xffffff8000ec568f: sub r11b, al
		_0xffffff8000ec5692: add r11b, r11b
		_0xffffff8000ec5695: add r11b, 0x3c
		_0xffffff8000ec5699: shr dl, 6
		_0xffffff8000ec569c: mov al, dl
		_0xffffff8000ec569e: mul dl
		_0xffffff8000ec56a0: sub r11b, al
		_0xffffff8000ec56a3: and r10b, 1
		_0xffffff8000ec56a7: neg r10b
		_0xffffff8000ec56aa: and r10b, 0x2e
		_0xffffff8000ec56ae: add r10b, r11b
		_0xffffff8000ec56b1: mov al, dl
		_0xffffff8000ec56b3: add al, 0x6e
		_0xffffff8000ec56b5: mul al
		_0xffffff8000ec56b7: add al, r10b
		_0xffffff8000ec56ba: and al, 0x28
		_0xffffff8000ec56bc: mov dl, cl
		_0xffffff8000ec56be: xor dl, al
		_0xffffff8000ec56c0: and al, cl
		_0xffffff8000ec56c2: add al, al
		_0xffffff8000ec56c4: add al, dl
		_0xffffff8000ec56c6: movzx eax, al
		_0xffffff8000ec56c9: cmp al, 4
		_0xffffff8000ec56cb: sbb rbx, rbx
		_0xffffff8000ec56ce: and ebx, 0x100
		_0xffffff8000ec56d4: add ebx, eax
		_0xffffff8000ec56d6: add ebx, 0x42702c45
		_0xffffff8000ec56dc: shl rbx, 0x20
		_0xffffff8000ec56e0: movabs r15, 0xbd8fd3b700000000
		_0xffffff8000ec56ea: add r15, rbx
		_0xffffff8000ec56ed: mov rbx, r15
		_0xffffff8000ec56f0: sar rbx, 0x1f
		_0xffffff8000ec56f4: movabs r13, 0x6dfbfe7f4fffbfde
		_0xffffff8000ec56fe: and r13, rbx
		_0xffffff8000ec5701: sar r15, 0x20
		_0xffffff8000ec5705: movabs rbx, 0x36fdff3fa7ffdfef
		_0xffffff8000ec570f: xor rbx, r15
		_0xffffff8000ec5712: add rbx, r13
		_0xffffff8000ec5715: add rbx, qword ptr [r14 + 0x450]
		_0xffffff8000ec571c: movabs r15, 0xc90200c058002011
		_0xffffff8000ec5726: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec572a: mov byte ptr [r12 + 8], al
		_0xffffff8000ec572f: mov al, r8b
		_0xffffff8000ec5732: add al, al
		_0xffffff8000ec5734: mov cl, r8b
		_0xffffff8000ec5737: xor cl, 5
		_0xffffff8000ec573a: and al, 0x7e
		_0xffffff8000ec573c: add al, cl
		_0xffffff8000ec573e: add al, 0x24
		_0xffffff8000ec5740: add cl, cl
		_0xffffff8000ec5742: and cl, 0x74
		_0xffffff8000ec5745: sub al, cl
		_0xffffff8000ec5747: movzx eax, al
		_0xffffff8000ec574a: cmp al, 0x29
		_0xffffff8000ec574c: sbb rbx, rbx
		_0xffffff8000ec574f: and ebx, 0x100
		_0xffffff8000ec5755: add ebx, eax
		_0xffffff8000ec5757: add ebx, 0x52806728
		_0xffffff8000ec575d: shl rbx, 0x20
		_0xffffff8000ec5761: movabs r15, 0xad7f98af00000000
		_0xffffff8000ec576b: add r15, rbx
		_0xffffff8000ec576e: mov rbx, r15
		_0xffffff8000ec5771: sar rbx, 0x1f
		_0xffffff8000ec5775: movabs r13, 0xb3fff7e5f6ef33f8
		_0xffffff8000ec577f: and r13, rbx
		_0xffffff8000ec5782: sar r15, 0x20
		_0xffffff8000ec5786: movabs rbx, 0x59fffbf2fb7799fc
		_0xffffff8000ec5790: xor rbx, r15
		_0xffffff8000ec5793: add rbx, r13
		_0xffffff8000ec5796: add rbx, qword ptr [r14 + 0x470]
		_0xffffff8000ec579d: movabs r15, 0xa600040d04886604
		_0xffffff8000ec57a7: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec57ab: mov byte ptr [r12 + 0xc], al
		_0xffffff8000ec57b0: mov eax, 7
		_0xffffff8000ec57b5: sub eax, esi
		_0xffffff8000ec57b7: mov ecx, eax
		_0xffffff8000ec57b9: and ecx, esi
		_0xffffff8000ec57bb: xor eax, esi
		_0xffffff8000ec57bd: lea ecx, [rax + rcx*2]
		_0xffffff8000ec57c0: mov eax, esi
		_0xffffff8000ec57c2: shr eax, cl
		_0xffffff8000ec57c4: and eax, 0x9a
		_0xffffff8000ec57c9: neg eax
		_0xffffff8000ec57cb: mov ecx, esi
		_0xffffff8000ec57cd: shr ecx, 8
		_0xffffff8000ec57d0: add ecx, 0xcd
		_0xffffff8000ec57d6: mov edx, ecx
		_0xffffff8000ec57d8: and edx, eax
		_0xffffff8000ec57da: xor ecx, eax
		_0xffffff8000ec57dc: lea eax, [rcx + rdx*2]
		_0xffffff8000ec57df: xor eax, 0x6ae2573e
		_0xffffff8000ec57e4: lea ecx, [rax + rax]
		_0xffffff8000ec57e7: and ecx, 0xe6
		_0xffffff8000ec57ed: neg ecx
		_0xffffff8000ec57ef: lea eax, [rax + rcx + 0xf3]
		_0xffffff8000ec57f6: mov cl, al
		_0xffffff8000ec57f8: xor cl, 0xb6
		_0xffffff8000ec57fb: mov dl, cl
		_0xffffff8000ec57fd: add dl, dl
		_0xffffff8000ec57ff: add cl, 0xf5
		_0xffffff8000ec5802: and dl, 0xfa
		_0xffffff8000ec5805: sub cl, dl
		_0xffffff8000ec5807: mov dl, cl
		_0xffffff8000ec5809: add dl, dl
		_0xffffff8000ec580b: mov r10b, dl
		_0xffffff8000ec580e: and r10b, 8
		_0xffffff8000ec5812: mov r11b, cl
		_0xffffff8000ec5815: and r11b, 0x24
		_0xffffff8000ec5819: mov bl, 0x4c
		_0xffffff8000ec581b: sub bl, r11b
		_0xffffff8000ec581e: and bl, 0x24
		_0xffffff8000ec5821: or bl, r10b
		_0xffffff8000ec5824: mov r10b, cl
		_0xffffff8000ec5827: and r10b, 0x8a
		_0xffffff8000ec582b: add r10b, bl
		_0xffffff8000ec582e: and cl, 0x51
		_0xffffff8000ec5831: and dl, 2
		_0xffffff8000ec5834: or dl, cl
		_0xffffff8000ec5836: xor dl, 1
		_0xffffff8000ec5839: add dl, r10b
		_0xffffff8000ec583c: add al, al
		_0xffffff8000ec583e: mov cl, al
		_0xffffff8000ec5840: and cl, 0x12
		_0xffffff8000ec5843: mov r10b, dl
		_0xffffff8000ec5846: and r10b, cl
		_0xffffff8000ec5849: and al, 0x84
		_0xffffff8000ec584b: mov r11b, dl
		_0xffffff8000ec584e: and r11b, al
		_0xffffff8000ec5851: add r11b, r11b
		_0xffffff8000ec5854: mov bl, dl
		_0xffffff8000ec5856: and bl, 0xa4
		_0xffffff8000ec5859: or bl, 0x48
		_0xffffff8000ec585c: sub bl, al
		_0xffffff8000ec585e: and bl, 0xa4
		_0xffffff8000ec5861: or bl, r11b
		_0xffffff8000ec5864: mov al, dl
		_0xffffff8000ec5866: and al, 9
		_0xffffff8000ec5868: add r10b, r10b
		_0xffffff8000ec586b: or r10b, al
		_0xffffff8000ec586e: and dl, 0x52
		_0xffffff8000ec5871: or dl, 0x24
		_0xffffff8000ec5874: sub dl, cl
		_0xffffff8000ec5876: and dl, 0x52
		_0xffffff8000ec5879: or dl, r10b
		_0xffffff8000ec587c: add dl, bl
		_0xffffff8000ec587e: movzx eax, dl
		_0xffffff8000ec5881: cmp al, 0x48
		_0xffffff8000ec5883: sbb rbx, rbx
		_0xffffff8000ec5886: and ebx, 0x100
		_0xffffff8000ec588c: add ebx, eax
		_0xffffff8000ec588e: add ebx, 0x559d3bb7
		_0xffffff8000ec5894: shl rbx, 0x20
		_0xffffff8000ec5898: movabs r15, 0xaa62c40100000000
		_0xffffff8000ec58a2: add r15, rbx
		_0xffffff8000ec58a5: mov rbx, r15
		_0xffffff8000ec58a8: sar rbx, 0x1f
		_0xffffff8000ec58ac: movabs r13, 0xf17bdffadffdffae
		_0xffffff8000ec58b6: and r13, rbx
		_0xffffff8000ec58b9: sar r15, 0x20
		_0xffffff8000ec58bd: movabs rbx, 0x78bdeffd6ffeffd7
		_0xffffff8000ec58c7: xor rbx, r15
		_0xffffff8000ec58ca: add rbx, r13
		_0xffffff8000ec58cd: add rbx, qword ptr [r14 + 0x438]
		_0xffffff8000ec58d4: movabs r15, 0x8742100290010029
		_0xffffff8000ec58de: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec58e2: mov byte ptr [r12 + 1], al
		_0xffffff8000ec58e7: mov eax, 8
		_0xffffff8000ec58ec: sub eax, r9d
		_0xffffff8000ec58ef: mov ecx, eax
		_0xffffff8000ec58f1: and ecx, r9d
		_0xffffff8000ec58f4: xor eax, r9d
		_0xffffff8000ec58f7: lea ecx, [rax + rcx*2]
		_0xffffff8000ec58fa: mov eax, r9d
		_0xffffff8000ec58fd: shr eax, cl
		_0xffffff8000ec58ff: mov ecx, eax
		_0xffffff8000ec5901: and ecx, 0x10
		_0xffffff8000ec5904: xor eax, 0x90
		_0xffffff8000ec5909: lea eax, [rax + rcx*2]
		_0xffffff8000ec590c: mov ecx, r9d
		_0xffffff8000ec590f: shr ecx, 7
		_0xffffff8000ec5912: mov edx, ecx
		_0xffffff8000ec5914: or edx, 0xfe7009fa
		_0xffffff8000ec591a: xor edx, 0x18ff605
		_0xffffff8000ec5920: mov r10d, edx
		_0xffffff8000ec5923: and r10d, 0x67c4e541
		_0xffffff8000ec592a: sub edx, r10d
		_0xffffff8000ec592d: xor edx, r10d
		_0xffffff8000ec5930: or ecx, 0xff8ff604
		_0xffffff8000ec5936: xor ecx, 0x7009fa
		_0xffffff8000ec593c: and ecx, edx
		_0xffffff8000ec593e: sar ecx, 1
		_0xffffff8000ec5940: mov edx, ecx
		_0xffffff8000ec5942: xor edx, 0xcc
		_0xffffff8000ec5948: xor ecx, 0xdc
		_0xffffff8000ec594e: add ecx, 0x10
		_0xffffff8000ec5951: sub edx, ecx
		_0xffffff8000ec5953: add edx, eax
		_0xffffff8000ec5955: xor edx, 0x90
		_0xffffff8000ec595b: mov cl, dl
		_0xffffff8000ec595d: add cl, cl
		_0xffffff8000ec595f: mov r10b, cl
		_0xffffff8000ec5962: or r10b, 0x75
		_0xffffff8000ec5966: xor r10b, 0x8a
		_0xffffff8000ec596a: mov r11b, cl
		_0xffffff8000ec596d: or r11b, 0x8b
		_0xffffff8000ec5971: xor r11b, 0x74
		_0xffffff8000ec5975: mov al, r10b
		_0xffffff8000ec5978: mul r11b
		_0xffffff8000ec597b: mov bl, r10b
		_0xffffff8000ec597e: xor bl, r11b
		_0xffffff8000ec5981: sar r10b, 1
		_0xffffff8000ec5984: sar r11b, 1
		_0xffffff8000ec5987: add r11b, r10b
		_0xffffff8000ec598a: and al, 1
		_0xffffff8000ec598c: add al, r11b
		_0xffffff8000ec598f: sar bl, 1
		_0xffffff8000ec5991: sub al, bl
		_0xffffff8000ec5993: and al, 0xec
		_0xffffff8000ec5995: xor al, 0xec
		_0xffffff8000ec5997: xor dl, 0xaa
		_0xffffff8000ec599a: and cl, 0xb8
		_0xffffff8000ec599d: xor cl, 0xa8
		_0xffffff8000ec59a0: add cl, dl
		_0xffffff8000ec59a2: mov dl, al
		_0xffffff8000ec59a4: xor dl, cl
		_0xffffff8000ec59a6: and cl, al
		_0xffffff8000ec59a8: add cl, cl
		_0xffffff8000ec59aa: add cl, dl
		_0xffffff8000ec59ac: movzx ebx, cl
		_0xffffff8000ec59af: cmp bl, 0x52
		_0xffffff8000ec59b2: sbb r15, r15
		_0xffffff8000ec59b5: and r15, 0x100
		_0xffffff8000ec59bc: add r15, rbx
		_0xffffff8000ec59bf: add r15, -0x52
		_0xffffff8000ec59c3: movabs rbx, 0x7bf7ffffddf7dfb5
		_0xffffff8000ec59cd: mov r13, r15
		_0xffffff8000ec59d0: and r13, rbx
		_0xffffff8000ec59d3: xor r15, rbx
		_0xffffff8000ec59d6: lea rbx, [r15 + r13*2]
		_0xffffff8000ec59da: add rbx, qword ptr [r14 + 0x458]
		_0xffffff8000ec59e1: movabs r15, 0x840800002208204b
		_0xffffff8000ec59eb: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec59ef: mov byte ptr [r12 + 5], al
		_0xffffff8000ec59f4: mov eax, r8d
		_0xffffff8000ec59f7: shr eax, 8
		_0xffffff8000ec59fa: mov ecx, 0x8d
		_0xffffff8000ec59ff: sub ecx, eax
		_0xffffff8000ec5a01: mov edx, eax
		_0xffffff8000ec5a03: and edx, 0x922511
		_0xffffff8000ec5a09: mov r10d, ecx
		_0xffffff8000ec5a0c: and r10d, edx
		_0xffffff8000ec5a0f: mov r11d, eax
		_0xffffff8000ec5a12: and r11d, 0x4492a4
		_0xffffff8000ec5a19: mov ebx, ecx
		_0xffffff8000ec5a1b: and ebx, r11d
		_0xffffff8000ec5a1e: mov r15d, ecx
		_0xffffff8000ec5a21: and r15d, 0x4a4492a4
		_0xffffff8000ec5a28: xor r15d, r11d
		_0xffffff8000ec5a2b: add ebx, ebx
		_0xffffff8000ec5a2d: add ebx, r15d
		_0xffffff8000ec5a30: mov r11d, r8d
		_0xffffff8000ec5a33: shr r11d, 7
		_0xffffff8000ec5a37: and r11d, 0x1a
		_0xffffff8000ec5a3b: mov r15d, eax
		_0xffffff8000ec5a3e: sub r15d, r11d
		_0xffffff8000ec5a41: and eax, 0x29484a
		_0xffffff8000ec5a46: add eax, r15d
		_0xffffff8000ec5a49: mov r11d, ecx
		_0xffffff8000ec5a4c: and r11d, 0x9129484a
		_0xffffff8000ec5a53: add r11d, eax
		_0xffffff8000ec5a56: add r11d, ebx
		_0xffffff8000ec5a59: add r10d, r10d
		_0xffffff8000ec5a5c: and ecx, 0x24922511
		_0xffffff8000ec5a62: add ecx, 0x9244a22
		_0xffffff8000ec5a68: sub ecx, edx
		_0xffffff8000ec5a6a: and ecx, 0x24922511
		_0xffffff8000ec5a70: add ecx, r10d
		_0xffffff8000ec5a73: add ecx, r11d
		_0xffffff8000ec5a76: xor ecx, 0xad281936
		_0xffffff8000ec5a7c: lea eax, [rcx + rcx]
		_0xffffff8000ec5a7f: and eax, 0x76
		_0xffffff8000ec5a82: neg eax
		_0xffffff8000ec5a84: lea eax, [rcx + rax + 0xbb]
		_0xffffff8000ec5a8b: mov cl, al
		_0xffffff8000ec5a8d: add cl, cl
		_0xffffff8000ec5a8f: mov dl, cl
		_0xffffff8000ec5a91: and dl, 0x82
		_0xffffff8000ec5a94: and cl, 0x7c
		_0xffffff8000ec5a97: or cl, dl
		_0xffffff8000ec5a99: sar cl, 1
		_0xffffff8000ec5a9b: mov dl, cl
		_0xffffff8000ec5a9d: xor dl, 0xf8
		_0xffffff8000ec5aa0: add cl, 0xb8
		_0xffffff8000ec5aa3: sub cl, dl
		_0xffffff8000ec5aa5: xor al, 0x4b
		_0xffffff8000ec5aa7: mov dl, al
		_0xffffff8000ec5aa9: and dl, 0x54
		_0xffffff8000ec5aac: mov r10b, 0xb8
		_0xffffff8000ec5aaf: sub r10b, dl
		_0xffffff8000ec5ab2: and r10b, 0x54
		_0xffffff8000ec5ab6: mov dl, al
		_0xffffff8000ec5ab8: and dl, 0x21
		_0xffffff8000ec5abb: add dl, 0x21
		_0xffffff8000ec5abe: and dl, 0x21
		_0xffffff8000ec5ac1: or dl, r10b
		_0xffffff8000ec5ac4: and al, 0x8a
		_0xffffff8000ec5ac6: or al, 0x14
		_0xffffff8000ec5ac8: add al, 0xfe
		_0xffffff8000ec5aca: and al, 0x8a
		_0xffffff8000ec5acc: or al, dl
		_0xffffff8000ec5ace: add al, cl
		_0xffffff8000ec5ad0: movzx eax, al
		_0xffffff8000ec5ad3: cmp al, 0x38
		_0xffffff8000ec5ad5: sbb rbx, rbx
		_0xffffff8000ec5ad8: and ebx, 0x100
		_0xffffff8000ec5ade: add ebx, eax
		_0xffffff8000ec5ae0: add ebx, 0x6f37f481
		_0xffffff8000ec5ae6: shl rbx, 0x20
		_0xffffff8000ec5aea: movabs r15, 0x90c80b4700000000
		_0xffffff8000ec5af4: add r15, rbx
		_0xffffff8000ec5af7: mov rbx, r15
		_0xffffff8000ec5afa: sar rbx, 0x1f
		_0xffffff8000ec5afe: movabs r13, 0xf5ffdf7eafedb0be
		_0xffffff8000ec5b08: and r13, rbx
		_0xffffff8000ec5b0b: sar r15, 0x20
		_0xffffff8000ec5b0f: movabs rbx, 0x7affefbf57f6d85f
		_0xffffff8000ec5b19: xor rbx, r15
		_0xffffff8000ec5b1c: add rbx, r13
		_0xffffff8000ec5b1f: add rbx, qword ptr [r14 + 0x478]
		_0xffffff8000ec5b26: movabs r15, 0x85001040a80927a1
		_0xffffff8000ec5b30: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec5b34: mov byte ptr [r12 + 9], al
		_0xffffff8000ec5b39: mov eax, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec5b3f: shr eax, 7
		_0xffffff8000ec5b42: and eax, 0x8e
		_0xffffff8000ec5b47: mov ecx, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec5b4d: shr ecx, 8
		_0xffffff8000ec5b50: add ecx, 0x47
		_0xffffff8000ec5b53: sub ecx, eax
		_0xffffff8000ec5b55: xor ecx, 0x47
		_0xffffff8000ec5b58: mov al, cl
		_0xffffff8000ec5b5a: add al, al
		_0xffffff8000ec5b5c: xor cl, 0x2f
		_0xffffff8000ec5b5f: and al, 0x5e
		_0xffffff8000ec5b61: add al, cl
		_0xffffff8000ec5b63: add al, 0xdb
		_0xffffff8000ec5b65: movzx eax, al
		_0xffffff8000ec5b68: cmp al, 0xa
		_0xffffff8000ec5b6a: sbb rbx, rbx
		_0xffffff8000ec5b6d: and ebx, 0x100
		_0xffffff8000ec5b73: add ebx, eax
		_0xffffff8000ec5b75: add ebx, 0x1c12ae02
		_0xffffff8000ec5b7b: shl rbx, 0x20
		_0xffffff8000ec5b7f: movabs r15, 0xe3ed51f400000000
		_0xffffff8000ec5b89: add r15, rbx
		_0xffffff8000ec5b8c: mov rbx, r15
		_0xffffff8000ec5b8f: sar rbx, 0x1f
		_0xffffff8000ec5b93: movabs r13, 0xceddff3b37ffffda
		_0xffffff8000ec5b9d: and r13, rbx
		_0xffffff8000ec5ba0: sar r15, 0x20
		_0xffffff8000ec5ba4: movabs rbx, 0x676eff9d9bffffed
		_0xffffff8000ec5bae: xor rbx, r15
		_0xffffff8000ec5bb1: add rbx, r13
		_0xffffff8000ec5bb4: add rbx, qword ptr [r14 + 0x418]
		_0xffffff8000ec5bbb: movabs r15, 0x9891006264000013
		_0xffffff8000ec5bc5: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec5bc9: mov byte ptr [r12 + 0xd], al
		_0xffffff8000ec5bce: mov eax, r9d
		_0xffffff8000ec5bd1: shr eax, 0x10
		_0xffffff8000ec5bd4: mov ecx, 0x60
		_0xffffff8000ec5bd9: sub ecx, eax
		_0xffffff8000ec5bdb: mov edx, ecx
		_0xffffff8000ec5bdd: and edx, eax
		_0xffffff8000ec5bdf: xor ecx, eax
		_0xffffff8000ec5be1: lea ecx, [rcx + rdx*2]
		_0xffffff8000ec5be4: mov edx, ecx
		_0xffffff8000ec5be6: and edx, eax
		_0xffffff8000ec5be8: xor ecx, eax
		_0xffffff8000ec5bea: mov r10d, 0xffffffa0
		_0xffffff8000ec5bf0: sub r10d, eax
		_0xffffff8000ec5bf3: xor eax, 0x60
		_0xffffff8000ec5bf6: add eax, r10d
		_0xffffff8000ec5bf9: add eax, ecx
		_0xffffff8000ec5bfb: lea eax, [rax + rdx*2]
		_0xffffff8000ec5bfe: xor eax, 0xd6a0290a
		_0xffffff8000ec5c03: lea ecx, [rax + rax]
		_0xffffff8000ec5c06: and ecx, 0xd4
		_0xffffff8000ec5c0c: neg ecx
		_0xffffff8000ec5c0e: lea ecx, [rax + rcx + 0x6a]
		_0xffffff8000ec5c12: mov dl, 0x29
		_0xffffff8000ec5c14: mov al, cl
		_0xffffff8000ec5c16: mul dl
		_0xffffff8000ec5c18: shr ax, 8
		_0xffffff8000ec5c1c: mov dl, al
		_0xffffff8000ec5c1e: shr dl, 3
		_0xffffff8000ec5c21: mov r10b, 0x32
		_0xffffff8000ec5c24: mov al, dl
		_0xffffff8000ec5c26: mul r10b
		_0xffffff8000ec5c29: mov r10b, cl
		_0xffffff8000ec5c2c: sub r10b, al
		_0xffffff8000ec5c2f: add r10b, r10b
		_0xffffff8000ec5c32: mov r11b, 0x64
		_0xffffff8000ec5c35: mov al, dl
		_0xffffff8000ec5c37: mul r11b
		_0xffffff8000ec5c3a: add al, r10b
		_0xffffff8000ec5c3d: mov dl, 0xb9
		_0xffffff8000ec5c3f: sub dl, al
		_0xffffff8000ec5c41: mov r10b, dl
		_0xffffff8000ec5c44: xor r10b, al
		_0xffffff8000ec5c47: and dl, al
		_0xffffff8000ec5c49: add dl, dl
		_0xffffff8000ec5c4b: add dl, r10b
		_0xffffff8000ec5c4e: mov r10b, dl
		_0xffffff8000ec5c51: xor r10b, al
		_0xffffff8000ec5c54: and dl, al
		_0xffffff8000ec5c56: add dl, dl
		_0xffffff8000ec5c58: add dl, r10b
		_0xffffff8000ec5c5b: xor cl, 0x48
		_0xffffff8000ec5c5e: mov al, cl
		_0xffffff8000ec5c60: add al, al
		_0xffffff8000ec5c62: add cl, 7
		_0xffffff8000ec5c65: and al, 0xe
		_0xffffff8000ec5c67: sub cl, al
		_0xffffff8000ec5c69: xor cl, 0x30
		_0xffffff8000ec5c6c: mov al, cl
		_0xffffff8000ec5c6e: xor al, dl
		_0xffffff8000ec5c70: mov r10b, al
		_0xffffff8000ec5c73: and r10b, 0x89
		_0xffffff8000ec5c77: mov r11b, dl
		_0xffffff8000ec5c7a: and r11b, cl
		_0xffffff8000ec5c7d: mov bl, r11b
		_0xffffff8000ec5c80: and bl, 9
		_0xffffff8000ec5c83: add bl, bl
		_0xffffff8000ec5c85: or bl, r10b
		_0xffffff8000ec5c88: and al, 0x24
		_0xffffff8000ec5c8a: and r11b, 0x24
		_0xffffff8000ec5c8e: add r11b, r11b
		_0xffffff8000ec5c91: or r11b, al
		_0xffffff8000ec5c94: and dl, 0x52
		_0xffffff8000ec5c97: and cl, 0x52
		_0xffffff8000ec5c9a: add cl, dl
		_0xffffff8000ec5c9c: add cl, r11b
		_0xffffff8000ec5c9f: add cl, bl
		_0xffffff8000ec5ca1: movzx eax, cl
		_0xffffff8000ec5ca4: cmp al, 0x38
		_0xffffff8000ec5ca6: sbb rbx, rbx
		_0xffffff8000ec5ca9: and ebx, 0x100
		_0xffffff8000ec5caf: add ebx, eax
		_0xffffff8000ec5cb1: add ebx, 0x4471d01b
		_0xffffff8000ec5cb7: shl rbx, 0x20
		_0xffffff8000ec5cbb: movabs r15, 0xbb8e2fad00000000
		_0xffffff8000ec5cc5: add r15, rbx
		_0xffffff8000ec5cc8: mov rbx, r15
		_0xffffff8000ec5ccb: sar rbx, 0x1f
		_0xffffff8000ec5ccf: movabs r13, 0xfdafedd7dfdfbfd6
		_0xffffff8000ec5cd9: and r13, rbx
		_0xffffff8000ec5cdc: sar r15, 0x20
		_0xffffff8000ec5ce0: movabs rbx, 0x7ed7f6ebefefdfeb
		_0xffffff8000ec5cea: xor rbx, r15
		_0xffffff8000ec5ced: add rbx, r13
		_0xffffff8000ec5cf0: add rbx, qword ptr [r14 + 0x460]
		_0xffffff8000ec5cf7: movabs r15, 0x8128091410102015
		_0xffffff8000ec5d01: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec5d05: mov byte ptr [r12 + 2], al
		_0xffffff8000ec5d0a: mov eax, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec5d10: shr eax, 0xf
		_0xffffff8000ec5d13: and eax, 0x78
		_0xffffff8000ec5d16: mov ecx, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec5d1c: shr ecx, 0x10
		_0xffffff8000ec5d1f: add ecx, 0x3c
		_0xffffff8000ec5d22: sub ecx, eax
		_0xffffff8000ec5d24: xor ecx, 0x3c
		_0xffffff8000ec5d27: mov al, cl
		_0xffffff8000ec5d29: add al, al
		_0xffffff8000ec5d2b: xor cl, 0x6c
		_0xffffff8000ec5d2e: and al, 0xd8
		_0xffffff8000ec5d30: add al, cl
		_0xffffff8000ec5d32: add al, 0xe0
		_0xffffff8000ec5d34: movzx eax, al
		_0xffffff8000ec5d37: cmp al, 0x4c
		_0xffffff8000ec5d39: sbb rbx, rbx
		_0xffffff8000ec5d3c: and ebx, 0x100
		_0xffffff8000ec5d42: add ebx, eax
		_0xffffff8000ec5d44: add ebx, 0x30096228
		_0xffffff8000ec5d4a: shl rbx, 0x20
		_0xffffff8000ec5d4e: movabs r15, 0xcff69d8c00000000
		_0xffffff8000ec5d58: add r15, rbx
		_0xffffff8000ec5d5b: mov rbx, r15
		_0xffffff8000ec5d5e: sar rbx, 0x1f
		_0xffffff8000ec5d62: movabs r13, 0xffbbff7eef5fb8aa
		_0xffffff8000ec5d6c: and r13, rbx
		_0xffffff8000ec5d6f: sar r15, 0x20
		_0xffffff8000ec5d73: movabs rbx, 0x7fddffbf77afdc55
		_0xffffff8000ec5d7d: xor rbx, r15
		_0xffffff8000ec5d80: add rbx, r13
		_0xffffff8000ec5d83: add rbx, qword ptr [r14 + 0x420]
		_0xffffff8000ec5d8a: movabs r15, 0x80220040885023ab
		_0xffffff8000ec5d94: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec5d98: mov byte ptr [r12 + 0xa], al
		_0xffffff8000ec5d9d: mov eax, r8d
		_0xffffff8000ec5da0: shr eax, 0xf
		_0xffffff8000ec5da3: mov ecx, eax
		_0xffffff8000ec5da5: and ecx, 0x704d
		_0xffffff8000ec5dab: xor ecx, 0xd50e365e
		_0xffffff8000ec5db1: mov edx, ecx
		_0xffffff8000ec5db3: and edx, 0x404444a
		_0xffffff8000ec5db9: and eax, 0x18fb2
		_0xffffff8000ec5dbe: xor eax, 0xd50e365e
		_0xffffff8000ec5dc3: mov r10d, eax
		_0xffffff8000ec5dc6: and r10d, 0x405044a
		_0xffffff8000ec5dcd: add r10d, 0x88a8894
		_0xffffff8000ec5dd4: sub r10d, edx
		_0xffffff8000ec5dd7: and r10d, 0x2445444a
		_0xffffff8000ec5dde: mov edx, eax
		_0xffffff8000ec5de0: and edx, 0x5000a914
		_0xffffff8000ec5de6: mov r11d, ecx
		_0xffffff8000ec5de9: and r11d, 0x50002014
		_0xffffff8000ec5df0: add r11d, 0x25215228
		_0xffffff8000ec5df7: sub r11d, edx
		_0xffffff8000ec5dfa: and r11d, 0x5290a914
		_0xffffff8000ec5e01: add r11d, r10d
		_0xffffff8000ec5e04: and eax, 0x810a12a0
		_0xffffff8000ec5e09: and ecx, 0x810a1201
		_0xffffff8000ec5e0f: add ecx, 0x12542542
		_0xffffff8000ec5e15: sub ecx, eax
		_0xffffff8000ec5e17: and ecx, 0x892a12a0
		_0xffffff8000ec5e1d: add ecx, r11d
		_0xffffff8000ec5e20: sar ecx, 1
		_0xffffff8000ec5e22: mov eax, ecx
		_0xffffff8000ec5e24: xor eax, 0x33
		_0xffffff8000ec5e27: mov edx, 0x33
		_0xffffff8000ec5e2c: sub edx, eax
		_0xffffff8000ec5e2e: add edx, ecx
		_0xffffff8000ec5e30: neg edx
		_0xffffff8000ec5e32: mov eax, r8d
		_0xffffff8000ec5e35: shr eax, 0x10
		_0xffffff8000ec5e38: mov ecx, eax
		_0xffffff8000ec5e3a: and ecx, 0x14a2
		_0xffffff8000ec5e40: mov r10d, eax
		_0xffffff8000ec5e43: and r10d, 0x4240
		_0xffffff8000ec5e4a: add r10d, ecx
		_0xffffff8000ec5e4d: mov ecx, eax
		_0xffffff8000ec5e4f: and ecx, 9
		_0xffffff8000ec5e52: add ecx, r10d
		_0xffffff8000ec5e55: mov r10d, eax
		_0xffffff8000ec5e58: and r10d, 0x2804
		_0xffffff8000ec5e5f: and eax, 0x8110
		_0xffffff8000ec5e64: add eax, 0x22a15228
		_0xffffff8000ec5e69: sub eax, r10d
		_0xffffff8000ec5e6c: and eax, 0x9150a914
		_0xffffff8000ec5e71: add eax, ecx
		_0xffffff8000ec5e73: add eax, 0xb3
		_0xffffff8000ec5e78: mov ecx, eax
		_0xffffff8000ec5e7a: and ecx, edx
		_0xffffff8000ec5e7c: xor eax, edx
		_0xffffff8000ec5e7e: lea eax, [rax + rcx*2]
		_0xffffff8000ec5e81: xor eax, 0xc0e39c7a
		_0xffffff8000ec5e86: lea ecx, [rax + rax]
		_0xffffff8000ec5e89: and ecx, 0x92
		_0xffffff8000ec5e8f: neg ecx
		_0xffffff8000ec5e91: lea eax, [rax + rcx + 0xc9]
		_0xffffff8000ec5e98: mov cl, al
		_0xffffff8000ec5e9a: xor cl, 4
		_0xffffff8000ec5e9d: mov dl, cl
		_0xffffff8000ec5e9f: add dl, dl
		_0xffffff8000ec5ea1: add cl, 0x79
		_0xffffff8000ec5ea4: and dl, 0xf2
		_0xffffff8000ec5ea7: sub cl, dl
		_0xffffff8000ec5ea9: mov dl, cl
		_0xffffff8000ec5eab: add dl, dl
		_0xffffff8000ec5ead: xor cl, 0xb7
		_0xffffff8000ec5eb0: and dl, 0x6e
		_0xffffff8000ec5eb3: add dl, cl
		_0xffffff8000ec5eb5: add al, al
		_0xffffff8000ec5eb7: mov cl, al
		_0xffffff8000ec5eb9: and cl, 0x72
		_0xffffff8000ec5ebc: and al, 0x88
		_0xffffff8000ec5ebe: or al, cl
		_0xffffff8000ec5ec0: mov cl, dl
		_0xffffff8000ec5ec2: xor cl, al
		_0xffffff8000ec5ec4: and al, dl
		_0xffffff8000ec5ec6: add al, al
		_0xffffff8000ec5ec8: add al, cl
		_0xffffff8000ec5eca: movzx ebx, al
		_0xffffff8000ec5ecd: cmp bl, 0x34
		_0xffffff8000ec5ed0: sbb r15, r15
		_0xffffff8000ec5ed3: and r15, 0x100
		_0xffffff8000ec5eda: add r15, rbx
		_0xffffff8000ec5edd: add r15, -0x34
		_0xffffff8000ec5ee1: movabs rbx, 0x767ffffc9fffef37
		_0xffffff8000ec5eeb: mov r13, r15
		_0xffffff8000ec5eee: and r13, rbx
		_0xffffff8000ec5ef1: xor r15, rbx
		_0xffffff8000ec5ef4: lea rbx, [r15 + r13*2]
		_0xffffff8000ec5ef8: add rbx, qword ptr [r14 + 0x480]
		_0xffffff8000ec5eff: movabs r15, 0x89800003600010c9
		_0xffffff8000ec5f09: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec5f0d: mov byte ptr [r12 + 6], al
		_0xffffff8000ec5f12: mov eax, esi
		_0xffffff8000ec5f14: xor eax, 0x151f8000
		_0xffffff8000ec5f19: shr eax, 0xf
		_0xffffff8000ec5f1c: mov ecx, eax
		_0xffffff8000ec5f1e: and ecx, 0x1e1dd
		_0xffffff8000ec5f24: xor ecx, 0x5193267e
		_0xffffff8000ec5f2a: and eax, 0x1e22
		_0xffffff8000ec5f2f: xor eax, 0x5193267e
		_0xffffff8000ec5f34: lea edx, [rax + rcx]
		_0xffffff8000ec5f37: and eax, ecx
		_0xffffff8000ec5f39: add eax, eax
		_0xffffff8000ec5f3b: sub edx, eax
		_0xffffff8000ec5f3d: xor edx, 0x2a3f
		_0xffffff8000ec5f43: mov eax, edx
		_0xffffff8000ec5f45: sar eax, 6
		_0xffffff8000ec5f48: mov ecx, eax
		_0xffffff8000ec5f4a: xor ecx, 2
		_0xffffff8000ec5f4d: neg ecx
		_0xffffff8000ec5f4f: lea eax, [rax + rcx + 2]
		_0xffffff8000ec5f53: shl eax, 5
		_0xffffff8000ec5f56: and edx, 8
		_0xffffff8000ec5f59: add edx, eax
		_0xffffff8000ec5f5b: mov eax, esi
		_0xffffff8000ec5f5d: shr eax, 0xf
		_0xffffff8000ec5f60: and eax, 0x88
		_0xffffff8000ec5f65: mov ecx, esi
		_0xffffff8000ec5f67: shr ecx, 0x10
		_0xffffff8000ec5f6a: xor ecx, 0xc4
		_0xffffff8000ec5f70: add ecx, eax
		_0xffffff8000ec5f72: sub ecx, edx
		_0xffffff8000ec5f74: xor ecx, 0xc4
		_0xffffff8000ec5f7a: mov al, 0x6f
		_0xffffff8000ec5f7c: sub al, cl
		_0xffffff8000ec5f7e: mov dl, al
		_0xffffff8000ec5f80: xor dl, cl
		_0xffffff8000ec5f82: and al, cl
		_0xffffff8000ec5f84: add al, al
		_0xffffff8000ec5f86: add al, dl
		_0xffffff8000ec5f88: xor al, 0x1e
		_0xffffff8000ec5f8a: mov dl, cl
		_0xffffff8000ec5f8c: xor dl, 0x1e
		_0xffffff8000ec5f8f: mov r10b, dl
		_0xffffff8000ec5f92: add r10b, al
		_0xffffff8000ec5f95: and dl, al
		_0xffffff8000ec5f97: add dl, dl
		_0xffffff8000ec5f99: add r10b, 0xbf
		_0xffffff8000ec5f9d: sub r10b, dl
		_0xffffff8000ec5fa0: mov dl, r10b
		_0xffffff8000ec5fa3: and dl, 0x4a
		_0xffffff8000ec5fa6: or dl, 0x14
		_0xffffff8000ec5fa9: mov r11b, cl
		_0xffffff8000ec5fac: or r11b, 0x93
		_0xffffff8000ec5fb0: xor r11b, 0x6c
		_0xffffff8000ec5fb4: or cl, 0x6c
		_0xffffff8000ec5fb7: xor cl, 0x93
		_0xffffff8000ec5fba: mov al, r11b
		_0xffffff8000ec5fbd: mul cl
		_0xffffff8000ec5fbf: mov bl, r11b
		_0xffffff8000ec5fc2: xor bl, cl
		_0xffffff8000ec5fc4: shr r11b, 1
		_0xffffff8000ec5fc7: shr cl, 1
		_0xffffff8000ec5fc9: add cl, r11b
		_0xffffff8000ec5fcc: and al, 1
		_0xffffff8000ec5fce: add al, cl
		_0xffffff8000ec5fd0: shr bl, 1
		_0xffffff8000ec5fd2: sub al, bl
		_0xffffff8000ec5fd4: add al, al
		_0xffffff8000ec5fd6: xor al, 0xfe
		_0xffffff8000ec5fd8: mov cl, al
		_0xffffff8000ec5fda: and cl, 0x4a
		_0xffffff8000ec5fdd: sub dl, cl
		_0xffffff8000ec5fdf: and cl, r10b
		_0xffffff8000ec5fe2: add cl, cl
		_0xffffff8000ec5fe4: and dl, 0x4a
		_0xffffff8000ec5fe7: or dl, cl
		_0xffffff8000ec5fe9: mov cl, r10b
		_0xffffff8000ec5fec: and cl, 0x14
		_0xffffff8000ec5fef: mov r11b, al
		_0xffffff8000ec5ff2: and r11b, 0x14
		_0xffffff8000ec5ff6: add r11b, cl
		_0xffffff8000ec5ff9: and r10b, 0xa1
		_0xffffff8000ec5ffd: add r10b, r11b
		_0xffffff8000ec6000: and al, 0x80
		_0xffffff8000ec6002: add al, r10b
		_0xffffff8000ec6005: add al, dl
		_0xffffff8000ec6007: movzx eax, al
		_0xffffff8000ec600a: cmp al, 0x2e
		_0xffffff8000ec600c: sbb rbx, rbx
		_0xffffff8000ec600f: and ebx, 0x100
		_0xffffff8000ec6015: add ebx, eax
		_0xffffff8000ec6017: add ebx, 0x7b89d927
		_0xffffff8000ec601d: shl rbx, 0x20
		_0xffffff8000ec6021: movabs r15, 0x847626ab00000000
		_0xffffff8000ec602b: add r15, rbx
		_0xffffff8000ec602e: mov rbx, r15
		_0xffffff8000ec6031: sar rbx, 0x1f
		_0xffffff8000ec6035: movabs r13, 0xef77ef7a2db54f7c
		_0xffffff8000ec603f: and r13, rbx
		_0xffffff8000ec6042: sar r15, 0x20
		_0xffffff8000ec6046: movabs rbx, 0x77bbf7bd16daa7be
		_0xffffff8000ec6050: xor rbx, r15
		_0xffffff8000ec6053: add rbx, r13
		_0xffffff8000ec6056: add rbx, qword ptr [r14 + 0x440]
		_0xffffff8000ec605d: movabs r15, 0x88440842e9255842
		_0xffffff8000ec6067: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec606b: mov byte ptr [r12 + 0xe], al
		_0xffffff8000ec6070: mov ecx, 0x17
		_0xffffff8000ec6075: sub ecx, r9d
		_0xffffff8000ec6078: mov eax, ecx
		_0xffffff8000ec607a: and eax, 0x8928a922
		_0xffffff8000ec607f: mov edx, r9d
		_0xffffff8000ec6082: and edx, 2
		_0xffffff8000ec6085: sub edx, eax
		_0xffffff8000ec6087: and eax, r9d
		_0xffffff8000ec608a: mov r10d, r9d
		_0xffffff8000ec608d: and r10d, 0x22921494
		_0xffffff8000ec6094: mov r11d, ecx
		_0xffffff8000ec6097: and r11d, r10d
		_0xffffff8000ec609a: add r11d, r11d
		_0xffffff8000ec609d: mov ebx, ecx
		_0xffffff8000ec609f: and ebx, 0x14
		_0xffffff8000ec60a2: add ebx, 8
		_0xffffff8000ec60a5: sub ebx, r10d
		_0xffffff8000ec60a8: and ebx, 0x14
		_0xffffff8000ec60ab: add ebx, r11d
		_0xffffff8000ec60ae: add eax, eax
		_0xffffff8000ec60b0: and edx, 2
		_0xffffff8000ec60b3: add edx, eax
		_0xffffff8000ec60b5: mov eax, r9d
		_0xffffff8000ec60b8: and eax, 9
		_0xffffff8000ec60bb: and ecx, 9
		_0xffffff8000ec60be: add ecx, eax
		_0xffffff8000ec60c0: add ecx, edx
		_0xffffff8000ec60c2: add ecx, ebx
		_0xffffff8000ec60c4: and ecx, 0x1f
		_0xffffff8000ec60c7: mov eax, r9d
		_0xffffff8000ec60ca: and eax, 0x9e8ecb23
		_0xffffff8000ec60cf: shr eax, cl
		_0xffffff8000ec60d1: mov edx, eax
		_0xffffff8000ec60d3: and edx, 0x549214a4
		_0xffffff8000ec60d9: mov r10d, r9d
		_0xffffff8000ec60dc: and r10d, 0x617134dc
		_0xffffff8000ec60e3: shr r10d, cl
		_0xffffff8000ec60e6: mov ecx, r10d
		_0xffffff8000ec60e9: and ecx, 0x24
		_0xffffff8000ec60ec: add ecx, 8
		_0xffffff8000ec60ef: sub ecx, edx
		_0xffffff8000ec60f1: and edx, r10d
		_0xffffff8000ec60f4: mov r11d, eax
		_0xffffff8000ec60f7: and r11d, 0xa248a911
		_0xffffff8000ec60fe: mov ebx, r10d
		_0xffffff8000ec6101: and ebx, 0x11
		_0xffffff8000ec6104: add ebx, 2
		_0xffffff8000ec6107: sub ebx, r11d
		_0xffffff8000ec610a: and r11d, r10d
		_0xffffff8000ec610d: add r11d, r11d
		_0xffffff8000ec6110: and ebx, 0x11
		_0xffffff8000ec6113: add ebx, r11d
		_0xffffff8000ec6116: add edx, edx
		_0xffffff8000ec6118: and ecx, 0x24
		_0xffffff8000ec611b: add ecx, edx
		_0xffffff8000ec611d: and eax, 0x4a
		_0xffffff8000ec6120: and r10d, 0x4a
		_0xffffff8000ec6124: add r10d, eax
		_0xffffff8000ec6127: add r10d, ecx
		_0xffffff8000ec612a: add r10d, ebx
		_0xffffff8000ec612d: and r10d, 0x50
		_0xffffff8000ec6131: neg r10d
		_0xffffff8000ec6134: shr r9d, 0x18
		_0xffffff8000ec6138: mov eax, r9d
		_0xffffff8000ec613b: and eax, 0x80
		_0xffffff8000ec6140: mov ecx, r9d
		_0xffffff8000ec6143: and ecx, 0x14
		_0xffffff8000ec6146: add ecx, eax
		_0xffffff8000ec6148: mov eax, r9d
		_0xffffff8000ec614b: and eax, 0x20
		_0xffffff8000ec614e: mov edx, r9d
		_0xffffff8000ec6151: and edx, 1
		_0xffffff8000ec6154: add edx, 0x4514a42
		_0xffffff8000ec615a: sub edx, eax
		_0xffffff8000ec615c: and edx, 0x2228a521
		_0xffffff8000ec6162: add edx, ecx
		_0xffffff8000ec6164: mov eax, r9d
		_0xffffff8000ec6167: and eax, 0xa
		_0xffffff8000ec616a: and r9d, 0x40
		_0xffffff8000ec616e: add r9d, 0x29249094
		_0xffffff8000ec6175: sub r9d, eax
		_0xffffff8000ec6178: and r9d, 0x5492484a
		_0xffffff8000ec617f: add r9d, edx
		_0xffffff8000ec6182: mov eax, r9d
		_0xffffff8000ec6185: and eax, 0xa8
		_0xffffff8000ec618a: xor r9d, 0xa8
		_0xffffff8000ec6191: lea eax, [r9 + rax*2]
		_0xffffff8000ec6195: mov ecx, eax
		_0xffffff8000ec6197: and ecx, r10d
		_0xffffff8000ec619a: xor r10d, eax
		_0xffffff8000ec619d: lea edx, [r10 + rcx*2]
		_0xffffff8000ec61a1: xor edx, 0xa8
		_0xffffff8000ec61a7: mov cl, 1
		_0xffffff8000ec61a9: sub cl, dl
		_0xffffff8000ec61ab: mov al, cl
		_0xffffff8000ec61ad: xor al, dl
		_0xffffff8000ec61af: and cl, dl
		_0xffffff8000ec61b1: add cl, cl
		_0xffffff8000ec61b3: add cl, al
		_0xffffff8000ec61b5: mov r9b, dl
		_0xffffff8000ec61b8: add r9b, 0x11
		_0xffffff8000ec61bc: mov r10b, r9b
		_0xffffff8000ec61bf: and r10b, 0xfd
		_0xffffff8000ec61c3: shl r10b, cl
		_0xffffff8000ec61c6: xor r10b, 3
		_0xffffff8000ec61ca: and r9b, 2
		_0xffffff8000ec61ce: shl r9b, cl
		_0xffffff8000ec61d1: not r9b
		_0xffffff8000ec61d4: mov al, r10b
		_0xffffff8000ec61d7: mul r9b
		_0xffffff8000ec61da: mov r11b, r10b
		_0xffffff8000ec61dd: xor r11b, r9b
		_0xffffff8000ec61e0: mov bl, r9b
		_0xffffff8000ec61e3: sar bl, 1
		_0xffffff8000ec61e5: sar r10b, 1
		_0xffffff8000ec61e8: add r10b, bl
		_0xffffff8000ec61eb: and al, 1
		_0xffffff8000ec61ed: add al, r10b
		_0xffffff8000ec61f0: sar r11b, 1
		_0xffffff8000ec61f3: sub al, r11b
		_0xffffff8000ec61f6: or r9b, 3
		_0xffffff8000ec61fa: xor r9b, al
		_0xffffff8000ec61fd: xor r9b, 0xfc
		_0xffffff8000ec6201: mov al, 0x11
		_0xffffff8000ec6203: shl al, cl
		_0xffffff8000ec6205: sub r9b, al
		_0xffffff8000ec6208: and r9b, 0xcc
		_0xffffff8000ec620c: mov al, dl
		_0xffffff8000ec620e: add al, al
		_0xffffff8000ec6210: xor dl, 0x98
		_0xffffff8000ec6213: and al, 0xfc
		_0xffffff8000ec6215: xor al, 0xcc
		_0xffffff8000ec6217: add al, dl
		_0xffffff8000ec6219: mov cl, r9b
		_0xffffff8000ec621c: xor cl, al
		_0xffffff8000ec621e: and al, r9b
		_0xffffff8000ec6221: add al, al
		_0xffffff8000ec6223: add al, cl
		_0xffffff8000ec6225: movzx ebx, al
		_0xffffff8000ec6228: cmp bl, 0x64
		_0xffffff8000ec622b: sbb r15, r15
		_0xffffff8000ec622e: and r15, 0x100
		_0xffffff8000ec6235: add r15, rbx
		_0xffffff8000ec6238: add r15, -0x64
		_0xffffff8000ec623c: movabs rbx, 0x3daeaf6d3bfd3eff
		_0xffffff8000ec6246: mov r13, r15
		_0xffffff8000ec6249: and r13, rbx
		_0xffffff8000ec624c: xor r15, rbx
		_0xffffff8000ec624f: lea rbx, [r15 + r13*2]
		_0xffffff8000ec6253: add rbx, qword ptr [r14 + 0x468]
		_0xffffff8000ec625a: movabs r15, 0xc2515092c402c101
		_0xffffff8000ec6264: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec6268: mov byte ptr [r12 + 0xf], al
		_0xffffff8000ec626d: shr edi, 0x18
		_0xffffff8000ec6270: and edi, 0x5d
		_0xffffff8000ec6273: shr esi, 0x18
		_0xffffff8000ec6276: mov eax, esi
		_0xffffff8000ec6278: and eax, 0xa2
		_0xffffff8000ec627d: add eax, edi
		_0xffffff8000ec627f: mov ecx, eax
		_0xffffff8000ec6281: and ecx, 0x62
		_0xffffff8000ec6284: xor eax, 0x62
		_0xffffff8000ec6287: lea eax, [rax + rcx*2]
		_0xffffff8000ec628a: mov ecx, esi
		_0xffffff8000ec628c: xor ecx, 0x62
		_0xffffff8000ec628f: mov edx, 0x62
		_0xffffff8000ec6294: sub edx, ecx
		_0xffffff8000ec6296: add edx, esi
		_0xffffff8000ec6298: neg edx
		_0xffffff8000ec629a: mov ecx, eax
		_0xffffff8000ec629c: and ecx, edx
		_0xffffff8000ec629e: xor edx, eax
		_0xffffff8000ec62a0: lea eax, [rdx + rcx*2]
		_0xffffff8000ec62a3: xor eax, 0x5392f815
		_0xffffff8000ec62a8: lea ecx, [rax + rax]
		_0xffffff8000ec62ab: and ecx, 0xee
		_0xffffff8000ec62b1: neg ecx
		_0xffffff8000ec62b3: lea ecx, [rax + rcx + 0x77]
		_0xffffff8000ec62b7: mov al, cl
		_0xffffff8000ec62b9: and al, 3
		_0xffffff8000ec62bb: mov dl, 0xaa
		_0xffffff8000ec62bd: mul dl
		_0xffffff8000ec62bf: mov dl, al
		_0xffffff8000ec62c1: mov sil, cl
		_0xffffff8000ec62c4: sar sil, 2
		_0xffffff8000ec62c8: mov al, sil
		_0xffffff8000ec62cb: add al, 0x56
		_0xffffff8000ec62cd: mul al
		_0xffffff8000ec62cf: sub dl, al
		_0xffffff8000ec62d1: mov al, sil
		_0xffffff8000ec62d4: add al, 0xaa
		_0xffffff8000ec62d6: mul al
		_0xffffff8000ec62d8: add al, dl
		_0xffffff8000ec62da: mov dl, 0xfd
		_0xffffff8000ec62dc: mul dl
		_0xffffff8000ec62de: mov dl, 0xe0
		_0xffffff8000ec62e0: sub dl, al
		_0xffffff8000ec62e2: mov sil, dl
		_0xffffff8000ec62e5: xor sil, al
		_0xffffff8000ec62e8: and dl, al
		_0xffffff8000ec62ea: add dl, dl
		_0xffffff8000ec62ec: add dl, sil
		_0xffffff8000ec62ef: and dl, al
		_0xffffff8000ec62f1: xor cl, 0x5e
		_0xffffff8000ec62f4: mov al, cl
		_0xffffff8000ec62f6: add al, al
		_0xffffff8000ec62f8: add cl, 0x2e
		_0xffffff8000ec62fb: and al, 0x5c
		_0xffffff8000ec62fd: sub cl, al
		_0xffffff8000ec62ff: mov al, cl
		_0xffffff8000ec6301: add al, al
		_0xffffff8000ec6303: xor cl, 0xc0
		_0xffffff8000ec6306: and al, 0x80
		_0xffffff8000ec6308: add al, cl
		_0xffffff8000ec630a: mov cl, dl
		_0xffffff8000ec630c: xor cl, al
		_0xffffff8000ec630e: mov sil, al
		_0xffffff8000ec6311: and sil, dl
		_0xffffff8000ec6314: mov dil, al
		_0xffffff8000ec6317: and dil, 0xa1
		_0xffffff8000ec631b: mov r9b, dl
		_0xffffff8000ec631e: and r9b, dil
		_0xffffff8000ec6321: add r9b, r9b
		_0xffffff8000ec6324: mov r10b, dl
		_0xffffff8000ec6327: and r10b, 0xa1
		_0xffffff8000ec632b: or r10b, 0x42
		_0xffffff8000ec632f: sub r10b, dil
		_0xffffff8000ec6332: and r10b, 0xa1
		_0xffffff8000ec6336: or r10b, r9b
		_0xffffff8000ec6339: and cl, 0x54
		_0xffffff8000ec633c: and sil, 0x54
		_0xffffff8000ec6340: add sil, sil
		_0xffffff8000ec6343: or sil, cl
		_0xffffff8000ec6346: and dl, 0xa
		_0xffffff8000ec6349: and al, 0xa
		_0xffffff8000ec634b: add al, dl
		_0xffffff8000ec634d: add al, sil
		_0xffffff8000ec6350: add al, r10b
		_0xffffff8000ec6353: movzx eax, al
		_0xffffff8000ec6356: cmp al, 0x30
		_0xffffff8000ec6358: sbb rbx, rbx
		_0xffffff8000ec635b: and ebx, 0x100
		_0xffffff8000ec6361: add ebx, eax
		_0xffffff8000ec6363: add ebx, 0x15a5bf9b
		_0xffffff8000ec6369: shl rbx, 0x20
		_0xffffff8000ec636d: movabs r15, 0xea5a403500000000
		_0xffffff8000ec6377: add r15, rbx
		_0xffffff8000ec637a: mov rbx, r15
		_0xffffff8000ec637d: sar rbx, 0x1f
		_0xffffff8000ec6381: movabs r13, 0xf97ecfd70d8bef8a
		_0xffffff8000ec638b: and r13, rbx
		_0xffffff8000ec638e: sar r15, 0x20
		_0xffffff8000ec6392: movabs rbx, 0x7cbf67eb86c5f7c5
		_0xffffff8000ec639c: xor rbx, r15
		_0xffffff8000ec639f: add rbx, r13
		_0xffffff8000ec63a2: add rbx, qword ptr [r14 + 0x448]
		_0xffffff8000ec63a9: movabs r15, 0x83409814793a083b
		_0xffffff8000ec63b3: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec63b7: mov byte ptr [r12 + 0xb], al
		_0xffffff8000ec63bc: mov eax, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec63c2: shr eax, 0x17
		_0xffffff8000ec63c5: and eax, 0x2c
		_0xffffff8000ec63c8: shr dword ptr [rbp - 0x3b0], 0x18
		_0xffffff8000ec63cf: add dword ptr [rbp - 0x3b0], 0x16
		_0xffffff8000ec63d6: sub dword ptr [rbp - 0x3b0], eax
		_0xffffff8000ec63dc: xor dword ptr [rbp - 0x3b0], 0x16
		_0xffffff8000ec63e3: mov eax, dword ptr [rbp - 0x3b0]
		_0xffffff8000ec63e9: mov cl, al
		_0xffffff8000ec63eb: add cl, cl
		_0xffffff8000ec63ed: xor al, 0x55
		_0xffffff8000ec63ef: and cl, 0xaa
		_0xffffff8000ec63f2: add cl, al
		_0xffffff8000ec63f4: add cl, 0xbf
		_0xffffff8000ec63f7: movzx eax, cl
		_0xffffff8000ec63fa: cmp al, 0x14
		_0xffffff8000ec63fc: sbb rbx, rbx
		_0xffffff8000ec63ff: and ebx, 0x100
		_0xffffff8000ec6405: add ebx, eax
		_0xffffff8000ec6407: add ebx, 0x17eb574e
		_0xffffff8000ec640d: shl rbx, 0x20
		_0xffffff8000ec6411: movabs r15, 0xe814a89e00000000
		_0xffffff8000ec641b: add r15, rbx
		_0xffffff8000ec641e: mov rbx, r15
		_0xffffff8000ec6421: sar rbx, 0x1f
		_0xffffff8000ec6425: movabs r13, 0xff9dfffbfa63d6ae
		_0xffffff8000ec642f: and r13, rbx
		_0xffffff8000ec6432: sar r15, 0x20
		_0xffffff8000ec6436: movabs rbx, 0x7fcefffdfd31eb57
		_0xffffff8000ec6440: xor rbx, r15
		_0xffffff8000ec6443: add rbx, r13
		_0xffffff8000ec6446: add rbx, qword ptr [r14 + 0x428]
		_0xffffff8000ec644d: movabs r15, 0x8031000202ce14a9
		_0xffffff8000ec6457: mov al, byte ptr [r15 + rbx]
		_0xffffff8000ec645b: mov byte ptr [r12 + 7], al
		_0xffffff8000ec6460: mov eax, r8d
		_0xffffff8000ec6463: shr eax, 0x17
		_0xffffff8000ec6466: mov ecx, eax
		_0xffffff8000ec6468: and ecx, 0xa
		_0xffffff8000ec646b: shr r8d, 0x18
		_0xffffff8000ec646f: xor r8d, 5
		_0xffffff8000ec6473: add r8d, ecx
		_0xffffff8000ec6476: mov ecx, eax
		_0xffffff8000ec6478: or ecx, 8
		_0xffffff8000ec647b: xor ecx, 2
		_0xffffff8000ec647e: or eax, 2
		_0xffffff8000ec6481: xor eax, 8
		_0xffffff8000ec6484: and eax, ecx
		_0xffffff8000ec6486: and eax, 0xa
		_0xffffff8000ec6489: xor eax, 0xa
		_0xffffff8000ec648c: neg eax
		_0xffffff8000ec648e: mov ecx, r8d
		_0xffffff8000ec6491: and ecx, eax
		_0xffffff8000ec6493: xor eax, r8d
		_0xffffff8000ec6496: lea eax, [rax + rcx*2]
		_0xffffff8000ec6499: xor eax, 0xaa6c697d
		_0xffffff8000ec649e: lea ecx, [rax*4]
		_0xffffff8000ec64a5: and ecx, 0x40
		_0xffffff8000ec64a8: xor ecx, eax
		_0xffffff8000ec64aa: mov esi, ecx
		_0xffffff8000ec64ac: shr esi, 9
		_0xffffff8000ec64af: and esi, 0x10000
		_0xffffff8000ec64b5: xor esi, ecx
		_0xffffff8000ec64b7: xor esi, 0xaa6d6938
		_0xffffff8000ec64bd: mov ecx, esi
		_0xffffff8000ec64bf: and ecx, 0x2000000
		_0xffffff8000ec64c5: mov edi, 0xaaaaaaab
		_0xffffff8000ec64ca: mov eax, ecx
		_0xffffff8000ec64cc: mul edi
		_0xffffff8000ec64ce: shr edx, 1
		_0xffffff8000ec64d0: lea eax, [rdx + rdx*2]
		_0xffffff8000ec64d3: sub ecx, eax
		_0xffffff8000ec64d5: imul ecx, ecx
		_0xffffff8000ec64d8: mov eax, ecx
		_0xffffff8000ec64da: mul edi
		_0xffffff8000ec64dc: shr edx, 1
		_0xffffff8000ec64de: lea eax, [rdx + rdx*2]
		_0xffffff8000ec64e1: sub ecx, eax
		_0xffffff8000ec64e3: shl ecx, 0x10
		_0xffffff8000ec64e6: xor ecx, esi
		_0xffffff8000ec64e8: mov esi, ecx
		_0xffffff8000ec64ea: and esi, 0x10
		_0xffffff8000ec64ed: mov eax, esi
		_0xffffff8000ec64ef: mul edi
		_0xffffff8000ec64f1: shr edx, 1
		_0xffffff8000ec64f3: lea eax, [rdx + rdx*2]
		_0xffffff8000ec64f6: sub esi, eax
		_0xffffff8000ec64f8: imul esi, esi
		_0xffffff8000ec64fb: mov eax, esi
		_0xffffff8000ec64fd: mul edi
		_0xffffff8000ec64ff: shr edx, 1
		_0xffffff8000ec6501: lea eax, [rdx + rdx*2]
		_0xffffff8000ec6504: sub esi, eax
		_0xffffff8000ec6506: shl esi, 6
		_0xffffff8000ec6509: xor esi, ecx
		_0xffffff8000ec650b: mov al, sil
		_0xffffff8000ec650e: add al, al
		_0xffffff8000ec6510: mov cl, 0x76
		_0xffffff8000ec6512: sub cl, al
		_0xffffff8000ec6514: mov dl, cl
		_0xffffff8000ec6516: xor dl, al
		_0xffffff8000ec6518: and cl, al
		_0xffffff8000ec651a: add cl, cl
		_0xffffff8000ec651c: add cl, dl
		_0xffffff8000ec651e: and cl, al
		_0xffffff8000ec6520: xor sil, 0x52
		_0xffffff8000ec6524: mov al, sil
		_0xffffff8000ec6527: add al, al
		_0xffffff8000ec6529: add sil, 0x56
		_0xffffff8000ec652d: and al, 0xac
		_0xffffff8000ec652f: sub sil, al
		_0xffffff8000ec6532: mov al, sil
		_0xffffff8000ec6535: add al, al
		_0xffffff8000ec6537: xor sil, 0xf2
		_0xffffff8000ec653b: and al, 0x9a
		_0xffffff8000ec653d: xor al, 0x1a
		_0xffffff8000ec653f: add al, sil
		_0xffffff8000ec6542: mov dl, al
		_0xffffff8000ec6544: xor dl, cl
		_0xffffff8000ec6546: mov sil, cl
		_0xffffff8000ec6549: and sil, al
		_0xffffff8000ec654c: mov dil, cl
		_0xffffff8000ec654f: and dil, 0x94
		_0xffffff8000ec6553: mov r8b, al
		_0xffffff8000ec6556: and r8b, dil
		_0xffffff8000ec6559: and cl, 0x48
		_0xffffff8000ec655c: mov r9b, al
		_0xffffff8000ec655f: and r9b, cl
		_0xffffff8000ec6562: mov r10b, al
		_0xffffff8000ec6565: and r10b, 0x49
		_0xffffff8000ec6569: xor r10b, cl
		_0xffffff8000ec656c: add r9b, r9b
		_0xffffff8000ec656f: or r9b, r10b
		_0xffffff8000ec6572: and dl, 0x22
		_0xffffff8000ec6575: and sil, 0x22
		_0xffffff8000ec6579: add sil, sil
		_0xffffff8000ec657c: or sil, dl
		_0xffffff8000ec657f: add sil, r9b
		_0xffffff8000ec6582: add r8b, r8b
		_0xffffff8000ec6585: and al, 0x94
		_0xffffff8000ec6587: or al, 0x28
		_0xffffff8000ec6589: sub al, dil
		_0xffffff8000ec658c: and al, 0x94
		_0xffffff8000ec658e: or al, r8b
		_0xffffff8000ec6591: add al, sil
		_0xffffff8000ec6594: movzx eax, al
		_0xffffff8000ec6597: cmp al, 8
		_0xffffff8000ec6599: sbb rbx, rbx
		_0xffffff8000ec659c: and ebx, 0x100
		_0xffffff8000ec65a2: add ebx, eax
		_0xffffff8000ec65a4: add ebx, 0x4f7b91ea
		_0xffffff8000ec65aa: shl rbx, 0x20
		_0xffffff8000ec65ae: movabs r15, 0xb0846e0e00000000
		_0xffffff8000ec65b8: add r15, rbx
		_0xffffff8000ec65bb: mov rbx, r15
		_0xffffff8000ec65be: sar rbx, 0x1f
		_0xffffff8000ec65c2: movabs r13, 0x5ebdfb9c6cfa45f6
		_0xffffff8000ec65cc: and r13, rbx
		_0xffffff8000ec65cf: sar r15, 0x20
		_0xffffff8000ec65d3: movabs rbx, 0x2f5efdce367d22fb
		_0xffffff8000ec65dd: xor rbx, r15
		_0xffffff8000ec65e0: add rbx, r13
		_0xffffff8000ec65e3: add rbx, qword ptr [r14 + 0x488]
		_0xffffff8000ec65ea: movabs r14, 0xd0a10231c982dd05
		_0xffffff8000ec65f4: mov al, byte ptr [r14 + rbx]
		_0xffffff8000ec65f8: mov byte ptr [r12 + 3], al
		_0xffffff8000ec65fd: mov rbx, qword ptr [rbp - 0x3f0]
		_0xffffff8000ec6604: mov dword ptr [rbx + 4], 0
		_0xffffff8000ec660b: jmp _0xffffff8000ebfbfa
		_0xffffff8000ec6610: lea rcx, [rip + jumptbl_0xffffff8000ec6610]
		_0xffffff8000ec6617: movsxd rax, dword ptr [rcx + rax*4]
		_0xffffff8000ec661b: add rax, rcx
		_0xffffff8000ec661e: jmp rax
		_0xffffff8000ec6620: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6627: mov rcx, qword ptr [rax]
		_0xffffff8000ec662a: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ec662e: mov rdx, qword ptr [rdx + 8]
		_0xffffff8000ec6632: mov rdx, qword ptr [rdx + 8]
		_0xffffff8000ec6636: mov rsi, qword ptr [rdx]
		_0xffffff8000ec6639: mov qword ptr [rcx + 8], rdx
		_0xffffff8000ec663d: mov qword ptr [rsi + 8], rax
		_0xffffff8000ec6641: mov qword ptr [rax], rsi
		_0xffffff8000ec6644: mov qword ptr [rdx], rcx
		_0xffffff8000ec6647: mov qword ptr [rbp - 0x340], rdx
		_0xffffff8000ec664e: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6654: lea ecx, [rax - 0x2533d2d]
		_0xffffff8000ec665a: lea edx, [rax + 0x20553082]
		_0xffffff8000ec6660: lea eax, [rax + 0x20553079]
		_0xffffff8000ec6666: mov rsi, qword ptr [rbp - 0x388]
		_0xffffff8000ec666d: mov rdi, qword ptr [rsi]
		_0xffffff8000ec6670: cmp rsi, qword ptr [rdi + 8]
		_0xffffff8000ec6674: mov rsi, r14
		_0xffffff8000ec6677: cmove rsi, rbx
		_0xffffff8000ec667b: mov esi, dword ptr [rsi]
		_0xffffff8000ec667d: cmove eax, edx
		_0xffffff8000ec6680: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6687: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec668e: mov dword ptr [r8], eax
		_0xffffff8000ec6691: cmovne ecx, edx
		_0xffffff8000ec6694: mov dword ptr [rdi], ecx
		_0xffffff8000ec6696: mov dword ptr [rbp - 0x3a4], esi
		_0xffffff8000ec669c: jmp _0xffffff8000ebea0e
		_0xffffff8000ec66a1: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec66a7: lea ecx, [rax - 0xf]
		_0xffffff8000ec66aa: lea edx, [rax + 0x20553076]
		_0xffffff8000ec66b0: lea esi, [rax + 0x20553078]
		_0xffffff8000ec66b6: lea eax, [rax + 0x20553079]
		_0xffffff8000ec66bc: cmp dword ptr [rbp - 0x2c], 2
		_0xffffff8000ec66c0: mov rdi, r14
		_0xffffff8000ec66c3: cmovl rdi, rbx
		_0xffffff8000ec66c7: mov edi, dword ptr [rdi]
		_0xffffff8000ec66c9: cmovl eax, esi
		_0xffffff8000ec66cc: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec66d3: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec66da: mov dword ptr [r8], eax
		_0xffffff8000ec66dd: cmovge ecx, edx
		_0xffffff8000ec66e0: jmp _0xffffff8000ec6b5e
		_0xffffff8000ec66e5: mov rdi, qword ptr [rbp - 0x3b0]
		_0xffffff8000ec66ec: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ec66f0: lea rcx, [rbp - 0x108]
		_0xffffff8000ec66f7: mov qword ptr [rbp - 0xb8], rcx
		_0xffffff8000ec66fe: mov qword ptr [rbp - 0xb0], rcx
		_0xffffff8000ec6705: mov qword ptr [rbp - 0xa8], rcx
		_0xffffff8000ec670c: mov qword ptr [rbp - 0xa0], rcx
		_0xffffff8000ec6713: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6717: mov qword ptr [rbp - 0x98], rcx
		_0xffffff8000ec671e: mov rcx, qword ptr [rax + 0x10]
		_0xffffff8000ec6722: mov qword ptr [rbp - 0x248], rcx
		_0xffffff8000ec6729: mov eax, dword ptr [rax + 0x18]
		_0xffffff8000ec672c: mov dword ptr [rbp - 0x90], eax
		_0xffffff8000ec6732: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ec6739: mov ecx, dword ptr [rcx + 0x10]
		_0xffffff8000ec673c: mov dword ptr [rbp - 0x8c], ecx
		_0xffffff8000ec6742: shl eax, 3
		_0xffffff8000ec6745: xor eax, 0x3bfcfffe
		_0xffffff8000ec674a: add eax, ecx
		_0xffffff8000ec674c: mov ecx, dword ptr [rbp - 0x90]
		_0xffffff8000ec6752: shl ecx, 4
		_0xffffff8000ec6755: and ecx, 0x77f9fff0
		_0xffffff8000ec675b: lea eax, [rcx + rax - 0x3bfcfffe]
		_0xffffff8000ec6762: mov rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ec6769: mov dword ptr [rcx + 0x10], eax
		_0xffffff8000ec676c: cmp eax, dword ptr [rbp - 0x8c]
		_0xffffff8000ec6772: sbb al, al
		_0xffffff8000ec6774: and al, 1
		_0xffffff8000ec6776: mov byte ptr [rbp - 0x1b1], al
		_0xffffff8000ec677c: mov qword ptr [rbp - 0x380], r15
		_0xffffff8000ec6783: mov qword ptr [rbp - 0x308], r15
		_0xffffff8000ec678a: mov qword ptr [rbp - 0x300], r15
		_0xffffff8000ec6791: mov rax, qword ptr [rbp - 0x380]
		_0xffffff8000ec6798: mov qword ptr [rbp - 0x2f8], rax
		_0xffffff8000ec679f: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec67a3: mov qword ptr [rbp - 0x2f0], rcx
		_0xffffff8000ec67aa: mov qword ptr [rcx], r12
		_0xffffff8000ec67ad: mov qword ptr [rax + 8], r12
		_0xffffff8000ec67b1: lea rax, [rbp - 0x2e8]
		_0xffffff8000ec67b8: mov qword ptr [rbp - 0x88], rax
		_0xffffff8000ec67bf: mov qword ptr [rbp - 0x378], rax
		_0xffffff8000ec67c6: mov rax, qword ptr [rbp - 0x88]
		_0xffffff8000ec67cd: mov qword ptr [rbp - 0x1a8], rax
		_0xffffff8000ec67d4: lea rcx, [rax + 8]
		_0xffffff8000ec67d8: mov qword ptr [rbp - 0x1a0], rcx
		_0xffffff8000ec67df: mov qword ptr [rax], rax
		_0xffffff8000ec67e2: mov rax, qword ptr [rbp - 0x1a0]
		_0xffffff8000ec67e9: mov rcx, qword ptr [rbp - 0x88]
		_0xffffff8000ec67f0: mov qword ptr [rax], rcx
		_0xffffff8000ec67f3: mov rax, qword ptr [rbp - 0x380]
		_0xffffff8000ec67fa: mov qword ptr [rbp - 0x2d8], rax
		_0xffffff8000ec6801: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6805: mov qword ptr [rbp - 0x2d0], rcx
		_0xffffff8000ec680c: lea rdx, [rbp - 0x2d8]
		_0xffffff8000ec6813: mov qword ptr [rcx], rdx
		_0xffffff8000ec6816: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec681a: lea rax, [rbp - 0x2c8]
		_0xffffff8000ec6821: mov qword ptr [rbp - 0x388], rax
		_0xffffff8000ec6828: mov qword ptr [rbp - 0x2c8], rax
		_0xffffff8000ec682f: mov qword ptr [rbp - 0x2c0], rax
		_0xffffff8000ec6836: lea rax, [rbp - 0x2b8]
		_0xffffff8000ec683d: mov qword ptr [rbp - 0x80], rax
		_0xffffff8000ec6841: mov qword ptr [rbp - 0x190], rax
		_0xffffff8000ec6848: mov qword ptr [rbp - 0x188], r13
		_0xffffff8000ec684f: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6856: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ec685d: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6861: mov rdx, qword ptr [rbp - 0x80]
		_0xffffff8000ec6865: mov qword ptr [rdx + 8], rcx
		_0xffffff8000ec6869: mov rdx, qword ptr [rbp - 0x80]
		_0xffffff8000ec686d: mov qword ptr [rcx], rdx
		_0xffffff8000ec6870: mov rcx, qword ptr [rbp - 0x80]
		_0xffffff8000ec6874: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec6878: mov rax, qword ptr [rbp - 0x378]
		_0xffffff8000ec687f: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ec6886: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec688a: mov qword ptr [rbp - 0x2a0], rcx
		_0xffffff8000ec6891: lea rdx, [rbp - 0x2a8]
		_0xffffff8000ec6898: mov qword ptr [rcx], rdx
		_0xffffff8000ec689b: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec689f: lea rax, [rbp - 0x298]
		_0xffffff8000ec68a6: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ec68ad: mov qword ptr [rbp - 0x178], rax
		_0xffffff8000ec68b4: mov qword ptr [rbp - 0x170], r13
		_0xffffff8000ec68bb: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec68c2: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ec68c9: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec68cd: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ec68d4: mov qword ptr [rdx + 8], rcx
		_0xffffff8000ec68d8: mov rdx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ec68df: mov qword ptr [rcx], rdx
		_0xffffff8000ec68e2: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ec68e9: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec68ed: lea rax, [rbp - 0x288]
		_0xffffff8000ec68f4: mov qword ptr [rbp - 0x310], rax
		_0xffffff8000ec68fb: mov qword ptr [rbp - 0x288], rax
		_0xffffff8000ec6902: mov qword ptr [rbp - 0x280], rax
		_0xffffff8000ec6909: lea rax, [rbp - 0x278]
		_0xffffff8000ec6910: mov qword ptr [rbp - 0x198], rax
		_0xffffff8000ec6917: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec691e: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ec6925: lea rcx, [rax + 8]
		_0xffffff8000ec6929: mov qword ptr [rbp - 0x160], rcx
		_0xffffff8000ec6930: mov rax, qword ptr [rax + 8]
		_0xffffff8000ec6934: mov qword ptr [rbp - 0x180], rax
		_0xffffff8000ec693b: mov rcx, qword ptr [rbp - 0x198]
		_0xffffff8000ec6942: lea rdx, [rcx + 8]
		_0xffffff8000ec6946: mov qword ptr [rbp - 0x158], rdx
		_0xffffff8000ec694d: mov qword ptr [rcx + 8], rax
		_0xffffff8000ec6951: mov rax, qword ptr [rbp - 0x198]
		_0xffffff8000ec6958: mov rcx, qword ptr [rbp - 0x180]
		_0xffffff8000ec695f: mov qword ptr [rcx], rax
		_0xffffff8000ec6962: mov rax, qword ptr [rbp - 0x160]
		_0xffffff8000ec6969: mov rcx, qword ptr [rbp - 0x198]
		_0xffffff8000ec6970: mov qword ptr [rax], rcx
		_0xffffff8000ec6973: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec697a: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ec6981: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6985: mov qword ptr [rbp - 0x260], rcx
		_0xffffff8000ec698c: lea rdx, [rbp - 0x268]
		_0xffffff8000ec6993: mov qword ptr [rcx], rdx
		_0xffffff8000ec6996: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec699a: lea rax, [rbp - 0x258]
		_0xffffff8000ec69a1: mov qword ptr [rbp - 0x168], rax
		_0xffffff8000ec69a8: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec69af: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ec69b6: lea rcx, [rax + 8]
		_0xffffff8000ec69ba: mov qword ptr [rbp - 0x148], rcx
		_0xffffff8000ec69c1: mov rax, qword ptr [rax + 8]
		_0xffffff8000ec69c5: mov qword ptr [rbp - 0x150], rax
		_0xffffff8000ec69cc: mov rcx, qword ptr [rbp - 0x168]
		_0xffffff8000ec69d3: lea rdx, [rcx + 8]
		_0xffffff8000ec69d7: mov qword ptr [rbp - 0x140], rdx
		_0xffffff8000ec69de: mov qword ptr [rcx + 8], rax
		_0xffffff8000ec69e2: mov rax, qword ptr [rbp - 0x168]
		_0xffffff8000ec69e9: mov rcx, qword ptr [rbp - 0x150]
		_0xffffff8000ec69f0: mov qword ptr [rcx], rax
		_0xffffff8000ec69f3: mov rax, qword ptr [rbp - 0x148]
		_0xffffff8000ec69fa: mov rcx, qword ptr [rbp - 0x168]
		_0xffffff8000ec6a01: mov qword ptr [rax], rcx
		_0xffffff8000ec6a04: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6a0a: lea ecx, [rax - 0x2fc8c894]
		_0xffffff8000ec6a10: lea edx, [rax - 5]
		_0xffffff8000ec6a13: lea esi, [rax + 0xdb518d9]
		_0xffffff8000ec6a19: lea eax, [rax + 0xdb518db]
		_0xffffff8000ec6a1f: mov dil, byte ptr [rbp - 0x1b1]
		_0xffffff8000ec6a26: test dil, dil
		_0xffffff8000ec6a29: mov rdi, r14
		_0xffffff8000ec6a2c: cmovne rdi, rbx
		_0xffffff8000ec6a30: mov edi, dword ptr [rdi]
		_0xffffff8000ec6a32: cmovne eax, esi
		_0xffffff8000ec6a35: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6a3c: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec6a43: mov dword ptr [r8], eax
		_0xffffff8000ec6a46: cmovne edx, ecx
		_0xffffff8000ec6a49: mov dword ptr [rsi], edx
		_0xffffff8000ec6a4b: mov dword ptr [rbp - 0x3a4], edi
		_0xffffff8000ec6a51: je _0xffffff8000ebe6bb
		_0xffffff8000ec6a57: jmp _0xffffff8000ebee14
		_0xffffff8000ec6a5c: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6a62: lea ecx, [rax + 0x2055307a]
		_0xffffff8000ec6a68: lea edx, [rax - 0xa]
		_0xffffff8000ec6a6b: cmp dword ptr [rbp - 0x2c], 3
		_0xffffff8000ec6a6f: mov rsi, r14
		_0xffffff8000ec6a72: cmovl rsi, rbx
		_0xffffff8000ec6a76: mov esi, dword ptr [rsi]
		_0xffffff8000ec6a78: cmovl edx, ecx
		_0xffffff8000ec6a7b: mov rcx, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6a82: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ec6a89: mov dword ptr [rdi], edx
		_0xffffff8000ec6a8b: add eax, -9
		_0xffffff8000ec6a8e: mov dword ptr [rcx], eax
		_0xffffff8000ec6a90: mov dword ptr [rbp - 0x3a4], esi
		_0xffffff8000ec6a96: jmp _0xffffff8000ebea0e
		_0xffffff8000ec6a9b: mov rax, qword ptr [rbp - 0x78]
		_0xffffff8000ec6a9f: mov rcx, rax
		_0xffffff8000ec6aa2: movabs rdx, 0x6bfdeeea5d9e7fef
		_0xffffff8000ec6aac: xor rcx, rdx
		_0xffffff8000ec6aaf: mov rdx, rax
		_0xffffff8000ec6ab2: and rdx, 0x5d9e7fef
		_0xffffff8000ec6ab9: lea rcx, [rcx + rdx*2]
		_0xffffff8000ec6abd: add rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ec6ac4: movabs rdx, 0x94021115a2618029
		_0xffffff8000ec6ace: mov byte ptr [rdx + rcx], 0
		_0xffffff8000ec6ad2: inc rax
		_0xffffff8000ec6ad5: mov qword ptr [rbp - 0x78], rax
		_0xffffff8000ec6ad9: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6adf: lea edx, [rcx - 0x243503c2]
		_0xffffff8000ec6ae5: lea esi, [rcx + 0x30d26683]
		_0xffffff8000ec6aeb: lea edi, [rcx - 9]
		_0xffffff8000ec6aee: cmp rax, 0x40
		_0xffffff8000ec6af2: mov rax, r14
		_0xffffff8000ec6af5: cmove rax, rbx
		_0xffffff8000ec6af9: mov eax, dword ptr [rax]
		_0xffffff8000ec6afb: cmove edi, esi
		_0xffffff8000ec6afe: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6b05: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec6b0c: mov dword ptr [r8], edi
		_0xffffff8000ec6b0f: cmovne edx, ecx
		_0xffffff8000ec6b12: mov dword ptr [rsi], edx
		_0xffffff8000ec6b14: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ec6b1a: jmp _0xffffff8000ebea0e
		_0xffffff8000ec6b1f: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6b25: lea ecx, [rax - 0x8efc023]
		_0xffffff8000ec6b2b: lea edx, [rax + 0x4bc49e2]
		_0xffffff8000ec6b31: lea esi, [rax + 0x36f76e5e]
		_0xffffff8000ec6b37: lea eax, [rax - 7]
		_0xffffff8000ec6b3a: cmp dword ptr [rbp - 0x2c], 3
		_0xffffff8000ec6b3e: mov rdi, r14
		_0xffffff8000ec6b41: cmove rdi, rbx
		_0xffffff8000ec6b45: mov edi, dword ptr [rdi]
		_0xffffff8000ec6b47: cmove eax, esi
		_0xffffff8000ec6b4a: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6b51: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec6b58: mov dword ptr [r8], eax
		_0xffffff8000ec6b5b: cmovne ecx, edx
		_0xffffff8000ec6b5e: mov dword ptr [rsi], ecx
		_0xffffff8000ec6b60: mov dword ptr [rbp - 0x3a4], edi
		_0xffffff8000ec6b66: jmp _0xffffff8000ebee14
		_0xffffff8000ec6b6b: mov rdi, qword ptr [rbp - 0x3b0]
		_0xffffff8000ec6b72: mov rax, qword ptr [rdi + 8]
		_0xffffff8000ec6b76: lea rcx, [rbp - 0x230]
		_0xffffff8000ec6b7d: mov qword ptr [rbp - 0x1f8], rcx
		_0xffffff8000ec6b84: mov qword ptr [rbp - 0x1f0], rcx
		_0xffffff8000ec6b8b: mov qword ptr [rbp - 0x1e8], rcx
		_0xffffff8000ec6b92: mov qword ptr [rbp - 0x248], rax
		_0xffffff8000ec6b99: mov qword ptr [rbp - 0x1e0], rax
		_0xffffff8000ec6ba0: mov rcx, qword ptr [rax + 0x20]
		_0xffffff8000ec6ba4: mov qword ptr [rbp - 0x1d8], rcx
		_0xffffff8000ec6bab: mov rax, qword ptr [rax + 8]
		_0xffffff8000ec6baf: mov qword ptr [rbp - 0x1d0], rax
		_0xffffff8000ec6bb6: mov rax, qword ptr [rbp - 0x1e0]
		_0xffffff8000ec6bbd: mov rcx, qword ptr [rax + 0x10]
		_0xffffff8000ec6bc1: mov qword ptr [rbp - 0x1c8], rcx
		_0xffffff8000ec6bc8: mov rax, qword ptr [rax + 0x18]
		_0xffffff8000ec6bcc: mov qword ptr [rbp - 0x1c0], rax
		_0xffffff8000ec6bd3: mov dword ptr [rbp - 0x234], 0x2fc2e0a1
		_0xffffff8000ec6bdd: mov dword ptr [rbp - 0x23c], 0
		_0xffffff8000ec6be7: mov dword ptr [rbp - 0x238], 0x792bf512
		_0xffffff8000ec6bf1: cmp qword ptr [rbp - 0x1d0], 0
		_0xffffff8000ec6bf9: sete al
		_0xffffff8000ec6bfc: cmp qword ptr [rbp - 0x1d8], 0
		_0xffffff8000ec6c04: sete cl
		_0xffffff8000ec6c07: or cl, al
		_0xffffff8000ec6c09: cmp qword ptr [rbp - 0x1c8], 0
		_0xffffff8000ec6c11: sete al
		_0xffffff8000ec6c14: or al, cl
		_0xffffff8000ec6c16: cmp qword ptr [rbp - 0x1c0], 0
		_0xffffff8000ec6c1e: sete cl
		_0xffffff8000ec6c21: or cl, al
		_0xffffff8000ec6c23: mov byte ptr [rbp - 0x1b1], cl
		_0xffffff8000ec6c29: mov qword ptr [rbp - 0x380], r15
		_0xffffff8000ec6c30: mov qword ptr [rbp - 0x308], r15
		_0xffffff8000ec6c37: mov qword ptr [rbp - 0x300], r15
		_0xffffff8000ec6c3e: mov qword ptr [rbp - 0x388], r12
		_0xffffff8000ec6c45: mov qword ptr [rbp - 0x2f8], r12
		_0xffffff8000ec6c4c: mov qword ptr [rbp - 0x2f0], r12
		_0xffffff8000ec6c53: lea rax, [rbp - 0x2e8]
		_0xffffff8000ec6c5a: mov qword ptr [rbp - 0x1b0], rax
		_0xffffff8000ec6c61: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6c68: mov qword ptr [rbp - 0x2e8], rax
		_0xffffff8000ec6c6f: lea rcx, [rax + 8]
		_0xffffff8000ec6c73: mov qword ptr [rbp - 0x1a8], rcx
		_0xffffff8000ec6c7a: mov rax, qword ptr [rax + 8]
		_0xffffff8000ec6c7e: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ec6c85: mov qword ptr [rcx + 8], rax
		_0xffffff8000ec6c89: mov qword ptr [rbp - 0x1a0], rax
		_0xffffff8000ec6c90: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ec6c97: mov qword ptr [rax], rcx
		_0xffffff8000ec6c9a: mov rax, qword ptr [rbp - 0x1a8]
		_0xffffff8000ec6ca1: mov rcx, qword ptr [rbp - 0x1b0]
		_0xffffff8000ec6ca8: mov qword ptr [rax], rcx
		_0xffffff8000ec6cab: lea rax, [rbp - 0x2d8]
		_0xffffff8000ec6cb2: mov qword ptr [rbp - 0x310], rax
		_0xffffff8000ec6cb9: mov qword ptr [rbp - 0x2d8], rax
		_0xffffff8000ec6cc0: mov qword ptr [rbp - 0x2d0], rax
		_0xffffff8000ec6cc7: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6cce: mov qword ptr [rbp - 0x2c8], rax
		_0xffffff8000ec6cd5: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6cd9: mov qword ptr [rbp - 0x2c0], rcx
		_0xffffff8000ec6ce0: lea rdx, [rbp - 0x2c8]
		_0xffffff8000ec6ce7: mov qword ptr [rcx], rdx
		_0xffffff8000ec6cea: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec6cee: lea rax, [rbp - 0x2b8]
		_0xffffff8000ec6cf5: mov qword ptr [rbp - 0x198], rax
		_0xffffff8000ec6cfc: mov qword ptr [rbp - 0x190], rax
		_0xffffff8000ec6d03: mov qword ptr [rbp - 0x188], r13
		_0xffffff8000ec6d0a: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6d11: mov qword ptr [rbp - 0x2b8], rax
		_0xffffff8000ec6d18: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6d1c: mov rdx, qword ptr [rbp - 0x198]
		_0xffffff8000ec6d23: mov qword ptr [rdx + 8], rcx
		_0xffffff8000ec6d27: mov rdx, qword ptr [rbp - 0x198]
		_0xffffff8000ec6d2e: mov qword ptr [rcx], rdx
		_0xffffff8000ec6d31: mov rcx, qword ptr [rbp - 0x198]
		_0xffffff8000ec6d38: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec6d3c: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6d43: mov qword ptr [rbp - 0x2a8], rax
		_0xffffff8000ec6d4a: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6d4e: mov qword ptr [rbp - 0x2a0], rcx
		_0xffffff8000ec6d55: lea rdx, [rbp - 0x2a8]
		_0xffffff8000ec6d5c: mov qword ptr [rcx], rdx
		_0xffffff8000ec6d5f: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec6d63: lea rax, [rbp - 0x298]
		_0xffffff8000ec6d6a: mov qword ptr [rbp - 0x180], rax
		_0xffffff8000ec6d71: mov qword ptr [rbp - 0x178], rax
		_0xffffff8000ec6d78: mov qword ptr [rbp - 0x170], r13
		_0xffffff8000ec6d7f: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6d86: mov qword ptr [rbp - 0x298], rax
		_0xffffff8000ec6d8d: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6d91: mov rdx, qword ptr [rbp - 0x180]
		_0xffffff8000ec6d98: mov qword ptr [rdx + 8], rcx
		_0xffffff8000ec6d9c: mov rdx, qword ptr [rbp - 0x180]
		_0xffffff8000ec6da3: mov qword ptr [rcx], rdx
		_0xffffff8000ec6da6: mov rcx, qword ptr [rbp - 0x180]
		_0xffffff8000ec6dad: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec6db1: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6db8: mov qword ptr [rbp - 0x288], rax
		_0xffffff8000ec6dbf: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6dc3: mov qword ptr [rbp - 0x280], rcx
		_0xffffff8000ec6dca: lea rdx, [rbp - 0x288]
		_0xffffff8000ec6dd1: mov qword ptr [rcx], rdx
		_0xffffff8000ec6dd4: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec6dd8: lea rax, [rbp - 0x278]
		_0xffffff8000ec6ddf: mov qword ptr [rbp - 0x168], rax
		_0xffffff8000ec6de6: mov qword ptr [rbp - 0x160], rax
		_0xffffff8000ec6ded: mov qword ptr [rbp - 0x158], r13
		_0xffffff8000ec6df4: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6dfb: mov qword ptr [rbp - 0x278], rax
		_0xffffff8000ec6e02: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6e06: mov rdx, qword ptr [rbp - 0x168]
		_0xffffff8000ec6e0d: mov qword ptr [rdx + 8], rcx
		_0xffffff8000ec6e11: mov rdx, qword ptr [rbp - 0x168]
		_0xffffff8000ec6e18: mov qword ptr [rcx], rdx
		_0xffffff8000ec6e1b: mov rcx, qword ptr [rbp - 0x168]
		_0xffffff8000ec6e22: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec6e26: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6e2d: mov qword ptr [rbp - 0x268], rax
		_0xffffff8000ec6e34: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6e38: mov qword ptr [rbp - 0x260], rcx
		_0xffffff8000ec6e3f: lea rdx, [rbp - 0x268]
		_0xffffff8000ec6e46: mov qword ptr [rcx], rdx
		_0xffffff8000ec6e49: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec6e4d: lea rax, [rbp - 0x258]
		_0xffffff8000ec6e54: mov qword ptr [rbp - 0x150], rax
		_0xffffff8000ec6e5b: mov qword ptr [rbp - 0x148], rax
		_0xffffff8000ec6e62: mov qword ptr [rbp - 0x140], r13
		_0xffffff8000ec6e69: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec6e70: mov qword ptr [rbp - 0x258], rax
		_0xffffff8000ec6e77: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec6e7b: mov rdx, qword ptr [rbp - 0x150]
		_0xffffff8000ec6e82: mov qword ptr [rdx + 8], rcx
		_0xffffff8000ec6e86: mov rdx, qword ptr [rbp - 0x150]
		_0xffffff8000ec6e8d: mov qword ptr [rcx], rdx
		_0xffffff8000ec6e90: mov rcx, qword ptr [rbp - 0x150]
		_0xffffff8000ec6e97: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec6e9b: mov dword ptr [rbp - 0x1fc], 0xffff586c
		_0xffffff8000ec6ea5: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6eab: lea ecx, [rax + 0x2001b116]
		_0xffffff8000ec6eb1: lea edx, [rax - 0x20553071]
		_0xffffff8000ec6eb7: lea esi, [rax - 0x4534ff68]
		_0xffffff8000ec6ebd: lea eax, [rax - 0x20553080]
		_0xffffff8000ec6ec3: mov dil, byte ptr [rbp - 0x1b1]
		_0xffffff8000ec6eca: test dil, dil
		_0xffffff8000ec6ecd: mov rdi, r14
		_0xffffff8000ec6ed0: cmovne rdi, rbx
		_0xffffff8000ec6ed4: mov edi, dword ptr [rdi]
		_0xffffff8000ec6ed6: cmovne eax, esi
		_0xffffff8000ec6ed9: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6ee0: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec6ee7: mov dword ptr [r8], eax
		_0xffffff8000ec6eea: cmovne edx, ecx
		_0xffffff8000ec6eed: mov dword ptr [rsi], edx
		_0xffffff8000ec6eef: jmp _0xffffff8000ebe719
		_0xffffff8000ec6ef4: mov eax, dword ptr [rbp - 0x1fc]
		_0xffffff8000ec6efa: add eax, -8
		_0xffffff8000ec6efd: mov ecx, eax
		_0xffffff8000ec6eff: and ecx, 0x76ffbfde
		_0xffffff8000ec6f05: xor eax, 0x76ffbfde
		_0xffffff8000ec6f0a: lea edx, [rax + rcx*2 - 0x76ffbfdf]
		_0xffffff8000ec6f11: inc rdx
		_0xffffff8000ec6f14: lea eax, [rax + rcx*2 - 0x76ffbfde]
		_0xffffff8000ec6f1b: cmp eax, 1
		_0xffffff8000ec6f1e: mov eax, 1
		_0xffffff8000ec6f23: cmova rax, rdx
		_0xffffff8000ec6f27: mov qword ptr [rbp - 0x130], rax
		_0xffffff8000ec6f2e: mov qword ptr [rbp - 0x60], 0
		_0xffffff8000ec6f36: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6f3c: lea ecx, [rax + 9]
		_0xffffff8000ec6f3f: mov edx, dword ptr [rbp - 0x38c]
		_0xffffff8000ec6f45: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec6f4c: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ec6f53: mov dword ptr [rdi], ecx
		_0xffffff8000ec6f55: add eax, 0x2e0a4957
		_0xffffff8000ec6f5a: jmp _0xffffff8000ebe848
		_0xffffff8000ec6f5f: mov rax, qword ptr [rbp - 0xc0]
		_0xffffff8000ec6f66: mov rcx, rax
		_0xffffff8000ec6f69: movabs rdx, 0x5fbcfb6bf9d09bfd
		_0xffffff8000ec6f73: xor rcx, rdx
		_0xffffff8000ec6f76: lea rdx, [rax + rax]
		_0xffffff8000ec6f7a: mov rsi, rdx
		_0xffffff8000ec6f7d: movabs rdi, 0x1f3a137fa
		_0xffffff8000ec6f87: and rsi, rdi
		_0xffffff8000ec6f8a: add rsi, rcx
		_0xffffff8000ec6f8d: add rsi, qword ptr [rbp - 0x98]
		_0xffffff8000ec6f94: movabs rcx, 0xa0430494062f6403
		_0xffffff8000ec6f9e: mov cl, byte ptr [rcx + rsi]
		_0xffffff8000ec6fa1: mov rsi, rax
		_0xffffff8000ec6fa4: movabs rdi, 0x2bfbff7c79b7ff7c
		_0xffffff8000ec6fae: xor rsi, rdi
		_0xffffff8000ec6fb1: and edx, 0xf36ffef8
		_0xffffff8000ec6fb7: add rdx, rsi
		_0xffffff8000ec6fba: add rdx, qword ptr [rbp - 0x1d0]
		_0xffffff8000ec6fc1: movabs rsi, 0xd404008386480084
		_0xffffff8000ec6fcb: mov byte ptr [rsi + rdx], cl
		_0xffffff8000ec6fce: inc rax
		_0xffffff8000ec6fd1: mov qword ptr [rbp - 0xc0], rax
		_0xffffff8000ec6fd8: mov ecx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec6fde: lea edx, [rcx - 0xdb518de]
		_0xffffff8000ec6fe4: lea esi, [rcx - 0xdb518e3]
		_0xffffff8000ec6fea: lea edi, [rcx - 0x2e0a4960]
		_0xffffff8000ec6ff0: cmp rax, 0x10
		_0xffffff8000ec6ff4: mov rax, r14
		_0xffffff8000ec6ff7: cmove rax, rbx
		_0xffffff8000ec6ffb: mov eax, dword ptr [rax]
		_0xffffff8000ec6ffd: cmove edi, esi
		_0xffffff8000ec7000: mov rsi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec7007: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec700e: mov dword ptr [r8], edi
		_0xffffff8000ec7011: cmovne edx, ecx
		_0xffffff8000ec7014: mov dword ptr [rsi], edx
		_0xffffff8000ec7016: jmp _0xffffff8000ebf46e
		_0xffffff8000ec701b: mov rax, qword ptr [rbp - 0x70]
		_0xffffff8000ec701f: movabs rcx, 0x7be0dfffdefffbcf
		_0xffffff8000ec7029: xor rcx, rax
		_0xffffff8000ec702c: add rcx, qword ptr [rbp - 0x58]
		_0xffffff8000ec7030: mov edx, eax
		_0xffffff8000ec7032: and edx, 0xdefffbcf
		_0xffffff8000ec7038: lea rcx, [rcx + rdx*2]
		_0xffffff8000ec703c: add rcx, qword ptr [rbp - 0x98]
		_0xffffff8000ec7043: movabs rdx, 0x5e112090433a94eb
		_0xffffff8000ec704d: mov byte ptr [rdx + rcx], 0
		_0xffffff8000ec7051: inc rax
		_0xffffff8000ec7054: mov rcx, qword ptr [rbp - 0x138]
		_0xffffff8000ec705b: mov qword ptr [rbp - 0x70], rax
		_0xffffff8000ec705f: mov edx, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec7065: lea esi, [rdx - 0x5a5ac01]
		_0xffffff8000ec706b: lea edi, [rdx + 0x2e0a495f]
		_0xffffff8000ec7071: lea r8d, [rdx + 5]
		_0xffffff8000ec7075: cmp rax, rcx
		_0xffffff8000ec7078: mov rax, r14
		_0xffffff8000ec707b: cmove rax, rbx
		_0xffffff8000ec707f: mov eax, dword ptr [rax]
		_0xffffff8000ec7081: cmovne r8d, edi
		_0xffffff8000ec7085: mov rcx, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec708c: mov rdi, qword ptr [rbp - 0x398]
		_0xffffff8000ec7093: mov dword ptr [rdi], r8d
		_0xffffff8000ec7096: cmovne esi, edx
		_0xffffff8000ec7099: mov dword ptr [rcx], esi
		_0xffffff8000ec709b: mov dword ptr [rbp - 0x3a4], eax
		_0xffffff8000ec70a1: je _0xffffff8000ebe6bb
		_0xffffff8000ec70a7: jmp _0xffffff8000ebee14
		_0xffffff8000ec70ac: mov rax, qword ptr [rbp - 0x128]
		_0xffffff8000ec70b3: mov qword ptr [rbp - 0x58], rax
		_0xffffff8000ec70b7: mov ecx, eax
		_0xffffff8000ec70b9: shl ecx, 6
		_0xffffff8000ec70bc: mov edx, dword ptr [rbp - 0x60]
		_0xffffff8000ec70bf: sub edx, ecx
		_0xffffff8000ec70c1: mov dword ptr [rbp - 0x200], edx
		_0xffffff8000ec70c7: shl rax, 6
		_0xffffff8000ec70cb: mov qword ptr [rbp - 0x138], rax
		_0xffffff8000ec70d2: mov rax, qword ptr [rbp - 0x378]
		_0xffffff8000ec70d9: mov rcx, qword ptr [rbp - 0x310]
		_0xffffff8000ec70e0: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ec70e4: mov qword ptr [rcx + 8], rdx
		_0xffffff8000ec70e8: mov qword ptr [rcx], rax
		_0xffffff8000ec70eb: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec70ef: mov qword ptr [rdx], rcx
		_0xffffff8000ec70f2: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec70f8: lea ecx, [rax - 0x2f9260ab]
		_0xffffff8000ec70fe: lea edx, [rax + 4]
		_0xffffff8000ec7101: lea eax, [rax + 0xdb518de]
		_0xffffff8000ec7107: mov rsi, qword ptr [rbp - 0x388]
		_0xffffff8000ec710e: cmp rsi, qword ptr [rsi + 8]
		_0xffffff8000ec7112: mov rsi, r14
		_0xffffff8000ec7115: cmove rsi, rbx
		_0xffffff8000ec7119: mov esi, dword ptr [rsi]
		_0xffffff8000ec711b: cmovne edx, eax
		_0xffffff8000ec711e: mov rdi, qword ptr [rbp - 0x3a0]
		_0xffffff8000ec7125: mov r8, qword ptr [rbp - 0x398]
		_0xffffff8000ec712c: mov dword ptr [r8], edx
		_0xffffff8000ec712f: cmove ecx, eax
		_0xffffff8000ec7132: mov dword ptr [rdi], ecx
		_0xffffff8000ec7134: mov dword ptr [rbp - 0x3a4], esi
		_0xffffff8000ec713a: je _0xffffff8000ebe6bb
		_0xffffff8000ec7140: jmp _0xffffff8000ebea0e
		_0xffffff8000ec7145: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ec714c: add rax, 0x18
		_0xffffff8000ec7150: mov rcx, qword ptr [rbp - 0x48]
		_0xffffff8000ec7154: mov qword ptr [rcx + 8], rax
		_0xffffff8000ec7158: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000ec715c: mov dword ptr [rax + 4], 0xe
		_0xffffff8000ec7163: mov rdi, qword ptr [rbp - 0x48]
		_0xffffff8000ec7167: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ec7171: mov dword ptr [rdi], 0x1d
		_0xffffff8000ec7177: call sub_0xffffff8000eb7d00
		_0xffffff8000ec717c: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ec7183: mov ecx, dword ptr [rax + 0x10]
		_0xffffff8000ec7186: mov rdx, qword ptr [rbp - 0xa8]
		_0xffffff8000ec718d: mov dword ptr [rdx + 4], ecx
		_0xffffff8000ec7190: add rax, 0x50
		_0xffffff8000ec7194: mov rcx, qword ptr [rbp - 0xa8]
		_0xffffff8000ec719b: mov qword ptr [rcx + 8], rax
		_0xffffff8000ec719f: mov rdi, qword ptr [rbp - 0xa8]
		_0xffffff8000ec71a6: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ec71b0: mov dword ptr [rdi], 0xfffffffd
		_0xffffff8000ec71b6: call sub_0xffffff8000eb7d00
		_0xffffff8000ec71bb: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ec71c2: mov ecx, dword ptr [rax + 0x14]
		_0xffffff8000ec71c5: mov rdx, qword ptr [rbp - 0xa0]
		_0xffffff8000ec71cc: mov dword ptr [rdx + 4], ecx
		_0xffffff8000ec71cf: add rax, 0x54
		_0xffffff8000ec71d3: mov rcx, qword ptr [rbp - 0xa0]
		_0xffffff8000ec71da: mov qword ptr [rcx + 8], rax
		_0xffffff8000ec71de: mov rdi, qword ptr [rbp - 0xa0]
		_0xffffff8000ec71e5: mov dword ptr [rbp - 0x238], 0
		_0xffffff8000ec71ef: mov dword ptr [rdi], 0x25
		_0xffffff8000ec71f5: call sub_0xffffff8000eb7d00
		_0xffffff8000ec71fa: mov rax, qword ptr [rbp - 0x98]
		_0xffffff8000ec7201: add rax, 0x18
		_0xffffff8000ec7205: mov qword ptr [rbp - 0x1c8], rax
		_0xffffff8000ec720c: mov rax, qword ptr [rbp - 0x388]
		_0xffffff8000ec7213: mov rcx, qword ptr [rbp - 0x310]
		_0xffffff8000ec721a: mov rdx, qword ptr [rax + 8]
		_0xffffff8000ec721e: mov qword ptr [rcx + 8], rdx
		_0xffffff8000ec7222: mov qword ptr [rcx], rax
		_0xffffff8000ec7225: mov qword ptr [rax + 8], rcx
		_0xffffff8000ec7229: mov qword ptr [rdx], rcx
		_0xffffff8000ec722c: mov eax, dword ptr [rbp - 0x3a4]
		_0xffffff8000ec7232: lea ecx, [rax + 0x4d7cb219]
		_0xffffff8000ec7238: lea edx, [rax - 0xa]
		_0xffffff8000ec723b: lea eax, [rax + 0x2e0a4956]
		_0xffffff8000ec7241: jmp _0xffffff8000ec7107

	.align 0x100
	sub_0xffffff8000eb75a0:
		_0xffffff8000eb75a0: push rbp
		_0xffffff8000eb75a1: mov rbp, rsp
		_0xffffff8000eb75a4: push r15
		_0xffffff8000eb75a6: push r14
		_0xffffff8000eb75a8: push r13
		_0xffffff8000eb75aa: push r12
		_0xffffff8000eb75ac: push rbx
		_0xffffff8000eb75ad: sub rsp, 0x1e8
		_0xffffff8000eb75b4: lea rbx, [rbp - 0x1ec]
		_0xffffff8000eb75bb: mov dword ptr [rbp - 0x1ec], ebx
		_0xffffff8000eb75c1: lea r14, [rbp - 0x1f0]
		_0xffffff8000eb75c8: mov dword ptr [rbp - 0x1f0], r14d
		_0xffffff8000eb75cf: lea rax, [rbp - 0x1f8]
		_0xffffff8000eb75d6: mov qword ptr [rbp - 0x1f8], rax
		_0xffffff8000eb75dd: lea rax, [rbp - 0x200]
		_0xffffff8000eb75e4: mov qword ptr [rbp - 0x200], rax
		_0xffffff8000eb75eb: mov dword ptr [rbp - 0x204], 0x589abec0
		_0xffffff8000eb75f5: mov qword ptr [rbp - 0x1f8], rbx
		_0xffffff8000eb75fc: mov qword ptr [rbp - 0x200], r14
		_0xffffff8000eb7603: mov eax, dword ptr [rbp - 0x204]
		_0xffffff8000eb7609: lea ecx, [rax + 0x653b160]
		_0xffffff8000eb760f: mov rdx, qword ptr [rbp - 0x1f8]
		_0xffffff8000eb7616: mov dword ptr [rdx], ecx
		_0xffffff8000eb7618: add eax, 0x653b164
		_0xffffff8000eb761d: mov dword ptr [rbp - 0x1f0], eax
		_0xffffff8000eb7623: mov dword ptr [rbp - 0x204], 0x3203048f
		_0xffffff8000eb762d: mov qword ptr [rbp - 0x210], rdi
		_0xffffff8000eb7634: lea r15, [rbp - 0xa0]
		_0xffffff8000eb763b: lea r12, [rip + jumptbl_0xffffff8000eb7cb9]
		_0xffffff8000eb7642: lea r13, [rbp - 0x68]
		_0xffffff8000eb7646: jmp _0xffffff8000eb7c24
		_0xffffff8000eb764b: nop dword ptr [rax + rax]
		nop
		_0xffffff8000eb7650: mov rax, qword ptr [rbp - 0x38]
		_0xffffff8000eb7654: add rax, 4
		_0xffffff8000eb7658: mov qword ptr [rbp - 0x98], rax
		_0xffffff8000eb765f: mov dword ptr [rbp - 0x90], 0x1d51bce8
		_0xffffff8000eb7669: mov dword ptr [rbp - 0x6c], 0
		_0xffffff8000eb7670: mov dword ptr [rbp - 0xa0], 0x26
		_0xffffff8000eb767a: mov rdi, r15
		_0xffffff8000eb767d: call _0xffffff8000eb7d00
		_0xffffff8000eb7682: mov rax, qword ptr [rbp - 0x50]
		_0xffffff8000eb7686: mov eax, dword ptr [rax + 0x14]
		_0xffffff8000eb7689: mov dword ptr [rbp - 0x54], eax
		_0xffffff8000eb768c: mov ecx, dword ptr [rbp - 0x204]
		_0xffffff8000eb7692: lea edx, [rcx - 3]
		_0xffffff8000eb7695: lea esi, [rcx - 0x2fe98b27]
		_0xffffff8000eb769b: lea edi, [rcx - 0x2ceb6b92]
		_0xffffff8000eb76a1: lea ecx, [rcx - 0x6c8d2a3]
		_0xffffff8000eb76a7: test eax, eax
		_0xffffff8000eb76a9: mov rax, r14
		_0xffffff8000eb76ac: cmove rax, rbx
		_0xffffff8000eb76b0: mov eax, dword ptr [rax]
		_0xffffff8000eb76b2: cmove ecx, edi
		_0xffffff8000eb76b5: mov rdi, qword ptr [rbp - 0x200]
		_0xffffff8000eb76bc: mov r8, qword ptr [rbp - 0x1f8]
		_0xffffff8000eb76c3: mov dword ptr [r8], ecx
		_0xffffff8000eb76c6: cmovne edx, esi
		_0xffffff8000eb76c9: mov dword ptr [rdi], edx
		_0xffffff8000eb76cb: mov dword ptr [rbp - 0x204], eax
		_0xffffff8000eb76d1: jmp _0xffffff8000eb78a5
		_0xffffff8000eb76d6: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000eb76da: movzx ecx, byte ptr [rax + 0x10]
		_0xffffff8000eb76de: movzx edx, byte ptr [rax + 0x13]
		_0xffffff8000eb76e2: movzx esi, byte ptr [rax + 0x12]
		_0xffffff8000eb76e6: movzx edi, byte ptr [rax + 0x11]
		_0xffffff8000eb76ea: add rax, 0x14
		_0xffffff8000eb76ee: mov qword ptr [rbp - 0x30], rax
		_0xffffff8000eb76f2: mov eax, edi
		_0xffffff8000eb76f4: and eax, 0xdf
		_0xffffff8000eb76f9: xor edi, 0xf3efdf
		_0xffffff8000eb76ff: lea eax, [rdi + rax*2]
		_0xffffff8000eb7702: shl eax, 8
		_0xffffff8000eb7705: add eax, 0xc102100
		_0xffffff8000eb770a: mov edi, eax
		_0xffffff8000eb770c: and edi, 0x769feb00
		_0xffffff8000eb7712: xor eax, 0x769feb4f
		_0xffffff8000eb7717: lea eax, [rax + rdi*2 + 0x14b1]
		_0xffffff8000eb771e: mov edi, eax
		_0xffffff8000eb7720: and edi, 0xdd00
		_0xffffff8000eb7726: and eax, 0xff00
		_0xffffff8000eb772b: xor eax, 0x5ccbdd15
		_0xffffff8000eb7730: lea eax, [rax + rdi*2 - 0x5ccbdd15]
		_0xffffff8000eb7737: mov edi, esi
		_0xffffff8000eb7739: and edi, 0xed
		_0xffffff8000eb773f: xor esi, 0xfbed
		_0xffffff8000eb7745: lea esi, [rsi + rdi*2]
		_0xffffff8000eb7748: shl esi, 0x10
		_0xffffff8000eb774b: add esi, 0x4130000
		_0xffffff8000eb7751: mov edi, esi
		_0xffffff8000eb7753: and edi, 0x7dff0000
		_0xffffff8000eb7759: xor esi, 0x7dff5fb7
		_0xffffff8000eb775f: lea esi, [rsi + rdi*2 + 0xa049]
		_0xffffff8000eb7766: mov edi, esi
		_0xffffff8000eb7768: and edi, 0x770000
		_0xffffff8000eb776e: and esi, 0xff0000
		_0xffffff8000eb7774: xor esi, 0x5f77dfd8
		_0xffffff8000eb777a: lea esi, [rsi + rdi*2 - 0x5f77dfd8]
		_0xffffff8000eb7781: mov edi, edx
		_0xffffff8000eb7783: and edi, 0x3f
		_0xffffff8000eb7786: xor edx, 0xbf
		_0xffffff8000eb778c: lea edx, [rdx + rdi*2]
		_0xffffff8000eb778f: shl edx, 0x18
		_0xffffff8000eb7792: add edx, 0x41000000
		_0xffffff8000eb7798: mov edi, edx
		_0xffffff8000eb779a: and edi, 0x7d000000
		_0xffffff8000eb77a0: xor edx, 0x7dd7eff5
		_0xffffff8000eb77a6: lea edx, [rdx + rdi*2 - 0x7dd7eff5]
		_0xffffff8000eb77ad: mov edi, ecx
		_0xffffff8000eb77af: and edi, 0x6f
		_0xffffff8000eb77b2: xor ecx, 0x7cdfae6f
		_0xffffff8000eb77b8: lea ecx, [rcx + rdi*2 - 0x7cdfae6f]
		_0xffffff8000eb77bf: or ecx, edx
		_0xffffff8000eb77c1: or ecx, esi
		_0xffffff8000eb77c3: or ecx, eax
		_0xffffff8000eb77c5: mov eax, ecx
		_0xffffff8000eb77c7: and eax, 0x7df575df
		_0xffffff8000eb77cc: xor ecx, 0x7df575df
		_0xffffff8000eb77d2: lea eax, [rcx + rax*2 - 0x7df575df]
		_0xffffff8000eb77d9: mov rcx, qword ptr [rbp - 0x38]
		_0xffffff8000eb77dd: mov dword ptr [rbp - 0x98], eax
		_0xffffff8000eb77e3: add rcx, 4
		_0xffffff8000eb77e7: mov qword ptr [rbp - 0x90], rcx
		_0xffffff8000eb77ee: mov dword ptr [rbp - 0x6c], 0
		_0xffffff8000eb77f5: mov dword ptr [rbp - 0xa0], 0xb
		_0xffffff8000eb77ff: mov rdi, r15
		_0xffffff8000eb7802: call sub_0xffffff8000eb7d00
		_0xffffff8000eb7807: mov eax, dword ptr [rbp - 0x9c]
		_0xffffff8000eb780d: mov dword ptr [rbp - 0x54], eax
		_0xffffff8000eb7810: mov ecx, dword ptr [rbp - 0x204]
		_0xffffff8000eb7816: lea edx, [rcx - 2]
		_0xffffff8000eb7819: lea esi, [rcx + 0xa19ab6e]
		_0xffffff8000eb781f: lea edi, [rcx - 1]
		_0xffffff8000eb7822: lea ecx, [rcx - 0x6a3c92b]
		_0xffffff8000eb7828: jmp _0xffffff8000eb76a7
		_0xffffff8000eb782d: cmp eax, 0x5eee7025
		_0xffffff8000eb7832: je _0xffffff8000eb783b
		_0xffffff8000eb7834: cmp eax, 0x643c9696
		_0xffffff8000eb7839: je _0xffffff8000eb78a5
		_0xffffff8000eb783b: cmp dword ptr [rbp - 0x204], 0x643c9696
		_0xffffff8000eb7845: jmp _0xffffff8000eb78a5
		_0xffffff8000eb7847: nop word ptr [rax + rax]
		nop
		_0xffffff8000eb7850: mov eax, dword ptr [rbp - 0x3c]
		_0xffffff8000eb7853: mov dword ptr [rbp - 0x54], 0xffff586d
		_0xffffff8000eb785a: mov ecx, dword ptr [rbp - 0x204]
		_0xffffff8000eb7860: lea edx, [rcx - 0x3fdb8bed]
		_0xffffff8000eb7866: lea esi, [rcx - 2]
		_0xffffff8000eb7869: lea edi, [rcx - 4]
		_0xffffff8000eb786c: lea ecx, [rcx - 0x3344b8af]
		_0xffffff8000eb7872: cmp eax, 0x60f21f94
		_0xffffff8000eb7877: mov rax, r14
		_0xffffff8000eb787a: cmove rax, rbx
		_0xffffff8000eb787e: mov eax, dword ptr [rax]
		_0xffffff8000eb7880: cmovne ecx, edi
		_0xffffff8000eb7883: mov rdi, qword ptr [rbp - 0x200]
		_0xffffff8000eb788a: mov r8, qword ptr [rbp - 0x1f8]
		_0xffffff8000eb7891: mov dword ptr [r8], ecx
		_0xffffff8000eb7894: cmovne edx, esi
		_0xffffff8000eb7897: mov dword ptr [rdi], edx
		_0xffffff8000eb7899: mov dword ptr [rbp - 0x204], eax
		_0xffffff8000eb789f: jne _0xffffff8000eb7c24
		_0xffffff8000eb78a5: mov eax, dword ptr [rbp - 0x204]
		_0xffffff8000eb78ab: mov ecx, 0xa1118fe0
		_0xffffff8000eb78b0: add eax, ecx
		_0xffffff8000eb78b2: cmp eax, 5
		_0xffffff8000eb78b5: ja _0xffffff8000eb783b
		_0xffffff8000eb78b7: jmp _0xffffff8000eb7cb9
		_0xffffff8000eb78bc: mov rax, qword ptr [rbp - 0x38]
		_0xffffff8000eb78c0: mov dword ptr [rbp - 0x54], 0xffff586c
		_0xffffff8000eb78c7: mov ecx, dword ptr [rbp - 0x204]
		_0xffffff8000eb78cd: lea edx, [rcx - 0x1b8796b3]
		_0xffffff8000eb78d3: lea esi, [rcx + 0x2ceb6b90]
		_0xffffff8000eb78d9: cmp rax, 0
		_0xffffff8000eb78dd: cmove esi, edx
		_0xffffff8000eb78e0: lea edx, [rcx + 0x2ceb6b93]
		_0xffffff8000eb78e6: lea ecx, [rcx - 0x162333f2]
		_0xffffff8000eb78ec: cmp rax, 0
		_0xffffff8000eb78f0: mov rax, r14
		_0xffffff8000eb78f3: cmove rax, rbx
		_0xffffff8000eb78f7: mov eax, dword ptr [rax]
		_0xffffff8000eb78f9: cmove edx, ecx
		_0xffffff8000eb78fc: mov rcx, qword ptr [rbp - 0x200]
		_0xffffff8000eb7903: mov rdi, qword ptr [rbp - 0x1f8]
		_0xffffff8000eb790a: mov dword ptr [rdi], edx
		_0xffffff8000eb790c: mov dword ptr [rcx], esi
		_0xffffff8000eb790e: mov dword ptr [rbp - 0x204], eax
		_0xffffff8000eb7914: jmp _0xffffff8000eb78a5
		_0xffffff8000eb7916: mov qword ptr [rbp - 0x50], r15
		_0xffffff8000eb791a: mov rdi, qword ptr [rbp - 0x210]
		_0xffffff8000eb7921: mov rax, qword ptr [rdi + 0x10]
		_0xffffff8000eb7925: mov qword ptr [rbp - 0x48], rax
		_0xffffff8000eb7929: mov eax, dword ptr [rdi + 0x1c]
		_0xffffff8000eb792c: mov dword ptr [rbp - 0x3c], eax
		_0xffffff8000eb792f: mov rax, qword ptr [rdi + 8]
		_0xffffff8000eb7933: mov qword ptr [rbp - 0x38], rax
		_0xffffff8000eb7937: mov dword ptr [rbp - 0xa4], 0
		_0xffffff8000eb7941: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000eb7945: lea rcx, [rip + 0xd86]
		_0xffffff8000eb794c: mov rcx, qword ptr [rcx]
		_0xffffff8000eb794f: lea rcx, [rbp - 0x168]
		_0xffffff8000eb7956: mov qword ptr [rbp - 0x1d8], rcx
		_0xffffff8000eb795d: mov qword ptr [rbp - 0x168], rcx
		_0xffffff8000eb7964: mov qword ptr [rbp - 0x160], rcx
		_0xffffff8000eb796b: lea rcx, [rbp - 0x158]
		_0xffffff8000eb7972: mov qword ptr [rbp - 0x170], rcx
		_0xffffff8000eb7979: mov qword ptr [rbp - 0x158], rcx
		_0xffffff8000eb7980: mov qword ptr [rbp - 0x150], rcx
		_0xffffff8000eb7987: lea rcx, [rbp - 0x148]
		_0xffffff8000eb798e: mov qword ptr [rbp - 0x1e0], rcx
		_0xffffff8000eb7995: mov qword ptr [rbp - 0x148], rcx
		_0xffffff8000eb799c: mov qword ptr [rbp - 0x140], rcx
		_0xffffff8000eb79a3: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb79aa: mov qword ptr [rbp - 0x138], rcx
		_0xffffff8000eb79b1: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb79b5: mov qword ptr [rbp - 0x130], rdx
		_0xffffff8000eb79bc: lea rsi, [rbp - 0x138]
		_0xffffff8000eb79c3: mov qword ptr [rdx], rsi
		_0xffffff8000eb79c6: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb79ca: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb79d1: mov qword ptr [rbp - 0x128], rcx
		_0xffffff8000eb79d8: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb79dc: mov qword ptr [rbp - 0x120], rdx
		_0xffffff8000eb79e3: lea rsi, [rbp - 0x128]
		_0xffffff8000eb79ea: mov qword ptr [rdx], rsi
		_0xffffff8000eb79ed: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb79f1: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb79f8: mov qword ptr [rbp - 0x118], rcx
		_0xffffff8000eb79ff: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7a03: mov qword ptr [rbp - 0x110], rdx
		_0xffffff8000eb7a0a: lea rsi, [rbp - 0x118]
		_0xffffff8000eb7a11: mov qword ptr [rdx], rsi
		_0xffffff8000eb7a14: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7a18: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb7a1f: mov qword ptr [rbp - 0x108], rcx
		_0xffffff8000eb7a26: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7a2a: mov qword ptr [rbp - 0x100], rdx
		_0xffffff8000eb7a31: lea rsi, [rbp - 0x108]
		_0xffffff8000eb7a38: mov qword ptr [rdx], rsi
		_0xffffff8000eb7a3b: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7a3f: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb7a46: mov qword ptr [rbp - 0xf8], rcx
		_0xffffff8000eb7a4d: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7a51: mov qword ptr [rbp - 0xf0], rdx
		_0xffffff8000eb7a58: lea rsi, [rbp - 0xf8]
		_0xffffff8000eb7a5f: mov qword ptr [rdx], rsi
		_0xffffff8000eb7a62: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7a66: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb7a6d: mov qword ptr [rbp - 0xe8], rcx
		_0xffffff8000eb7a74: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7a78: mov qword ptr [rbp - 0xe0], rdx
		_0xffffff8000eb7a7f: lea rsi, [rbp - 0xe8]
		_0xffffff8000eb7a86: mov qword ptr [rdx], rsi
		_0xffffff8000eb7a89: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7a8d: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb7a94: mov qword ptr [rbp - 0xd8], rcx
		_0xffffff8000eb7a9b: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7a9f: mov qword ptr [rbp - 0xd0], rdx
		_0xffffff8000eb7aa6: lea rsi, [rbp - 0xd8]
		_0xffffff8000eb7aad: mov qword ptr [rdx], rsi
		_0xffffff8000eb7ab0: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7ab4: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb7abb: mov qword ptr [rbp - 0xc8], rcx
		_0xffffff8000eb7ac2: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7ac6: mov qword ptr [rbp - 0xc0], rdx
		_0xffffff8000eb7acd: lea rsi, [rbp - 0xc8]
		_0xffffff8000eb7ad4: mov qword ptr [rdx], rsi
		_0xffffff8000eb7ad7: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7adb: mov rcx, qword ptr [rbp - 0x1e0]
		_0xffffff8000eb7ae2: mov qword ptr [rbp - 0xb8], rcx
		_0xffffff8000eb7ae9: mov rdx, qword ptr [rcx + 8]
		_0xffffff8000eb7aed: mov qword ptr [rbp - 0xb0], rdx
		_0xffffff8000eb7af4: lea rsi, [rbp - 0xb8]
		_0xffffff8000eb7afb: mov qword ptr [rdx], rsi
		_0xffffff8000eb7afe: mov qword ptr [rcx + 8], rsi
		_0xffffff8000eb7b02: mov dword ptr [rbp - 0x54], 0xffff586c
		_0xffffff8000eb7b09: mov ecx, dword ptr [rbp - 0x204]
		_0xffffff8000eb7b0f: lea edx, [rcx - 0x896cf0]
		_0xffffff8000eb7b15: lea esi, [rcx + 1]
		_0xffffff8000eb7b18: cmp rax, 0
		_0xffffff8000eb7b1c: cmove esi, edx
		_0xffffff8000eb7b1f: lea edx, [rcx + 0x2ceb6b91]
		_0xffffff8000eb7b25: lea ecx, [rcx + 0x33c5678f]
		_0xffffff8000eb7b2b: jmp _0xffffff8000eb78ec
		_0xffffff8000eb7b30: mov rax, qword ptr [rbp - 0x30]
		_0xffffff8000eb7b34: mov al, byte ptr [rax]
		_0xffffff8000eb7b36: mov cl, al
		_0xffffff8000eb7b38: add cl, cl
		_0xffffff8000eb7b3a: xor al, 0x3e
		_0xffffff8000eb7b3c: and cl, 0x7c
		_0xffffff8000eb7b3f: add cl, al
		_0xffffff8000eb7b41: add cl, 0xf4
		_0xffffff8000eb7b44: mov rax, qword ptr [rbp - 0x38]
		_0xffffff8000eb7b48: mov byte ptr [rax], cl
		_0xffffff8000eb7b4a: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000eb7b4e: mov al, byte ptr [rax + 0x15]
		_0xffffff8000eb7b51: mov cl, al
		_0xffffff8000eb7b53: add cl, cl
		_0xffffff8000eb7b55: xor al, 0x6a
		_0xffffff8000eb7b57: and cl, 0xd4
		_0xffffff8000eb7b5a: add cl, al
		_0xffffff8000eb7b5c: add cl, 0xfe
		_0xffffff8000eb7b5f: mov rax, qword ptr [rbp - 0x38]
		_0xffffff8000eb7b63: mov byte ptr [rax + 1], cl
		_0xffffff8000eb7b66: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000eb7b6a: mov al, byte ptr [rax + 0x16]
		_0xffffff8000eb7b6d: mov rcx, qword ptr [rbp - 0x38]
		_0xffffff8000eb7b71: mov byte ptr [rcx + 2], al
		_0xffffff8000eb7b74: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000eb7b78: mov al, byte ptr [rax + 0x17]
		_0xffffff8000eb7b7b: mov rcx, qword ptr [rbp - 0x38]
		_0xffffff8000eb7b7f: mov byte ptr [rcx + 3], al
		_0xffffff8000eb7b82: mov rax, qword ptr [rbp - 0x48]
		_0xffffff8000eb7b86: add rax, 0x18
		_0xffffff8000eb7b8a: mov rcx, qword ptr [rbp - 0x38]
		_0xffffff8000eb7b8e: mov qword ptr [rbp - 0x80], rax
		_0xffffff8000eb7b92: add rcx, 4
		_0xffffff8000eb7b96: mov qword ptr [rbp - 0x98], rcx
		_0xffffff8000eb7b9d: lea rax, [rbp - 0xa4]
		_0xffffff8000eb7ba4: mov qword ptr [rbp - 0x90], rax
		_0xffffff8000eb7bab: mov rax, qword ptr [rbp - 0x38]
		_0xffffff8000eb7baf: mov qword ptr [rbp - 0x88], rax
		_0xffffff8000eb7bb6: mov dword ptr [rbp - 0x6c], 0
		_0xffffff8000eb7bbd: mov dword ptr [rbp - 0x68], 0xfffffffe
		_0xffffff8000eb7bc4: mov qword ptr [rbp - 0x60], r15
		_0xffffff8000eb7bc8: mov rdi, r13
		_0xffffff8000eb7bcb: call sub_0xffffff8000ebe600
		_0xffffff8000eb7bd0: mov eax, dword ptr [rbp - 0x78]
		_0xffffff8000eb7bd3: mov dword ptr [rbp - 0x54], eax
		_0xffffff8000eb7bd6: mov ecx, dword ptr [rbp - 0x204]
		_0xffffff8000eb7bdc: lea edx, [rcx - 0x23c1a3c4]
		_0xffffff8000eb7be2: lea esi, [rcx - 0x4375aa9]
		_0xffffff8000eb7be8: lea edi, [rcx - 0x5e8d91dc]
		_0xffffff8000eb7bee: lea ecx, [rcx + 0xc01e587]
		_0xffffff8000eb7bf4: test eax, eax
		_0xffffff8000eb7bf6: mov rax, r14
		_0xffffff8000eb7bf9: cmove rax, rbx
		_0xffffff8000eb7bfd: mov eax, dword ptr [rax]
		_0xffffff8000eb7bff: cmove ecx, edi
		_0xffffff8000eb7c02: mov rdi, qword ptr [rbp - 0x200]
		_0xffffff8000eb7c09: mov r8, qword ptr [rbp - 0x1f8]
		_0xffffff8000eb7c10: mov dword ptr [r8], ecx
		_0xffffff8000eb7c13: cmovne edx, esi
		_0xffffff8000eb7c16: mov dword ptr [rdi], edx
		_0xffffff8000eb7c18: mov dword ptr [rbp - 0x204], eax
		_0xffffff8000eb7c1e: jne _0xffffff8000eb78a5
		_0xffffff8000eb7c24: mov eax, dword ptr [rbp - 0x204]
		_0xffffff8000eb7c2a: cmp eax, 0x5eee7024
		_0xffffff8000eb7c2f: jg _0xffffff8000eb782d
		_0xffffff8000eb7c35: cmp eax, 0x3203048f
		_0xffffff8000eb7c3a: je _0xffffff8000eb7916
		_0xffffff8000eb7c40: cmp eax, 0x32030490
		_0xffffff8000eb7c45: je _0xffffff8000eb78bc
		_0xffffff8000eb7c4b: cmp eax, 0x32030491
		_0xffffff8000eb7c50: jne _0xffffff8000eb783b
		_0xffffff8000eb7c56: mov ebx, dword ptr [rbp - 0xa4]
		_0xffffff8000eb7c5c: movabs r14, 0x7fdf7edf17fbefbb
		_0xffffff8000eb7c66: xor r14, rbx
		_0xffffff8000eb7c69: and rbx, 0x17fbefbb
		_0xffffff8000eb7c70: lea rbx, [r14 + rbx*2]
		_0xffffff8000eb7c74: movabs r14, 0x80208120e804105d
		_0xffffff8000eb7c7e: add r14, rbx
		_0xffffff8000eb7c81: mov ebx, dword ptr [rbp - 0x3c]
		_0xffffff8000eb7c84: cmp rbx, 0x60f21f94
		_0xffffff8000eb7c8b: sbb r15, r15
		_0xffffff8000eb7c8e: and r15d, 1
		_0xffffff8000eb7c92: shl r15, 0x20
		_0xffffff8000eb7c96: add r15, rbx
		_0xffffff8000eb7c99: add r15, -0x60f21f94
		_0xffffff8000eb7ca0: xor eax, eax
		_0xffffff8000eb7ca2: cmp r15, r14
		_0xffffff8000eb7ca5: mov ecx, 0xffff587d
		_0xffffff8000eb7caa: cmove ecx, eax
		_0xffffff8000eb7cad: mov rdi, qword ptr [rbp - 0x210]
		_0xffffff8000eb7cb4: mov dword ptr [rdi + 0x18], ecx
		_0xffffff8000eb7cb7: jmp _0xffffff8000eb7ccf
		_0xffffff8000eb7cb9: movsxd rax, dword ptr [r12 + rax*4]
		_0xffffff8000eb7cbd: add rax, r12
		_0xffffff8000eb7cc0: jmp rax
		_0xffffff8000eb7cc2: mov eax, dword ptr [rbp - 0x54]
		_0xffffff8000eb7cc5: mov rdi, qword ptr [rbp - 0x210]
		_0xffffff8000eb7ccc: mov dword ptr [rdi + 0x18], eax
		_0xffffff8000eb7ccf: add rsp, 0x1e8
		_0xffffff8000eb7cd6: pop rbx
		_0xffffff8000eb7cd7: pop r12
		_0xffffff8000eb7cd9: pop r13
		_0xffffff8000eb7cdb: pop r14
		_0xffffff8000eb7cdd: pop r15
		_0xffffff8000eb7cdf: pop rbp
		_0xffffff8000eb7ce0: ret 

	.align 0x100
	sub_ffffff8000ec7320:
		_0xffffff8000ec7320: push rbp
		_0xffffff8000ec7321: mov rbp, rsp
		_0xffffff8000ec7324: push r15
		_0xffffff8000ec7326: push r14
		_0xffffff8000ec7328: push r13
		_0xffffff8000ec732a: push r12
		_0xffffff8000ec732c: push rbx
		_0xffffff8000ec732d: sub rsp, 0x6a8
		_0xffffff8000ec7334: lea rax, [rbp - 0x6a4]
		_0xffffff8000ec733b: mov dword ptr [rbp - 0x6a4], eax
		_0xffffff8000ec7341: lea rcx, [rbp - 0x6a8]
		_0xffffff8000ec7348: mov dword ptr [rbp - 0x6a8], ecx
		_0xffffff8000ec734e: lea r8, [rbp - 0x6b0]
		_0xffffff8000ec7355: mov qword ptr [rbp - 0x6b0], r8
		_0xffffff8000ec735c: lea r8, [rbp - 0x6b8]
		_0xffffff8000ec7363: mov qword ptr [rbp - 0x6b8], r8
		_0xffffff8000ec736a: mov dword ptr [rbp - 0x6bc], 0x2a5c761e
		_0xffffff8000ec7374: mov qword ptr [rbp - 0x6b0], rax
		_0xffffff8000ec737b: mov qword ptr [rbp - 0x6b8], rcx
		_0xffffff8000ec7382: mov eax, dword ptr [rbp - 0x6bc]
		_0xffffff8000ec7388: lea ecx, [rax + 0x4df6982d]
		_0xffffff8000ec738e: mov r8, qword ptr [rbp - 0x6b0]
		_0xffffff8000ec7395: mov dword ptr [r8], ecx
		_0xffffff8000ec7398: add eax, 0x4df6982e
		_0xffffff8000ec739d: mov dword ptr [rbp - 0x6a8], eax
		_0xffffff8000ec73a3: mov dword ptr [rbp - 0x6bc], 0x78530e4a
		_0xffffff8000ec73ad: mov qword ptr [rbp - 0x6c8], rdx
		_0xffffff8000ec73b4: mov ebx, esi
		_0xffffff8000ec73b6: mov r14, rdi
		_0xffffff8000ec73b9: lea r15, [rbp - 0x70]
		_0xffffff8000ec73bd: jmp _0xffffff8000ec7545
		_0xffffff8000ec73c2: nop dword ptr [rax]
		_0xffffff8000ec73c9: nop dword ptr [rax]
		nop
		nop
		_0xffffff8000ec73d0: lea r12, [rbp - 0x560]
		_0xffffff8000ec73d7: mov qword ptr [rbp - 0x68], r12
		_0xffffff8000ec73db: mov dword ptr [rbp - 0x70], 0x24
		_0xffffff8000ec73e2: mov rdi, r15
		_0xffffff8000ec73e5: call sub_0xffffff8000eb7d00
		_0xffffff8000ec73ea: mov qword ptr [rbp - 0x68], r12
		_0xffffff8000ec73ee: mov qword ptr [rbp - 0x60], r14
		_0xffffff8000ec73f2: mov dword ptr [rbp - 0x58], ebx
		_0xffffff8000ec73f5: mov dword ptr [rbp - 0x48], 3
		_0xffffff8000ec73fc: mov qword ptr [rbp - 0x40], r15
		_0xffffff8000ec7400: lea r13, [rbp - 0x48]
		_0xffffff8000ec7404: mov rdi, r13
		_0xffffff8000ec7407: call sub_0xffffff8000ebe600
		_0xffffff8000ec740c: mov qword ptr [rbp - 0x68], r12
		_0xffffff8000ec7410: mov r12, qword ptr [rbp - 0x6c8]
		_0xffffff8000ec7417: mov qword ptr [rbp - 0x60], r12
		_0xffffff8000ec741b: mov dword ptr [rbp - 0x48], 0
		_0xffffff8000ec7422: mov qword ptr [rbp - 0x40], r15
		_0xffffff8000ec7426: mov rdi, r13
		_0xffffff8000ec7429: call sub_0xffffff8000ebe600
		_0xffffff8000ec742e: mov qword ptr [rbp - 0x68], r14
		_0xffffff8000ec7432: mov dword ptr [rbp - 0x6c], ebx
		_0xffffff8000ec7435: lea rax, [r12 + 0x10]
		_0xffffff8000ec743a: mov qword ptr [rbp - 0x60], rax
		_0xffffff8000ec743e: lea rax, [rbp - 0x501]
		_0xffffff8000ec7445: mov qword ptr [rbp - 0x58], rax
		_0xffffff8000ec7449: mov dword ptr [rbp - 0x4c], 0
		_0xffffff8000ec7450: mov dword ptr [rbp - 0x70], 0x18
		_0xffffff8000ec7457: mov rdi, r15
		_0xffffff8000ec745a: call sub_0xffffff8000eb7d00
		_0xffffff8000ec745f: lea rax, [rip + encryption_data]
		_0xffffff8000ec7466: mov qword ptr [rbp - 0x60], rax
		_0xffffff8000ec746a: mov rax, qword ptr [rbp - 0x30]
		_0xffffff8000ec746e: mov dword ptr [rax + 0x1c], 0x60f27fac
		_0xffffff8000ec7475: lea rax, [rbp - 0x500]
		_0xffffff8000ec747c: mov qword ptr [rbp - 0x68], rax
		_0xffffff8000ec7480: mov rdi, r15
		_0xffffff8000ec7483: call sub_0xffffff8000eb75a0
		_0xffffff8000ec7488: mov eax, dword ptr [rbp - 0x58]
		_0xffffff8000ec748b: mov dword ptr [rbp - 0x34], eax
		_0xffffff8000ec748e: lea rcx, [rip - 0xebf7]
		_0xffffff8000ec7495: mov rcx, qword ptr [rcx]
		_0xffffff8000ec7498: mov ecx, dword ptr [rbp - 0x6bc]
		_0xffffff8000ec749e: lea edx, [rcx - 0xeadbdad]
		_0xffffff8000ec74a4: lea esi, [rcx + 0xb61051]
		_0xffffff8000ec74aa: lea edi, [rcx - 0x4736a85d]
		_0xffffff8000ec74b0: lea ecx, [rcx - 0x424724aa]
		_0xffffff8000ec74b6: test eax, eax
		_0xffffff8000ec74b8: lea rax, [rbp - 0x6a8]
		_0xffffff8000ec74bf: lea r8, [rbp - 0x6a4]
		_0xffffff8000ec74c6: cmove rax, r8
		_0xffffff8000ec74ca: mov eax, dword ptr [rax]
		_0xffffff8000ec74cc: cmove ecx, edi
		_0xffffff8000ec74cf: mov rdi, qword ptr [rbp - 0x6b8]
		_0xffffff8000ec74d6: mov r8, qword ptr [rbp - 0x6b0]
		_0xffffff8000ec74dd: mov dword ptr [r8], ecx
		_0xffffff8000ec74e0: cmove esi, edx
		_0xffffff8000ec74e3: mov dword ptr [rdi], esi
		_0xffffff8000ec74e5: mov dword ptr [rbp - 0x6bc], eax
		_0xffffff8000ec74eb: jmp _0xffffff8000ec7545
		_0xffffff8000ec74ed: mov dword ptr [rbp - 0x34], 0xffff5883
		_0xffffff8000ec74f4: mov eax, dword ptr [rbp - 0x6bc]
		_0xffffff8000ec74fa: lea ecx, [rax - 0x56f92180]
		_0xffffff8000ec7500: lea edx, [rax - 1]
		_0xffffff8000ec7503: lea esi, [rax - 0x25162f4f]
		_0xffffff8000ec7509: lea eax, [rax - 3]
		_0xffffff8000ec750c: cmp ebx, 0x1fffffff
		_0xffffff8000ec7512: lea rdi, [rbp - 0x6a8]
		_0xffffff8000ec7519: lea r8, [rbp - 0x6a4]
		_0xffffff8000ec7520: cmova rdi, r8
		_0xffffff8000ec7524: mov edi, dword ptr [rdi]
		_0xffffff8000ec7526: cmova eax, esi
		_0xffffff8000ec7529: mov rsi, qword ptr [rbp - 0x6b8]
		_0xffffff8000ec7530: mov r8, qword ptr [rbp - 0x6b0]
		_0xffffff8000ec7537: mov dword ptr [r8], eax
		_0xffffff8000ec753a: cmovbe ecx, edx
		_0xffffff8000ec753d: mov dword ptr [rsi], ecx
		_0xffffff8000ec753f: mov dword ptr [rbp - 0x6bc], edi
		_0xffffff8000ec7545: mov eax, dword ptr [rbp - 0x6bc]
		_0xffffff8000ec754b: mov ecx, 0x87acf1b7
		_0xffffff8000ec7550: add eax, ecx
		_0xffffff8000ec7552: cmp eax, 4
		_0xffffff8000ec7555: ja _0xffffff8000ec79e8
		_0xffffff8000ec755b: lea rcx, [jumptbl_0xffffff8000ec755b + rip]
		_0xffffff8000ec7562: movsxd rax, dword ptr [rcx + rax*4]
		_0xffffff8000ec7566: add rax, rcx
		_0xffffff8000ec7569: jmp rax
		_0xffffff8000ec756b: mov r14, qword ptr [rbp - 0x6c8]
		_0xffffff8000ec7572: mov qword ptr [rbp - 0x68], r14
		_0xffffff8000ec7576: lea rbx, [rbp - 0x500]
		_0xffffff8000ec757d: mov qword ptr [rbp - 0x60], rbx
		_0xffffff8000ec7581: mov dword ptr [rbp - 0x48], 0xd
		_0xffffff8000ec7588: mov qword ptr [rbp - 0x40], r15
		_0xffffff8000ec758c: lea r12, [rbp - 0x48]
		_0xffffff8000ec7590: mov rdi, r12
		_0xffffff8000ec7593: call sub_0xffffff8000ebe600
		_0xffffff8000ec7598: mov qword ptr [rbp - 0x68], r14
		_0xffffff8000ec759c: mov qword ptr [rbp - 0x60], rbx
		_0xffffff8000ec75a0: mov dword ptr [rbp - 0x48], 0x11
		_0xffffff8000ec75a7: mov qword ptr [rbp - 0x40], r15
		_0xffffff8000ec75ab: mov rdi, r12
		_0xffffff8000ec75ae: call sub_0xffffff8000ebe600
		_0xffffff8000ec75b3: movzx ebx, byte ptr [rbp - 0x501]
		_0xffffff8000ec75ba: mov eax, ebx
		_0xffffff8000ec75bc: xor eax, 0x29f1f35
		_0xffffff8000ec75c1: lea ecx, [rax + rax]
		_0xffffff8000ec75c4: and ecx, 0x221b5e
		_0xffffff8000ec75ca: neg ecx
		_0xffffff8000ec75cc: lea eax, [rax + rcx - 0x22ee7251]
		_0xffffff8000ec75d3: mov ecx, eax
		_0xffffff8000ec75d5: xor ecx, 0x20716d64
		_0xffffff8000ec75db: lea esi, [rax + rax]
		_0xffffff8000ec75de: and esi, 0x50197206
		_0xffffff8000ec75e4: xor esi, 0x10192006
		_0xffffff8000ec75ea: add esi, ecx
		_0xffffff8000ec75ec: mov ecx, 0xb21642c9
		_0xffffff8000ec75f1: mov eax, ebx
		_0xffffff8000ec75f3: mul ecx
		_0xffffff8000ec75f5: shr edx, 4
		_0xffffff8000ec75f8: imul eax, edx, 0x17
		_0xffffff8000ec75fb: lea ecx, [rbx + rbx]
		_0xffffff8000ec75fe: mov edi, ebx
		_0xffffff8000ec7600: sub edi, eax
		_0xffffff8000ec7602: imul eax, edx, 0x2e
		_0xffffff8000ec7605: lea eax, [rax + rdi*2]
		_0xffffff8000ec7608: and eax, 0x1fa
		_0xffffff8000ec760d: mov edx, esi
		_0xffffff8000ec760f: and edx, eax
		_0xffffff8000ec7611: xor eax, esi
		_0xffffff8000ec7613: lea eax, [rax + rdx*2]
		_0xffffff8000ec7616: movsxd r15, eax
		_0xffffff8000ec7619: mov esi, 0xb00e63c0
		_0xffffff8000ec761e: xor rsi, r15
		_0xffffff8000ec7621: movabs rdx, 0x8fb823ee08fb823f
		_0xffffff8000ec762b: mov rax, r15
		_0xffffff8000ec762e: mul rdx
		_0xffffff8000ec7631: shr rdx, 5
		_0xffffff8000ec7635: imul rax, rdx, 0x39
		_0xffffff8000ec7639: sub r15, rax
		_0xffffff8000ec763c: imul rax, rdx, 0x72
		_0xffffff8000ec7640: lea r15, [rax + r15*2]
		_0xffffff8000ec7644: movabs rax, 0xf2dffe705f7dff7e
		_0xffffff8000ec764e: and rax, r15
		_0xffffff8000ec7651: lea r15, [rax + rsi + 0x6ff19cc0]
		_0xffffff8000ec7659: add rsi, rsi
		_0xffffff8000ec765c: movabs rax, 0xf2dffe713f6138fe
		_0xffffff8000ec7666: and rax, rsi
		_0xffffff8000ec7669: sub r15, rax
		_0xffffff8000ec766c: mov al, byte ptr [r14 + r15]
		_0xffffff8000ec7670: xor al, 0x8c
		_0xffffff8000ec7672: mov dl, byte ptr [r14 + 0x10]
		_0xffffff8000ec7676: xor dl, 0x8c
		_0xffffff8000ec7679: mov sil, dl
		_0xffffff8000ec767c: add sil, al
		_0xffffff8000ec767f: and dl, al
		_0xffffff8000ec7681: add dl, dl
		_0xffffff8000ec7683: sub sil, dl
		_0xffffff8000ec7686: mov eax, ecx
		_0xffffff8000ec7688: and eax, 0xa
		_0xffffff8000ec768b: mov edx, 4
		_0xffffff8000ec7690: sub edx, eax
		_0xffffff8000ec7692: and edx, 0xa
		_0xffffff8000ec7695: mov eax, ecx
		_0xffffff8000ec7697: and eax, 0xa0
		_0xffffff8000ec769c: add eax, edx
		_0xffffff8000ec769e: mov edx, ecx
		_0xffffff8000ec76a0: and edx, 0x110
		_0xffffff8000ec76a6: mov edi, ecx
		_0xffffff8000ec76a8: and edi, 4
		_0xffffff8000ec76ab: add edi, 0x28
		_0xffffff8000ec76ae: sub edi, edx
		_0xffffff8000ec76b0: and edi, 0x114
		_0xffffff8000ec76b6: add edi, eax
		_0xffffff8000ec76b8: xor ebx, 0xfffffffe
		_0xffffff8000ec76bb: and ecx, 0x42
		_0xffffff8000ec76be: xor ecx, 2
		_0xffffff8000ec76c1: add ecx, ebx
		_0xffffff8000ec76c3: mov ebx, edi
		_0xffffff8000ec76c5: and ebx, ecx
		_0xffffff8000ec76c7: xor ecx, edi
		_0xffffff8000ec76c9: lea ebx, [rcx + rbx*2]
		_0xffffff8000ec76cc: movsxd r15, ebx
		_0xffffff8000ec76cf: movabs rcx, 0x47ae147ae147ae15
		_0xffffff8000ec76d9: mov rax, r15
		_0xffffff8000ec76dc: mul rcx
		_0xffffff8000ec76df: mov rax, r15
		_0xffffff8000ec76e2: sub rax, rdx
		_0xffffff8000ec76e5: shr rax, 1
		_0xffffff8000ec76e8: add rax, rdx
		_0xffffff8000ec76eb: shr rax, 4
		_0xffffff8000ec76ef: lea rcx, [rax + rax*4]
		_0xffffff8000ec76f3: lea rcx, [rcx + rcx*4]
		_0xffffff8000ec76f7: mov rdx, r15
		_0xffffff8000ec76fa: sub rdx, rcx
		_0xffffff8000ec76fd: imul rax, rax, 0x32
		_0xffffff8000ec7701: lea rax, [rax + rdx*2]
		_0xffffff8000ec7705: movabs rcx, 0xfb7fde71ffdfef4a
		_0xffffff8000ec770f: and rcx, rax
		_0xffffff8000ec7712: movabs rax, 0x7dbfef38ffeff7a5
		_0xffffff8000ec771c: xor rax, r15
		_0xffffff8000ec771f: add rax, rcx
		_0xffffff8000ec7722: add rax, r14
		_0xffffff8000ec7725: movabs r15, 0x824010c70010085b
		_0xffffff8000ec772f: mov byte ptr [r15 + rax], sil
		_0xffffff8000ec7733: movzx ebx, byte ptr [rbp - 0x501]
		_0xffffff8000ec773a: mov eax, ebx
		_0xffffff8000ec773c: xor eax, 0xa9bed7de
		_0xffffff8000ec7741: lea ecx, [rax + rax]
		_0xffffff8000ec7744: and ecx, 0x1300024
		_0xffffff8000ec774a: neg ecx
		_0xffffff8000ec774c: lea eax, [rax + rcx - 0x2d26d7ee]
		_0xffffff8000ec7753: mov ecx, 0x84980034
		_0xffffff8000ec7758: sub ecx, eax
		_0xffffff8000ec775a: mov edx, ecx
		_0xffffff8000ec775c: and edx, eax
		_0xffffff8000ec775e: xor ecx, eax
		_0xffffff8000ec7760: lea ecx, [rcx + rdx*2]
		_0xffffff8000ec7763: mov edx, ecx
		_0xffffff8000ec7765: and edx, eax
		_0xffffff8000ec7767: xor ecx, eax
		_0xffffff8000ec7769: lea eax, [rcx + rdx*2]
		_0xffffff8000ec776c: add ebx, ebx
		_0xffffff8000ec776e: mov ecx, ebx
		_0xffffff8000ec7770: and ecx, 0xe4
		_0xffffff8000ec7776: imul ecx, ecx, 0x96f213b9
		_0xffffff8000ec777c: and ebx, 0x11a
		_0xffffff8000ec7782: imul ebx, ebx, 0x96f213b9
		_0xffffff8000ec7788: mov edx, ebx
		_0xffffff8000ec778a: and edx, ecx
		_0xffffff8000ec778c: xor ebx, ecx
		_0xffffff8000ec778e: lea ebx, [rbx + rdx*2]
		_0xffffff8000ec7791: imul ebx, ebx, 0xb4ac0289
		_0xffffff8000ec7797: and ebx, 0x198
		_0xffffff8000ec779d: mov ecx, eax
		_0xffffff8000ec779f: and ecx, ebx
		_0xffffff8000ec77a1: xor ebx, eax
		_0xffffff8000ec77a3: lea ebx, [rbx + rcx*2]
		_0xffffff8000ec77a6: movsxd r15, ebx
		_0xffffff8000ec77a9: movabs rcx, 0xf83e0f83e0f83e1
		_0xffffff8000ec77b3: mov rax, r15
		_0xffffff8000ec77b6: mul rcx
		_0xffffff8000ec77b9: shr rdx, 2
		_0xffffff8000ec77bd: imul rax, rdx, 0x42
		_0xffffff8000ec77c1: mov rcx, r15
		_0xffffff8000ec77c4: sub rcx, rax
		_0xffffff8000ec77c7: imul rax, rdx, 0x84
		_0xffffff8000ec77ce: lea rax, [rax + rcx*2]
		_0xffffff8000ec77d2: movabs rcx, 0xd7feff7f9a9fb3f0
		_0xffffff8000ec77dc: and rcx, rax
		_0xffffff8000ec77df: movabs rax, 0x6bff7fbfcd4fd9f8
		_0xffffff8000ec77e9: xor rax, r15
		_0xffffff8000ec77ec: add rax, rcx
		_0xffffff8000ec77ef: add rax, r14
		_0xffffff8000ec77f2: movabs r15, 0x9400804032b02608
		_0xffffff8000ec77fc: mov cl, byte ptr [r15 + rax]
		_0xffffff8000ec7800: xor cl, byte ptr [r14 + 0x10]
		_0xffffff8000ec7804: mov byte ptr [r14 + 0x10], cl
		_0xffffff8000ec7808: mov ebx, 0x88888889
		_0xffffff8000ec780d: movzx esi, byte ptr [rbp - 0x501]
		_0xffffff8000ec7814: mov eax, esi
		_0xffffff8000ec7816: mul ebx
		_0xffffff8000ec7818: mov ebx, edx
		_0xffffff8000ec781a: shr ebx, 5
		_0xffffff8000ec781d: imul eax, ebx, 0x3c
		_0xffffff8000ec7820: mov edi, esi
		_0xffffff8000ec7822: sub edi, eax
		_0xffffff8000ec7824: and ebx, 1
		_0xffffff8000ec7827: neg ebx
		_0xffffff8000ec7829: and ebx, 0x78
		_0xffffff8000ec782c: lea ebx, [rbx + rdi*2 - 0x3840]
		_0xffffff8000ec7833: shr edx, 6
		_0xffffff8000ec7836: mov eax, edx
		_0xffffff8000ec7838: imul eax, eax
		_0xffffff8000ec783b: sub ebx, eax
		_0xffffff8000ec783d: or edx, 0x78
		_0xffffff8000ec7840: imul edx, edx
		_0xffffff8000ec7843: add edx, ebx
		_0xffffff8000ec7845: mov ebx, 0xbe
		_0xffffff8000ec784a: sub ebx, edx
		_0xffffff8000ec784c: mov eax, ebx
		_0xffffff8000ec784e: xor eax, edx
		_0xffffff8000ec7850: mov edi, edx
		_0xffffff8000ec7852: and edi, ebx
		_0xffffff8000ec7854: mov r8d, ebx
		_0xffffff8000ec7857: and r8d, 0x54924254
		_0xffffff8000ec785e: mov r9d, edx
		_0xffffff8000ec7861: and r9d, 0x54924254
		_0xffffff8000ec7868: add r9d, 0x292484a8
		_0xffffff8000ec786f: sub r9d, r8d
		_0xffffff8000ec7872: and r8d, edx
		_0xffffff8000ec7875: add r8d, r8d
		_0xffffff8000ec7878: and r9d, 0x54924254
		_0xffffff8000ec787f: add r9d, r8d
		_0xffffff8000ec7882: and eax, 0xa1252921
		_0xffffff8000ec7887: and edi, 0x21252921
		_0xffffff8000ec788d: add edi, edi
		_0xffffff8000ec788f: add edi, eax
		_0xffffff8000ec7891: and ebx, 0xa48948a
		_0xffffff8000ec7897: mov eax, edx
		_0xffffff8000ec7899: and eax, 0xa48948a
		_0xffffff8000ec789e: add eax, ebx
		_0xffffff8000ec78a0: add eax, edi
		_0xffffff8000ec78a2: add eax, r9d
		_0xffffff8000ec78a5: and eax, edx
		_0xffffff8000ec78a7: mov ebx, esi
		_0xffffff8000ec78a9: xor ebx, 0x53798081
		_0xffffff8000ec78af: lea edx, [rbx + rbx]
		_0xffffff8000ec78b2: and edx, 0x3001bc
		_0xffffff8000ec78b8: neg edx
		_0xffffff8000ec78ba: lea ebx, [rbx + rdx + 0x249a79de]
		_0xffffff8000ec78c1: mov edx, 0x881c06a1
		_0xffffff8000ec78c6: sub edx, ebx
		_0xffffff8000ec78c8: mov edi, edx
		_0xffffff8000ec78ca: and edi, ebx
		_0xffffff8000ec78cc: xor edx, ebx
		_0xffffff8000ec78ce: add edx, ebx
		_0xffffff8000ec78d0: lea ebx, [rdx + rdi*2]
		_0xffffff8000ec78d3: add ebx, eax
		_0xffffff8000ec78d5: movsxd r15, ebx
		_0xffffff8000ec78d8: mov rax, r15
		_0xffffff8000ec78db: xor rax, 0x5a406065
		_0xffffff8000ec78e1: movabs rdx, 0x79fc7fa7adba1f9a
		_0xffffff8000ec78eb: add rdx, rax
		_0xffffff8000ec78ee: add rax, rax
		_0xffffff8000ec78f1: movabs rdi, 0xf3f8ff4f5b743f34
		_0xffffff8000ec78fb: and rdi, rax
		_0xffffff8000ec78fe: sub rdx, rdi
		_0xffffff8000ec7901: movabs rax, 0x603805808058001
		_0xffffff8000ec790b: and rax, rdx
		_0xffffff8000ec790e: movabs rdi, 0x8603805808058001
		_0xffffff8000ec7918: xor rdi, rdx
		_0xffffff8000ec791b: lea rax, [rdi + rax*2]
		_0xffffff8000ec791f: add r15, r15
		_0xffffff8000ec7922: movabs rdx, 0xf3f8ff4feff4fffe
		_0xffffff8000ec792c: and rdx, r15
		_0xffffff8000ec792f: mov r15, rax
		_0xffffff8000ec7932: and r15, rdx
		_0xffffff8000ec7935: xor rdx, rax
		_0xffffff8000ec7938: lea r15, [rdx + r15*2]
		_0xffffff8000ec793c: mov al, byte ptr [r14 + r15]
		_0xffffff8000ec7940: xor al, 0x62
		_0xffffff8000ec7942: xor cl, 0x62
		_0xffffff8000ec7945: mov dl, cl
		_0xffffff8000ec7947: add dl, al
		_0xffffff8000ec7949: and cl, al
		_0xffffff8000ec794b: add cl, cl
		_0xffffff8000ec794d: sub dl, cl
		_0xffffff8000ec794f: imul ebx, esi, 0xf86de6ba
		_0xffffff8000ec7955: mov eax, 0xa6d3f8f5
		_0xffffff8000ec795a: sub eax, ebx
		_0xffffff8000ec795c: mov ecx, eax
		_0xffffff8000ec795e: and ecx, ebx
		_0xffffff8000ec7960: xor eax, ebx
		_0xffffff8000ec7962: lea eax, [rax + rcx*2]
		_0xffffff8000ec7965: sar eax, 1
		_0xffffff8000ec7967: mov ecx, eax
		_0xffffff8000ec7969: imul ecx, ecx
		_0xffffff8000ec796c: lea eax, [rax + rbx]
		_0xffffff8000ec796f: mov edi, ebx
		_0xffffff8000ec7971: imul edi, edi
		_0xffffff8000ec7974: sub ebx, edi
		_0xffffff8000ec7976: sub ebx, ecx
		_0xffffff8000ec7978: imul eax, eax
		_0xffffff8000ec797b: add eax, ebx
		_0xffffff8000ec797d: sar eax, 1
		_0xffffff8000ec797f: mov ebx, eax
		_0xffffff8000ec7981: xor ebx, 0x1b74d1fe
		_0xffffff8000ec7987: mov ecx, 0xfc
		_0xffffff8000ec798c: sub ecx, ebx
		_0xffffff8000ec798e: xor eax, 0x1b74d102
		_0xffffff8000ec7993: add eax, ecx
		_0xffffff8000ec7995: mov ebx, esi
		_0xffffff8000ec7997: xor ebx, 0xfffffff8
		_0xffffff8000ec799a: lea ecx, [rsi + rsi]
		_0xffffff8000ec799d: and ecx, 8
		_0xffffff8000ec79a0: xor ecx, 8
		_0xffffff8000ec79a3: add ecx, ebx
		_0xffffff8000ec79a5: mov ebx, eax
		_0xffffff8000ec79a7: and ebx, ecx
		_0xffffff8000ec79a9: xor ecx, eax
		_0xffffff8000ec79ab: lea ebx, [rcx + rbx*2]
		_0xffffff8000ec79ae: movsxd r15, ebx
		_0xffffff8000ec79b1: lea rax, [r15 + r15]
		_0xffffff8000ec79b5: movabs rcx, 0xefffd7be7ff9dffa
		_0xffffff8000ec79bf: and rcx, rax
		_0xffffff8000ec79c2: xor r15, 0xfffffffffffffffe
		_0xffffff8000ec79c6: add r15, rcx
		_0xffffff8000ec79c9: movabs rcx, 0x1000284180062006
		_0xffffff8000ec79d3: and rcx, rax
		_0xffffff8000ec79d6: xor rcx, 2
		_0xffffff8000ec79da: add rcx, r15
		_0xffffff8000ec79dd: mov byte ptr [r14 + rcx], dl
		_0xffffff8000ec79e1: xor eax, eax
		_0xffffff8000ec79e3: jmp _0xffffff8000ec7bff
		_0xffffff8000ec79e8: mov qword ptr [rbp - 0x30], r15
		_0xffffff8000ec79ec: lea rax, [rbp - 0x620]
		_0xffffff8000ec79f3: mov qword ptr [rbp - 0x688], rax
		_0xffffff8000ec79fa: mov qword ptr [rbp - 0x620], rax
		_0xffffff8000ec7a01: mov qword ptr [rbp - 0x618], rax
		_0xffffff8000ec7a08: lea rax, [rbp - 0x610]
		_0xffffff8000ec7a0f: mov qword ptr [rbp - 0x628], rax
		_0xffffff8000ec7a16: mov qword ptr [rbp - 0x610], rax
		_0xffffff8000ec7a1d: mov qword ptr [rbp - 0x608], rax
		_0xffffff8000ec7a24: lea rax, [rbp - 0x600]
		_0xffffff8000ec7a2b: mov qword ptr [rbp - 0x690], rax
		_0xffffff8000ec7a32: mov qword ptr [rbp - 0x600], rax
		_0xffffff8000ec7a39: mov qword ptr [rbp - 0x5f8], rax
		_0xffffff8000ec7a40: lea rax, [rbp - 0x5f0]
		_0xffffff8000ec7a47: mov qword ptr [rbp - 0x6a0], rax
		_0xffffff8000ec7a4e: mov qword ptr [rbp - 0x5f0], rax
		_0xffffff8000ec7a55: mov qword ptr [rbp - 0x5e8], rax
		_0xffffff8000ec7a5c: mov rax, qword ptr [rbp - 0x6a0]
		_0xffffff8000ec7a63: mov qword ptr [rbp - 0x5e0], rax
		_0xffffff8000ec7a6a: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7a6e: mov qword ptr [rbp - 0x5d8], rcx
		_0xffffff8000ec7a75: lea rdx, [rbp - 0x5e0]
		_0xffffff8000ec7a7c: mov qword ptr [rcx], rdx
		_0xffffff8000ec7a7f: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7a83: mov rax, qword ptr [rbp - 0x6a0]
		_0xffffff8000ec7a8a: mov qword ptr [rbp - 0x5d0], rax
		_0xffffff8000ec7a91: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7a95: mov qword ptr [rbp - 0x5c8], rcx
		_0xffffff8000ec7a9c: lea rdx, [rbp - 0x5d0]
		_0xffffff8000ec7aa3: mov qword ptr [rcx], rdx
		_0xffffff8000ec7aa6: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7aaa: mov rax, qword ptr [rbp - 0x688]
		_0xffffff8000ec7ab1: mov qword ptr [rbp - 0x5c0], rax
		_0xffffff8000ec7ab8: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7abc: mov qword ptr [rbp - 0x5b8], rcx
		_0xffffff8000ec7ac3: lea rdx, [rbp - 0x5c0]
		_0xffffff8000ec7aca: mov qword ptr [rcx], rdx
		_0xffffff8000ec7acd: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7ad1: mov rax, qword ptr [rbp - 0x690]
		_0xffffff8000ec7ad8: mov qword ptr [rbp - 0x5b0], rax
		_0xffffff8000ec7adf: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7ae3: mov qword ptr [rbp - 0x5a8], rcx
		_0xffffff8000ec7aea: lea rdx, [rbp - 0x5b0]
		_0xffffff8000ec7af1: mov qword ptr [rcx], rdx
		_0xffffff8000ec7af4: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7af8: lea rax, [rbp - 0x5a0]
		_0xffffff8000ec7aff: mov qword ptr [rbp - 0x698], rax
		_0xffffff8000ec7b06: mov qword ptr [rbp - 0x5a0], rax
		_0xffffff8000ec7b0d: mov qword ptr [rbp - 0x598], rax
		_0xffffff8000ec7b14: mov rax, qword ptr [rbp - 0x698]
		_0xffffff8000ec7b1b: mov qword ptr [rbp - 0x590], rax
		_0xffffff8000ec7b22: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7b26: mov qword ptr [rbp - 0x588], rcx
		_0xffffff8000ec7b2d: lea rdx, [rbp - 0x590]
		_0xffffff8000ec7b34: mov qword ptr [rcx], rdx
		_0xffffff8000ec7b37: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7b3b: mov rax, qword ptr [rbp - 0x6a0]
		_0xffffff8000ec7b42: mov qword ptr [rbp - 0x580], rax
		_0xffffff8000ec7b49: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7b4d: mov qword ptr [rbp - 0x578], rcx
		_0xffffff8000ec7b54: lea rdx, [rbp - 0x580]
		_0xffffff8000ec7b5b: mov qword ptr [rcx], rdx
		_0xffffff8000ec7b5e: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7b62: mov rax, qword ptr [rbp - 0x6a0]
		_0xffffff8000ec7b69: mov qword ptr [rbp - 0x570], rax
		_0xffffff8000ec7b70: mov rcx, qword ptr [rax + 8]
		_0xffffff8000ec7b74: mov qword ptr [rbp - 0x568], rcx
		_0xffffff8000ec7b7b: lea rdx, [rbp - 0x570]
		_0xffffff8000ec7b82: mov qword ptr [rcx], rdx
		_0xffffff8000ec7b85: mov qword ptr [rax + 8], rdx
		_0xffffff8000ec7b89: cmp qword ptr [rbp - 0x6c8], 0
		_0xffffff8000ec7b91: sete al
		_0xffffff8000ec7b94: test r14, r14
		_0xffffff8000ec7b97: sete cl
		_0xffffff8000ec7b9a: or cl, al
		_0xffffff8000ec7b9c: mov dword ptr [rbp - 0x34], 0xffff587c
		_0xffffff8000ec7ba3: mov eax, dword ptr [rbp - 0x6bc]
		_0xffffff8000ec7ba9: lea edx, [rax - 0x2f3959de]
		_0xffffff8000ec7baf: lea esi, [rax + 3]
		_0xffffff8000ec7bb2: lea edi, [rax - 0x5a48c3c]
		_0xffffff8000ec7bb8: lea eax, [rax + 1]
		_0xffffff8000ec7bbb: test ebx, ebx
		_0xffffff8000ec7bbd: sete r8b
		_0xffffff8000ec7bc1: or r8b, cl
		_0xffffff8000ec7bc4: lea rcx, [rbp - 0x6a8]
		_0xffffff8000ec7bcb: lea r8, [rbp - 0x6a4]
		_0xffffff8000ec7bd2: cmovne rcx, r8
		_0xffffff8000ec7bd6: mov ecx, dword ptr [rcx]
		_0xffffff8000ec7bd8: cmovne eax, edi
		_0xffffff8000ec7bdb: mov rdi, qword ptr [rbp - 0x6b8]
		_0xffffff8000ec7be2: mov r8, qword ptr [rbp - 0x6b0]
		_0xffffff8000ec7be9: mov dword ptr [r8], eax
		_0xffffff8000ec7bec: cmove edx, esi
		_0xffffff8000ec7bef: mov dword ptr [rdi], edx
		_0xffffff8000ec7bf1: mov dword ptr [rbp - 0x6bc], ecx
		_0xffffff8000ec7bf7: jmp _0xffffff8000ec7545
		_0xffffff8000ec7bfc: mov eax, dword ptr [rbp - 0x34]
		_0xffffff8000ec7bff: add rsp, 0x6a8
		_0xffffff8000ec7c06: pop rbx
		_0xffffff8000ec7c07: pop r12
		_0xffffff8000ec7c09: pop r13
		_0xffffff8000ec7c0b: pop r14
		_0xffffff8000ec7c0d: pop r15
		_0xffffff8000ec7c0f: pop rbp
		_0xffffff8000ec7c10: ret 

