#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <stdint.h>
#include <iostream>
#include <assert.h>
#include <string>
#include <string_view>
#include <stdlib.h>
#include <ranges>
#include <array>
#include <vector>
#include <charconv>
#include <algorithm>

extern "C"
{
#include "ids_validation.h"
}

constexpr ValidationCert cert_bytes = { .bytes = {
    0x01, 0x02, 0x00, 0x00, 0x04, 0x16, 0x30, 0x82, 0x04, 0x12, 0x30, 0x82, 0x02, 0xFA, 0xA0, 0x03,
    0x02, 0x01, 0x02, 0x02, 0x01, 0x1C, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D,
    0x01, 0x01, 0x05, 0x05, 0x00, 0x30, 0x62, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,
    0x13, 0x02, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x13, 0x0A, 0x41,
    0x70, 0x70, 0x6C, 0x65, 0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x26, 0x30, 0x24, 0x06, 0x03, 0x55,
    0x04, 0x0B, 0x13, 0x1D, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
    0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6F, 0x72, 0x69, 0x74,
    0x79, 0x31, 0x16, 0x30, 0x14, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x0D, 0x41, 0x70, 0x70, 0x6C,
    0x65, 0x20, 0x52, 0x6F, 0x6F, 0x74, 0x20, 0x43, 0x41, 0x30, 0x1E, 0x17, 0x0D, 0x31, 0x31, 0x30,
    0x31, 0x32, 0x36, 0x31, 0x39, 0x30, 0x31, 0x33, 0x34, 0x5A, 0x17, 0x0D, 0x31, 0x39, 0x30, 0x31,
    0x32, 0x36, 0x31, 0x39, 0x30, 0x31, 0x33, 0x34, 0x5A, 0x30, 0x81, 0x85, 0x31, 0x0B, 0x30, 0x09,
    0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55,
    0x04, 0x0A, 0x0C, 0x0A, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x26,
    0x30, 0x24, 0x06, 0x03, 0x55, 0x04, 0x0B, 0x0C, 0x1D, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x43,
    0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x41, 0x75, 0x74,
    0x68, 0x6F, 0x72, 0x69, 0x74, 0x79, 0x31, 0x39, 0x30, 0x37, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C,
    0x30, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x20, 0x49, 0x6E,
    0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
    0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6F, 0x72, 0x69, 0x74,
    0x79, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01,
    0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0F, 0x00, 0x30, 0x82, 0x01, 0x0A, 0x02, 0x82, 0x01,
    0x01, 0x00, 0xDA, 0xE0, 0x0F, 0x98, 0x97, 0xCB, 0x58, 0x29, 0x86, 0x2A, 0x0B, 0xB8, 0x9E, 0x19,
    0x5A, 0x31, 0xC3, 0x2D, 0x0E, 0x6A, 0x2C, 0x52, 0x01, 0xEE, 0x1D, 0x03, 0xFB, 0x82, 0x41, 0x69,
    0xCD, 0x50, 0x26, 0x36, 0x7A, 0xB7, 0x0C, 0x6F, 0x0E, 0x39, 0x03, 0xB8, 0xD4, 0x18, 0x56, 0xA3,
    0x08, 0xB2, 0x3C, 0xC3, 0xFB, 0x36, 0x41, 0xE4, 0xD7, 0xC8, 0x67, 0x60, 0x32, 0x0B, 0x4E, 0x32,
    0x7D, 0x87, 0xF7, 0xFD, 0xCD, 0x53, 0xB0, 0x1A, 0xBA, 0xFC, 0x1F, 0x6C, 0xC9, 0x45, 0x07, 0xAD,
    0x82, 0x38, 0xF3, 0xA8, 0x7C, 0xC4, 0x4E, 0xC2, 0xB1, 0x56, 0xD9, 0x3E, 0xB2, 0x6D, 0x6D, 0x04,
    0x41, 0x1A, 0xC1, 0x9A, 0x47, 0xC0, 0xAC, 0x15, 0x7C, 0x2D, 0x78, 0x91, 0xAB, 0x07, 0xA2, 0x65,
    0xB1, 0x7A, 0x83, 0xDD, 0x98, 0x4B, 0x77, 0x40, 0xD8, 0xEE, 0x50, 0xEB, 0xC7, 0x6B, 0x58, 0x08,
    0x06, 0x97, 0x57, 0x55, 0x7D, 0x27, 0xF8, 0x0A, 0xE6, 0xB5, 0x15, 0xE7, 0xA7, 0x93, 0xF9, 0xF1,
    0x80, 0xE6, 0x42, 0x79, 0x3F, 0x16, 0xD3, 0x32, 0x9D, 0x11, 0x76, 0x41, 0x29, 0x0A, 0x31, 0x09,
    0xEF, 0x0F, 0x5B, 0xF8, 0xF3, 0xA7, 0xA9, 0xF7, 0x52, 0x0D, 0xBB, 0xF8, 0x2D, 0x74, 0xAC, 0xA6,
    0x49, 0x1F, 0x1F, 0xCE, 0x7B, 0x05, 0xA7, 0x85, 0x3D, 0xBE, 0xCF, 0xA2, 0xA7, 0xAA, 0x23, 0x85,
    0x66, 0xFE, 0xC5, 0x16, 0x12, 0x7E, 0x5B, 0xE2, 0x31, 0x77, 0x91, 0x02, 0x09, 0xDF, 0x7E, 0x7E,
    0xE4, 0x8A, 0xE0, 0xEC, 0x41, 0xAC, 0x17, 0x2C, 0x04, 0xE0, 0xBC, 0x79, 0xA4, 0x89, 0x78, 0x44,
    0x06, 0x8B, 0x3B, 0x4B, 0xA0, 0xBC, 0x84, 0xE2, 0xB0, 0x82, 0xB5, 0x32, 0xBE, 0x04, 0x1C, 0x03,
    0xED, 0x82, 0x3E, 0x75, 0x37, 0x14, 0xCF, 0x75, 0x9F, 0x82, 0x31, 0x6D, 0xCF, 0x09, 0x14, 0x86,
    0xD1, 0x27, 0x02, 0x03, 0x01, 0x00, 0x01, 0xA3, 0x81, 0xAE, 0x30, 0x81, 0xAB, 0x30, 0x0E, 0x06,
    0x03, 0x55, 0x1D, 0x0F, 0x01, 0x01, 0xFF, 0x04, 0x04, 0x03, 0x02, 0x01, 0x86, 0x30, 0x0F, 0x06,
    0x03, 0x55, 0x1D, 0x13, 0x01, 0x01, 0xFF, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xFF, 0x30, 0x1D,
    0x06, 0x03, 0x55, 0x1D, 0x0E, 0x04, 0x16, 0x04, 0x14, 0xF0, 0x30, 0x73, 0x63, 0xF2, 0xEF, 0x1D,
    0xAC, 0xCC, 0xE6, 0x09, 0x32, 0xC1, 0xFA, 0x79, 0x7A, 0xB1, 0x69, 0x50, 0x68, 0x30, 0x1F, 0x06,
    0x03, 0x55, 0x1D, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x2B, 0xD0, 0x69, 0x47, 0x94, 0x76,
    0x09, 0xFE, 0xF4, 0x6B, 0x8D, 0x2E, 0x40, 0xA6, 0xF7, 0x47, 0x4D, 0x7F, 0x08, 0x5E, 0x30, 0x36,
    0x06, 0x03, 0x55, 0x1D, 0x1F, 0x04, 0x2F, 0x30, 0x2D, 0x30, 0x2B, 0xA0, 0x29, 0xA0, 0x27, 0x86,
    0x25, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E, 0x61, 0x70, 0x70, 0x6C,
    0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x61, 0x70, 0x70, 0x6C, 0x65, 0x63, 0x61, 0x2F, 0x72, 0x6F,
    0x6F, 0x74, 0x2E, 0x63, 0x72, 0x6C, 0x30, 0x10, 0x06, 0x0A, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x63,
    0x64, 0x06, 0x02, 0x04, 0x04, 0x02, 0x05, 0x00, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86,
    0xF7, 0x0D, 0x01, 0x01, 0x05, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01, 0x00, 0x3D, 0x7B, 0x8F, 0xAD,
    0x1F, 0x0C, 0x22, 0x8A, 0x9B, 0x4B, 0xA3, 0xCF, 0xF8, 0x2B, 0xB0, 0x1F, 0x68, 0xE1, 0x0C, 0xF7,
    0x9C, 0x24, 0x83, 0x16, 0x03, 0x2D, 0xD3, 0xB2, 0xA8, 0xD0, 0x43, 0xE8, 0xAF, 0x3C, 0x97, 0x26,
    0xC8, 0xAD, 0xD5, 0x2C, 0xC4, 0x4C, 0x55, 0x53, 0x01, 0x49, 0xD0, 0xE2, 0xB4, 0xFB, 0xE6, 0xDB,
    0x72, 0xD1, 0x98, 0xBB, 0xFC, 0x9B, 0xC8, 0x4E, 0xB7, 0x8F, 0xCC, 0x65, 0x86, 0x7F, 0x44, 0xB9,
    0xDA, 0x27, 0x2A, 0x4E, 0xDF, 0xCB, 0xDF, 0xD3, 0x7D, 0xDF, 0x41, 0x71, 0xF8, 0xB3, 0xC0, 0x1D,
    0xA2, 0x0A, 0x33, 0xB9, 0xEC, 0x2B, 0xC5, 0x73, 0x72, 0xFB, 0xE1, 0xCA, 0x5D, 0x8E, 0x2F, 0x34,
    0xF4, 0x6B, 0xC4, 0x4F, 0x0F, 0xC8, 0x8A, 0xAC, 0x0F, 0xFB, 0x6F, 0x25, 0x6E, 0xB7, 0xAE, 0x8E,
    0xC7, 0xE4, 0x02, 0xB8, 0x20, 0x4E, 0x5D, 0x56, 0x4C, 0x49, 0x97, 0xB1, 0x24, 0x74, 0x7E, 0xC9,
    0x93, 0x93, 0x34, 0x8C, 0x99, 0xD1, 0xA7, 0xC0, 0x1C, 0xD3, 0xD4, 0xC2, 0xAE, 0x69, 0xEB, 0x9F,
    0x9F, 0x57, 0xE2, 0x68, 0xC7, 0xCA, 0xD5, 0xC5, 0x22, 0x82, 0x64, 0x41, 0x58, 0xFE, 0x78, 0xD1,
    0xCA, 0xC1, 0xF9, 0x36, 0x6A, 0x6B, 0x44, 0xF7, 0xB3, 0x86, 0x72, 0x7A, 0x64, 0x40, 0x17, 0x31,
    0x9D, 0xBC, 0xAC, 0x75, 0xF0, 0xFA, 0x33, 0x51, 0xE5, 0xBD, 0x01, 0x6A, 0x58, 0x3F, 0xF0, 0x00,
    0xAE, 0x99, 0x5C, 0x0A, 0xC2, 0xC9, 0xE9, 0x5E, 0x1C, 0x87, 0x02, 0xEC, 0xA0, 0x08, 0x55, 0x41,
    0x2A, 0x9B, 0x8C, 0x64, 0x85, 0x8E, 0x50, 0x03, 0xCD, 0xE0, 0x11, 0xAF, 0xCE, 0x72, 0x19, 0xEB,
    0x52, 0xF3, 0xAF, 0x92, 0xAD, 0x93, 0x2E, 0x94, 0x9D, 0xD6, 0xAF, 0xFF, 0xC0, 0x26, 0xF1, 0xDE,
    0x94, 0x92, 0x1C, 0xD9, 0xBC, 0x3D, 0x36, 0xCC, 0x55, 0xFA, 0x38, 0xDB, 0x00, 0x00, 0x05, 0x31,
    0x30, 0x82, 0x05, 0x2D, 0x30, 0x82, 0x04, 0x15, 0xA0, 0x03, 0x02, 0x01, 0x02, 0x02, 0x08, 0x4B,
    0x2C, 0x91, 0x48, 0x1D, 0x9B, 0x7D, 0xA0, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7,
    0x0D, 0x01, 0x01, 0x05, 0x05, 0x00, 0x30, 0x81, 0x85, 0x31, 0x0B, 0x30, 0x09, 0x06, 0x03, 0x55,
    0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0A, 0x0C,
    0x0A, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x26, 0x30, 0x24, 0x06,
    0x03, 0x55, 0x04, 0x0B, 0x0C, 0x1D, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74,
    0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6F, 0x72,
    0x69, 0x74, 0x79, 0x31, 0x39, 0x30, 0x37, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x30, 0x41, 0x70,
    0x70, 0x6C, 0x65, 0x20, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x20, 0x49, 0x6E, 0x74, 0x65, 0x67,
    0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
    0x74, 0x69, 0x6F, 0x6E, 0x20, 0x41, 0x75, 0x74, 0x68, 0x6F, 0x72, 0x69, 0x74, 0x79, 0x30, 0x1E,
    0x17, 0x0D, 0x31, 0x31, 0x30, 0x33, 0x32, 0x35, 0x30, 0x31, 0x31, 0x33, 0x33, 0x32, 0x5A, 0x17,
    0x0D, 0x31, 0x34, 0x30, 0x33, 0x32, 0x34, 0x30, 0x31, 0x31, 0x33, 0x33, 0x32, 0x5A, 0x30, 0x69,
    0x31, 0x1D, 0x30, 0x1B, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0C, 0x14, 0x44, 0x52, 0x4D, 0x20, 0x54,
    0x65, 0x63, 0x68, 0x6E, 0x6F, 0x6C, 0x6F, 0x67, 0x69, 0x65, 0x73, 0x20, 0x41, 0x30, 0x31, 0x31,
    0x26, 0x30, 0x24, 0x06, 0x03, 0x55, 0x04, 0x0B, 0x0C, 0x1D, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20,
    0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x41, 0x75,
    0x74, 0x68, 0x6F, 0x72, 0x69, 0x74, 0x79, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03, 0x55, 0x04, 0x0A,
    0x0C, 0x0A, 0x41, 0x70, 0x70, 0x6C, 0x65, 0x20, 0x49, 0x6E, 0x63, 0x2E, 0x31, 0x0B, 0x30, 0x09,
    0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0D, 0x06,
    0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0F,
    0x00, 0x30, 0x82, 0x01, 0x0A, 0x02, 0x82, 0x01, 0x01, 0x00, 0xB4, 0x06, 0x6D, 0x7E, 0x65, 0x73,
    0x97, 0xE1, 0xBF, 0x49, 0xB1, 0xFA, 0x9A, 0x22, 0x2E, 0xA7, 0xD3, 0x71, 0x81, 0x20, 0x6B, 0x49,
    0x41, 0x15, 0xC2, 0xDB, 0x60, 0x7A, 0xC6, 0xA2, 0xB7, 0x4D, 0x7A, 0x2F, 0x8E, 0xC1, 0x63, 0x07,
    0x1C, 0x04, 0xCC, 0x93, 0xD8, 0xE0, 0x0D, 0xC8, 0xB8, 0xF2, 0x5B, 0xCE, 0x6D, 0xFA, 0x42, 0xCB,
    0x10, 0x40, 0xC2, 0x24, 0x0A, 0xA7, 0xE4, 0x1D, 0x26, 0x82, 0x8A, 0x3E, 0x30, 0x86, 0x5D, 0xED,
    0x17, 0x38, 0xEE, 0x87, 0xAB, 0xBD, 0xE8, 0x48, 0x4A, 0x49, 0x77, 0x85, 0x2E, 0xB7, 0x91, 0x84,
    0x9B, 0x29, 0x7D, 0x41, 0x05, 0xA0, 0x79, 0xF5, 0xAD, 0x8C, 0xC1, 0x0B, 0xD8, 0x9D, 0x69, 0xE7,
    0x9C, 0xB2, 0xA9, 0x46, 0xD0, 0x4B, 0xFE, 0x09, 0x18, 0x50, 0x24, 0x8A, 0x59, 0x47, 0x2B, 0x22,
    0x55, 0x47, 0xED, 0x51, 0x22, 0x9D, 0x42, 0xE9, 0x9D, 0xEE, 0x81, 0xC3, 0x47, 0xCD, 0xE4, 0x6F,
    0x0A, 0x2A, 0x3F, 0x4F, 0x2B, 0xD2, 0x04, 0xD0, 0xB8, 0x8C, 0xE8, 0x64, 0x98, 0xDF, 0xCE, 0x60,
    0x53, 0x9B, 0x88, 0x1A, 0xCF, 0xD4, 0xC2, 0x0D, 0x74, 0x65, 0xBF, 0xF3, 0x85, 0x87, 0x5F, 0x4B,
    0x87, 0x10, 0xA2, 0x87, 0x8A, 0x6D, 0x3E, 0x40, 0x55, 0x0E, 0xF9, 0x9F, 0x99, 0xCC, 0x32, 0x93,
    0x83, 0x51, 0x88, 0xC9, 0xB9, 0xF8, 0x5E, 0xC9, 0x19, 0x5F, 0x17, 0xE7, 0x6B, 0x9B, 0x7C, 0x3A,
    0xDD, 0xFF, 0x68, 0xDF, 0xD4, 0xD1, 0x34, 0x55, 0x74, 0xEC, 0xF7, 0x4B, 0xE8, 0x1C, 0x90, 0x75,
    0x85, 0xF2, 0xFC, 0x43, 0xFF, 0xA5, 0x44, 0x23, 0x52, 0x3F, 0xFB, 0xF5, 0x21, 0xE3, 0x83, 0x16,
    0x3F, 0xBE, 0x0A, 0x74, 0xF9, 0x3C, 0x74, 0x99, 0x6A, 0xFE, 0x3F, 0xD2, 0x5A, 0xA1, 0x50, 0xE3,
    0x2E, 0x8B, 0x48, 0x0D, 0x22, 0x26, 0x3B, 0xD5, 0x9E, 0x49, 0x02, 0x03, 0x01, 0x00, 0x01, 0xA3,
    0x82, 0x01, 0xBA, 0x30, 0x82, 0x01, 0xB6, 0x30, 0x1D, 0x06, 0x03, 0x55, 0x1D, 0x0E, 0x04, 0x16,
    0x04, 0x14, 0xD2, 0x24, 0x23, 0xFB, 0xEB, 0xE8, 0x8E, 0x8F, 0x71, 0x9C, 0x84, 0xEE, 0x62, 0x73,
    0x3D, 0xE9, 0x5E, 0x24, 0x09, 0x2F, 0x30, 0x0C, 0x06, 0x03, 0x55, 0x1D, 0x13, 0x01, 0x01, 0xFF,
    0x04, 0x02, 0x30, 0x00, 0x30, 0x1F, 0x06, 0x03, 0x55, 0x1D, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80,
    0x14, 0xF0, 0x30, 0x73, 0x63, 0xF2, 0xEF, 0x1D, 0xAC, 0xCC, 0xE6, 0x09, 0x32, 0xC1, 0xFA, 0x79,
    0x7A, 0xB1, 0x69, 0x50, 0x68, 0x30, 0x82, 0x01, 0x0E, 0x06, 0x03, 0x55, 0x1D, 0x20, 0x04, 0x82,
    0x01, 0x05, 0x30, 0x82, 0x01, 0x01, 0x30, 0x81, 0xFE, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7,
    0x63, 0x64, 0x05, 0x01, 0x30, 0x81, 0xF0, 0x30, 0x28, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05,
    0x07, 0x02, 0x01, 0x16, 0x1C, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x77, 0x77, 0x77, 0x2E,
    0x61, 0x70, 0x70, 0x6C, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x61, 0x70, 0x70, 0x6C, 0x65, 0x63,
    0x61, 0x30, 0x81, 0xC3, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x07, 0x02, 0x02, 0x30, 0x81,
    0xB6, 0x0C, 0x81, 0xB3, 0x52, 0x65, 0x6C, 0x69, 0x61, 0x6E, 0x63, 0x65, 0x20, 0x6F, 0x6E, 0x20,
    0x74, 0x68, 0x69, 0x73, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
    0x20, 0x62, 0x79, 0x20, 0x61, 0x6E, 0x79, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x73,
    0x73, 0x75, 0x6D, 0x65, 0x73, 0x20, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6E, 0x63, 0x65,
    0x20, 0x6F, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x68, 0x65, 0x6E, 0x20, 0x61, 0x70, 0x70,
    0x6C, 0x69, 0x63, 0x61, 0x62, 0x6C, 0x65, 0x20, 0x73, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64,
    0x20, 0x74, 0x65, 0x72, 0x6D, 0x73, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x63, 0x6F, 0x6E, 0x64, 0x69,
    0x74, 0x69, 0x6F, 0x6E, 0x73, 0x20, 0x6F, 0x66, 0x20, 0x75, 0x73, 0x65, 0x2C, 0x20, 0x63, 0x65,
    0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x70, 0x6F, 0x6C, 0x69, 0x63, 0x79,
    0x20, 0x61, 0x6E, 0x64, 0x20, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
    0x6F, 0x6E, 0x20, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x20, 0x73, 0x74, 0x61, 0x74,
    0x65, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x2E, 0x30, 0x2F, 0x06, 0x03, 0x55, 0x1D, 0x1F, 0x04, 0x28,
    0x30, 0x26, 0x30, 0x24, 0xA0, 0x22, 0xA0, 0x20, 0x86, 0x1E, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F,
    0x2F, 0x63, 0x72, 0x6C, 0x2E, 0x61, 0x70, 0x70, 0x6C, 0x65, 0x2E, 0x63, 0x6F, 0x6D, 0x2F, 0x61,
    0x73, 0x69, 0x63, 0x61, 0x2E, 0x63, 0x72, 0x6C, 0x30, 0x0E, 0x06, 0x03, 0x55, 0x1D, 0x0F, 0x01,
    0x01, 0xFF, 0x04, 0x04, 0x03, 0x02, 0x05, 0xA0, 0x30, 0x13, 0x06, 0x0A, 0x2A, 0x86, 0x48, 0x86,
    0xF7, 0x63, 0x64, 0x06, 0x0C, 0x01, 0x01, 0x01, 0xFF, 0x04, 0x02, 0x05, 0x00, 0x30, 0x0D, 0x06,
    0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x05, 0x05, 0x00, 0x03, 0x82, 0x01, 0x01,
    0x00, 0x7D, 0x79, 0xA7, 0x63, 0x6E, 0x41, 0x3B, 0xBE, 0xC1, 0xCE, 0xB1, 0x8C, 0xFA, 0x6D, 0x30,
    0x20, 0xB8, 0xBA, 0x49, 0x30, 0x92, 0x3D, 0x1D, 0x55, 0xCE, 0xB9, 0xC2, 0x2D, 0x4B, 0x62, 0xC5,
    0xCA, 0x40, 0xF6, 0xB7, 0xBC, 0xB1, 0xF6, 0xD2, 0xA6, 0xFA, 0xAD, 0x01, 0x6B, 0x4F, 0x1C, 0xCC,
    0xAE, 0xCE, 0x46, 0x20, 0xFF, 0xC2, 0xB3, 0xC0, 0x2C, 0x77, 0x4F, 0xD0, 0x13, 0x44, 0x4C, 0x87,
    0xC7, 0x61, 0x2D, 0x0F, 0xC7, 0xCC, 0x43, 0x2E, 0x37, 0x3A, 0x37, 0xFD, 0xAE, 0x98, 0x9A, 0x12,
    0xB6, 0x49, 0xB0, 0xAA, 0x77, 0xD3, 0x53, 0x81, 0x96, 0x80, 0xCD, 0x84, 0xDB, 0x73, 0xAA, 0x47,
    0xA8, 0x20, 0x56, 0x36, 0xC2, 0xD9, 0xA5, 0xE9, 0x0C, 0x3C, 0x22, 0x1D, 0x79, 0xEF, 0xE7, 0xB0,
    0x4F, 0x09, 0x7D, 0x5E, 0xFB, 0xB2, 0x22, 0xA3, 0xB6, 0xF7, 0x23, 0x25, 0x09, 0x83, 0x79, 0xA8,
    0x34, 0x56, 0x84, 0xE6, 0x45, 0xAD, 0x22, 0xA1, 0x1C, 0x55, 0x9C, 0xA2, 0x2F, 0x1F, 0xB6, 0x21,
    0xB9, 0xFF, 0xD8, 0x0F, 0xC9, 0x73, 0x09, 0x76, 0xF0, 0x03, 0x17, 0x19, 0x8F, 0xE9, 0xA3, 0xFC,
    0xE6, 0x42, 0xCB, 0x5F, 0x64, 0x86, 0x96, 0x8C, 0x68, 0x3F, 0xC2, 0xA0, 0x58, 0x42, 0xD4, 0x9F,
    0x76, 0x6D, 0x95, 0xBF, 0xC0, 0xF7, 0xDB, 0x14, 0x74, 0xFC, 0x5A, 0xA8, 0x82, 0xC7, 0xA6, 0xFC,
    0x56, 0x8A, 0x37, 0xB7, 0xC8, 0x72, 0x9C, 0xBC, 0x9B, 0x44, 0xD1, 0x46, 0xE2, 0x8D, 0x24, 0xD9,
    0x7F, 0x27, 0x79, 0xF1, 0x74, 0xB9, 0xC5, 0xB2, 0xB0, 0xC2, 0xE1, 0x26, 0x06, 0xE4, 0xFF, 0xAF,
    0xA5, 0x0B, 0xD9, 0xA3, 0x1E, 0x95, 0xDB, 0x44, 0x91, 0xCC, 0xE9, 0x4B, 0x02, 0x32, 0x03, 0xE6,
    0x52, 0xF6, 0xA7, 0x2A, 0x5A, 0x23, 0x34, 0xD0, 0x1D, 0x17, 0xF2, 0xEB, 0xEA, 0xC2, 0x79, 0x0A,
    0xE9
}};

constexpr std::string_view IOPlatformSerialNumber = "F5KGCVYKP7QM";
constexpr std::string_view IOPlatformUUID = "564D3AEF-EAF0-868D-B8B2-623A10E88A26";
constexpr std::string_view BootUUID = "6015372F-2EA0-4634-B85D-AEFB9E03DF00";
constexpr std::string_view MLB = "F5K925600QXFHDD1M";
constexpr std::string_view ROM = "0C66833E0010";
constexpr std::string_view MAC = "5C:F7:FF:00:00:0F";
constexpr std::string_view BoardId = "Mac-27AD2F918AE68F65";
constexpr std::string_view ProductName = "MacPro7,1";

auto main() -> int
{
    MachineInfo info;
    auto success = build_machine_info(
        BoardId.data(), 
        BootUUID.data(), 
        ProductName.data(), 
        IOPlatformSerialNumber.data(), 
        IOPlatformUUID.data(), 
        MLB.data(), 
        ROM.data(), 
        MAC.data(),
        &info);

    assert(!success);

    const uint8_t expected_machine_info[] = {0x4D, 0x61, 0x63, 0x2D, 0x32, 0x37, 0x41, 0x44, 0x32, 0x46, 0x39, 0x31, 0x38, 0x41, 0x45, 0x36, 0x38, 0x46, 0x36, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x30, 0x31, 0x35, 0x33, 0x37, 0x32, 0x46, 0x2D, 0x32, 0x45, 0x41, 0x30, 0x2D, 0x34, 0x36, 0x33, 0x34, 0x2D, 0x42, 0x38, 0x35, 0x44, 0x2D, 0x41, 0x45, 0x46, 0x42, 0x39, 0x45, 0x30, 0x33, 0x44, 0x46, 0x30, 0x30, 0x00, 0x00, 0x4D, 0x61, 0x63, 0x50, 0x72, 0x6F, 0x37, 0x2C, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x35, 0x4B, 0x47, 0x43, 0x56, 0x59, 0x4B, 0x50, 0x37, 0x51, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x36, 0x34, 0x44, 0x33, 0x41, 0x45, 0x46, 0x2D, 0x45, 0x41, 0x46, 0x30, 0x2D, 0x38, 0x36, 0x38, 0x44, 0x2D, 0x42, 0x38, 0x42, 0x32, 0x2D, 0x36, 0x32, 0x33, 0x41, 0x31, 0x30, 0x45, 0x38, 0x38, 0x41, 0x32, 0x36, 0x00, 0x00, 0x46, 0x35, 0x4B, 0x39, 0x32, 0x35, 0x36, 0x30, 0x30, 0x51, 0x58, 0x46, 0x48, 0x44, 0x44, 0x31, 0x4D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x66, 0x83, 0x3E, 0x00, 0x10, 0x5C, 0xF7, 0xFF, 0x00, 0x00, 0x0F, 0x8A, 0xB6, 0xFE, 0x1A, 0xFC, 0x90, 0x1B, 0x37, 0x50, 0xD6, 0x40, 0x0C, 0xD2, 0x21, 0xF3, 0x8A, 0xD5, 0xB5, 0x29, 0x11, 0xFC, 0x0A, 0x7C, 0x4A, 0x89, 0x52, 0xFB, 0xF2, 0x9E, 0x62, 0x52, 0xCA, 0x06, 0xB9, 0xFE, 0xA5, 0x6F, 0xB5, 0xF9, 0x9E, 0xAD, 0x16, 0x59, 0xC9, 0xD8, 0xD1, 0x4E, 0xB7, 0x93, 0x04, 0xFF, 0x51, 0xF3, 0x62, 0xBF, 0x2D, 0x91, 0xA3, 0xA7, 0x8B, 0x7C, 0x16, 0x68, 0x7F, 0xF1, 0xA2, 0xA8, 0xE2, 0x9A, 0xAC, 0xBF, 0xCE, 0x84, 0x82, 0xA5, 0xAB, 0xF1, 0x66, 0x4B, 0x2C, 0xCB, 0x81, 0x04, 0xDF, 0x0C, 0xA0};

    assert(!memcmp(expected_machine_info, &info, sizeof(info)));

    const SessionData session{
        .bytes = {
            0x02, 0xA0, 0x88, 0xC1, 0xEA, 0x67, 0xDC, 0x9B, 0x2E, 0x1A, 0xF3, 0x95, 0xB9, 0x5B, 0x1F, 0xA9, 0xE8, 0x00, 0x00, 0x02, 0x50, 0x01, 0x3B, 0x9B, 0xD4, 0xDE, 0x0D, 0xAD, 0xB0, 0x2C, 0x6F, 0xCC, 0x6F, 0x63, 0xBB, 0xC2, 0x97, 0x15, 0x5F, 0xE0, 0x7F, 0xF3, 0x31, 0xA5, 0x5B, 0x85, 0xC2, 0xE2, 0x62, 0x70, 0x89, 0xCF, 0x4F, 0x75, 0x76, 0x0C, 0xD2, 0x8B, 0x52, 0xF8, 0xDF, 0x3F, 0x21, 0x81, 0x0B, 0x49, 0x0C, 0x62, 0x9B, 0xD1, 0x93, 0x05, 0x12, 0xA5, 0x15, 0x64, 0x34, 0x99, 0x4A, 0x74, 0x23, 0xD7, 0xA8, 0xA6, 0xB9, 0x03, 0xA8, 0xD6, 0xD7, 0x42, 0x30, 0x72, 0x03, 0xE4, 0x53, 0xCD, 0x62, 0x15, 0xA0, 0xE2, 0xFD, 0xF4, 0x9F, 0x4B, 0x25, 0x8D, 0xC7, 0xA1, 0xDF, 0x63, 0xB9, 0x69, 0xF9, 0x36, 0xBA, 0x3B, 0x5C, 0x34, 0xF4, 0x6C, 0x3F, 0x2D, 0x4C, 0x10, 0x5B, 0x40, 0x73, 0x7C, 0xFC, 0x2E, 0xBB, 0x74, 0xBD, 0x09, 0xCC, 0xA2, 0x8E, 0x76, 0x3E, 0xA8, 0x1D, 0x0D, 0x2B, 0x1F, 0x88, 0x8D, 0xDA, 0x1E, 0x93, 0xC8, 0x71, 0xD5, 0xFD, 0x88, 0xFF, 0x0A, 0x4B, 0xD7, 0xA9, 0x04, 0x25, 0x0C, 0x12, 0xF4, 0x9F, 0xCE, 0xDC, 0xDE, 0x80, 0x5C, 0xB3, 0xB7, 0x82, 0xF9, 0xE2, 0xA4, 0xAC, 0x83, 0x06, 0xD2, 0x00, 0xB4, 0x92, 0x0C, 0x47, 0xB5, 0x65, 0x29, 0xFD, 0xFE, 0x43, 0xA5, 0xC4, 0x99, 0xD1, 0xA0, 0x16, 0x67, 0xFB, 0xFF, 0x07, 0xCB, 0x3B, 0x27, 0x3A, 0x5F, 0x00, 0x23, 0xA6, 0xD5, 0xF4, 0x43, 0xC8, 0xFC, 0x09, 0xE6, 0x2C, 0xAF, 0xD0, 0x37, 0xFC, 0x1C, 0x08, 0x84, 0x56, 0x47, 0x1A, 0xF8, 0xAE, 0x1B, 0x8B, 0xF1, 0x23, 0x90, 0x31, 0x20, 0x7C, 0x78, 0xC6, 0x1A, 0x10, 0xA1, 0x87, 0x90, 0xFC, 0xAF, 0x69, 0x54, 0xBB, 0x9B, 0x86, 0x86, 0xDA, 0x07, 0x10, 0xE0, 0x8A, 0x9B, 0x76, 0x03, 0x69, 0x97, 0x22, 0xA7, 0xDC, 0x63, 0x15, 0xB1, 0x12, 0x70, 0x0C, 0xBD, 0x8E, 0xF6, 0x8E, 0xA9, 0x55, 0x08, 0xD6, 0xDC, 0x8B, 0x59, 0x7E, 0xCB, 0xDC, 0x5D, 0x66, 0x33, 0xE7, 0x00, 0x45, 0xC7, 0xF9, 0x10, 0xCE, 0xEF, 0x56, 0xB9, 0x31, 0xC6, 0xC5, 0xF5, 0x7C, 0xE4, 0xB9, 0x05, 0xF4, 0x4A, 0x32, 0xBC, 0xC2, 0x60, 0xB2, 0xEA, 0xA9, 0xA1, 0x3A, 0x2F, 0xC4, 0xD3, 0xA6, 0xCA, 0x4E, 0x0F, 0xA4, 0x36, 0x26, 0x79, 0x1D, 0x29, 0x9B, 0x26, 0x96, 0x6B, 0x74, 0x63, 0x56, 0x98, 0xEE, 0x31, 0x4A, 0xA1, 0x86, 0x14, 0x15, 0x3A, 0x2C, 0xB6, 0x30, 0x9E, 0x06, 0xFE, 0x13, 0x46, 0x3C, 0x8F, 0x79, 0xB7, 0xC4, 0x73, 0xB8, 0xDA, 0xD1, 0x4E, 0x16, 0xB9, 0x32, 0x0B, 0x47, 0x30, 0x75, 0xFA, 0x28, 0xCE, 0x8F, 0xB9, 0xAD, 0xE5, 0x3D, 0x77, 0xFA, 0xF8, 0xF0, 0x79, 0xAC, 0xCC, 0x64, 0xDC, 0xD1, 0x5B, 0xED, 0x8E, 0xA9, 0xA4, 0xED, 0xA9, 0x4C, 0x77, 0x45, 0x70, 0xCD, 0x47, 0xA0, 0xD7, 0xC6, 0x86, 0xE2, 0xEE, 0xE5, 0xEE, 0xBB, 0x7F, 0x93, 0x3C, 0x88, 0x36, 0x9D, 0xD8, 0xDF, 0xB0, 0xD1, 0xA7, 0xF2, 0xBF, 0x3F, 0xBB, 0x70, 0x14, 0xED, 0x71, 0x21, 0x09, 0xBF, 0xD6, 0x32, 0x95, 0xE7, 0x9E, 0x8C, 0x30, 0xC5, 0x07, 0x96, 0x73, 0xBA, 0x5F, 0xA7, 0x77, 0x40, 0xB7, 0x05, 0xCB, 0x26, 0x71, 0xFA, 0x24, 0xA6, 0x81, 0x5E, 0x3B, 0x6F, 0x7D, 0x35, 0xD6, 0x7D, 0x00, 0x29, 0x05, 0x92, 0x46, 0xE8, 0xBE, 0xD6, 0x0D, 0xAF, 0x6C, 0x16, 0x96, 0x5F, 0x2F, 0x22, 0x76, 0x22, 0x30, 0x9A, 0xAB, 0x3C, 0xDF, 0x06, 0x7B, 0x04, 0xC7, 0x3F, 0xDC, 0x8A, 0x14, 0x20, 0x5C, 0x48, 0x9C, 0xB4, 0x4E, 0x7F, 0x17, 0x2B, 0xCA, 0x13, 0xF5, 0x94, 0xD9, 0x27, 0xAC, 0xDB, 0x50, 0x72, 0xC0, 0x60, 0x18, 0x8B, 0x8E, 0x46, 0x74, 0x48, 0xE7, 0x7D, 0xBC, 0x13, 0xC1, 0xC3, 0x7A, 0x49, 0xD9, 0x95, 0xD9, 0xE1, 0x41, 0xCC, 0xD2, 0x20, 0xF6, 0xF7, 0x56, 0x09, 0x30, 0x87, 0x5D, 0xA0, 0xC2, 0xBB, 0xDE, 0xED, 0xA0, 0x74, 0x3F, 0x32, 0x1D, 0x99, 0xD1, 0x9D, 0x6B, 0xC7, 0x23, 0x4D, 0xDF, 0xF3, 0xDF, 0x26, 0xCC, 0xD6, 0x2E, 0xA2, 0x2A, 0x7A, 0x63, 0x6C, 0x01, 0xF8, 0x00, 0xE0, 0x12, 0xE0, 0xC5, 0x61, 0x7E, 0x4F, 0xE0, 0xC2, 0xCC, 0x33, 0x89, 0x6A, 0xA0, 0xD8, 0xD6, 0x0B, 0xD0, 0x4E, 0xA7, 0xA3, 0x7C, 0xF1, 0x1E, 0x02, 0xB8, 0x69, 0xC1, 0x23, 0x06, 0x4B, 0x04, 0xF8, 0x96, 0x53, 0x01, 0xF9, 0xC0, 0x5B, 0xEE, 0xA0, 0xD9, 0x3B, 0x4E, 0x63, 0x2F, 0x3B, 0x7B, 0x07, 0x0C, 0x01, 0xFC, 0xA8, 0x15, 0x3D, 0x0D, 0x00, 0x00, 0x00, 0x36, 0x08, 0x09, 0x5D, 0x43, 0xE0, 0xE7, 0x22, 0x0E, 0xB3, 0xCC, 0x8F, 0xF0, 0x1A, 0xE2, 0xCA, 0x4D, 0x64, 0xA5, 0x65, 0x1B, 0x77, 0x7C, 0x01, 0x09, 0x7C, 0xA1, 0x58, 0x4E, 0x23, 0xE1, 0x45, 0x26, 0x7C, 0x5D, 0x27, 0x14, 0x27, 0xB6, 0x00, 0x76, 0xDD, 0xCC, 0x30, 0xA9, 0xE5, 0x74, 0x86, 0x6F, 0x72, 0xDF, 0x8A, 0xAF, 0x50, 0x22, 0x57, 0x00, 0x4C, 0x00, 0x38, 0x00
        }
    };

    const uint8_t expected_signature[] = {0x02, 0x87, 0x4E, 0x20, 0xF9, 0xAB, 0x37, 0xD9, 0x22, 0x6A, 0x36, 0x8A, 0xAF, 0x1B, 0x74, 0x51, 0xD3, 0x4C, 0x7B, 0xE4, 0x99, 0x04, 0xFA, 0x5F, 0xBE, 0xC3, 0xD8, 0xA5, 0xFE, 0x80, 0x0B, 0xC3, 0xC0, 0x00, 0x00, 0x01, 0x60, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x0A, 0x0E, 0xB7, 0x18, 0x00, 0x6E, 0x26, 0x5E, 0x4E, 0x7E, 0xF6, 0x86, 0xDE, 0x49, 0xD1, 0xA2, 0x55, 0xD6, 0xBA, 0x7C, 0xB1, 0xA0, 0x29, 0x3A, 0x92, 0x56, 0x24, 0xC1, 0x17, 0xD9, 0xE7, 0x0E, 0x82, 0x11, 0x0F, 0x1E, 0xF8, 0xD6, 0x47, 0x49, 0x18, 0x7F, 0x6A, 0x7F, 0x64, 0x4D, 0x86, 0x4D, 0x4B, 0x7C, 0x9D, 0xC1, 0x26, 0xEA, 0x2D, 0xF8, 0xFF, 0x15, 0x94, 0x8F, 0xD9, 0xDE, 0x2A, 0xBB, 0x68, 0xCC, 0x90, 0x9B, 0x6A, 0x5D, 0xF4, 0x5F, 0x17, 0x8C, 0x2E, 0xD6, 0x9B, 0x98, 0xCC, 0xBC, 0xFC, 0xAA, 0x89, 0x36, 0x39, 0xA2, 0x54, 0x56, 0xE0, 0x5D, 0xD8, 0xF9, 0x82, 0x02, 0xEB, 0xF4, 0xA5, 0xF3, 0x0B, 0x34, 0x02, 0x6F, 0xF6, 0xFE, 0xD0, 0x4B, 0xC7, 0x29, 0x90, 0x68, 0x5F, 0xE9, 0xB1, 0xC4, 0xCA, 0xFE, 0xEB, 0x3B, 0x37, 0xA9, 0xAE, 0x54, 0x2F, 0x5C, 0x50, 0x30, 0x35, 0x8D, 0x09, 0xF4, 0x0E, 0xE6, 0x97, 0xAC, 0xDD, 0xA9, 0x0F, 0xE1, 0x94, 0x38, 0x93, 0x18, 0x31, 0xFB, 0x9D, 0x31, 0x55, 0xD9, 0x95, 0x85, 0xA9, 0x7C, 0xEB, 0x0D, 0x3F, 0xBD, 0x56, 0xDA, 0x89, 0xB2, 0xBE, 0x67, 0xF7, 0x3B, 0x6E, 0x88, 0x90, 0xAB, 0xF3, 0xDB, 0x5F, 0x89, 0x3D, 0xA3, 0x1D, 0xD5, 0x7F, 0xF3, 0x20, 0xC2, 0x02, 0xE3, 0x85, 0xE3, 0xDD, 0x20, 0x6F, 0xB4, 0x0B, 0xF1, 0xF3, 0x1D, 0xB5, 0x2C, 0x7E, 0x82, 0xC5, 0x1B, 0x05, 0xB2, 0xF5, 0xC1, 0xCD, 0x60, 0x10, 0x0C, 0x17, 0x20, 0x49, 0xB7, 0x72, 0x1A, 0x32, 0x39, 0xE8, 0x01, 0x91, 0xDE, 0x80, 0x3F, 0xC3, 0x5E, 0x7A, 0x28, 0x40, 0x18, 0x34, 0x2A, 0x32, 0x2B, 0x91, 0x7C, 0xB6, 0xAF, 0xE9, 0x05, 0xA0, 0x67, 0xEB, 0x97, 0xCF, 0xBD, 0xF5, 0x7D, 0x4C, 0x82, 0xE6, 0xD8, 0x34, 0x5B, 0x36, 0xD7, 0x00, 0xDF, 0x7E, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x01, 0xF9, 0xC0, 0x5B, 0xEE, 0xA0, 0xD9, 0x3B, 0x4E, 0x63, 0x2F, 0x3B, 0x7B, 0x07, 0x0C, 0x01, 0xFC, 0xA8, 0x15, 0x3D, 0x0D, 0x00, 0x00, 0x00, 0x36, 0x08, 0x09, 0x5D, 0x43, 0xE0, 0xE7, 0x22, 0x0E, 0xB3, 0xCC, 0x8F, 0xF0, 0x1A, 0xE2, 0xCA, 0x4D, 0x64, 0xA5, 0x65, 0x1B, 0x77, 0x7C, 0x01, 0x09, 0x7C, 0xA1, 0x58, 0x4E, 0x23, 0xE1, 0x45, 0x26, 0x7C, 0x5D, 0x27, 0x14, 0x27, 0xB6, 0x00, 0x76, 0xDD, 0xCC, 0x30, 0xA9, 0xE5, 0x74, 0x86, 0x6F, 0x72, 0xDF, 0x8A, 0xAF, 0x50, 0x22};

    ValidationContext* context;
    ValidationRequest* request;
    success = init_nac_request(&cert_bytes, &info, &context, &request);

    assert(!success);

    ValidationSignature* sig;
    unsigned int len;

    success = sign_nac_request(context, &session, &sig, &len);

    assert(!success);
    assert(len == sizeof(expected_signature));
    assert(!memcmp(expected_signature, sig, len));

    return 0;
}